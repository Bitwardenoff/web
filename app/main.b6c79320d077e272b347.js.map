{"version":3,"file":"app/main.b6c79320d077e272b347.js","mappings":"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AA,SAAYC,GACV,2BACA,iBACA,iBAHF,CAAY,EAAAA,qBAAA,EAAAA,mBAAkB,M,wGCA9B,SAAY3gC,GACV,mBACA,2BAFF,CAAY,EAAAA,qBAAA,EAAAA,mBAAkB,M,gGCA9B,SAAYrH,GACV,qBACA,+BACA,mBACA,2BAJF,CAAY,EAAAA,aAAA,EAAAA,WAAU,M,gGCAtB,SAAYioC,GACV,YACA,oBACA,oBACA,kBACA,YACA,iCANF,CAAY,EAAAA,aAAA,EAAAA,WAAU,M,+FCAtB,SAAYC,GACV,yBACA,iBACA,yCACA,2CACA,uCACA,qCACA,uCACA,mCACA,mCACA,qCACA,wCACA,oCACA,kCACA,8BACA,wCACA,sCACA,kBACA,sCACA,wCACA,4CACA,0CArBF,CAAY,EAAAA,aAAA,EAAAA,WAAU,M,+GCAtB,SAAYC,GACV,yBACA,2BACA,6BACA,6CACA,2CALF,CAAY,EAAAA,4BAAA,EAAAA,0BAAyB,M,yGCArC,SAAYC,GACV,mBACA,2BAFF,CAAY,EAAAA,sBAAA,EAAAA,oBAAmB,M,oGCA/B,SAAYC,GACV,qCACA,2DACA,2DACA,uDACA,mDACA,6EACA,yEAPF,CAAY,EAAAA,iBAAA,EAAAA,eAAc,M,+FCA1B,SAAYloC,GACV,uCACA,sDACA,4CACA,8CACA,gDACA,8CACA,oDACA,8DACA,8DACA,0EAEA,0CACA,0CACA,0CACA,8DACA,8DACA,wCACA,gEACA,oDACA,oFACA,0FACA,oFACA,oEACA,0EACA,oEACA,4DACA,kDACA,4CACA,wFAEA,kDACA,kDACA,kDAEA,wCACA,wCACA,wCAEA,8DACA,kEACA,8DACA,8DACA,0EACA,sEACA,wFACA,4FACA,oFACA,wEACA,0EAEA,sDACA,8DAEA,kEACA,4DACA,8DACA,8EACA,gFAEA,0CAEA,sDACA,0DACA,sDACA,sDAEA,sEACA,kEACA,sEACA,kFAtEF,CAAY,EAAAA,YAAA,EAAAA,UAAS,M,+FCArB,SAAYP,GACV,mBACA,uBACA,yBACA,uBAJF,CAAY,EAAAA,YAAA,EAAAA,UAAS,M,oGCArB,SAAY0oC,GACV,uBAC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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/app.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/main.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/components/input-text-readonly.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/components/input-text-readonly.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/components/input-text.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/components/input-text.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/components/select.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/components/select.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/services/provider-guard.service.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/services/provider-type-guard.service.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/./bitwarden_license/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/avatar.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/ciphers.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/export-scope-callout.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/export-scope-callout.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/components/export.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/groupings.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/verify-master-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/verify-master-password.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/a11y-invalid.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/blur-click.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/color-password.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/auth-guard.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/lock-guard.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/unauth-guard.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/validation.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/validators/dirty.validator.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/event.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/folder.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/import.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/organization.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/policy.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/sync.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/userVerification.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/importOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/permissions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/ascendoCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/avastCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/avastJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/aviraCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/baseImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/bitwardenCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/bitwardenJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/bitwardenPasswordProtectedImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/blackBerryCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/blurCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/buttercupCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/chromeCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/clipperzHtmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/codebookCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/dashlaneImporters/dashlaneCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/dashlaneImporters/dashlaneJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/encryptrCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/enpassCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/enpassJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/firefoxCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/fsecureFskImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/gnomeJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/importError.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/kasperskyTxtImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/keepass2XmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/keepassxCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/keeperImporters/keeperCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/lastpassCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/logMeOnceCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/meldiumCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/msecureCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/mykiCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/nordpassCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/cipherImportContext.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepassword1PifImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepassword1PuxImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepasswordCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepasswordMacCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepasswordWinCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/types/onepassword1PuxImporterTypes.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/padlockCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passkeepCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passmanJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passpackCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordAgentCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordBossJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordDragonXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordSafeXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordWalletTxtImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/rememBearCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/roboformCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/safariCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/safeInCloudXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/saferpassCsvImport.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/secureSafeCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/splashIdCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/stickyPasswordXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/truekeyCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/upmCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/yotiCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/zohoVaultCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/tldjs.noop.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/cardApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/fieldApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/identityApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/loginApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/loginUriApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/permissionsApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/secureNoteApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/sendFileApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/sendTextApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/ssoConfigApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/attachmentData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/cardData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/cipherData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/collectionData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/eventData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/fieldData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/folderData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/identityData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/loginData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/loginUriData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/organizationData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/passwordHistoryData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/policyData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/providerData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/secureNoteData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/sendData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/sendFileData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/sendTextData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/authResult.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/decryptParameters.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/domainBase.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/encArrayBuffer.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/encString.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/encryptedObject.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/environmentUrls.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/globalState.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/importResult.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/logInCredentials.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/loginUri.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/secureNote.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sendAccess.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sendFile.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sendText.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/treeNode.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/windowState.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/card.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/cipher.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/cipherWithIds.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/collection.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/collectionWithId.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/event.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/field.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/folder.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/folderWithId.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/identity.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/login.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/loginUri.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/secureNote.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/account/verifyOTPRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/attachmentRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/bitPayInvoiceRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherCreateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherShareRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/collectionRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/deleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/deviceRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emailTokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessInviteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/eventRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/folderRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/folderWithIdRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/groupRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/identityToken/apiTokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/identityToken/tokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/importCiphersRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/importOrganizationCiphersRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/kdfRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/keysRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/kvpRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organization/organizationSponsorshipRedeemRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organization/organizationSsoRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationCreateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationKeysRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationSubscriptionUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUpgradeRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserAcceptRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserBulkRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserInviteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/passwordHintRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/passwordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/paymentRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/policyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/preloginRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerAddOrganizationRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerSetupRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserAcceptRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserBulkRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserInviteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerUserUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/referenceEventRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/registerRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/secretVerificationRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/selectionReadOnlyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/sendAccessRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/sendRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/sendWithIdRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/setPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/storageRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/taxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/twoFactorProviderRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/twoFactorRecoveryRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateDomainsRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateKeyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateProfileRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTempPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/verifyBankRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/verifyEmailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/apiKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/attachmentResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/baseResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/billingResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/breachAccountResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/cipherResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/collectionResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/domainsResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/errorResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/eventResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/folderResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/globalDomainResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/groupResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/identityTokenResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/keysResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/listResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/notificationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationKeysResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationUserResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/paymentResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/planResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/policyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/preloginResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileProviderResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendAccessResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/subscriptionResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/syncResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/taxInfoResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/taxRateResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/userKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/attachmentView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/cardView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/cipherView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/collectionView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/eventView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/fieldView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/folderView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/identityView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/itemView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/loginUriView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/loginView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/passwordHistoryView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/secureNoteView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendAccessView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendFileView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendTextView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/ssoConfigView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/event.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/folder.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/import.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/organization.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/policy.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/sync.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/userVerification.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/./jslib/components/src/badge/badge.component.ts","webpack://@bitwarden/web-vault/./jslib/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/./jslib/components/src/badge/index.ts","webpack://@bitwarden/web-vault/./jslib/components/src/button/button.component.ts","webpack://@bitwarden/web-vault/./jslib/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/./jslib/components/src/button/index.ts","webpack://@bitwarden/web-vault/./jslib/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/./jslib/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/./jslib/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/./jslib/components/src/callout/index.ts","webpack://@bitwarden/web-vault/./jslib/components/src/index.ts","webpack://@bitwarden/web-vault/./src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/components/password-strength.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-strength.component.html","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-billing.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/export.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/export.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/import.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/import.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/groupings.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/groupings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/reports/breach-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/cipher-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-list.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/services/event.service.ts","webpack://@bitwarden/web-vault/./src/app/services/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/services/organization-guard.service.ts","webpack://@bitwarden/web-vault/./src/app/services/organization-type-guard.service.ts","webpack://@bitwarden/web-vault/./src/app/services/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/services/router.service.ts","webpack://@bitwarden/web-vault/./src/app/services/services.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/settings/options.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/options.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organizations.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/organizations.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-billing.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/tools/export.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/import.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/groupings.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/./src/models/account.ts","webpack://@bitwarden/web-vault/./src/models/globalState.ts","webpack://@bitwarden/web-vault/./src/services/broadcasterMessaging.service.ts","webpack://@bitwarden/web-vault/./src/services/htmlStorage.service.ts","webpack://@bitwarden/web-vault/./src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/./src/services/state.service.ts","webpack://@bitwarden/web-vault/./src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/./src/services/webPlatformUtils.service.ts","webpack://@bitwarden/web-vault/./src/scss/export.module.scss","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: async () => (await import(\"./providers/providers.module\")).ProvidersModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"src/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","<router-outlet></router-outlet>\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"jslib-angular/jslib.module\";\n\nimport { OssRoutingModule } from \"src/app/oss-routing.module\";\nimport { ServicesModule } from \"src/app/services/services.module\";\nimport { WildcardRoutingModule } from \"src/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ServicesModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"src/scss/styles.scss\");\nrequire(\"src/scss/tailwind.css\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NgControl, Validators } from \"@angular/forms\";\n\nimport { dirtyRequired } from \"jslib-angular/validators/dirty.validator\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return (\n      this.controlDir.control.hasValidator(Validators.required) ||\n      this.controlDir.control.hasValidator(dirtyRequired)\n    );\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new FormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text-readonly\",\n  templateUrl: \"input-text-readonly.component.html\",\n})\nexport class InputTextReadOnlyComponent {\n  @Input() controlValue: string;\n  @Input() label: string;\n  @Input() showCopy = true;\n  @Input() showLaunch = false;\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  copy(value: string) {\n    this.platformUtilsService.copyToClipboard(value);\n  }\n\n  launchUri(url: string) {\n    this.platformUtilsService.launchUri(url);\n  }\n}\n","<div class=\"form-group\">\n  <label>{{ label }}</label>\n  <div class=\"input-group\">\n    <input class=\"form-control\" readonly [value]=\"controlValue\" />\n    <div class=\"input-group-append\" *ngIf=\"showLaunch\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'launch' | i18n }}\"\n        (click)=\"launchUri(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"input-group-append\" *ngIf=\"showCopy\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n        (click)=\"copy(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text[label][controlId]\",\n  templateUrl: \"input-text.component.html\",\n})\nexport class InputTextComponent extends BaseCvaComponent implements OnInit {\n  @Input() helperTextSameAsError: string;\n  @Input() requiredErrorMessage: string;\n  @Input() stripSpaces = false;\n\n  transformValue: (value: string) => string = null;\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.stripSpaces) {\n      this.transformValue = this.doStripSpaces;\n    }\n  }\n\n  writeValue(value: string) {\n    this.internalControl.setValue(value == null ? \"\" : value);\n  }\n\n  protected onValueChangesInternal: any = (value: string) => {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n    this.onChange(newValue);\n  };\n\n  protected onValueChangeInternal(value: string) {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n  }\n\n  private doStripSpaces(value: string) {\n    return value.replace(/ /g, \"\");\n  }\n}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <input\n    [formControl]=\"internalControl\"\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-describedby]=\"describedById\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    (blur)=\"onBlurInternal()\"\n  />\n  <div *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\">\n    <small\n      *ngIf=\"helperText != null && !controlDir.control.hasError(helperTextSameAsError)\"\n      class=\"form-text text-muted\"\n    >\n      {{ helperText }}\n    </small>\n    <small class=\"error-inline\" *ngIf=\"controlDir.control.hasError('required')\" role=\"alert\">\n      <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n      {{\n        controlDir.control.hasError(helperTextSameAsError)\n          ? helperText\n          : (\"fieldRequiredError\" | i18n: label)\n      }}\n    </small>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { SelectOptions } from \"jslib-angular/interfaces/selectOptions\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-select\",\n  templateUrl: \"select.component.html\",\n})\nexport class SelectComponent extends BaseCvaComponent {\n  @Input() selectOptions: SelectOptions[];\n}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <select\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    [formControl]=\"internalControl\"\n    (blur)=\"onBlurInternal()\"\n  >\n    <option *ngFor=\"let o of selectOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n      {{ o.name }}\n    </option>\n  </select>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AbstractControl, FormBuilder, FormGroup } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { SelectOptions } from \"jslib-angular/interfaces/selectOptions\";\nimport { dirtyRequired } from \"jslib-angular/validators/dirty.validator\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"jslib-common/enums/ssoEnums\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { SsoConfigApi } from \"jslib-common/models/api/ssoConfigApi\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"jslib-common/models/request/organization/organizationSsoRequest\";\nimport { OrganizationSsoResponse } from \"jslib-common/models/response/organization/organizationSsoResponse\";\nimport { SsoConfigView } from \"jslib-common/models/view/ssoConfigView\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent implements OnInit {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<any>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  enabled = this.formBuilder.control(false);\n\n  openIdForm = this.formBuilder.group(\n    {\n      authority: [\"\", dirtyRequired],\n      clientId: [\"\", dirtyRequired],\n      clientSecret: [\"\", dirtyRequired],\n      metadataAddress: [],\n      redirectBehavior: [OpenIdConnectRedirectBehavior.RedirectGet, dirtyRequired],\n      getClaimsFromUserInfoEndpoint: [],\n      additionalScopes: [],\n      additionalUserIdClaimTypes: [],\n      additionalEmailClaimTypes: [],\n      additionalNameClaimTypes: [],\n      acrValues: [],\n      expectedReturnAcrValue: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  samlForm = this.formBuilder.group(\n    {\n      spNameIdFormat: [Saml2NameIdFormat.NotConfigured],\n      spOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      spSigningBehavior: [Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned],\n      spMinIncomingSigningAlgorithm: [defaultSigningAlgorithm],\n      spWantAssertionsSigned: [],\n      spValidateCertificates: [],\n\n      idpEntityId: [\"\", dirtyRequired],\n      idpBindingType: [Saml2BindingType.HttpRedirect],\n      idpSingleSignOnServiceUrl: [],\n      idpSingleLogoutServiceUrl: [],\n      idpX509PublicCert: [\"\", dirtyRequired],\n      idpOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      idpAllowUnsolicitedAuthnResponse: [],\n      idpAllowOutboundLogoutRequests: [true],\n      idpWantAuthnRequestsSigned: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  ssoConfigForm = this.formBuilder.group({\n    configType: [SsoType.None],\n    keyConnectorEnabled: [false],\n    keyConnectorUrl: [\"\"],\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.ssoConfigForm.get(\"configType\").valueChanges.subscribe((newType: SsoType) => {\n      if (newType === SsoType.OpenIdConnect) {\n        this.openIdForm.enable();\n        this.samlForm.disable();\n      } else if (newType === SsoType.Saml2) {\n        this.openIdForm.disable();\n        this.samlForm.enable();\n      } else {\n        this.openIdForm.disable();\n        this.samlForm.disable();\n      }\n    });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      .valueChanges.subscribe(() =>\n        this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity()\n      );\n\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.apiService.getOrganizationSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.get(\"keyConnectorEnabled\").value) {\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.value as SsoConfigView);\n\n    this.formPromise = this.apiService.postOrganizationSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: true,\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: FormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof FormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: FormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof FormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <div class=\"form-group\">\n        <label for=\"keyConnectorUrl\">\n          {{ \"keyConnectorUrl\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <div class=\"input-group\">\n          <input\n            class=\"form-control\"\n            formControlName=\"keyConnectorUrl\"\n            id=\"keyConnectorUrl\"\n            aria-describedby=\"keyConnectorUrlDesc\"\n            (change)=\"haveTestedKeyConnector = false\"\n            appInputStripSpaces\n            appA11yInvalid\n          />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              (click)=\"validateKeyConnectorUrl()\"\n              [disabled]=\"!enableTestKeyConnector\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n                *ngIf=\"keyConnectorUrl.pending\"\n              ></i>\n              <span *ngIf=\"!keyConnectorUrl.pending\">\n                {{ \"keyConnectorTest\" | i18n }}\n              </span>\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"haveTestedKeyConnector\" id=\"keyConnectorUrlDesc\" aria-live=\"polite\">\n          <small\n            class=\"error-inline\"\n            *ngIf=\"keyConnectorUrl.hasError('invalidUrl'); else keyConnectorSuccess\"\n          >\n            <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n            {{ \"keyConnectorTestFail\" | i18n }}\n          </small>\n          <ng-template #keyConnectorSuccess>\n            <small class=\"text-success\">\n              <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n              {{ \"keyConnectorTestSuccess\" | i18n }}\n            </small>\n          </ng-template>\n        </div>\n      </div>\n    </ng-container>\n\n    <app-select\n      controlId=\"type\"\n      [label]=\"'type' | i18n\"\n      [selectOptions]=\"ssoTypeOptions\"\n      formControlName=\"configType\"\n    >\n    </app-select>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'callbackPath' | i18n\"\n        [controlValue]=\"callbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'signedOutCallbackPath' | i18n\"\n        [controlValue]=\"signedOutCallbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text\n        [label]=\"'authority' | i18n\"\n        controlId=\"authority\"\n        [stripSpaces]=\"true\"\n        formControlName=\"authority\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientId' | i18n\"\n        controlId=\"clientId\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientId\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientSecret' | i18n\"\n        controlId=\"clientSecret\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientSecret\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'metadataAddress' | i18n\"\n        controlId=\"metadataAddress\"\n        [stripSpaces]=\"true\"\n        [helperText]=\"'openIdAuthorityRequired' | i18n\"\n        formControlName=\"metadataAddress\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"redirectBehavior\"\n        [label]=\"'oidcRedirectBehavior' | i18n\"\n        [selectOptions]=\"connectRedirectOptions\"\n        formControlName=\"redirectBehavior\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-down': !showOpenIdCustomizations,\n              'bwi-chevron-up': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <app-input-text\n          [label]=\"'additionalScopes' | i18n\"\n          controlId=\"additionalScopes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalScopes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalUserIdClaimTypes' | i18n\"\n          controlId=\"additionalUserIdClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalUserIdClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalEmailClaimTypes' | i18n\"\n          controlId=\"additionalEmailClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalEmailClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalNameClaimTypes' | i18n\"\n          controlId=\"additionalNameClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalNameClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'acrValues' | i18n\"\n          controlId=\"acrValues\"\n          helperText=\"acr_values\"\n          formControlName=\"acrValues\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'expectedReturnAcrValue' | i18n\"\n          controlId=\"expectedReturnAcrValue\"\n          helperText=\"acr_validation\"\n          formControlName=\"expectedReturnAcrValue\"\n        ></app-input-text>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'spEntityId' | i18n\"\n        [controlValue]=\"spEntityId\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spMetadataUrl' | i18n\"\n        [controlValue]=\"spMetadataUrl\"\n        [showLaunch]=\"true\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spAcsUrl' | i18n\"\n        [controlValue]=\"spAcsUrl\"\n      ></app-input-text-readonly>\n\n      <app-select\n        controlId=\"spNameIdFormat\"\n        [label]=\"'spNameIdFormat' | i18n\"\n        [selectOptions]=\"saml2NameIdFormatOptions\"\n        formControlName=\"spNameIdFormat\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spOutboundSigningAlgorithm\"\n        [label]=\"'spOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spSigningBehavior\"\n        [label]=\"'spSigningBehavior' | i18n\"\n        [selectOptions]=\"saml2SigningBehaviourOptions\"\n        formControlName=\"spSigningBehavior\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spMinIncomingSigningAlgorithm\"\n        [label]=\"'spMinIncomingSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spMinIncomingSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <app-input-text\n        [label]=\"'idpEntityId' | i18n\"\n        controlId=\"idpEntityId\"\n        formControlName=\"idpEntityId\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"idpBindingType\"\n        [label]=\"'idpBindingType' | i18n\"\n        [selectOptions]=\"saml2BindingTypeOptions\"\n        formControlName=\"idpBindingType\"\n      >\n      </app-select>\n\n      <app-input-text\n        [label]=\"'idpSingleSignOnServiceUrl' | i18n\"\n        controlId=\"idpSingleSignOnServiceUrl\"\n        [helperText]=\"'idpSingleSignOnServiceUrlRequired' | i18n\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleSignOnServiceUrl\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'idpSingleLogoutServiceUrl' | i18n\"\n        controlId=\"idpSingleLogoutServiceUrl\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleLogoutServiceUrl\"\n      ></app-input-text>\n\n      <div class=\"form-group\">\n        <label for=\"idpX509PublicCert\">\n          {{ \"idpX509PublicCert\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <textarea\n          formControlName=\"idpX509PublicCert\"\n          class=\"form-control form-control-sm text-monospace\"\n          rows=\"6\"\n          id=\"idpX509PublicCert\"\n          appA11yInvalid\n          aria-describedby=\"idpX509PublicCertDesc\"\n        ></textarea>\n        <small\n          id=\"idpX509PublicCertDesc\"\n          class=\"error-inline\"\n          role=\"alert\"\n          *ngIf=\"samlForm.get('idpX509PublicCert').hasError('required')\"\n        >\n          <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n          {{ \"fieldRequiredError\" | i18n: (\"idpX509PublicCert\" | i18n) }}\n        </small>\n      </div>\n\n      <app-select\n        controlId=\"idpOutboundSigningAlgorithm\"\n        [label]=\"'idpOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"idpOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <div\n    id=\"errorSummary\"\n    class=\"error-summary text-danger\"\n    *ngIf=\"this.getErrorCount(ssoConfigForm) as errorCount\"\n  >\n    <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n    {{\n      (errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\") | i18n: errorCount\n    }}\n  </div>\n</form>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from \"jslib-angular/services/auth-guard.service\";\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\nimport { OrganizationLayoutComponent } from \"src/app/layouts/organization-layout.component\";\nimport { ManageComponent } from \"src/app/organizations/manage/manage.component\";\nimport { OrganizationGuardService } from \"src/app/services/organization-guard.service\";\nimport { OrganizationTypeGuardService } from \"src/app/services/organization-type-guard.service\";\n\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuardService, OrganizationGuardService],\n    children: [\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationTypeGuardService],\n        data: {\n          permissions: [\n            Permissions.CreateNewCollections,\n            Permissions.EditAnyCollection,\n            Permissions.DeleteAnyCollection,\n            Permissions.EditAssignedCollections,\n            Permissions.DeleteAssignedCollections,\n            Permissions.AccessEventLogs,\n            Permissions.ManageGroups,\n            Permissions.ManageUsers,\n            Permissions.ManagePolicies,\n            Permissions.ManageSso,\n          ],\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"jslib-angular/jslib.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { InputTextReadOnlyComponent } from \"./components/input-text-readonly.component\";\nimport { InputTextComponent } from \"./components/input-text.component\";\nimport { SelectComponent } from \"./components/select.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n// Form components are for use in the SSO Configuration Form only and should not be exported for use elsewhere.\n// They will be deprecated by the Component Library.\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JslibModule,\n    OrganizationsRoutingModule,\n  ],\n  declarations: [\n    InputCheckboxComponent,\n    InputTextComponent,\n    InputTextReadOnlyComponent,\n    SelectComponent,\n    SsoComponent,\n  ],\n})\nexport class OrganizationsModule {}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: FormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { ProviderUserType } from \"jslib-common/enums/providerUserType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"jslib-common/models/response/provider/providerOrganizationResponse\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: any;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<any>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.apiService.getOrganization(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"o.organizationName\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            ></app-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"src/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"jslib-common/models/request/provider/providerUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: any) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: any) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a routerLink=\"/\" [queryParams]=\"{ email: email }\" class=\"btn btn-primary btn-block\">\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"jslib-common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"jslib-common/models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"jslib-common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"src/app/organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"src/app/organizations/manage/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl: \"../../../../../../src/app/organizations/manage/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"jslib-common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"src/app/organizations/manage/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl: \"../../../../../../src/app/organizations/manage/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ \"removeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"src/app/common/base.events.component\";\nimport { EventService } from \"src/app/services/event.service\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe\n  ) {\n    super(eventService, i18nService, exportService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    return userId != null && this.providerUsersUserIdMap.has(userId)\n      ? this.providerUsersUserIdMap.get(userId)\n      : null;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"jslib-angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { ProviderUserStatusType } from \"jslib-common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"jslib-common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"jslib-common/models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"jslib-common/models/request/provider/providerUserConfirmRequest\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { ProviderUserBulkResponse } from \"jslib-common/models/response/provider/providerUserBulkResponse\";\nimport { ProviderUserUserDetailsResponse } from \"jslib-common/models/response/provider/providerUserResponse\";\n\nimport { BasePeopleComponent } from \"src/app/common/base.people.component\";\nimport { BulkStatusComponent } from \"src/app/organizations/manage/bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"src/app/organizations/manage/entity-events.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{\n          acceptedCount\n        }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span class=\"badge badge-secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span class=\"badge badge-warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"jslib-common/enums/providerUserType\";\nimport { PermissionsApi } from \"jslib-common/models/api/permissionsApi\";\nimport { ProviderUserInviteRequest } from \"jslib-common/models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"jslib-common/models/request/provider/providerUserUpdateRequest\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <app-avatar [data]=\"provider.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from \"jslib-angular/services/auth-guard.service\";\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\nimport { FrontendLayoutComponent } from \"src/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"src/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProviderGuardService } from \"./services/provider-guard.service\";\nimport { ProviderTypeGuardService } from \"./services/provider-type-guard.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuardService],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuardService],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderGuardService],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [ProviderTypeGuardService],\n                data: {\n                  titleId: \"people\",\n                  permissions: [Permissions.ManageUsers],\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [ProviderTypeGuardService],\n                data: {\n                  titleId: \"eventLogs\",\n                  permissions: [Permissions.AccessEventLogs],\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [ProviderTypeGuardService],\n                data: {\n                  titleId: \"myProvider\",\n                  permissions: [Permissions.ManageProvider],\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"jslib-angular/jslib.module\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\n\nimport { OssModule } from \"src/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { ProviderGuardService } from \"./services/provider-guard.service\";\nimport { ProviderTypeGuardService } from \"./services/provider-type-guard.service\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderGuardService, ProviderTypeGuardService],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\n\n@Injectable()\nexport class ProviderGuardService implements CanActivate {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private providerService: ProviderService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\n@Injectable()\nexport class ProviderTypeGuardService implements CanActivate {\n  constructor(private providerService: ProviderService, private router: Router) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    const permissions = route.data == null ? null : (route.data.permissions as Permissions[]);\n\n    if (\n      (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && provider.canAccessEventLogs) ||\n      (permissions.indexOf(Permissions.ManageProvider) !== -1 && provider.isProviderAdmin) ||\n      (permissions.indexOf(Permissions.ManageUsers) !== -1 && provider.canManageUsers)\n    ) {\n      return true;\n    }\n\n    this.router.navigate([\"/providers\", provider.id]);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { ProviderAddOrganizationRequest } from \"jslib-common/models/request/provider/providerAddOrganizationRequest\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { ProviderUpdateRequest } from \"jslib-common/models/request/provider/providerUpdateRequest\";\nimport { ProviderResponse } from \"jslib-common/models/response/provider/providerResponse\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ provider.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: any) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: any) {\n    // Empty\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a routerLink=\"/\" [queryParams]=\"{ email: email }\" class=\"btn btn-primary btn-block\">\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { ProviderSetupRequest } from \"jslib-common/models/request/provider/providerSetupRequest\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SecureNoteType } from \"jslib-common/enums/secureNoteType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CardView } from \"jslib-common/models/view/cardView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { IdentityView } from \"jslib-common/models/view/identityView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\nimport { SecureNoteView } from \"jslib-common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders: FolderView[];\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders = await this.folderService.getAllDecrypted();\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const buf = await response.arrayBuffer();\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-avatar\",\n  template:\n    '<img *ngIf=\"src\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n    \"[ngClass]=\\\"{'rounded-circle': circle}\\\">\",\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n  @Input() data: string;\n  @Input() email: string;\n  @Input() size = 45;\n  @Input() charCount = 2;\n  @Input() textColor = \"#ffffff\";\n  @Input() fontSize = 20;\n  @Input() fontWeight = 300;\n  @Input() dynamic = false;\n  @Input() circle = false;\n\n  src: string;\n\n  constructor(\n    public sanitizer: DomSanitizer,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dynamic) {\n      this.generate();\n    }\n  }\n\n  ngOnChanges() {\n    if (this.dynamic) {\n      this.generate();\n    }\n  }\n\n  private async generate() {\n    const enableGravatars = await this.stateService.getEnableGravitars();\n    if (enableGravatars && this.email != null) {\n      const hashBytes = await this.cryptoFunctionService.hash(\n        this.email.toLowerCase().trim(),\n        \"md5\"\n      );\n      const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\n      this.src = \"https://www.gravatar.com/avatar/\" + hash + \"?s=\" + this.size + \"&r=pg&d=retro\";\n    } else {\n      let chars: string = null;\n      const upperData = this.data.toUpperCase();\n\n      if (this.charCount > 1) {\n        chars = this.getFirstLetters(upperData, this.charCount);\n      }\n      if (chars == null) {\n        chars = this.unicodeSafeSubstring(upperData, this.charCount);\n      }\n\n      // If the chars contain an emoji, only show it.\n      if (chars.match(Utils.regexpEmojiPresentation)) {\n        chars = chars.match(Utils.regexpEmojiPresentation)[0];\n      }\n\n      const charObj = this.getCharText(chars);\n      const color = this.stringToColor(upperData);\n      const svg = this.getSvg(this.size, color);\n      svg.appendChild(charObj);\n      const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n      const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n      this.src = \"data:image/svg+xml;base64,\" + svgHtml;\n    }\n  }\n\n  private stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private getSvg(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private getCharText(character: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", this.textColor);\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.fontWeight.toString();\n    textTag.style.fontSize = this.fontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"jslib-common/misc/captcha_iframe\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    this.ciphers = [];\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-export-scope-callout\",\n  templateUrl: \"export-scope-callout.component.html\",\n})\nexport class ExportScopeCalloutComponent implements OnInit {\n  @Input() organizationId: string = null;\n\n  show = false;\n  scopeConfig: {\n    title: string;\n    description: string;\n    scopeIdentifier: string;\n  };\n\n  constructor(\n    protected organizationService: OrganizationService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!(await this.organizationService.hasOrganizations())) {\n      return;\n    }\n    this.scopeConfig =\n      this.organizationId != null\n        ? {\n            title: \"exportingOrganizationVaultTitle\",\n            description: \"exportingOrganizationVaultDescription\",\n            scopeIdentifier: (await this.organizationService.get(this.organizationId)).name,\n          }\n        : {\n            title: \"exportingPersonalVaultTitle\",\n            description: \"exportingPersonalVaultDescription\",\n            scopeIdentifier: await this.stateService.getEmail(),\n          };\n    this.show = true;\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <app-callout type=\"info\" title=\"{{ scopeConfig.title | i18n }}\">\n    {{ scopeConfig.description | i18n: scopeConfig.scopeIdentifier }}\n  </app-callout>\n</ng-container>\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy = false;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    await this.checkExportDisabled();\n  }\n\n  async checkExportDisabled() {\n    this.disabledByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.DisablePersonalVaultExport\n    );\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n\n    const secret = this.exportForm.get(\"secret\").value;\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    return this.exportService.getExport(this.format);\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<any> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.platformUtilsService.saveFile(this.win, csv, { type: \"text/plain\" }, fileName);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderService.saveWithServer(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"jslib-common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"FastMail\", value: \"fastmail\" },\n    ];\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      await this.regenerate();\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    await this.regenerate();\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (regenerate) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    this.username = await this.usernameGenerationService.generateUsername(this.usernameOptions);\n    if (this.username === \"\" || this.username === null) {\n      this.username = \"-\";\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class GroupingsComponent {\n  @Input() showFolders = true;\n  @Input() showCollections = true;\n  @Input() showFavorites = true;\n  @Input() showTrash = true;\n\n  @Output() onAllClicked = new EventEmitter();\n  @Output() onFavoritesClicked = new EventEmitter();\n  @Output() onTrashClicked = new EventEmitter();\n  @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n  @Output() onFolderClicked = new EventEmitter<FolderView>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n  @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded = false;\n  cipherType = CipherType;\n  selectedAll = false;\n  selectedFavorites = false;\n  selectedTrash = false;\n  selectedType: CipherType = null;\n  selectedFolder = false;\n  selectedFolderId: string = null;\n  selectedCollectionId: string = null;\n\n  private collapsedGroupings: Set<string>;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected folderService: FolderService,\n    protected stateService: StateService\n  ) {}\n\n  async load(setLoaded = true) {\n    const collapsedGroupings = await this.stateService.getCollapsedGroupings();\n    if (collapsedGroupings == null) {\n      this.collapsedGroupings = new Set<string>();\n    } else {\n      this.collapsedGroupings = new Set(collapsedGroupings);\n    }\n\n    await this.loadFolders();\n    await this.loadCollections();\n\n    if (setLoaded) {\n      this.loaded = true;\n    }\n  }\n\n  async loadCollections(organizationId?: string) {\n    if (!this.showCollections) {\n      return;\n    }\n    const collections = await this.collectionService.getAllDecrypted();\n    if (organizationId != null) {\n      this.collections = collections.filter((c) => c.organizationId === organizationId);\n    } else {\n      this.collections = collections;\n    }\n    this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n  }\n\n  async loadFolders() {\n    if (!this.showFolders) {\n      return;\n    }\n    this.folders = await this.folderService.getAllDecrypted();\n    this.nestedFolders = await this.folderService.getAllNested();\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.onAllClicked.emit();\n  }\n\n  selectFavorites() {\n    this.clearSelections();\n    this.selectedFavorites = true;\n    this.onFavoritesClicked.emit();\n  }\n\n  selectTrash() {\n    this.clearSelections();\n    this.selectedTrash = true;\n    this.onTrashClicked.emit();\n  }\n\n  selectType(type: CipherType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.onCipherTypeClicked.emit(type);\n  }\n\n  selectFolder(folder: FolderView) {\n    this.clearSelections();\n    this.selectedFolder = true;\n    this.selectedFolderId = folder.id;\n    this.onFolderClicked.emit(folder);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.clearSelections();\n    this.selectedCollectionId = collection.id;\n    this.onCollectionClicked.emit(collection);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedFavorites = false;\n    this.selectedTrash = false;\n    this.selectedType = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n    this.selectedCollectionId = null;\n  }\n\n  async collapse(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    if (grouping.id == null) {\n      return;\n    }\n    const id = idPrefix + grouping.id;\n    if (this.isCollapsed(grouping, idPrefix)) {\n      this.collapsedGroupings.delete(id);\n    } else {\n      this.collapsedGroupings.add(id);\n    }\n    await this.stateService.setCollapsedGroupings(Array.from(this.collapsedGroupings));\n  }\n\n  isCollapsed(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    return this.collapsedGroupings.has(idPrefix + grouping.id);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"jslib-common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // Load the first and observe updates\n    await this.load();\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  async submit() {\n    if (this.pinLock && (this.pin == null || this.pin === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n    if (!this.pinLock && (this.masterPassword == null || this.masterPassword === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (this.pinLock) {\n      let failed = true;\n      try {\n        if (this.pinSet[0]) {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations,\n            await this.stateService.getDecryptedPinProtected()\n          );\n          const encKey = await this.cryptoService.getEncKey(key);\n          const protectedPin = await this.stateService.getProtectedPin();\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          failed = decPin !== this.pin;\n          if (!failed) {\n            await this.setKeyAndContinue(key);\n          }\n        } else {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          failed = false;\n          await this.setKeyAndContinue(key);\n        }\n      } catch {\n        failed = true;\n      }\n\n      if (failed) {\n        this.invalidPinAttempts++;\n        if (this.invalidPinAttempts >= 5) {\n          this.messagingService.send(\"logout\");\n          return;\n        }\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidPin\")\n        );\n      }\n    } else {\n      const key = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email,\n        kdf,\n        kdfIterations\n      );\n      const storedKeyHash = await this.cryptoService.getKeyHash();\n\n      let passwordValid = false;\n\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n      } else {\n        const request = new SecretVerificationRequest();\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          this.formPromise = this.apiService.postAccountVerifyPassword(request);\n          await this.formPromise;\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            this.masterPassword,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n\n      if (passwordValid) {\n        if (this.pinSet[0]) {\n          const protectedPin = await this.stateService.getProtectedPin();\n          const encKey = await this.cryptoService.getEncKey(key);\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          const pinKey = await this.cryptoService.makePinKey(\n            decPin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          await this.stateService.setDecryptedPinProtected(\n            await this.cryptoService.encrypt(key.key, pinKey)\n          );\n        }\n        await this.setKeyAndContinue(key);\n      } else {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidMasterPassword\")\n        );\n      }\n    }\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setBiometricLocked(false);\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"jslib-common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"jslib-common/enums/kdfType\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"jslib-common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"jslib-common/models/request/registerRequest\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  name = \"\";\n  email = \"\";\n  masterPassword = \"\";\n  confirmMasterPassword = \"\";\n  hint = \"\";\n  showPassword = false;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  acceptPolicies = false;\n\n  protected successRoute = \"login\";\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  async submit() {\n    if (!this.acceptPolicies && this.showTerms) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesError\")\n      );\n      return;\n    }\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return;\n    }\n    if (this.masterPassword !== this.confirmMasterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    if (this.hint === this.masterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"hintEqualsPassword\")\n      );\n      return;\n    }\n\n    this.name = this.name === \"\" ? null : this.name;\n    this.email = this.email.trim().toLowerCase();\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      this.email,\n      this.name,\n      hashedPassword,\n      this.hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"newAccountCreated\"));\n      this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { EncArrayBuffer } from \"jslib-common/models/domain/encArrayBuffer\";\nimport { Send } from \"jslib-common/models/domain/send\";\nimport { SendFileView } from \"jslib-common/models/view/sendFileView\";\nimport { SendTextView } from \"jslib-common/models/view/sendTextView\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new FormGroup({\n    selectedDeletionDatePreset: new FormControl(),\n    selectedExpirationDatePreset: new FormControl(),\n    defaultDeletionDateTime: new FormControl(),\n    defaultExpirationDateTime: new FormControl(),\n    fallbackDeletionDate: new FormControl(),\n    fallbackDeletionTime: new FormControl(),\n    fallbackExpirationDate: new FormControl(),\n    fallbackExpirationTime: new FormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as FormControl;\n  }\n\n  get selectedExpirationDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as FormControl;\n  }\n\n  get defaultDeletionDateTime(): FormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as FormControl;\n  }\n\n  get defaultExpirationDateTime(): FormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as FormControl;\n  }\n\n  get fallbackDeletionDate(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as FormControl;\n  }\n\n  get fallbackDeletionTime(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as FormControl;\n  }\n\n  get fallbackExpirationDate(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as FormControl;\n  }\n\n  get fallbackExpirationTime(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as FormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"jslib-common/enums/kdfType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"jslib-common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  static CUSTOM_VALUE = -100;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    this.initiateSsoFormPromise = this.preValidate();\n    if (await this.initiateSsoFormPromise) {\n      const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n      this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n    }\n  }\n\n  async preValidate(): Promise<boolean> {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return false;\n    }\n    return await this.apiService.preValidateSso(this.identifier);\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n      if (e.message === \"Unable to reach key connector\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorUnavailable\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"jslib-common/misc/webauthn_iframe\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"jslib-common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"jslib-common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { PasswordRequest } from \"jslib-common/models/request/passwordRequest\";\nimport { Verification } from \"jslib-common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    await this.stateService.setLoginRedirect(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"jslib-common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-verify-master-password\",\n  templateUrl: \"verify-master-password.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VerifyMasterPasswordComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class VerifyMasterPasswordComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { Directive, ElementRef, OnDestroy, OnInit } from \"@angular/core\";\nimport { NgControl } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\n@Directive({\n  selector: \"[appA11yInvalid]\",\n})\nexport class A11yInvalidDirective implements OnDestroy, OnInit {\n  private sub: Subscription;\n\n  constructor(private el: ElementRef<HTMLInputElement>, private formControlDirective: NgControl) {}\n\n  ngOnInit() {\n    this.sub = this.formControlDirective.control.statusChanges.subscribe((status) => {\n      if (status === \"INVALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"true\");\n      } else if (status === \"VALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"false\");\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub?.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBlurClick]\",\n})\nexport class BlurClickDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"click\") onClick() {\n    this.el.nativeElement.blur();\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BlurClickDirective } from \"./directives/blur-click.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AvatarComponent,\n    AutofocusDirective,\n    BlurClickDirective,\n    BoxRowDirective,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    EllipsisPipe,\n    FallbackSrcDirective,\n    I18nPipe,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    CalloutComponent,\n    IconComponent,\n    ExportScopeCalloutComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AvatarComponent,\n    AutofocusDirective,\n    BitwardenToastModule,\n    BlurClickDirective,\n    BoxRowDirective,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    EllipsisPipe,\n    FallbackSrcDirective,\n    I18nPipe,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    CalloutComponent,\n    IconComponent,\n    ExportScopeCalloutComponent,\n  ],\n  providers: [UserNamePipe, SearchPipe, I18nPipe, DatePipe],\n})\nexport class JslibModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (!isAuthed) {\n      this.messagingService.send(\"authBlocked\");\n      return false;\n    }\n\n    const locked = await this.vaultTimeoutService.isLocked();\n    if (locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      this.router.navigate([\"lock\"], { queryParams: { promptBiometric: true } });\n      return false;\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      this.router.navigate([\"/remove-password\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"jslib-common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"jslib-common/abstractions/stateMigration.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { Account } from \"jslib-common/models/domain/account\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateService } from \"jslib-common/services/state.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"jslib-common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { AuthGuardService } from \"./auth-guard.service\";\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\nimport { ValidationService } from \"./validation.service\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    { provide: \"WINDOW\", useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    ValidationService,\n    AuthGuardService,\n    UnauthGuardService,\n    LockGuardService,\n    ModalService,\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [StorageServiceAbstraction],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useFactory: (\n        tokenService: TokenServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        appIdService: AppIdServiceAbstraction\n      ) =>\n        new ApiService(\n          tokenService,\n          platformUtilsService,\n          environmentService,\n          appIdService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n        AppIdServiceAbstraction,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useFactory: (\n        apiService: ApiServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        cipherService: CipherServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        sendService: SendServiceAbstraction,\n        logService: LogService,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction,\n        organizationService: OrganizationServiceAbstraction,\n        providerService: ProviderServiceAbstraction\n      ) =>\n        new SyncService(\n          apiService,\n          settingsService,\n          folderService,\n          cipherService,\n          cryptoService,\n          collectionService,\n          messagingService,\n          policyService,\n          sendService,\n          logService,\n          keyConnectorService,\n          stateService,\n          organizationService,\n          providerService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useFactory: (\n        cipherService: CipherServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        searchService: SearchServiceAbstraction,\n        tokenService: TokenServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction\n      ) =>\n        new VaultTimeoutService(\n          cipherService,\n          folderService,\n          collectionService,\n          cryptoService,\n          platformUtilsService,\n          messagingService,\n          searchService,\n          tokenService,\n          policyService,\n          keyConnectorService,\n          stateService,\n          null,\n          async (userId?: string) =>\n            messagingService.send(\"logout\", { expired: false, userId: userId })\n        ),\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction,\n        logService: LogService,\n        stateMigrationService: StateMigrationServiceAbstraction\n      ) =>\n        new StateService(\n          storageService,\n          secureStorageService,\n          logService,\n          stateMigrationService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [\n        StorageServiceAbstraction,\n        \"SECURE_STORAGE\",\n        LogService,\n        StateMigrationServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction\n      ) =>\n        new StateMigrationService(\n          storageService,\n          secureStorageService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [StorageServiceAbstraction, \"SECURE_STORAGE\"],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useFactory: (\n        syncService: SyncServiceAbstraction,\n        appIdService: AppIdServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        vaultTimeoutService: VaultTimeoutServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new NotificationsService(\n          syncService,\n          appIdService,\n          apiService,\n          vaultTimeoutService,\n          environmentService,\n          async () => messagingService.send(\"logout\", { expired: true }),\n          logService,\n          stateService\n        ),\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        VaultTimeoutServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [\"WINDOW\"],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class LockGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    if (await this.vaultTimeoutService.isLocked()) {\n      return true;\n    }\n\n    const redirectUrl = (await this.stateService.getIsAuthenticated())\n      ? [this.homepage]\n      : [this.loginpage];\n\n    this.router.navigate(redirectUrl);\n    return false;\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals = false;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config?: ModalConfig) {\n    if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    const [modalRef, _] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (isAuthed) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      if (locked) {\n        this.router.navigate([\"lock\"]);\n      } else {\n        this.router.navigate([this.homepage]);\n      }\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { AbstractControl, ValidationErrors, Validators } from \"@angular/forms\";\n\n/**\n * Runs Validators.required on a field only if it's dirty. This prevents error messages from being displayed\n * to the user prematurely.\n */\nexport function dirtyRequired(control: AbstractControl): ValidationErrors | null {\n  return control.dirty ? Validators.required(control) : null;\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserBilling: () => Promise<BillingResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  deleteAccount: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postAccountRequestOTP: () => Promise<void>;\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getFolder: (id: string) => Promise<FolderResponse>;\n  postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n  putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n  deleteFolder: (id: string) => Promise<any>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  putPolicy: (\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ) => Promise<PolicyResponse>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<boolean>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","import { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport abstract class FolderService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAll: () => Promise<Folder[]>;\n  getAllDecrypted: () => Promise<FolderView[]>;\n  getAllNested: () => Promise<TreeNode<FolderView>[]>;\n  getNested: (id: string) => Promise<TreeNode<FolderView>>;\n  saveWithServer: (folder: Folder) => Promise<any>;\n  upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n}\n","export abstract class I18nService {\n  locale: string;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { ImportOption, ImportType } from \"../enums/importOptions\";\nimport { ImportError } from \"../importers/importError\";\nimport { Importer } from \"../importers/importer\";\n\nexport abstract class ImportService {\n  featuredImportOptions: readonly ImportOption[];\n  regularImportOptions: readonly ImportOption[];\n  getImportOptions: () => ImportOption[];\n  import: (\n    importer: Importer,\n    fileContents: string,\n    organizationId?: string\n  ) => Promise<ImportError>;\n  getImporter: (\n    format: ImportType | \"bitwardenpasswordprotected\",\n    organizationId: string,\n    password?: string\n  ) => Importer;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n  time: (label: string) => void;\n  timeEnd: (label: string) => [number, number];\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { ThemeType } from \"../enums/themeType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  getDefaultSystemTheme: () => Promise<ThemeType.Light | ThemeType.Dark>;\n  onDefaultSystemThemeChange: (\n    callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown\n  ) => unknown;\n  getEffectiveTheme: () => Promise<ThemeType>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  clearCache: () => void;\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount: BehaviorSubject<string>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricLocked: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricLocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedFolders: (options?: StorageOptions) => Promise<FolderView[]>;\n  setDecryptedFolders: (value: FolderView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLegacyEtmKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setLegacyEtmKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getLoginRedirect: (options?: StorageOptions) => Promise<any>;\n  setLoginRedirect: (value: any, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class StorageService {\n  get: <T>(key: string, options?: StorageOptions) => Promise<T>;\n  has: (key: string, options?: StorageOptions) => Promise<boolean>;\n  save: (key: string, obj: any, options?: StorageOptions) => Promise<any>;\n  remove: (key: string, options?: StorageOptions) => Promise<any>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getPremium: () => Promise<boolean>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n  isAutoCopyEnabled: () => Promise<boolean>;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","export abstract class VaultTimeoutService {\n  isLocked: (userId?: string) => Promise<boolean>;\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","export interface ImportOption {\n  id: string;\n  name: string;\n}\n\nexport const featuredImportOptions = [\n  { id: \"bitwardenjson\", name: \"Bitwarden (json)\" },\n  { id: \"bitwardencsv\", name: \"Bitwarden (csv)\" },\n  { id: \"chromecsv\", name: \"Chrome (csv)\" },\n  { id: \"dashlanecsv\", name: \"Dashlane (csv)\" },\n  { id: \"firefoxcsv\", name: \"Firefox (csv)\" },\n  { id: \"keepass2xml\", name: \"KeePass 2 (xml)\" },\n  { id: \"lastpasscsv\", name: \"LastPass (csv)\" },\n  { id: \"safaricsv\", name: \"Safari and macOS (csv)\" },\n  { id: \"1password1pux\", name: \"1Password (1pux)\" },\n] as const;\n\nexport const regularImportOptions = [\n  { id: \"keepassxcsv\", name: \"KeePassX (csv)\" },\n  { id: \"1password1pif\", name: \"1Password (1pif)\" },\n  { id: \"1passwordwincsv\", name: \"1Password 6 and 7 Windows (csv)\" },\n  { id: \"1passwordmaccsv\", name: \"1Password 6 and 7 Mac (csv)\" },\n  { id: \"dashlanejson\", name: \"Dashlane (json)\" },\n  { id: \"roboformcsv\", name: \"RoboForm (csv)\" },\n  { id: \"keepercsv\", name: \"Keeper (csv)\" },\n  // Temporarily remove this option for the Feb release\n  // { id: \"keeperjson\", name: \"Keeper (json)\" },\n  { id: \"enpasscsv\", name: \"Enpass (csv)\" },\n  { id: \"enpassjson\", name: \"Enpass (json)\" },\n  { id: \"safeincloudxml\", name: \"SafeInCloud (xml)\" },\n  { id: \"pwsafexml\", name: \"Password Safe (xml)\" },\n  { id: \"stickypasswordxml\", name: \"Sticky Password (xml)\" },\n  { id: \"msecurecsv\", name: \"mSecure (csv)\" },\n  { id: \"truekeycsv\", name: \"True Key (csv)\" },\n  { id: \"passwordbossjson\", name: \"Password Boss (json)\" },\n  { id: \"zohovaultcsv\", name: \"Zoho Vault (csv)\" },\n  { id: \"splashidcsv\", name: \"SplashID (csv)\" },\n  { id: \"passworddragonxml\", name: \"Password Dragon (xml)\" },\n  { id: \"padlockcsv\", name: \"Padlock (csv)\" },\n  { id: \"passboltcsv\", name: \"Passbolt (csv)\" },\n  { id: \"clipperzhtml\", name: \"Clipperz (html)\" },\n  { id: \"aviracsv\", name: \"Avira (csv)\" },\n  { id: \"saferpasscsv\", name: \"SaferPass (csv)\" },\n  { id: \"upmcsv\", name: \"Universal Password Manager (csv)\" },\n  { id: \"ascendocsv\", name: \"Ascendo DataVault (csv)\" },\n  { id: \"meldiumcsv\", name: \"Meldium (csv)\" },\n  { id: \"passkeepcsv\", name: \"PassKeep (csv)\" },\n  { id: \"operacsv\", name: \"Opera (csv)\" },\n  { id: \"vivaldicsv\", name: \"Vivaldi (csv)\" },\n  { id: \"gnomejson\", name: \"GNOME Passwords and Keys/Seahorse (json)\" },\n  { id: \"blurcsv\", name: \"Blur (csv)\" },\n  { id: \"passwordagentcsv\", name: \"Password Agent (csv)\" },\n  { id: \"passpackcsv\", name: \"Passpack (csv)\" },\n  { id: \"passmanjson\", name: \"Passman (json)\" },\n  { id: \"avastcsv\", name: \"Avast Passwords (csv)\" },\n  { id: \"avastjson\", name: \"Avast Passwords (json)\" },\n  { id: \"fsecurefsk\", name: \"F-Secure KEY (fsk)\" },\n  { id: \"kasperskytxt\", name: \"Kaspersky Password Manager (txt)\" },\n  { id: \"remembearcsv\", name: \"RememBear (csv)\" },\n  { id: \"passwordwallettxt\", name: \"PasswordWallet (txt)\" },\n  { id: \"mykicsv\", name: \"Myki (csv)\" },\n  { id: \"securesafecsv\", name: \"SecureSafe (csv)\" },\n  { id: \"logmeoncecsv\", name: \"LogMeOnce (csv)\" },\n  { id: \"blackberrycsv\", name: \"BlackBerry Password Keeper (csv)\" },\n  { id: \"buttercupcsv\", name: \"Buttercup (csv)\" },\n  { id: \"codebookcsv\", name: \"Codebook (csv)\" },\n  { id: \"encryptrcsv\", name: \"Encryptr (csv)\" },\n  { id: \"yoticsv\", name: \"Yoti (csv)\" },\n  { id: \"nordpasscsv\", name: \"Nordpass (csv)\" },\n] as const;\n\nexport type ImportType =\n  | typeof featuredImportOptions[number][\"id\"]\n  | typeof regularImportOptions[number][\"id\"];\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","export enum Permissions {\n  AccessEventLogs,\n  AccessImportExport,\n  AccessReports,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAllCollections,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAssignedCollections,\n  ManageGroups,\n  ManageOrganization,\n  ManagePolicies,\n  ManageProvider,\n  ManageUsers,\n  ManageUsersPassword,\n  CreateNewCollections,\n  EditAnyCollection,\n  DeleteAnyCollection,\n  EditAssignedCollections,\n  DeleteAssignedCollections,\n  ManageSso,\n}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Latest = Four,\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 2) {\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      if (value.length > 2 && value.length % 2 === 0) {\n        for (let i = 0; i < value.length - 2; i += 2) {\n          const val: string = value[i + 2];\n          const field: string = value[i + 1];\n          if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\n            continue;\n          }\n\n          const fieldLower = field.toLowerCase();\n          if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n            cipher.login.password = this.getValueOrDefault(val);\n          } else if (\n            cipher.login.username == null &&\n            this.usernameFieldNames.indexOf(fieldLower) > -1\n          ) {\n            cipher.login.username = this.getValueOrDefault(val);\n          } else if (\n            (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n            this.uriFieldNames.indexOf(fieldLower) > -1\n          ) {\n            cipher.login.uris = this.makeUriArray(val);\n          } else {\n            this.processKvp(cipher, field, val);\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AvastCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.login.uris = this.makeUriArray(value.web);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.username = this.getValueOrDefault(value.login);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AvastJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    if (results.logins != null) {\n      results.logins.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.name = this.getValueOrDefault(value.custName);\n        cipher.notes = this.getValueOrDefault(value.note);\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.password = this.getValueOrDefault(value.pwd);\n        cipher.login.username = this.getValueOrDefault(value.loginName);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (results.notes != null) {\n      results.notes.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote.type = SecureNoteType.Generic;\n        cipher.name = this.getValueOrDefault(value.label);\n        cipher.notes = this.getValueOrDefault(value.text);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (results.cards != null) {\n      results.cards.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.type = CipherType.Card;\n        cipher.name = this.getValueOrDefault(value.custName);\n        cipher.notes = this.getValueOrDefault(value.note);\n        cipher.card.cardholderName = this.getValueOrDefault(value.holderName);\n        cipher.card.number = this.getValueOrDefault(value.cardNumber);\n        cipher.card.code = this.getValueOrDefault(value.cvv);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        if (value.expirationDate != null) {\n          if (value.expirationDate.month != null) {\n            cipher.card.expMonth = value.expirationDate.month + \"\";\n          }\n          if (value.expirationDate.year != null) {\n            cipher.card.expYear = value.expirationDate.year + \"\";\n          }\n        }\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AviraCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(\n        value.name,\n        this.getValueOrDefault(this.nameFromUrl(value.website), \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(value.website);\n      cipher.login.password = this.getValueOrDefault(value.password);\n\n      if (\n        this.isNullOrWhitespace(value.username) &&\n        !this.isNullOrWhitespace(value.secondary_username)\n      ) {\n        cipher.login.username = value.secondary_username;\n      } else {\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.notes = this.getValueOrDefault(value.secondary_username);\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { Utils } from \"../misc/utils\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { LoginUriView } from \"../models/view/loginUriView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\nimport { ConsoleLogService } from \"../services/consoleLog.service\";\n\nexport abstract class BaseImporter {\n  organizationId: string = null;\n\n  protected logService: LogService = new ConsoleLogService(false);\n\n  protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\n\n  protected passwordFieldNames = [\n    \"password\",\n    \"pass word\",\n    \"passphrase\",\n    \"pass phrase\",\n    \"pass\",\n    \"code\",\n    \"code word\",\n    \"codeword\",\n    \"secret\",\n    \"secret word\",\n    \"personpwd\",\n    \"key\",\n    \"keyword\",\n    \"key word\",\n    \"keyphrase\",\n    \"key phrase\",\n    \"form_pw\",\n    \"wppassword\",\n    \"pin\",\n    \"pwd\",\n    \"pw\",\n    \"pword\",\n    \"passwd\",\n    \"p\",\n    \"serial\",\n    \"serial#\",\n    \"license key\",\n    \"reg #\",\n\n    // Non-English names\n    \"passwort\",\n  ];\n\n  protected usernameFieldNames = [\n    \"user\",\n    \"name\",\n    \"user name\",\n    \"username\",\n    \"login name\",\n    \"email\",\n    \"e-mail\",\n    \"id\",\n    \"userid\",\n    \"user id\",\n    \"login\",\n    \"form_loginname\",\n    \"wpname\",\n    \"mail\",\n    \"loginid\",\n    \"login id\",\n    \"log\",\n    \"personlogin\",\n    \"first name\",\n    \"last name\",\n    \"card#\",\n    \"account #\",\n    \"member\",\n    \"member #\",\n\n    // Non-English names\n    \"nom\",\n    \"benutzername\",\n  ];\n\n  protected notesFieldNames = [\n    \"note\",\n    \"notes\",\n    \"comment\",\n    \"comments\",\n    \"memo\",\n    \"description\",\n    \"free form\",\n    \"freeform\",\n    \"free text\",\n    \"freetext\",\n    \"free\",\n\n    // Non-English names\n    \"kommentar\",\n  ];\n\n  protected uriFieldNames: string[] = [\n    \"url\",\n    \"hyper link\",\n    \"hyperlink\",\n    \"link\",\n    \"host\",\n    \"hostname\",\n    \"host name\",\n    \"server\",\n    \"address\",\n    \"hyper ref\",\n    \"href\",\n    \"web\",\n    \"website\",\n    \"web site\",\n    \"site\",\n    \"web-site\",\n    \"uri\",\n\n    // Non-English names\n    \"ort\",\n    \"adresse\",\n  ];\n\n  protected parseCsvOptions = {\n    encoding: \"UTF-8\",\n    skipEmptyLines: false,\n  };\n\n  protected get organization() {\n    return this.organizationId != null;\n  }\n\n  protected parseXml(data: string): Document {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(data, \"application/xml\");\n    return doc != null && doc.querySelector(\"parsererror\") == null ? doc : null;\n  }\n\n  protected parseCsv(data: string, header: boolean, options: any = {}): any[] {\n    const parseOptions: papa.ParseConfig<string> = Object.assign(\n      { header: header },\n      this.parseCsvOptions,\n      options\n    );\n    data = this.splitNewLine(data).join(\"\\n\").trim();\n    const result = papa.parse(data, parseOptions);\n    if (result.errors != null && result.errors.length > 0) {\n      result.errors.forEach((e) => {\n        if (e.row != null) {\n          this.logService.warning(\"Error parsing row \" + e.row + \": \" + e.message);\n        }\n      });\n    }\n    return result.data && result.data.length > 0 ? result.data : null;\n  }\n\n  protected parseSingleRowCsv(rowData: string) {\n    if (this.isNullOrWhitespace(rowData)) {\n      return null;\n    }\n    const parsedRow = this.parseCsv(rowData, false);\n    if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\n      return parsedRow[0];\n    }\n    return null;\n  }\n\n  protected makeUriArray(uri: string | string[]): LoginUriView[] {\n    if (uri == null) {\n      return null;\n    }\n\n    if (typeof uri === \"string\") {\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.fixUri(uri);\n      if (this.isNullOrWhitespace(loginUri.uri)) {\n        return null;\n      }\n      loginUri.match = null;\n      return [loginUri];\n    }\n\n    if (uri.length > 0) {\n      const returnArr: LoginUriView[] = [];\n      uri.forEach((u) => {\n        const loginUri = new LoginUriView();\n        loginUri.uri = this.fixUri(u);\n        if (this.isNullOrWhitespace(loginUri.uri)) {\n          return;\n        }\n        loginUri.match = null;\n        returnArr.push(loginUri);\n      });\n      return returnArr.length === 0 ? null : returnArr;\n    }\n\n    return null;\n  }\n\n  protected fixUri(uri: string) {\n    if (uri == null) {\n      return null;\n    }\n    uri = uri.trim();\n    if (uri.indexOf(\"://\") === -1 && uri.indexOf(\".\") >= 0) {\n      uri = \"http://\" + uri;\n    }\n    if (uri.length > 1000) {\n      return uri.substring(0, 1000);\n    }\n    return uri;\n  }\n\n  protected nameFromUrl(url: string) {\n    const hostname = Utils.getHostname(url);\n    if (this.isNullOrWhitespace(hostname)) {\n      return null;\n    }\n    return hostname.startsWith(\"www.\") ? hostname.replace(\"www.\", \"\") : hostname;\n  }\n\n  protected isNullOrWhitespace(str: string): boolean {\n    return Utils.isNullOrWhitespace(str);\n  }\n\n  protected getValueOrDefault(str: string, defaultValue: string = null): string {\n    if (this.isNullOrWhitespace(str)) {\n      return defaultValue;\n    }\n    return str;\n  }\n\n  protected splitNewLine(str: string): string[] {\n    return str.split(this.newLineRegex);\n  }\n\n  // ref https://stackoverflow.com/a/5911300\n  protected getCardBrand(cardNum: string) {\n    if (this.isNullOrWhitespace(cardNum)) {\n      return null;\n    }\n\n    // Visa\n    let re = new RegExp(\"^4\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    // Mastercard\n    // Updated for Mastercard 2017 BINs expansion\n    if (\n      /^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/.test(\n        cardNum\n      )\n    ) {\n      return \"Mastercard\";\n    }\n\n    // AMEX\n    re = new RegExp(\"^3[47]\");\n    if (cardNum.match(re) != null) {\n      return \"Amex\";\n    }\n\n    // Discover\n    re = new RegExp(\n      \"^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)\"\n    );\n    if (cardNum.match(re) != null) {\n      return \"Discover\";\n    }\n\n    // Diners\n    re = new RegExp(\"^36\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // Diners - Carte Blanche\n    re = new RegExp(\"^30[0-5]\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // JCB\n    re = new RegExp(\"^35(2[89]|[3-8][0-9])\");\n    if (cardNum.match(re) != null) {\n      return \"JCB\";\n    }\n\n    // Visa Electron\n    re = new RegExp(\"^(4026|417500|4508|4844|491(3|7))\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    return null;\n  }\n\n  protected setCardExpiration(cipher: CipherView, expiration: string): boolean {\n    if (!this.isNullOrWhitespace(expiration)) {\n      expiration = expiration.replace(/\\s/g, \"\");\n      const parts = expiration.split(\"/\");\n      if (parts.length === 2) {\n        let month: string = null;\n        let year: string = null;\n        if (parts[0].length === 1 || parts[0].length === 2) {\n          month = parts[0];\n          if (month.length === 2 && month[0] === \"0\") {\n            month = month.substr(1, 1);\n          }\n        }\n        if (parts[1].length === 2 || parts[1].length === 4) {\n          year = month.length === 2 ? \"20\" + parts[1] : parts[1];\n        }\n        if (month != null && year != null) {\n          cipher.card.expMonth = month;\n          cipher.card.expYear = year;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  protected moveFoldersToCollections(result: ImportResult) {\n    result.folderRelationships.forEach((r) => result.collectionRelationships.push(r));\n    result.collections = result.folders.map((f) => {\n      const collection = new CollectionView();\n      collection.name = f.name;\n      return collection;\n    });\n    result.folderRelationships = [];\n    result.folders = [];\n  }\n\n  protected querySelectorDirectChild(parentEl: Element, query: string) {\n    const els = this.querySelectorAllDirectChild(parentEl, query);\n    return els.length === 0 ? null : els[0];\n  }\n\n  protected querySelectorAllDirectChild(parentEl: Element, query: string) {\n    return Array.from(parentEl.querySelectorAll(query)).filter((el) => el.parentNode === parentEl);\n  }\n\n  protected initLoginCipher() {\n    const cipher = new CipherView();\n    cipher.favorite = false;\n    cipher.notes = \"\";\n    cipher.fields = [];\n    cipher.login = new LoginView();\n    cipher.type = CipherType.Login;\n    return cipher;\n  }\n\n  protected cleanupCipher(cipher: CipherView) {\n    if (cipher == null) {\n      return;\n    }\n    if (cipher.type !== CipherType.Login) {\n      cipher.login = null;\n    }\n    if (this.isNullOrWhitespace(cipher.name)) {\n      cipher.name = \"--\";\n    }\n    if (this.isNullOrWhitespace(cipher.notes)) {\n      cipher.notes = null;\n    } else {\n      cipher.notes = cipher.notes.trim();\n    }\n    if (cipher.fields != null && cipher.fields.length === 0) {\n      cipher.fields = null;\n    }\n  }\n\n  protected processKvp(\n    cipher: CipherView,\n    key: string,\n    value: string,\n    type: FieldType = FieldType.Text\n  ) {\n    if (this.isNullOrWhitespace(value)) {\n      return;\n    }\n    if (this.isNullOrWhitespace(key)) {\n      key = \"\";\n    }\n    if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\n      if (cipher.notes == null) {\n        cipher.notes = \"\";\n      }\n      cipher.notes += key + \": \" + this.splitNewLine(value).join(\"\\n\") + \"\\n\";\n    } else {\n      if (cipher.fields == null) {\n        cipher.fields = [];\n      }\n      const field = new FieldView();\n      field.type = type;\n      field.name = key;\n      field.value = value;\n      cipher.fields.push(field);\n    }\n  }\n\n  protected processFolder(result: ImportResult, folderName: string) {\n    let folderIndex = result.folders.length;\n    const hasFolder = !this.isNullOrWhitespace(folderName);\n    let addFolder = hasFolder;\n\n    if (hasFolder) {\n      for (let i = 0; i < result.folders.length; i++) {\n        if (result.folders[i].name === folderName) {\n          addFolder = false;\n          folderIndex = i;\n          break;\n        }\n      }\n    }\n\n    if (addFolder) {\n      const f = new FolderView();\n      f.name = folderName;\n      result.folders.push(f);\n    }\n    if (hasFolder) {\n      result.folderRelationships.push([result.ciphers.length, folderIndex]);\n    }\n  }\n\n  protected convertToNoteIfNeeded(cipher: CipherView) {\n    if (\n      cipher.type === CipherType.Login &&\n      this.isNullOrWhitespace(cipher.login.username) &&\n      this.isNullOrWhitespace(cipher.login.password) &&\n      (cipher.login.uris == null || cipher.login.uris.length === 0)\n    ) {\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n    }\n  }\n\n  protected processFullName(cipher: CipherView, fullName: string) {\n    if (this.isNullOrWhitespace(fullName)) {\n      return;\n    }\n\n    const nameParts = fullName.split(\" \");\n    if (nameParts.length > 0) {\n      cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n    }\n    if (nameParts.length === 2) {\n      cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n    } else if (nameParts.length >= 3) {\n      cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n      cipher.identity.lastName = nameParts.slice(2, nameParts.length).join(\" \");\n    }\n  }\n}\n","import { CipherRepromptType } from \"../enums/cipherRepromptType\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.organization && !this.isNullOrWhitespace(value.collections)) {\n        const collections = (value.collections as string).split(\",\");\n        collections.forEach((col) => {\n          let addCollection = true;\n          let collectionIndex = result.collections.length;\n\n          for (let i = 0; i < result.collections.length; i++) {\n            if (result.collections[i].name === col) {\n              addCollection = false;\n              collectionIndex = i;\n              break;\n            }\n          }\n\n          if (addCollection) {\n            const collection = new CollectionView();\n            collection.name = col;\n            result.collections.push(collection);\n          }\n\n          result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n        });\n      } else if (!this.organization) {\n        this.processFolder(result, value.folder);\n      }\n\n      const cipher = new CipherView();\n      cipher.favorite =\n        !this.organization && this.getValueOrDefault(value.favorite, \"0\") !== \"0\" ? true : false;\n      cipher.type = CipherType.Login;\n      cipher.notes = this.getValueOrDefault(value.notes);\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      try {\n        cipher.reprompt = parseInt(\n          this.getValueOrDefault(value.reprompt, CipherRepromptType.None.toString()),\n          10\n        );\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(\"Unable to parse reprompt value\", e);\n        cipher.reprompt = CipherRepromptType.None;\n      }\n\n      if (!this.isNullOrWhitespace(value.fields)) {\n        const fields = this.splitNewLine(value.fields);\n        for (let i = 0; i < fields.length; i++) {\n          if (this.isNullOrWhitespace(fields[i])) {\n            continue;\n          }\n\n          const delimPosition = fields[i].lastIndexOf(\": \");\n          if (delimPosition === -1) {\n            continue;\n          }\n\n          if (cipher.fields == null) {\n            cipher.fields = [];\n          }\n\n          const field = new FieldView();\n          field.name = fields[i].substr(0, delimPosition);\n          field.value = null;\n          field.type = FieldType.Text;\n          if (fields[i].length > delimPosition + 2) {\n            field.value = fields[i].substr(delimPosition + 2);\n          }\n          cipher.fields.push(field);\n        }\n      }\n\n      const valueType = value.type != null ? value.type.toLowerCase() : null;\n      switch (valueType) {\n        case \"note\":\n          cipher.type = CipherType.SecureNote;\n          cipher.secureNote = new SecureNoteView();\n          cipher.secureNote.type = SecureNoteType.Generic;\n          break;\n        default: {\n          cipher.type = CipherType.Login;\n          cipher.login = new LoginView();\n          cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\n          cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\n          cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\n          const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\n          cipher.login.uris = this.makeUriArray(uris);\n          break;\n        }\n      }\n\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { EncString } from \"../models/domain/encString\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherWithIds } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId } from \"../models/export/collectionWithId\";\nimport { FolderWithId } from \"../models/export/folderWithId\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BitwardenJsonImporter extends BaseImporter implements Importer {\n  private results: any;\n  private result: ImportResult;\n\n  constructor(protected cryptoService: CryptoService, protected i18nService: I18nService) {\n    super();\n  }\n\n  async parse(data: string): Promise<ImportResult> {\n    this.result = new ImportResult();\n    this.results = JSON.parse(data);\n    if (this.results == null || this.results.items == null) {\n      if (this.results?.passwordProtected) {\n        this.result.success = false;\n        this.result.missingPassword = true;\n        this.result.errorMessage = this.i18nService.t(\"importPasswordRequired\");\n        return this.result;\n      }\n\n      this.result.success = false;\n      return this.result;\n    }\n\n    if (this.results.encrypted) {\n      await this.parseEncrypted();\n    } else {\n      this.parseDecrypted();\n    }\n\n    return this.result;\n  }\n\n  private async parseEncrypted() {\n    if (this.results.encKeyValidation_DO_NOT_EDIT != null) {\n      const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const encKeyValidation = new EncString(this.results.encKeyValidation_DO_NOT_EDIT);\n      const encKeyValidationDecrypt = await this.cryptoService.decryptToUtf8(\n        encKeyValidation,\n        orgKey\n      );\n      if (encKeyValidationDecrypt === null) {\n        this.result.success = false;\n        this.result.errorMessage = this.i18nService.t(\"importEncKeyError\");\n        return;\n      }\n    }\n\n    const groupingsMap = new Map<string, number>();\n\n    if (this.organization && this.results.collections != null) {\n      for (const c of this.results.collections as CollectionWithId[]) {\n        const collection = CollectionWithId.toDomain(c);\n        if (collection != null) {\n          collection.id = null;\n          collection.organizationId = this.organizationId;\n          const view = await collection.decrypt();\n          groupingsMap.set(c.id, this.result.collections.length);\n          this.result.collections.push(view);\n        }\n      }\n    } else if (!this.organization && this.results.folders != null) {\n      for (const f of this.results.folders as FolderWithId[]) {\n        const folder = FolderWithId.toDomain(f);\n        if (folder != null) {\n          folder.id = null;\n          const view = await folder.decrypt();\n          groupingsMap.set(f.id, this.result.folders.length);\n          this.result.folders.push(view);\n        }\n      }\n    }\n\n    for (const c of this.results.items as CipherWithIds[]) {\n      const cipher = CipherWithIds.toDomain(c);\n      // reset ids incase they were set for some reason\n      cipher.id = null;\n      cipher.folderId = null;\n      cipher.organizationId = this.organizationId;\n      cipher.collectionIds = null;\n\n      // make sure password history is limited\n      if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n        cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n      }\n\n      if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n        this.result.folderRelationships.push([\n          this.result.ciphers.length,\n          groupingsMap.get(c.folderId),\n        ]);\n      } else if (this.organization && c.collectionIds != null) {\n        c.collectionIds.forEach((cId) => {\n          if (groupingsMap.has(cId)) {\n            this.result.collectionRelationships.push([\n              this.result.ciphers.length,\n              groupingsMap.get(cId),\n            ]);\n          }\n        });\n      }\n\n      const view = await cipher.decrypt();\n      this.cleanupCipher(view);\n      this.result.ciphers.push(view);\n    }\n\n    this.result.success = true;\n  }\n\n  private parseDecrypted() {\n    const groupingsMap = new Map<string, number>();\n    if (this.organization && this.results.collections != null) {\n      this.results.collections.forEach((c: CollectionWithId) => {\n        const collection = CollectionWithId.toView(c);\n        if (collection != null) {\n          collection.id = null;\n          collection.organizationId = null;\n          groupingsMap.set(c.id, this.result.collections.length);\n          this.result.collections.push(collection);\n        }\n      });\n    } else if (!this.organization && this.results.folders != null) {\n      this.results.folders.forEach((f: FolderWithId) => {\n        const folder = FolderWithId.toView(f);\n        if (folder != null) {\n          folder.id = null;\n          groupingsMap.set(f.id, this.result.folders.length);\n          this.result.folders.push(folder);\n        }\n      });\n    }\n\n    this.results.items.forEach((c: CipherWithIds) => {\n      const cipher = CipherWithIds.toView(c);\n      // reset ids incase they were set for some reason\n      cipher.id = null;\n      cipher.folderId = null;\n      cipher.organizationId = null;\n      cipher.collectionIds = null;\n\n      // make sure password history is limited\n      if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n        cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n      }\n\n      if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n        this.result.folderRelationships.push([\n          this.result.ciphers.length,\n          groupingsMap.get(c.folderId),\n        ]);\n      } else if (this.organization && c.collectionIds != null) {\n        c.collectionIds.forEach((cId) => {\n          if (groupingsMap.has(cId)) {\n            this.result.collectionRelationships.push([\n              this.result.ciphers.length,\n              groupingsMap.get(cId),\n            ]);\n          }\n        });\n      }\n\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n\n    this.result.success = true;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { EncString } from \"../models/domain/encString\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { BitwardenJsonImporter } from \"./bitwardenJsonImporter\";\nimport { Importer } from \"./importer\";\n\ninterface BitwardenPasswordProtectedFileFormat {\n  encrypted: boolean;\n  passwordProtected: boolean;\n  salt: string;\n  kdfIterations: number;\n  kdfType: number;\n  encKeyValidation_DO_NOT_EDIT: string;\n  data: string;\n}\n\nexport class BitwardenPasswordProtectedImporter extends BitwardenJsonImporter implements Importer {\n  private key: SymmetricCryptoKey;\n\n  constructor(cryptoService: CryptoService, i18nService: I18nService, private password: string) {\n    super(cryptoService, i18nService);\n  }\n\n  async parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const parsedData = JSON.parse(data);\n    if (this.cannotParseFile(parsedData)) {\n      result.success = false;\n      return result;\n    }\n\n    if (!(await this.checkPassword(parsedData))) {\n      result.success = false;\n      result.errorMessage = this.i18nService.t(\"importEncKeyError\");\n      return result;\n    }\n\n    const encData = new EncString(parsedData.data);\n    const clearTextData = await this.cryptoService.decryptToUtf8(encData, this.key);\n    return await super.parse(clearTextData);\n  }\n\n  private async checkPassword(jdoc: BitwardenPasswordProtectedFileFormat): Promise<boolean> {\n    this.key = await this.cryptoService.makePinKey(\n      this.password,\n      jdoc.salt,\n      KdfType.PBKDF2_SHA256,\n      jdoc.kdfIterations\n    );\n\n    const encKeyValidation = new EncString(jdoc.encKeyValidation_DO_NOT_EDIT);\n\n    const encKeyValidationDecrypt = await this.cryptoService.decryptToUtf8(\n      encKeyValidation,\n      this.key\n    );\n    if (encKeyValidationDecrypt === null) {\n      return false;\n    }\n    return true;\n  }\n\n  private cannotParseFile(jdoc: BitwardenPasswordProtectedFileFormat): boolean {\n    return (\n      !jdoc ||\n      !jdoc.encrypted ||\n      !jdoc.passwordProtected ||\n      !jdoc.salt ||\n      !jdoc.kdfIterations ||\n      typeof jdoc.kdfIterations !== \"number\" ||\n      jdoc.kdfType == null ||\n      KdfType[jdoc.kdfType] == null ||\n      !jdoc.encKeyValidation_DO_NOT_EDIT ||\n      !jdoc.data\n    );\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BlackBerryCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.grouping === \"list\") {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.favorite = value.fav === \"1\";\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.notes = this.getValueOrDefault(value.extra);\n      if (value.grouping !== \"note\") {\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.username = this.getValueOrDefault(value.username);\n      }\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BlurCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.label === \"null\") {\n        value.label = null;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(\n        value.label,\n        this.getValueOrDefault(this.nameFromUrl(value.domain), \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(value.domain);\n      cipher.login.password = this.getValueOrDefault(value.password);\n\n      if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\n        cipher.login.username = value.username;\n      } else {\n        cipher.login.username = this.getValueOrDefault(value.email);\n        cipher.notes = this.getValueOrDefault(value.username);\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst OfficialProps = [\"!group_id\", \"!group_name\", \"title\", \"username\", \"password\", \"URL\", \"id\"];\n\nexport class ButtercupCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValueOrDefault(value[\"!group_name\"]));\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n\n      let processingCustomFields = false;\n      for (const prop in value) {\n        // eslint-disable-next-line\n        if (value.hasOwnProperty(prop)) {\n          if (!processingCustomFields && OfficialProps.indexOf(prop) === -1) {\n            processingCustomFields = true;\n          }\n          if (processingCustomFields) {\n            this.processKvp(cipher, prop, value[prop]);\n          }\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const textarea = doc.querySelector(\"textarea\");\n    if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\n      result.errorMessage = \"Missing textarea.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const entries = JSON.parse(textarea.textContent);\n    entries.forEach((entry: any) => {\n      const cipher = this.initLoginCipher();\n      if (!this.isNullOrWhitespace(entry.label)) {\n        cipher.name = entry.label.split(\" \")[0];\n      }\n      if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\n        cipher.notes = entry.data.notes.split(\"\\\\n\").join(\"\\n\");\n      }\n\n      if (entry.currentVersion != null && entry.currentVersion.fields != null) {\n        for (const property in entry.currentVersion.fields) {\n          // eslint-disable-next-line\n          if (!entry.currentVersion.fields.hasOwnProperty(property)) {\n            continue;\n          }\n\n          const field = entry.currentVersion.fields[property];\n          const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\n          switch (actionType) {\n            case \"password\":\n              cipher.login.password = this.getValueOrDefault(field.value);\n              break;\n            case \"email\":\n            case \"username\":\n            case \"user\":\n            case \"name\":\n              cipher.login.username = this.getValueOrDefault(field.value);\n              break;\n            case \"url\":\n              cipher.login.uris = this.makeUriArray(field.value);\n              break;\n            default: {\n              const labelLower = field.label != null ? field.label.toLowerCase() : null;\n              if (\n                cipher.login.password == null &&\n                this.passwordFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.password = this.getValueOrDefault(field.value);\n              } else if (\n                cipher.login.username == null &&\n                this.usernameFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.username = this.getValueOrDefault(field.value);\n              } else if (\n                (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                this.uriFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.uris = this.makeUriArray(field.value);\n              } else {\n                this.processKvp(cipher, field.label, field.value);\n              }\n              break;\n            }\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class CodebookCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValueOrDefault(value.Category));\n\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.Favorite) === \"True\";\n      cipher.name = this.getValueOrDefault(value.Entry, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Note);\n      cipher.login.username = this.getValueOrDefault(value.Username, value.Email);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.totp = this.getValueOrDefault(value.TOTP);\n      cipher.login.uris = this.makeUriArray(value.Website);\n\n      if (!this.isNullOrWhitespace(value.Username)) {\n        this.processKvp(cipher, \"Email\", value.Email);\n      }\n      this.processKvp(cipher, \"Phone\", value.Phone);\n      this.processKvp(cipher, \"PIN\", value.PIN);\n      this.processKvp(cipher, \"Account\", value.Account);\n      this.processKvp(cipher, \"Date\", value.Date);\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { LoginView } from \"../../models/view/loginView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport {\n  CredentialsRecord,\n  IdRecord,\n  PaymentsRecord,\n  PersonalInformationRecord,\n  SecureNoteRecord,\n} from \"./types/dashlaneCsvTypes\";\n\nconst _mappedCredentialsColums = new Set([\n  \"title\",\n  \"note\",\n  \"username\",\n  \"password\",\n  \"url\",\n  \"otpSecret\",\n  \"category\",\n]);\n\nconst _mappedPersonalInfoAsIdentiyColumns = new Set([\n  \"type\",\n  \"title\",\n  \"first_name\",\n  \"middle_name\",\n  \"last_name\",\n  \"login\",\n  \"email\",\n  \"phone_number\",\n  \"address\",\n  \"country\",\n  \"state\",\n  \"city\",\n  \"zip\",\n  // Skip item_name as we already have set a combined name\n  \"item_name\",\n]);\n\nconst _mappedSecureNoteColumns = new Set([\"title\", \"note\"]);\n\nexport class DashlaneCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    if (results[0].type != null && results[0].title != null) {\n      const personalRecords = results as PersonalInformationRecord[];\n\n      // If personalRecords has only one \"name\" then create an Identity-Cipher\n      if (personalRecords.filter((x) => x.type === \"name\").length === 1) {\n        const cipher = this.initLoginCipher();\n        cipher.type = CipherType.Identity;\n        cipher.identity = new IdentityView();\n        results.forEach((row) => {\n          this.parsePersonalInformationRecordAsIdentity(cipher, row);\n        });\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n        result.success = true;\n        return Promise.resolve(result);\n      }\n    }\n\n    results.forEach((row) => {\n      const cipher = this.initLoginCipher();\n\n      const rowKeys = Object.keys(row);\n      if (rowKeys[0] === \"username\") {\n        this.processFolder(result, row.category);\n        this.parseCredentialsRecord(cipher, row);\n      }\n\n      if (rowKeys[0] === \"type\" && rowKeys[1] === \"account_name\") {\n        this.parsePaymentRecord(cipher, row);\n      }\n\n      if (rowKeys[0] === \"type\" && rowKeys[1] === \"number\") {\n        this.parseIdRecord(cipher, row);\n      }\n\n      if ((rowKeys[0] === \"type\") != null && rowKeys[1] === \"title\") {\n        this.parsePersonalInformationRecord(cipher, row);\n      }\n\n      if (rowKeys[0] === \"title\" && rowKeys[1] === \"note\") {\n        this.parseSecureNoteRecords(cipher, row);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  parseCredentialsRecord(cipher: CipherView, row: CredentialsRecord) {\n    cipher.type = CipherType.Login;\n    cipher.login = new LoginView();\n\n    cipher.name = row.title;\n    cipher.notes = row.note;\n    cipher.login.username = row.username;\n    cipher.login.password = row.password;\n    cipher.login.totp = row.otpSecret;\n    cipher.login.uris = this.makeUriArray(row.url);\n\n    this.importUnmappedFields(cipher, row, _mappedCredentialsColums);\n  }\n\n  parsePaymentRecord(cipher: CipherView, row: PaymentsRecord) {\n    cipher.type = CipherType.Card;\n    cipher.card = new CardView();\n\n    cipher.name = row.account_name;\n    let mappedValues: string[] = [];\n    switch (row.type) {\n      case \"credit_card\":\n        cipher.card.cardholderName = row.account_name;\n        cipher.card.number = row.cc_number;\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = row.code;\n        cipher.card.expMonth = row.expiration_month;\n        cipher.card.expYear = row.expiration_year.substring(2, 4);\n\n        // If you add more mapped fields please extend this\n        mappedValues = [\n          \"account_name\",\n          \"account_holder\",\n          \"cc_number\",\n          \"code\",\n          \"expiration_month\",\n          \"expiration_year\",\n        ];\n        break;\n      case \"bank\":\n        cipher.card.cardholderName = row.account_holder;\n        cipher.card.number = row.account_number;\n\n        // If you add more mapped fields please extend this\n        mappedValues = [\"account_name\", \"account_holder\", \"account_number\"];\n        break;\n      default:\n        break;\n    }\n\n    this.importUnmappedFields(cipher, row, new Set(mappedValues));\n  }\n\n  parseIdRecord(cipher: CipherView, row: IdRecord) {\n    cipher.type = CipherType.Identity;\n    cipher.identity = new IdentityView();\n\n    const mappedValues: string[] = [\"name\", \"number\"];\n    switch (row.type) {\n      case \"card\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.licenseNumber = row.number;\n        break;\n      case \"passport\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.passportNumber = row.number;\n        break;\n      case \"license\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.licenseNumber = row.number;\n        cipher.identity.state = row.state;\n\n        mappedValues.push(\"state\");\n        break;\n      case \"social_security\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.ssn = row.number;\n        break;\n      case \"tax_number\":\n        cipher.name = row.type;\n        cipher.identity.licenseNumber = row.number;\n        break;\n\n      default:\n        break;\n    }\n\n    // If you add more mapped fields please extend this\n    this.importUnmappedFields(cipher, row, new Set(mappedValues));\n  }\n\n  parsePersonalInformationRecord(cipher: CipherView, row: PersonalInformationRecord) {\n    cipher.type = CipherType.SecureNote;\n    cipher.secureNote.type = SecureNoteType.Generic;\n    if (row.type === \"name\") {\n      cipher.name = `${row.title} ${row.first_name} ${row.middle_name} ${row.last_name}`\n        .replace(\"  \", \" \")\n        .trim();\n    } else {\n      cipher.name = row.item_name;\n    }\n\n    const dataRow = row as any;\n    Object.keys(row).forEach((key) => {\n      this.processKvp(cipher, key, dataRow[key]);\n    });\n  }\n\n  parsePersonalInformationRecordAsIdentity(cipher: CipherView, row: PersonalInformationRecord) {\n    switch (row.type) {\n      case \"name\":\n        this.processFullName(cipher, `${row.first_name} ${row.middle_name} ${row.last_name}`);\n        cipher.identity.title = row.title;\n        cipher.name = cipher.identity.fullName;\n\n        cipher.identity.username = row.login;\n        break;\n      case \"email\":\n        cipher.identity.email = row.email;\n        break;\n      case \"number\":\n        cipher.identity.phone = row.phone_number;\n        break;\n      case \"address\":\n        cipher.identity.address1 = row.address;\n        cipher.identity.city = row.city;\n        cipher.identity.postalCode = row.zip;\n        cipher.identity.state = row.state;\n        cipher.identity.country = row.country;\n        break;\n      default:\n        break;\n    }\n\n    this.importUnmappedFields(cipher, row, _mappedPersonalInfoAsIdentiyColumns);\n  }\n\n  parseSecureNoteRecords(cipher: CipherView, row: SecureNoteRecord) {\n    cipher.type = CipherType.SecureNote;\n    cipher.secureNote.type = SecureNoteType.Generic;\n    cipher.name = row.title;\n    cipher.notes = row.note;\n\n    this.importUnmappedFields(cipher, row, _mappedSecureNoteColumns);\n  }\n\n  importUnmappedFields(cipher: CipherView, row: any, mappedValues: Set<string>) {\n    const unmappedFields = Object.keys(row).filter((x) => !mappedValues.has(x));\n    unmappedFields.forEach((key) => {\n      const item = row as any;\n      this.processKvp(cipher, key, item[key]);\n    });\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { SecureNoteView } from \"../../models/view/secureNoteView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nconst HandledResults = new Set([\n  \"ADDRESS\",\n  \"AUTHENTIFIANT\",\n  \"BANKSTATEMENT\",\n  \"IDCARD\",\n  \"IDENTITY\",\n  \"PAYMENTMEANS_CREDITCARD\",\n  \"PAYMENTMEAN_PAYPAL\",\n  \"EMAIL\",\n]);\n\nexport class DashlaneJsonImporter extends BaseImporter implements Importer {\n  private result: ImportResult;\n\n  parse(data: string): Promise<ImportResult> {\n    this.result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.length === 0) {\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    if (results.ADDRESS != null) {\n      this.processAddress(results.ADDRESS);\n    }\n    if (results.AUTHENTIFIANT != null) {\n      this.processAuth(results.AUTHENTIFIANT);\n    }\n    if (results.BANKSTATEMENT != null) {\n      this.processNote(results.BANKSTATEMENT, \"BankAccountName\");\n    }\n    if (results.IDCARD != null) {\n      this.processNote(results.IDCARD, \"Fullname\");\n    }\n    if (results.PAYMENTMEANS_CREDITCARD != null) {\n      this.processCard(results.PAYMENTMEANS_CREDITCARD);\n    }\n    if (results.IDENTITY != null) {\n      this.processIdentity(results.IDENTITY);\n    }\n\n    for (const key in results) {\n      // eslint-disable-next-line\n      if (results.hasOwnProperty(key) && !HandledResults.has(key)) {\n        this.processNote(results[key], null, \"Generic Note\");\n      }\n    }\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  private processAuth(results: any[]) {\n    results.forEach((credential: any) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(credential.title);\n\n      cipher.login.username = this.getValueOrDefault(\n        credential.login,\n        this.getValueOrDefault(credential.secondaryLogin)\n      );\n      if (this.isNullOrWhitespace(cipher.login.username)) {\n        cipher.login.username = this.getValueOrDefault(credential.email);\n      } else if (!this.isNullOrWhitespace(credential.email)) {\n        cipher.notes = \"Email: \" + credential.email + \"\\n\";\n      }\n\n      cipher.login.password = this.getValueOrDefault(credential.password);\n      cipher.login.uris = this.makeUriArray(credential.domain);\n      cipher.notes += this.getValueOrDefault(credential.note, \"\");\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processIdentity(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.identity = new IdentityView();\n      cipher.type = CipherType.Identity;\n      cipher.name = this.getValueOrDefault(obj.fullName, \"\");\n      const nameParts = cipher.name.split(\" \");\n      if (nameParts.length > 0) {\n        cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n      }\n      if (nameParts.length === 2) {\n        cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n      } else if (nameParts.length === 3) {\n        cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n        cipher.identity.lastName = this.getValueOrDefault(nameParts[2]);\n      }\n      cipher.identity.username = this.getValueOrDefault(obj.pseudo);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processAddress(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.identity = new IdentityView();\n      cipher.type = CipherType.Identity;\n      cipher.name = this.getValueOrDefault(obj.addressName);\n      cipher.identity.address1 = this.getValueOrDefault(obj.addressFull);\n      cipher.identity.city = this.getValueOrDefault(obj.city);\n      cipher.identity.state = this.getValueOrDefault(obj.state);\n      cipher.identity.postalCode = this.getValueOrDefault(obj.zipcode);\n      cipher.identity.country = this.getValueOrDefault(obj.country);\n      if (cipher.identity.country != null) {\n        cipher.identity.country = cipher.identity.country.toUpperCase();\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processCard(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.card = new CardView();\n      cipher.type = CipherType.Card;\n      cipher.name = this.getValueOrDefault(obj.bank);\n      cipher.card.number = this.getValueOrDefault(obj.cardNumber);\n      cipher.card.brand = this.getCardBrand(cipher.card.number);\n      cipher.card.cardholderName = this.getValueOrDefault(obj.owner);\n      if (!this.isNullOrWhitespace(cipher.card.brand)) {\n        if (this.isNullOrWhitespace(cipher.name)) {\n          cipher.name = cipher.card.brand;\n        } else {\n          cipher.name += \" - \" + cipher.card.brand;\n        }\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processNote(results: any[], nameProperty: string, name: string = null) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.secureNote = new SecureNoteView();\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote.type = SecureNoteType.Generic;\n      if (name != null) {\n        cipher.name = name;\n      } else {\n        cipher.name = this.getValueOrDefault(obj[nameProperty]);\n      }\n      for (const key in obj) {\n        // eslint-disable-next-line\n        if (obj.hasOwnProperty(key) && key !== nameProperty) {\n          this.processKvp(cipher, key, obj[key].toString());\n        }\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class EncryptrCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Label, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      const text = this.getValueOrDefault(value.Text);\n      if (!this.isNullOrWhitespace(text)) {\n        if (this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes = text;\n        } else {\n          cipher.notes += \"\\n\\n\" + text;\n        }\n      }\n\n      const type = value[\"Entry Type\"];\n      if (type === \"Password\") {\n        cipher.login.username = this.getValueOrDefault(value.Username);\n        cipher.login.password = this.getValueOrDefault(value.Password);\n        cipher.login.uris = this.makeUriArray(value[\"Site URL\"]);\n      } else if (type === \"Credit Card\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value[\"Name on card\"]);\n        cipher.card.number = this.getValueOrDefault(value[\"Card Number\"]);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.CVV);\n        const expiry = this.getValueOrDefault(value.Expiry);\n        if (!this.isNullOrWhitespace(expiry)) {\n          const expParts = expiry.split(\"/\");\n          if (expParts.length > 1) {\n            cipher.card.expMonth = parseInt(expParts[0], null).toString();\n            cipher.card.expYear = (2000 + parseInt(expParts[1], null)).toString();\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let firstRow = true;\n    results.forEach((value) => {\n      if (value.length < 2 || (firstRow && (value[0] === \"Title\" || value[0] === \"title\"))) {\n        firstRow = false;\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      if (\n        value.length === 2 ||\n        (!this.containsField(value, \"username\") &&\n          !this.containsField(value, \"password\") &&\n          !this.containsField(value, \"email\") &&\n          !this.containsField(value, \"url\"))\n      ) {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n      }\n\n      if (\n        this.containsField(value, \"cardholder\") &&\n        this.containsField(value, \"number\") &&\n        this.containsField(value, \"expiry date\")\n      ) {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n      }\n\n      if (value.length > 2 && value.length % 2 === 0) {\n        for (let i = 0; i < value.length - 2; i += 2) {\n          const fieldValue: string = value[i + 2];\n          if (this.isNullOrWhitespace(fieldValue)) {\n            continue;\n          }\n\n          const fieldName: string = value[i + 1];\n          const fieldNameLower = fieldName.toLowerCase();\n\n          if (cipher.type === CipherType.Login) {\n            if (\n              fieldNameLower === \"url\" &&\n              (cipher.login.uris == null || cipher.login.uris.length === 0)\n            ) {\n              cipher.login.uris = this.makeUriArray(fieldValue);\n              continue;\n            } else if (\n              (fieldNameLower === \"username\" || fieldNameLower === \"email\") &&\n              this.isNullOrWhitespace(cipher.login.username)\n            ) {\n              cipher.login.username = fieldValue;\n              continue;\n            } else if (\n              fieldNameLower === \"password\" &&\n              this.isNullOrWhitespace(cipher.login.password)\n            ) {\n              cipher.login.password = fieldValue;\n              continue;\n            } else if (fieldNameLower === \"totp\" && this.isNullOrWhitespace(cipher.login.totp)) {\n              cipher.login.totp = fieldValue;\n              continue;\n            }\n          } else if (cipher.type === CipherType.Card) {\n            if (\n              fieldNameLower === \"cardholder\" &&\n              this.isNullOrWhitespace(cipher.card.cardholderName)\n            ) {\n              cipher.card.cardholderName = fieldValue;\n              continue;\n            } else if (fieldNameLower === \"number\" && this.isNullOrWhitespace(cipher.card.number)) {\n              cipher.card.number = fieldValue;\n              cipher.card.brand = this.getCardBrand(fieldValue);\n              continue;\n            } else if (fieldNameLower === \"cvc\" && this.isNullOrWhitespace(cipher.card.code)) {\n              cipher.card.code = fieldValue;\n              continue;\n            } else if (\n              fieldNameLower === \"expiry date\" &&\n              this.isNullOrWhitespace(cipher.card.expMonth) &&\n              this.isNullOrWhitespace(cipher.card.expYear)\n            ) {\n              if (this.setCardExpiration(cipher, fieldValue)) {\n                continue;\n              }\n            } else if (fieldNameLower === \"type\") {\n              // Skip since brand was determined from number above\n              continue;\n            }\n          }\n\n          this.processKvp(cipher, fieldName, fieldValue);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private containsField(fields: any[], name: string) {\n    if (fields == null || name == null) {\n      return false;\n    }\n    return (\n      fields.filter((f) => !this.isNullOrWhitespace(f) && f.toLowerCase() === name.toLowerCase())\n        .length > 0\n    );\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class EnpassJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.items == null || results.items.length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, string>();\n    const foldersIndexMap = new Map<string, number>();\n    const folderTree = this.buildFolderTree(results.folders);\n    this.flattenFolderTree(null, folderTree, foldersMap);\n    foldersMap.forEach((val, key) => {\n      foldersIndexMap.set(key, result.folders.length);\n      const f = new FolderView();\n      f.name = val;\n      result.folders.push(f);\n    });\n\n    results.items.forEach((item: any) => {\n      if (item.folders != null && item.folders.length > 0 && foldersIndexMap.has(item.folders[0])) {\n        result.folderRelationships.push([\n          result.ciphers.length,\n          foldersIndexMap.get(item.folders[0]),\n        ]);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(item.title);\n      cipher.favorite = item.favorite > 0;\n\n      if (item.template_type != null && item.fields != null && item.fields.length > 0) {\n        if (\n          item.template_type.indexOf(\"login.\") === 0 ||\n          item.template_type.indexOf(\"password.\") === 0\n        ) {\n          this.processLogin(cipher, item.fields);\n        } else if (item.template_type.indexOf(\"creditcard.\") === 0) {\n          this.processCard(cipher, item.fields);\n        } else if (\n          item.template_type.indexOf(\"identity.\") < 0 &&\n          item.fields.some((f: any) => f.type === \"password\" && !this.isNullOrWhitespace(f.value))\n        ) {\n          this.processLogin(cipher, item.fields);\n        } else {\n          this.processNote(cipher, item.fields);\n        }\n      }\n\n      cipher.notes += \"\\n\" + this.getValueOrDefault(item.note, \"\");\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private processLogin(cipher: CipherView, fields: any[]) {\n    const urls: string[] = [];\n    fields.forEach((field: any) => {\n      if (this.isNullOrWhitespace(field.value) || field.type === \"section\") {\n        return;\n      }\n\n      if (\n        (field.type === \"username\" || field.type === \"email\") &&\n        this.isNullOrWhitespace(cipher.login.username)\n      ) {\n        cipher.login.username = field.value;\n      } else if (field.type === \"password\" && this.isNullOrWhitespace(cipher.login.password)) {\n        cipher.login.password = field.value;\n      } else if (field.type === \"totp\" && this.isNullOrWhitespace(cipher.login.totp)) {\n        cipher.login.totp = field.value;\n      } else if (field.type === \"url\") {\n        urls.push(field.value);\n      } else {\n        this.processKvp(\n          cipher,\n          field.label,\n          field.value,\n          field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n        );\n      }\n    });\n    cipher.login.uris = this.makeUriArray(urls);\n  }\n\n  private processCard(cipher: CipherView, fields: any[]) {\n    cipher.card = new CardView();\n    cipher.type = CipherType.Card;\n    fields.forEach((field: any) => {\n      if (\n        this.isNullOrWhitespace(field.value) ||\n        field.type === \"section\" ||\n        field.type === \"ccType\"\n      ) {\n        return;\n      }\n\n      if (field.type === \"ccName\" && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n        cipher.card.cardholderName = field.value;\n      } else if (field.type === \"ccNumber\" && this.isNullOrWhitespace(cipher.card.number)) {\n        cipher.card.number = field.value;\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n      } else if (field.type === \"ccCvc\" && this.isNullOrWhitespace(cipher.card.code)) {\n        cipher.card.code = field.value;\n      } else if (field.type === \"ccExpiry\" && this.isNullOrWhitespace(cipher.card.expYear)) {\n        if (!this.setCardExpiration(cipher, field.value)) {\n          this.processKvp(\n            cipher,\n            field.label,\n            field.value,\n            field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n          );\n        }\n      } else {\n        this.processKvp(\n          cipher,\n          field.label,\n          field.value,\n          field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n        );\n      }\n    });\n  }\n\n  private processNote(cipher: CipherView, fields: any[]) {\n    fields.forEach((field: any) => {\n      if (this.isNullOrWhitespace(field.value) || field.type === \"section\") {\n        return;\n      }\n      this.processKvp(\n        cipher,\n        field.label,\n        field.value,\n        field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n      );\n    });\n  }\n\n  private buildFolderTree(folders: any[]): any[] {\n    if (folders == null) {\n      return [];\n    }\n    const folderTree: any[] = [];\n    const map = new Map<string, any>([]);\n    folders.forEach((obj: any) => {\n      map.set(obj.uuid, obj);\n      obj.children = [];\n    });\n    folders.forEach((obj: any) => {\n      if (obj.parent_uuid != null && obj.parent_uuid !== \"\" && map.has(obj.parent_uuid)) {\n        map.get(obj.parent_uuid).children.push(obj);\n      } else {\n        folderTree.push(obj);\n      }\n    });\n    return folderTree;\n  }\n\n  private flattenFolderTree(titlePrefix: string, tree: any[], map: Map<string, string>) {\n    if (tree == null) {\n      return;\n    }\n    tree.forEach((f: any) => {\n      if (f.title != null && f.title.trim() !== \"\") {\n        let title = f.title.trim();\n        if (titlePrefix != null && titlePrefix.trim() !== \"\") {\n          title = titlePrefix + \"/\" + title;\n        }\n        map.set(f.uuid, title);\n        if (f.children != null && f.children.length !== 0) {\n          this.flattenFolderTree(title, f.children, map);\n        }\n      }\n    });\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results\n      .filter((value) => {\n        return value.url !== \"chrome://FirefoxAccounts\";\n      })\n      .forEach((value) => {\n        const cipher = this.initLoginCipher();\n        const url = this.getValueOrDefault(value.url, this.getValueOrDefault(value.hostname));\n        cipher.name = this.getValueOrDefault(this.nameFromUrl(url), \"--\");\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.uris = this.makeUriArray(url);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class FSecureFskImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.data == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    for (const key in results.data) {\n      // eslint-disable-next-line\n      if (!results.data.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const value = results.data[key];\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.service);\n      cipher.notes = this.getValueOrDefault(value.notes);\n\n      if (value.style === \"website\" || value.style === \"globe\") {\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.uris = this.makeUriArray(value.url);\n      } else if (value.style === \"creditcard\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.username);\n        cipher.card.number = this.getValueOrDefault(value.creditNumber);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.creditCvv);\n        if (!this.isNullOrWhitespace(value.creditExpiry)) {\n          if (!this.setCardExpiration(cipher, value.creditExpiry)) {\n            this.processKvp(cipher, \"Expiration\", value.creditExpiry);\n          }\n        }\n        if (!this.isNullOrWhitespace(value.password)) {\n          this.processKvp(cipher, \"PIN\", value.password);\n        }\n      } else {\n        continue;\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || Object.keys(results).length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    for (const keyRing in results) {\n      if (\n        !results.hasOwnProperty(keyRing) || // eslint-disable-line\n        this.isNullOrWhitespace(keyRing) ||\n        results[keyRing].length === 0\n      ) {\n        continue;\n      }\n\n      results[keyRing].forEach((value: any) => {\n        if (\n          this.isNullOrWhitespace(value.display_name) ||\n          value.display_name.indexOf(\"http\") !== 0\n        ) {\n          return;\n        }\n\n        this.processFolder(result, keyRing);\n        const cipher = this.initLoginCipher();\n        cipher.name = value.display_name.replace(\"http://\", \"\").replace(\"https://\", \"\");\n        if (cipher.name.length > 30) {\n          cipher.name = cipher.name.substring(0, 30);\n        }\n        cipher.login.password = this.getValueOrDefault(value.secret);\n        cipher.login.uris = this.makeUriArray(value.display_name);\n\n        if (value.attributes != null) {\n          cipher.login.username =\n            value.attributes != null\n              ? this.getValueOrDefault(value.attributes.username_value)\n              : null;\n          for (const attr in value.attributes) {\n            if (\n              !value.attributes.hasOwnProperty(attr) || // eslint-disable-line\n              attr === \"username_value\" ||\n              attr === \"xdg:schema\"\n            ) {\n              continue;\n            }\n            this.processKvp(cipher, attr, value.attributes[attr]);\n          }\n        }\n\n        this.convertToNoteIfNeeded(cipher);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","export class ImportError extends Error {\n  constructor(message?: string, public passwordRequired: boolean = false) {\n    super(message);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst NotesHeader = \"Notes\\n\\n\";\nconst ApplicationsHeader = \"Applications\\n\\n\";\nconst WebsitesHeader = \"Websites\\n\\n\";\nconst Delimiter = \"\\n---\\n\";\n\nexport class KasperskyTxtImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n\n    let notesData: string;\n    let applicationsData: string;\n    let websitesData: string;\n    let workingData = this.splitNewLine(data).join(\"\\n\");\n\n    if (workingData.indexOf(NotesHeader) !== -1) {\n      const parts = workingData.split(NotesHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        notesData = parts[1];\n      }\n    }\n    if (workingData.indexOf(ApplicationsHeader) !== -1) {\n      const parts = workingData.split(ApplicationsHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        applicationsData = parts[1];\n      }\n    }\n    if (workingData.indexOf(WebsitesHeader) === 0) {\n      const parts = workingData.split(WebsitesHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        websitesData = parts[1];\n      }\n    }\n\n    const notes = this.parseDataCategory(notesData);\n    const applications = this.parseDataCategory(applicationsData);\n    const websites = this.parseDataCategory(websitesData);\n\n    notes.forEach((n) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(n.get(\"Name\"));\n      cipher.notes = this.getValueOrDefault(n.get(\"Text\"));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    websites.concat(applications).forEach((w) => {\n      const cipher = this.initLoginCipher();\n      const nameKey = w.has(\"Website name\") ? \"Website name\" : \"Application\";\n      cipher.name = this.getValueOrDefault(w.get(nameKey), \"\");\n      if (!this.isNullOrWhitespace(w.get(\"Login name\"))) {\n        if (!this.isNullOrWhitespace(cipher.name)) {\n          cipher.name += \": \";\n        }\n        cipher.name += w.get(\"Login name\");\n      }\n      cipher.notes = this.getValueOrDefault(w.get(\"Comment\"));\n      if (w.has(\"Website URL\")) {\n        cipher.login.uris = this.makeUriArray(w.get(\"Website URL\"));\n      }\n      cipher.login.username = this.getValueOrDefault(w.get(\"Login\"));\n      cipher.login.password = this.getValueOrDefault(w.get(\"Password\"));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseDataCategory(data: string): Map<string, string>[] {\n    if (this.isNullOrWhitespace(data) || data.indexOf(Delimiter) === -1) {\n      return [];\n    }\n    const items: Map<string, string>[] = [];\n    data.split(Delimiter).forEach((p) => {\n      if (p.indexOf(\"\\n\") === -1) {\n        return;\n      }\n      const item = new Map<string, string>();\n      let itemComment: string;\n      let itemCommentKey: string;\n      p.split(\"\\n\").forEach((l) => {\n        if (itemComment != null) {\n          itemComment += \"\\n\" + l;\n          return;\n        }\n        const colonIndex = l.indexOf(\":\");\n        let key: string;\n        let val: string;\n        if (colonIndex === -1) {\n          return;\n        } else {\n          key = l.substring(0, colonIndex);\n          if (l.length > colonIndex + 1) {\n            val = l.substring(colonIndex + 2);\n          }\n        }\n        if (key != null) {\n          item.set(key, val);\n        }\n        if (key === \"Comment\" || key === \"Text\") {\n          itemComment = val;\n          itemCommentKey = key;\n        }\n      });\n      if (itemComment != null && itemCommentKey != null) {\n        item.set(itemCommentKey, itemComment);\n      }\n      if (item.size === 0) {\n        return;\n      }\n      items.push(item);\n    });\n    return items;\n  }\n}\n","import { FieldType } from \"../enums/fieldType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\n  result = new ImportResult();\n\n  parse(data: string): Promise<ImportResult> {\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    const rootGroup = doc.querySelector(\"KeePassFile > Root > Group\");\n    if (rootGroup == null) {\n      this.result.errorMessage = \"Missing `KeePassFile > Root > Group` node.\";\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    this.traverse(rootGroup, true, \"\");\n\n    if (this.organization) {\n      this.moveFoldersToCollections(this.result);\n    }\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\n    const folderIndex = this.result.folders.length;\n    let groupName = groupPrefixName;\n\n    if (!isRootNode) {\n      if (groupName !== \"\") {\n        groupName += \"/\";\n      }\n      const nameEl = this.querySelectorDirectChild(node, \"Name\");\n      groupName += nameEl == null ? \"-\" : nameEl.textContent;\n      const folder = new FolderView();\n      folder.name = groupName;\n      this.result.folders.push(folder);\n    }\n\n    this.querySelectorAllDirectChild(node, \"Entry\").forEach((entry) => {\n      const cipherIndex = this.result.ciphers.length;\n\n      const cipher = this.initLoginCipher();\n      this.querySelectorAllDirectChild(entry, \"String\").forEach((entryString) => {\n        const valueEl = this.querySelectorDirectChild(entryString, \"Value\");\n        const value = valueEl != null ? valueEl.textContent : null;\n        if (this.isNullOrWhitespace(value)) {\n          return;\n        }\n        const keyEl = this.querySelectorDirectChild(entryString, \"Key\");\n        const key = keyEl != null ? keyEl.textContent : null;\n\n        if (key === \"URL\") {\n          cipher.login.uris = this.makeUriArray(value);\n        } else if (key === \"UserName\") {\n          cipher.login.username = value;\n        } else if (key === \"Password\") {\n          cipher.login.password = value;\n        } else if (key === \"otp\") {\n          cipher.login.totp = value.replace(\"key=\", \"\");\n        } else if (key === \"Title\") {\n          cipher.name = value;\n        } else if (key === \"Notes\") {\n          cipher.notes += value + \"\\n\";\n        } else {\n          let type = FieldType.Text;\n          const attrs = valueEl.attributes as any;\n          if (\n            attrs.length > 0 &&\n            attrs.ProtectInMemory != null &&\n            attrs.ProtectInMemory.value === \"True\"\n          ) {\n            type = FieldType.Hidden;\n          }\n          this.processKvp(cipher, key, value, type);\n        }\n      });\n\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n\n      if (!isRootNode) {\n        this.result.folderRelationships.push([cipherIndex, folderIndex]);\n      }\n    });\n\n    this.querySelectorAllDirectChild(node, \"Group\").forEach((group) => {\n      this.traverse(group, false, groupName);\n    });\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.isNullOrWhitespace(value.Title)) {\n        return;\n      }\n\n      value.Group =\n        !this.isNullOrWhitespace(value.Group) && value.Group.startsWith(\"Root/\")\n          ? value.Group.replace(\"Root/\", \"\")\n          : value.Group;\n      const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\n      this.processFolder(result, groupName);\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.name = this.getValueOrDefault(value.Title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../../models/domain/importResult\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 6) {\n        return;\n      }\n\n      this.processFolder(result, value[0]);\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[5]) + \"\\n\";\n      cipher.name = this.getValueOrDefault(value[1], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[2]);\n      cipher.login.password = this.getValueOrDefault(value[3]);\n      cipher.login.uris = this.makeUriArray(value[4]);\n\n      if (value.length > 7) {\n        // we have some custom fields.\n        for (let i = 7; i < value.length; i = i + 2) {\n          this.processKvp(cipher, value[i], value[i + 1]);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { IdentityView } from \"../models/view/identityView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipherIndex = result.ciphers.length;\n      let folderIndex = result.folders.length;\n      let grouping = value.grouping;\n      if (grouping != null) {\n        // eslint-disable-next-line\n        grouping = grouping.replace(/\\\\/g, \"/\").replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, \"\");\n      }\n      const hasFolder = this.getValueOrDefault(grouping, \"(none)\") !== \"(none)\";\n      let addFolder = hasFolder;\n\n      if (hasFolder) {\n        for (let i = 0; i < result.folders.length; i++) {\n          if (result.folders[i].name === grouping) {\n            addFolder = false;\n            folderIndex = i;\n            break;\n          }\n        }\n      }\n\n      const cipher = this.buildBaseCipher(value);\n      if (cipher.type === CipherType.Login) {\n        cipher.notes = this.getValueOrDefault(value.extra);\n        cipher.login = new LoginView();\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.totp = this.getValueOrDefault(value.totp);\n      } else if (cipher.type === CipherType.SecureNote) {\n        this.parseSecureNote(value, cipher);\n      } else if (cipher.type === CipherType.Card) {\n        cipher.card = this.parseCard(value);\n        cipher.notes = this.getValueOrDefault(value.notes);\n      } else if (cipher.type === CipherType.Identity) {\n        cipher.identity = this.parseIdentity(value);\n        cipher.notes = this.getValueOrDefault(value.notes);\n        if (!this.isNullOrWhitespace(value.ccnum)) {\n          // there is a card on this identity too\n          const cardCipher = this.buildBaseCipher(value);\n          cardCipher.identity = null;\n          cardCipher.type = CipherType.Card;\n          cardCipher.card = this.parseCard(value);\n          result.ciphers.push(cardCipher);\n        }\n      }\n\n      result.ciphers.push(cipher);\n\n      if (addFolder) {\n        const f = new FolderView();\n        f.name = grouping;\n        result.folders.push(f);\n      }\n      if (hasFolder) {\n        result.folderRelationships.push([cipherIndex, folderIndex]);\n      }\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private buildBaseCipher(value: any) {\n    const cipher = new CipherView();\n    // eslint-disable-next-line\n    if (value.hasOwnProperty(\"profilename\") && value.hasOwnProperty(\"profilelanguage\")) {\n      // form fill\n      cipher.favorite = false;\n      cipher.name = this.getValueOrDefault(value.profilename, \"--\");\n      cipher.type = CipherType.Card;\n\n      if (\n        !this.isNullOrWhitespace(value.title) ||\n        !this.isNullOrWhitespace(value.firstname) ||\n        !this.isNullOrWhitespace(value.lastname) ||\n        !this.isNullOrWhitespace(value.address1) ||\n        !this.isNullOrWhitespace(value.phone) ||\n        !this.isNullOrWhitespace(value.username) ||\n        !this.isNullOrWhitespace(value.email)\n      ) {\n        cipher.type = CipherType.Identity;\n      }\n    } else {\n      // site or secure note\n      cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, \"0\") === \"1\";\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.type = value.url === \"http://sn\" ? CipherType.SecureNote : CipherType.Login;\n    }\n    return cipher;\n  }\n\n  private parseCard(value: any): CardView {\n    const card = new CardView();\n    card.cardholderName = this.getValueOrDefault(value.ccname);\n    card.number = this.getValueOrDefault(value.ccnum);\n    card.code = this.getValueOrDefault(value.cccsc);\n    card.brand = this.getCardBrand(value.ccnum);\n\n    if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf(\"-\") > -1) {\n      const ccexpParts = (value.ccexp as string).split(\"-\");\n      if (ccexpParts.length > 1) {\n        card.expYear = ccexpParts[0];\n        card.expMonth = ccexpParts[1];\n        if (card.expMonth.length === 2 && card.expMonth[0] === \"0\") {\n          card.expMonth = card.expMonth[1];\n        }\n      }\n    }\n\n    return card;\n  }\n\n  private parseIdentity(value: any): IdentityView {\n    const identity = new IdentityView();\n    identity.title = this.getValueOrDefault(value.title);\n    identity.firstName = this.getValueOrDefault(value.firstname);\n    identity.middleName = this.getValueOrDefault(value.middlename);\n    identity.lastName = this.getValueOrDefault(value.lastname);\n    identity.username = this.getValueOrDefault(value.username);\n    identity.company = this.getValueOrDefault(value.company);\n    identity.ssn = this.getValueOrDefault(value.ssn);\n    identity.address1 = this.getValueOrDefault(value.address1);\n    identity.address2 = this.getValueOrDefault(value.address2);\n    identity.address3 = this.getValueOrDefault(value.address3);\n    identity.city = this.getValueOrDefault(value.city);\n    identity.state = this.getValueOrDefault(value.state);\n    identity.postalCode = this.getValueOrDefault(value.zip);\n    identity.country = this.getValueOrDefault(value.country);\n    identity.email = this.getValueOrDefault(value.email);\n    identity.phone = this.getValueOrDefault(value.phone);\n\n    if (!this.isNullOrWhitespace(identity.title)) {\n      identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\n    }\n\n    return identity;\n  }\n\n  private parseSecureNote(value: any, cipher: CipherView) {\n    const extraParts = this.splitNewLine(value.extra);\n    let processedNote = false;\n\n    if (extraParts.length) {\n      const typeParts = extraParts[0].split(\":\");\n      if (\n        typeParts.length > 1 &&\n        typeParts[0] === \"NoteType\" &&\n        (typeParts[1] === \"Credit Card\" || typeParts[1] === \"Address\")\n      ) {\n        if (typeParts[1] === \"Credit Card\") {\n          const mappedData = this.parseSecureNoteMapping<CardView>(cipher, extraParts, {\n            Number: \"number\",\n            \"Name on Card\": \"cardholderName\",\n            \"Security Code\": \"code\",\n            // LP provides date in a format like 'June,2020'\n            // Store in expMonth, then parse and modify\n            \"Expiration Date\": \"expMonth\",\n          });\n\n          if (this.isNullOrWhitespace(mappedData.expMonth) || mappedData.expMonth === \",\") {\n            // No expiration data\n            mappedData.expMonth = undefined;\n          } else {\n            const [monthString, year] = mappedData.expMonth.split(\",\");\n            // Parse month name into number\n            if (!this.isNullOrWhitespace(monthString)) {\n              const month = new Date(Date.parse(monthString.trim() + \" 1, 2012\")).getMonth() + 1;\n              if (isNaN(month)) {\n                mappedData.expMonth = undefined;\n              } else {\n                mappedData.expMonth = month.toString();\n              }\n            } else {\n              mappedData.expMonth = undefined;\n            }\n            if (!this.isNullOrWhitespace(year)) {\n              mappedData.expYear = year;\n            }\n          }\n\n          cipher.type = CipherType.Card;\n          cipher.card = mappedData;\n        } else if (typeParts[1] === \"Address\") {\n          const mappedData = this.parseSecureNoteMapping<IdentityView>(cipher, extraParts, {\n            Title: \"title\",\n            \"First Name\": \"firstName\",\n            \"Last Name\": \"lastName\",\n            \"Middle Name\": \"middleName\",\n            Company: \"company\",\n            \"Address 1\": \"address1\",\n            \"Address 2\": \"address2\",\n            \"Address 3\": \"address3\",\n            \"City / Town\": \"city\",\n            State: \"state\",\n            \"Zip / Postal Code\": \"postalCode\",\n            Country: \"country\",\n            \"Email Address\": \"email\",\n            Username: \"username\",\n          });\n          cipher.type = CipherType.Identity;\n          cipher.identity = mappedData;\n        }\n        processedNote = true;\n      }\n    }\n\n    if (!processedNote) {\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n      cipher.notes = this.getValueOrDefault(value.extra);\n    }\n  }\n\n  private parseSecureNoteMapping<T>(cipher: CipherView, extraParts: string[], map: any): T {\n    const dataObj: any = {};\n\n    let processingNotes = false;\n    extraParts.forEach((extraPart) => {\n      let key: string = null;\n      let val: string = null;\n      if (!processingNotes) {\n        if (this.isNullOrWhitespace(extraPart)) {\n          return;\n        }\n        const colonIndex = extraPart.indexOf(\":\");\n        if (colonIndex === -1) {\n          key = extraPart;\n        } else {\n          key = extraPart.substring(0, colonIndex);\n          if (extraPart.length > colonIndex) {\n            val = extraPart.substring(colonIndex + 1);\n          }\n        }\n        if (this.isNullOrWhitespace(key) || this.isNullOrWhitespace(val) || key === \"NoteType\") {\n          return;\n        }\n      }\n\n      if (processingNotes) {\n        cipher.notes += \"\\n\" + extraPart;\n      } else if (key === \"Notes\") {\n        if (!this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes += \"\\n\" + val;\n        } else {\n          cipher.notes = val;\n        }\n        processingNotes = true;\n        // eslint-disable-next-line\n      } else if (map.hasOwnProperty(key)) {\n        dataObj[map[key]] = val;\n      } else {\n        this.processKvp(cipher, key, val);\n      }\n    });\n\n    return dataObj;\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class LogMeOnceCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 4) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[2]);\n      cipher.login.password = this.getValueOrDefault(value[3]);\n      cipher.login.uris = this.makeUriArray(value[1]);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.DisplayName, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.login.username = this.getValueOrDefault(value.UserName);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.Url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 3) {\n        return;\n      }\n\n      const folderName =\n        this.getValueOrDefault(value[0], \"Unassigned\") !== \"Unassigned\" ? value[0] : null;\n      this.processFolder(result, folderName);\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[2], \"--\");\n\n      if (value[1] === \"Web Logins\" || value[1] === \"Login\") {\n        cipher.login.uris = this.makeUriArray(value[4]);\n        cipher.login.username = this.getValueOrDefault(value[5]);\n        cipher.login.password = this.getValueOrDefault(value[6]);\n        cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split(\"\\\\n\").join(\"\\n\") : null;\n      } else if (value.length > 3) {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n        for (let i = 3; i < value.length; i++) {\n          if (!this.isNullOrWhitespace(value[i])) {\n            cipher.notes += value[i] + \"\\n\";\n          }\n        }\n      }\n\n      if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\n        cipher.name = value[1] + \": \" + cipher.name;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { IdentityView } from \"../models/view/identityView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst mappedBaseColumns = [\"nickname\", \"additionalInfo\"];\nconst _mappedUserAccountColumns = new Set(\n  mappedBaseColumns.concat([\"url\", \"username\", \"password\", \"twofaSecret\"])\n);\nconst _mappedCreditCardColumns = new Set(\n  mappedBaseColumns.concat([\"cardNumber\", \"cardName\", \"exp_month\", \"exp_year\", \"cvv\"])\n);\n\nconst _mappedIdentityColumns = new Set(\n  mappedBaseColumns.concat([\n    \"title\",\n    \"firstName\",\n    \"middleName\",\n    \"lastName\",\n    \"email\",\n    \"firstAddressLine\",\n    \"secondAddressLine\",\n    \"city\",\n    \"country\",\n    \"zipCode\",\n  ])\n);\n\nconst _mappedIdCardColumns = new Set(mappedBaseColumns.concat([\"idName\", \"idNumber\", \"idCountry\"]));\n\nconst _mappedTwoFaColumns = new Set(mappedBaseColumns.concat([\"authToken\"]));\n\nconst _mappedUserNoteColumns = new Set(mappedBaseColumns.concat([\"content\"]));\n\nexport class MykiCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.nickname, \"--\");\n      cipher.notes = this.getValueOrDefault(value.additionalInfo);\n\n      if (value.url !== undefined) {\n        // Accounts\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.totp = this.getValueOrDefault(value.twofaSecret);\n\n        this.importUnmappedFields(cipher, value, _mappedUserAccountColumns);\n      } else if (value.authToken !== undefined) {\n        // TwoFA\n        cipher.login.totp = this.getValueOrDefault(value.authToken);\n\n        this.importUnmappedFields(cipher, value, _mappedTwoFaColumns);\n      } else if (value.cardNumber !== undefined) {\n        // Cards\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardName);\n        cipher.card.number = this.getValueOrDefault(value.cardNumber);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.expMonth = this.getValueOrDefault(value.exp_month);\n        cipher.card.expYear = this.getValueOrDefault(value.exp_year);\n        cipher.card.code = this.getValueOrDefault(value.cvv);\n\n        this.importUnmappedFields(cipher, value, _mappedCreditCardColumns);\n      } else if (value.firstName !== undefined) {\n        // Identities\n        cipher.identity = new IdentityView();\n        cipher.type = CipherType.Identity;\n        cipher.identity.title = this.getValueOrDefault(value.title);\n        cipher.identity.firstName = this.getValueOrDefault(value.firstName);\n        cipher.identity.middleName = this.getValueOrDefault(value.middleName);\n        cipher.identity.lastName = this.getValueOrDefault(value.lastName);\n        cipher.identity.phone = this.getValueOrDefault(value.number);\n        cipher.identity.email = this.getValueOrDefault(value.email);\n        cipher.identity.address1 = this.getValueOrDefault(value.firstAddressLine);\n        cipher.identity.address2 = this.getValueOrDefault(value.secondAddressLine);\n        cipher.identity.city = this.getValueOrDefault(value.city);\n        cipher.identity.country = this.getValueOrDefault(value.country);\n        cipher.identity.postalCode = this.getValueOrDefault(value.zipCode);\n\n        this.importUnmappedFields(cipher, value, _mappedIdentityColumns);\n      } else if (value.idType !== undefined) {\n        // IdCards\n\n        cipher.identity = new IdentityView();\n        cipher.type = CipherType.Identity;\n        this.processFullName(cipher, value.idName);\n        cipher.identity.country = this.getValueOrDefault(value.idCountry);\n\n        switch (value.idType) {\n          // case \"Driver's License\":\n          // case \"ID Card\":\n          // case \"Outdoor License\":\n          // case \"Software License\":\n          // case \"Tax Number\":\n          // case \"Bank Account\":\n          // case \"Insurance Card\":\n          // case \"Health Card\":\n          // case \"Membership\":\n          // case \"Database\":\n          // case \"Reward Program\":\n          // case \"Tour Visa\":\n          case \"Passport\":\n            cipher.identity.passportNumber = value.idNumber;\n            break;\n          case \"Social Security\":\n            cipher.identity.ssn = value.idNumber;\n            break;\n          default:\n            cipher.identity.licenseNumber = value.idNumber;\n            break;\n        }\n\n        this.importUnmappedFields(cipher, value, _mappedIdCardColumns);\n      } else if (value.content !== undefined) {\n        // Notes\n        cipher.secureNote = new SecureNoteView();\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote.type = SecureNoteType.Generic;\n        cipher.notes = this.getValueOrDefault(value.content);\n\n        this.importUnmappedFields(cipher, value, _mappedUserNoteColumns);\n      } else {\n        return;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  importUnmappedFields(cipher: CipherView, row: any, mappedValues: Set<string>) {\n    const unmappedFields = Object.keys(row).filter((x) => !mappedValues.has(x));\n    unmappedFields.forEach((key) => {\n      const item = row as any;\n      this.processKvp(cipher, key, item[key]);\n    });\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { LoginView } from \"../models/view/loginView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\ntype nodePassCsvParsed = {\n  name: string;\n  url: string;\n  username: string;\n  password: string;\n  note: string;\n  cardholdername: string;\n  cardnumber: string;\n  cvc: string;\n  expirydate: string;\n  zipcode: string;\n  folder: string;\n  full_name: string;\n  phone_number: string;\n  email: string;\n  address1: string;\n  address2: string;\n  city: string;\n  country: string;\n  state: string;\n};\n\nexport class NordPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results: nodePassCsvParsed[] = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((record) => {\n      const recordType = this.evaluateType(record);\n      if (recordType === undefined) {\n        return;\n      }\n\n      if (!this.organization) {\n        this.processFolder(result, record.folder);\n      }\n\n      const cipher = new CipherView();\n      cipher.name = this.getValueOrDefault(record.name, \"--\");\n      cipher.notes = this.getValueOrDefault(record.note);\n\n      switch (recordType) {\n        case CipherType.Login:\n          cipher.type = CipherType.Login;\n          cipher.login = new LoginView();\n          cipher.login.username = this.getValueOrDefault(record.username);\n          cipher.login.password = this.getValueOrDefault(record.password);\n          cipher.login.uris = this.makeUriArray(record.url);\n          break;\n        case CipherType.Card:\n          cipher.type = CipherType.Card;\n          cipher.card.cardholderName = this.getValueOrDefault(record.cardholdername);\n          cipher.card.number = this.getValueOrDefault(record.cardnumber);\n          cipher.card.code = this.getValueOrDefault(record.cvc);\n          cipher.card.brand = this.getCardBrand(cipher.card.number);\n          this.setCardExpiration(cipher, record.expirydate);\n          break;\n\n        case CipherType.Identity:\n          cipher.type = CipherType.Identity;\n\n          this.processFullName(cipher, this.getValueOrDefault(record.full_name));\n          cipher.identity.address1 = this.getValueOrDefault(record.address1);\n          cipher.identity.address2 = this.getValueOrDefault(record.address2);\n          cipher.identity.city = this.getValueOrDefault(record.city);\n          cipher.identity.state = this.getValueOrDefault(record.state);\n          cipher.identity.postalCode = this.getValueOrDefault(record.zipcode);\n          cipher.identity.country = this.getValueOrDefault(record.country);\n          if (cipher.identity.country != null) {\n            cipher.identity.country = cipher.identity.country.toUpperCase();\n          }\n          cipher.identity.email = this.getValueOrDefault(record.email);\n          cipher.identity.phone = this.getValueOrDefault(record.phone_number);\n          break;\n        case CipherType.SecureNote:\n          cipher.type = CipherType.SecureNote;\n          cipher.secureNote.type = SecureNoteType.Generic;\n          break;\n        default:\n          break;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private evaluateType(record: nodePassCsvParsed): CipherType {\n    if (!this.isNullOrWhitespace(record.username)) {\n      return CipherType.Login;\n    }\n\n    if (!this.isNullOrWhitespace(record.cardnumber)) {\n      return CipherType.Card;\n    }\n\n    if (!this.isNullOrWhitespace(record.full_name)) {\n      return CipherType.Identity;\n    }\n\n    if (!this.isNullOrWhitespace(record.note)) {\n      return CipherType.SecureNote;\n    }\n\n    return undefined;\n  }\n}\n","import { CipherView } from \"../../models/view/cipherView\";\n\nexport class CipherImportContext {\n  lowerProperty: string;\n  constructor(public importRecord: any, public property: string, public cipher: CipherView) {\n    this.lowerProperty = property.toLowerCase();\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { PasswordHistoryView } from \"../../models/view/passwordHistoryView\";\nimport { SecureNoteView } from \"../../models/view/secureNoteView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\n  result = new ImportResult();\n\n  parse(data: string): Promise<ImportResult> {\n    data.split(this.newLineRegex).forEach((line) => {\n      if (this.isNullOrWhitespace(line) || line[0] !== \"{\") {\n        return;\n      }\n      const item = JSON.parse(line);\n      if (item.trashed === true) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n\n      if (this.isNullOrWhitespace(item.hmac)) {\n        this.processStandardItem(item, cipher);\n      } else {\n        this.processWinOpVaultItem(item, cipher);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  private processWinOpVaultItem(item: any, cipher: CipherView) {\n    if (item.overview != null) {\n      cipher.name = this.getValueOrDefault(item.overview.title);\n      if (item.overview.URLs != null) {\n        const urls: string[] = [];\n        item.overview.URLs.forEach((url: any) => {\n          if (!this.isNullOrWhitespace(url.u)) {\n            urls.push(url.u);\n          }\n        });\n        cipher.login.uris = this.makeUriArray(urls);\n      }\n    }\n\n    if (item.details != null) {\n      if (item.details.passwordHistory != null) {\n        this.parsePasswordHistory(item.details.passwordHistory, cipher);\n      }\n      if (\n        !this.isNullOrWhitespace(item.details.ccnum) ||\n        !this.isNullOrWhitespace(item.details.cvv)\n      ) {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n      } else if (\n        !this.isNullOrWhitespace(item.details.firstname) ||\n        !this.isNullOrWhitespace(item.details.address1)\n      ) {\n        cipher.type = CipherType.Identity;\n        cipher.identity = new IdentityView();\n      }\n      if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(item.details.password)) {\n        cipher.login.password = item.details.password;\n      }\n      if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n        cipher.notes = item.details.notesPlain.split(this.newLineRegex).join(\"\\n\") + \"\\n\";\n      }\n      if (item.details.fields != null) {\n        this.parseFields(item.details.fields, cipher, \"designation\", \"value\", \"name\");\n      }\n      if (item.details.sections != null) {\n        item.details.sections.forEach((section: any) => {\n          if (section.fields != null) {\n            this.parseFields(section.fields, cipher, \"n\", \"v\", \"t\");\n          }\n        });\n      }\n    }\n  }\n\n  private processStandardItem(item: any, cipher: CipherView) {\n    cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\n    cipher.name = this.getValueOrDefault(item.title);\n\n    if (item.typeName === \"securenotes.SecureNote\") {\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n    } else if (item.typeName === \"wallet.financial.CreditCard\") {\n      cipher.type = CipherType.Card;\n      cipher.card = new CardView();\n    } else if (item.typeName === \"identities.Identity\") {\n      cipher.type = CipherType.Identity;\n      cipher.identity = new IdentityView();\n    } else {\n      cipher.login.uris = this.makeUriArray(item.location);\n    }\n\n    if (item.secureContents != null) {\n      if (item.secureContents.passwordHistory != null) {\n        this.parsePasswordHistory(item.secureContents.passwordHistory, cipher);\n      }\n      if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\n        cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join(\"\\n\") + \"\\n\";\n      }\n      if (cipher.type === CipherType.Login) {\n        if (!this.isNullOrWhitespace(item.secureContents.password)) {\n          cipher.login.password = item.secureContents.password;\n        }\n        if (item.secureContents.URLs != null) {\n          const urls: string[] = [];\n          item.secureContents.URLs.forEach((u: any) => {\n            if (!this.isNullOrWhitespace(u.url)) {\n              urls.push(u.url);\n            }\n          });\n          if (urls.length > 0) {\n            cipher.login.uris = this.makeUriArray(urls);\n          }\n        }\n      }\n      if (item.secureContents.fields != null) {\n        this.parseFields(item.secureContents.fields, cipher, \"designation\", \"value\", \"name\");\n      }\n      if (item.secureContents.sections != null) {\n        item.secureContents.sections.forEach((section: any) => {\n          if (section.fields != null) {\n            this.parseFields(section.fields, cipher, \"n\", \"v\", \"t\");\n          }\n        });\n      }\n    }\n  }\n\n  private parsePasswordHistory(items: any[], cipher: CipherView) {\n    const maxSize = items.length > 5 ? 5 : items.length;\n    cipher.passwordHistory = items\n      .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n      .sort((a, b) => b.time - a.time)\n      .slice(0, maxSize)\n      .map((h: any) => {\n        const ph = new PasswordHistoryView();\n        ph.password = h.value;\n        ph.lastUsedDate = new Date((\"\" + h.time).length >= 13 ? h.time : h.time * 1000);\n        return ph;\n      });\n  }\n\n  private parseFields(\n    fields: any[],\n    cipher: CipherView,\n    designationKey: string,\n    valueKey: string,\n    nameKey: string\n  ) {\n    fields.forEach((field: any) => {\n      if (field[valueKey] == null || field[valueKey].toString().trim() === \"\") {\n        return;\n      }\n\n      // TODO: when date FieldType exists, store this as a date field type instead of formatted Text if k is 'date'\n      const fieldValue =\n        field.k === \"date\"\n          ? new Date(field[valueKey] * 1000).toUTCString()\n          : field[valueKey].toString();\n      const fieldDesignation =\n        field[designationKey] != null ? field[designationKey].toString() : null;\n\n      if (cipher.type === CipherType.Login) {\n        if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === \"username\") {\n          cipher.login.username = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.login.password) &&\n          fieldDesignation === \"password\"\n        ) {\n          cipher.login.password = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.login.totp) &&\n          fieldDesignation != null &&\n          fieldDesignation.startsWith(\"TOTP_\")\n        ) {\n          cipher.login.totp = fieldValue;\n          return;\n        }\n      } else if (cipher.type === CipherType.Card) {\n        if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === \"ccnum\") {\n          cipher.card.number = fieldValue;\n          cipher.card.brand = this.getCardBrand(fieldValue);\n          return;\n        } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === \"cvv\") {\n          cipher.card.code = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.card.cardholderName) &&\n          fieldDesignation === \"cardholder\"\n        ) {\n          cipher.card.cardholderName = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.card.expiration) &&\n          fieldDesignation === \"expiry\" &&\n          fieldValue.length === 6\n        ) {\n          cipher.card.expMonth = (fieldValue as string).substr(4, 2);\n          if (cipher.card.expMonth[0] === \"0\") {\n            cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n          }\n          cipher.card.expYear = (fieldValue as string).substr(0, 4);\n          return;\n        } else if (fieldDesignation === \"type\") {\n          // Skip since brand was determined from number above\n          return;\n        }\n      } else if (cipher.type === CipherType.Identity) {\n        const identity = cipher.identity;\n        if (this.isNullOrWhitespace(identity.firstName) && fieldDesignation === \"firstname\") {\n          identity.firstName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.lastName) && fieldDesignation === \"lastname\") {\n          identity.lastName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.middleName) && fieldDesignation === \"initial\") {\n          identity.middleName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.phone) && fieldDesignation === \"defphone\") {\n          identity.phone = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.company) && fieldDesignation === \"company\") {\n          identity.company = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.email) && fieldDesignation === \"email\") {\n          identity.email = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.username) && fieldDesignation === \"username\") {\n          identity.username = fieldValue;\n          return;\n        } else if (fieldDesignation === \"address\") {\n          // fieldValue is an object casted into a string, so access the plain value instead\n          const { street, city, country, zip } = field[valueKey];\n          identity.address1 = this.getValueOrDefault(street);\n          identity.city = this.getValueOrDefault(city);\n          if (!this.isNullOrWhitespace(country)) {\n            identity.country = country.toUpperCase();\n          }\n          identity.postalCode = this.getValueOrDefault(zip);\n          return;\n        }\n      }\n\n      const fieldName = this.isNullOrWhitespace(field[nameKey]) ? \"no_name\" : field[nameKey];\n      if (\n        fieldName === \"password\" &&\n        cipher.passwordHistory != null &&\n        cipher.passwordHistory.some((h) => h.password === fieldValue)\n      ) {\n        return;\n      }\n\n      const fieldType = field.k === \"concealed\" ? FieldType.Hidden : FieldType.Text;\n      this.processKvp(cipher, fieldName, fieldValue, fieldType);\n    });\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { LoginView } from \"../../models/view/loginView\";\nimport { PasswordHistoryView } from \"../../models/view/passwordHistoryView\";\nimport { SecureNoteView } from \"../../models/view/secureNoteView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport {\n  CategoryEnum,\n  Details,\n  ExportData,\n  FieldsEntity,\n  Item,\n  LoginFieldTypeEnum,\n  Overview,\n  PasswordHistoryEntity,\n  SectionsEntity,\n  UrlsEntity,\n  Value,\n  VaultsEntity,\n} from \"./types/onepassword1PuxImporterTypes\";\n\nexport class OnePassword1PuxImporter extends BaseImporter implements Importer {\n  result = new ImportResult();\n\n  parse(data: string): Promise<ImportResult> {\n    const exportData: ExportData = JSON.parse(data);\n\n    const account = exportData.accounts[0];\n    // TODO Add handling of multiple vaults\n    // const personalVaults = account.vaults[0].filter((v) => v.attrs.type === VaultAttributeTypeEnum.Personal);\n    account.vaults.forEach((vault: VaultsEntity) => {\n      vault.items.forEach((item: Item) => {\n        if (item.trashed === true) {\n          return;\n        }\n\n        const cipher = this.initLoginCipher();\n\n        const category = item.categoryUuid as CategoryEnum;\n        switch (category) {\n          case CategoryEnum.Login:\n          case CategoryEnum.Database:\n          case CategoryEnum.Password:\n          case CategoryEnum.WirelessRouter:\n          case CategoryEnum.Server:\n          case CategoryEnum.API_Credential:\n            cipher.type = CipherType.Login;\n            cipher.login = new LoginView();\n            break;\n          case CategoryEnum.CreditCard:\n          case CategoryEnum.BankAccount:\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n            break;\n          case CategoryEnum.SecureNote:\n          case CategoryEnum.SoftwareLicense:\n          case CategoryEnum.EmailAccount:\n          case CategoryEnum.MedicalRecord:\n            // case CategoryEnum.Document:\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n            break;\n          case CategoryEnum.Identity:\n          case CategoryEnum.DriversLicense:\n          case CategoryEnum.OutdoorLicense:\n          case CategoryEnum.Membership:\n          case CategoryEnum.Passport:\n          case CategoryEnum.RewardsProgram:\n          case CategoryEnum.SocialSecurityNumber:\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n            break;\n          default:\n            break;\n        }\n\n        cipher.favorite = item.favIndex === 1 ? true : false;\n\n        this.processOverview(item.overview, cipher);\n\n        this.processLoginFields(item, cipher);\n\n        this.processDetails(category, item.details, cipher);\n\n        this.parsePasswordHistory(item.details.passwordHistory, cipher);\n\n        this.processSections(category, item.details.sections, cipher);\n\n        if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n          cipher.notes = item.details.notesPlain.split(this.newLineRegex).join(\"\\n\") + \"\\n\";\n        }\n\n        this.convertToNoteIfNeeded(cipher);\n        this.cleanupCipher(cipher);\n        this.result.ciphers.push(cipher);\n      });\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(this.result);\n    }\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  private processOverview(overview: Overview, cipher: CipherView) {\n    if (overview == null) {\n      return;\n    }\n\n    cipher.name = this.getValueOrDefault(overview.title);\n\n    if (overview.urls != null) {\n      const urls: string[] = [];\n      overview.urls.forEach((url: UrlsEntity) => {\n        if (!this.isNullOrWhitespace(url.url)) {\n          urls.push(url.url);\n        }\n      });\n      cipher.login.uris = this.makeUriArray(urls);\n    }\n\n    if (overview.tags != null && overview.tags.length > 0) {\n      const folderName = this.capitalize(overview.tags[0]);\n      this.processFolder(this.result, folderName);\n    }\n  }\n\n  private capitalize(inputString: string): string {\n    return inputString.trim().replace(/\\w\\S*/g, (w) => w.replace(/^\\w/, (c) => c.toUpperCase()));\n  }\n\n  private processLoginFields(item: Item, cipher: CipherView) {\n    if (item.details == null) {\n      return;\n    }\n\n    if (item.details.loginFields == null || item.details.loginFields.length === 0) {\n      return;\n    }\n\n    item.details.loginFields.forEach((loginField) => {\n      if (loginField.designation === \"username\" && loginField.value !== \"\") {\n        cipher.type = CipherType.Login;\n        cipher.login.username = loginField.value;\n        return;\n      }\n\n      if (loginField.designation === \"password\" && loginField.value !== \"\") {\n        cipher.type = CipherType.Login;\n        cipher.login.password = loginField.value;\n        return;\n      }\n\n      let fieldValue = loginField.value;\n      let fieldType: FieldType = FieldType.Text;\n      switch (loginField.fieldType) {\n        case LoginFieldTypeEnum.Password:\n          fieldType = FieldType.Hidden;\n          break;\n        case LoginFieldTypeEnum.CheckBox:\n          fieldValue = loginField.value !== \"\" ? \"true\" : \"false\";\n          fieldType = FieldType.Boolean;\n          break;\n        default:\n          break;\n      }\n      this.processKvp(cipher, loginField.name, fieldValue, fieldType);\n    });\n  }\n\n  private processDetails(category: CategoryEnum, details: Details, cipher: CipherView) {\n    if (category !== CategoryEnum.Password) {\n      return;\n    }\n\n    if (details == null) {\n      return;\n    }\n    cipher.login.password = details.password;\n  }\n\n  private processSections(category: CategoryEnum, sections: SectionsEntity[], cipher: CipherView) {\n    if (sections == null || sections.length === 0) {\n      return;\n    }\n\n    sections.forEach((section: SectionsEntity) => {\n      if (section.fields == null) {\n        return;\n      }\n\n      this.parseSectionFields(category, section.fields, cipher);\n    });\n  }\n\n  private parseSectionFields(category: CategoryEnum, fields: FieldsEntity[], cipher: CipherView) {\n    fields.forEach((field: FieldsEntity) => {\n      const valueKey = Object.keys(field.value)[0];\n      const anyField = field as any;\n\n      if (\n        anyField.value == null ||\n        anyField.value[valueKey] == null ||\n        anyField.value[valueKey] === \"\"\n      ) {\n        return;\n      }\n\n      const fieldName = this.getFieldName(field.id, field.title);\n      const fieldValue = this.extractValue(field.value, valueKey);\n\n      if (cipher.type === CipherType.Login) {\n        if (this.fillLogin(field, fieldValue, cipher)) {\n          return;\n        }\n\n        switch (category) {\n          case CategoryEnum.Login:\n          case CategoryEnum.Database:\n          case CategoryEnum.EmailAccount:\n          case CategoryEnum.WirelessRouter:\n            break;\n\n          case CategoryEnum.Server:\n            if (this.isNullOrWhitespace(cipher.login.uri) && field.id === \"url\") {\n              cipher.login.uris = this.makeUriArray(fieldValue);\n              return;\n            }\n            break;\n\n          case CategoryEnum.API_Credential:\n            if (this.fillApiCredentials(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          default:\n            break;\n        }\n      } else if (cipher.type === CipherType.Card) {\n        if (this.fillCreditCard(field, fieldValue, cipher)) {\n          return;\n        }\n\n        if (category === CategoryEnum.BankAccount) {\n          if (this.fillBankAccount(field, fieldValue, cipher)) {\n            return;\n          }\n        }\n      } else if (cipher.type === CipherType.Identity) {\n        if (this.fillIdentity(field, fieldValue, cipher)) {\n          return;\n        }\n        if (valueKey === \"address\") {\n          // fieldValue is an object casted into a string, so access the plain value instead\n          const { street, city, country, zip, state } = field.value.address;\n          cipher.identity.address1 = this.getValueOrDefault(street);\n          cipher.identity.city = this.getValueOrDefault(city);\n          if (!this.isNullOrWhitespace(country)) {\n            cipher.identity.country = country.toUpperCase();\n          }\n          cipher.identity.postalCode = this.getValueOrDefault(zip);\n          cipher.identity.state = this.getValueOrDefault(state);\n          return;\n        }\n\n        switch (category) {\n          case CategoryEnum.Identity:\n            break;\n          case CategoryEnum.DriversLicense:\n            if (this.fillDriversLicense(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.OutdoorLicense:\n            if (this.fillOutdoorLicense(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.Membership:\n            if (this.fillMembership(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.Passport:\n            if (this.fillPassport(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.RewardsProgram:\n            if (this.fillRewardsProgram(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.SocialSecurityNumber:\n            if (this.fillSSN(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          default:\n            break;\n        }\n      }\n\n      // Do not include a password field if it's already in the history\n      if (\n        field.title === \"password\" &&\n        cipher.passwordHistory != null &&\n        cipher.passwordHistory.some((h) => h.password === fieldValue)\n      ) {\n        return;\n      }\n\n      // TODO ?? If one of the fields is marked as guarded, then activate Password-Reprompt for the entire item\n      if (field.guarded && cipher.reprompt === CipherRepromptType.None) {\n        cipher.reprompt = CipherRepromptType.Password;\n      }\n\n      const fieldType = valueKey === \"concealed\" ? FieldType.Hidden : FieldType.Text;\n      this.processKvp(cipher, fieldName, fieldValue, fieldType);\n    });\n  }\n\n  private getFieldName(id: string, title: string): string {\n    if (this.isNullOrWhitespace(title)) {\n      return id;\n    }\n\n    // Naive approach of checking if the fields id is usable\n    if (id.length > 25 && RegExp(/[0-9]{2}[A-Z]{2}/, \"i\").test(id)) {\n      return title;\n    }\n    return id;\n  }\n\n  private extractValue(value: Value, valueKey: string): string {\n    if (valueKey === \"date\") {\n      return new Date(value.date * 1000).toUTCString();\n    }\n\n    if (valueKey === \"monthYear\") {\n      return value.monthYear.toString();\n    }\n\n    return (value as any)[valueKey];\n  }\n\n  private fillLogin(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    const fieldName = this.getFieldName(field.id, field.title);\n\n    if (this.isNullOrWhitespace(cipher.login.username) && fieldName === \"username\") {\n      cipher.login.username = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.login.password) && fieldName === \"password\") {\n      cipher.login.password = fieldValue;\n      return true;\n    }\n\n    if (\n      this.isNullOrWhitespace(cipher.login.totp) &&\n      field.id != null &&\n      field.id.startsWith(\"TOTP_\")\n    ) {\n      cipher.login.totp = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillApiCredentials(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    const fieldName = this.getFieldName(field.id, field.title);\n\n    if (this.isNullOrWhitespace(cipher.login.password) && fieldName === \"credential\") {\n      cipher.login.password = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.login.uri) && fieldName === \"hostname\") {\n      cipher.login.uris = this.makeUriArray(fieldValue);\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillCreditCard(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.card.number) && field.id === \"ccnum\") {\n      cipher.card.number = fieldValue;\n      cipher.card.brand = this.getCardBrand(fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.card.code) && field.id === \"cvv\") {\n      cipher.card.code = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.card.cardholderName) && field.id === \"cardholder\") {\n      cipher.card.cardholderName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.card.expiration) && field.id === \"expiry\") {\n      const monthYear: string = fieldValue.toString().trim();\n      cipher.card.expMonth = monthYear.substring(4, 6);\n      if (cipher.card.expMonth[0] === \"0\") {\n        cipher.card.expMonth = cipher.card.expMonth.substring(1, 2);\n      }\n      cipher.card.expYear = monthYear.substring(0, 4);\n      return true;\n    }\n\n    if (field.id === \"type\") {\n      // Skip since brand was determined from number above\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillBankAccount(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.card.cardholderName) && field.id === \"owner\") {\n      cipher.card.cardholderName = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillIdentity(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"firstname\") {\n      cipher.identity.firstName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.lastName) && field.id === \"lastname\") {\n      cipher.identity.lastName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.middleName) && field.id === \"initial\") {\n      cipher.identity.middleName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.phone) && field.id === \"defphone\") {\n      cipher.identity.phone = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.company) && field.id === \"company\") {\n      cipher.identity.company = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.email) && field.id === \"email\") {\n      cipher.identity.email = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.username) && field.id === \"username\") {\n      cipher.identity.username = fieldValue;\n      return true;\n    }\n    return false;\n  }\n\n  private fillDriversLicense(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"fullname\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.address1) && field.id === \"address\") {\n      cipher.identity.address1 = fieldValue;\n      return true;\n    }\n\n    // TODO ISO code\n    if (this.isNullOrWhitespace(cipher.identity.country) && field.id === \"country\") {\n      cipher.identity.country = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.state) && field.id === \"state\") {\n      cipher.identity.state = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.licenseNumber) && field.id === \"number\") {\n      cipher.identity.licenseNumber = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillOutdoorLicense(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    // TODO ISO code\n    if (this.isNullOrWhitespace(cipher.identity.country) && field.id === \"country\") {\n      cipher.identity.country = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.state) && field.id === \"state\") {\n      cipher.identity.state = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillMembership(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"member_name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.company) && field.id === \"org_name\") {\n      cipher.identity.company = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.phone) && field.id === \"phone\") {\n      cipher.identity.phone = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillPassport(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"fullname\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    // TODO Iso\n    if (this.isNullOrWhitespace(cipher.identity.country) && field.id === \"issuing_country\") {\n      cipher.identity.country = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.passportNumber) && field.id === \"number\") {\n      cipher.identity.passportNumber = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillRewardsProgram(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"member_name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.company) && field.id === \"company_name\") {\n      cipher.identity.company = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillSSN(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.ssn) && field.id === \"number\") {\n      cipher.identity.ssn = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private parsePasswordHistory(historyItems: PasswordHistoryEntity[], cipher: CipherView) {\n    if (historyItems == null || historyItems.length === 0) {\n      return;\n    }\n\n    const maxSize = historyItems.length > 5 ? 5 : historyItems.length;\n    cipher.passwordHistory = historyItems\n      .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n      .sort((a, b) => b.time - a.time)\n      .slice(0, maxSize)\n      .map((h: any) => {\n        const ph = new PasswordHistoryView();\n        ph.password = h.value;\n        ph.lastUsedDate = new Date((\"\" + h.time).length >= 13 ? h.time : h.time * 1000);\n        return ph;\n      });\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport { CipherImportContext } from \"./cipherImportContext\";\n\nexport const IgnoredProperties = [\n  \"ainfo\",\n  \"autosubmit\",\n  \"notesplain\",\n  \"ps\",\n  \"scope\",\n  \"tags\",\n  \"title\",\n  \"uuid\",\n  \"notes\",\n];\n\nexport abstract class OnePasswordCsvImporter extends BaseImporter implements Importer {\n  protected loginPropertyParsers = [\n    this.setLoginUsername,\n    this.setLoginPassword,\n    this.setLoginUris,\n  ];\n  protected creditCardPropertyParsers = [\n    this.setCreditCardNumber,\n    this.setCreditCardVerification,\n    this.setCreditCardCardholderName,\n    this.setCreditCardExpiry,\n  ];\n  protected identityPropertyParsers = [\n    this.setIdentityFirstName,\n    this.setIdentityInitial,\n    this.setIdentityLastName,\n    this.setIdentityUserName,\n    this.setIdentityEmail,\n    this.setIdentityPhone,\n    this.setIdentityCompany,\n  ];\n\n  abstract setCipherType(value: any, cipher: CipherView): void;\n\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true, {\n      quoteChar: '\"',\n      escapeChar: \"\\\\\",\n    });\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.isNullOrWhitespace(this.getProp(value, \"title\"))) {\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(this.getProp(value, \"title\"), \"--\");\n\n      this.setNotes(value, cipher);\n\n      this.setCipherType(value, cipher);\n\n      let altUsername: string = null;\n      for (const property in value) {\n        // eslint-disable-next-line\n        if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n          continue;\n        }\n\n        const context = new CipherImportContext(value, property, cipher);\n        if (cipher.type === CipherType.Login && this.setKnownLoginValue(context)) {\n          continue;\n        } else if (cipher.type === CipherType.Card && this.setKnownCreditCardValue(context)) {\n          continue;\n        } else if (cipher.type === CipherType.Identity && this.setKnownIdentityValue(context)) {\n          continue;\n        }\n\n        altUsername = this.setUnknownValue(context, altUsername);\n      }\n\n      if (\n        cipher.type === CipherType.Login &&\n        !this.isNullOrWhitespace(altUsername) &&\n        this.isNullOrWhitespace(cipher.login.username) &&\n        altUsername.indexOf(\"://\") === -1\n      ) {\n        cipher.login.username = altUsername;\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  protected getProp(obj: any, name: string): any {\n    const lowerObj = Object.entries(obj).reduce((agg: any, entry: [string, any]) => {\n      agg[entry[0].toLowerCase()] = entry[1];\n      return agg;\n    }, {});\n    return lowerObj[name.toLowerCase()];\n  }\n\n  protected getPropByRegexp(obj: any, regexp: RegExp): any {\n    const matchingKeys = Object.keys(obj).reduce((agg: string[], key: string) => {\n      if (key.match(regexp)) {\n        agg.push(key);\n      }\n      return agg;\n    }, []);\n    if (matchingKeys.length === 0) {\n      return null;\n    } else {\n      return obj[matchingKeys[0]];\n    }\n  }\n\n  protected getPropIncluding(obj: any, name: string): any {\n    const includesMap = Object.keys(obj).reduce((agg: string[], entry: string) => {\n      if (entry.toLowerCase().includes(name.toLowerCase())) {\n        agg.push(entry);\n      }\n      return agg;\n    }, []);\n    if (includesMap.length === 0) {\n      return null;\n    } else {\n      return obj[includesMap[0]];\n    }\n  }\n\n  protected setNotes(importRecord: any, cipher: CipherView) {\n    cipher.notes =\n      this.getValueOrDefault(this.getProp(importRecord, \"notesPlain\"), \"\") +\n      \"\\n\" +\n      this.getValueOrDefault(this.getProp(importRecord, \"notes\"), \"\") +\n      \"\\n\";\n    cipher.notes.trim();\n  }\n\n  protected setKnownLoginValue(context: CipherImportContext): boolean {\n    return this.loginPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setKnownCreditCardValue(context: CipherImportContext): boolean {\n    return this.creditCardPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setKnownIdentityValue(context: CipherImportContext): boolean {\n    return this.identityPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setUnknownValue(context: CipherImportContext, altUsername: string): string {\n    if (\n      IgnoredProperties.indexOf(context.lowerProperty) === -1 &&\n      !context.lowerProperty.startsWith(\"section:\") &&\n      !context.lowerProperty.startsWith(\"section \")\n    ) {\n      if (altUsername == null && context.lowerProperty === \"email\") {\n        return context.importRecord[context.property];\n      } else if (\n        context.lowerProperty === \"created date\" ||\n        context.lowerProperty === \"modified date\"\n      ) {\n        const readableDate = new Date(\n          parseInt(context.importRecord[context.property], 10) * 1000\n        ).toUTCString();\n        this.processKvp(context.cipher, \"1Password \" + context.property, readableDate);\n        return null;\n      }\n      if (\n        context.lowerProperty.includes(\"password\") ||\n        context.lowerProperty.includes(\"key\") ||\n        context.lowerProperty.includes(\"secret\")\n      ) {\n        this.processKvp(\n          context.cipher,\n          context.property,\n          context.importRecord[context.property],\n          FieldType.Hidden\n        );\n      } else {\n        this.processKvp(context.cipher, context.property, context.importRecord[context.property]);\n      }\n    }\n    return null;\n  }\n\n  protected setIdentityFirstName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.firstName) &&\n      context.lowerProperty.includes(\"first name\")\n    ) {\n      context.cipher.identity.firstName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityInitial(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.middleName) &&\n      context.lowerProperty.includes(\"initial\")\n    ) {\n      context.cipher.identity.middleName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityLastName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.lastName) &&\n      context.lowerProperty.includes(\"last name\")\n    ) {\n      context.cipher.identity.lastName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityUserName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.username) &&\n      context.lowerProperty.includes(\"username\")\n    ) {\n      context.cipher.identity.username = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityCompany(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.company) &&\n      context.lowerProperty.includes(\"company\")\n    ) {\n      context.cipher.identity.company = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityPhone(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.phone) &&\n      context.lowerProperty.includes(\"default phone\")\n    ) {\n      context.cipher.identity.phone = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityEmail(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.email) &&\n      context.lowerProperty.includes(\"email\")\n    ) {\n      context.cipher.identity.email = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardNumber(context: CipherImportContext): boolean {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.number) &&\n      context.lowerProperty.includes(\"number\")\n    ) {\n      context.cipher.card.number = context.importRecord[context.property];\n      context.cipher.card.brand = this.getCardBrand(context.cipher.card.number);\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardVerification(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.code) &&\n      context.lowerProperty.includes(\"verification number\")\n    ) {\n      context.cipher.card.code = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardCardholderName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.cardholderName) &&\n      context.lowerProperty.includes(\"cardholder name\")\n    ) {\n      context.cipher.card.cardholderName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardExpiry(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.expiration) &&\n      context.lowerProperty.includes(\"expiry date\") &&\n      context.importRecord[context.property].length === 7\n    ) {\n      context.cipher.card.expMonth = (context.importRecord[context.property] as string).substr(\n        0,\n        2\n      );\n      if (context.cipher.card.expMonth[0] === \"0\") {\n        context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n      }\n      context.cipher.card.expYear = (context.importRecord[context.property] as string).substr(3, 4);\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginPassword(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.login.password) &&\n      context.lowerProperty === \"password\"\n    ) {\n      context.cipher.login.password = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginUsername(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.login.username) &&\n      context.lowerProperty === \"username\"\n    ) {\n      context.cipher.login.username = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginUris(context: CipherImportContext) {\n    if (\n      (context.cipher.login.uris == null || context.cipher.login.uris.length === 0) &&\n      context.lowerProperty === \"urls\"\n    ) {\n      const urls = context.importRecord[context.property].split(this.newLineRegex);\n      context.cipher.login.uris = this.makeUriArray(urls);\n      return true;\n    } else if (context.lowerProperty === \"url\") {\n      if (context.cipher.login.uris == null) {\n        context.cipher.login.uris = [];\n      }\n      context.cipher.login.uris.concat(this.makeUriArray(context.importRecord[context.property]));\n      return true;\n    }\n    return false;\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { Importer } from \"../importer\";\n\nimport { IgnoredProperties, OnePasswordCsvImporter } from \"./onepasswordCsvImporter\";\n\nexport class OnePasswordMacCsvImporter extends OnePasswordCsvImporter implements Importer {\n  setCipherType(value: any, cipher: CipherView) {\n    const onePassType = this.getValueOrDefault(this.getProp(value, \"type\"), \"Login\");\n    switch (onePassType) {\n      case \"Credit Card\":\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        IgnoredProperties.push(\"type\");\n        break;\n      case \"Identity\":\n        cipher.type = CipherType.Identity;\n        cipher.identity = new IdentityView();\n        IgnoredProperties.push(\"type\");\n        break;\n      case \"Login\":\n      case \"Secure Note\":\n        IgnoredProperties.push(\"type\");\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { LoginView } from \"../../models/view/loginView\";\nimport { Importer } from \"../importer\";\n\nimport { CipherImportContext } from \"./cipherImportContext\";\nimport { OnePasswordCsvImporter } from \"./onepasswordCsvImporter\";\n\nexport class OnePasswordWinCsvImporter extends OnePasswordCsvImporter implements Importer {\n  constructor() {\n    super();\n    this.identityPropertyParsers.push(this.setIdentityAddress);\n  }\n\n  setCipherType(value: any, cipher: CipherView) {\n    cipher.type = CipherType.Login;\n    cipher.login = new LoginView();\n\n    if (\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: number/i)) &&\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: expiry date/i))\n    ) {\n      cipher.type = CipherType.Card;\n      cipher.card = new CardView();\n    }\n\n    if (\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: first name/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: initial/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: last name/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /internet \\d+: email/i))\n    ) {\n      cipher.type = CipherType.Identity;\n      cipher.identity = new IdentityView();\n    }\n  }\n\n  setIdentityAddress(context: CipherImportContext) {\n    if (context.lowerProperty.match(/address \\d+: address/i)) {\n      this.processKvp(context.cipher, \"address\", context.importRecord[context.property]);\n      return true;\n    }\n    return false;\n  }\n\n  setCreditCardExpiry(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.expiration) &&\n      context.lowerProperty.includes(\"expiry date\")\n    ) {\n      const expSplit = (context.importRecord[context.property] as string).split(\"/\");\n      context.cipher.card.expMonth = expSplit[0];\n      if (context.cipher.card.expMonth[0] === \"0\" && context.cipher.card.expMonth.length === 2) {\n        context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n      }\n      context.cipher.card.expYear = expSplit[2].length > 4 ? expSplit[2].substr(0, 4) : expSplit[2];\n      return true;\n    }\n    return false;\n  }\n}\n","export interface ExportData {\n  accounts?: AccountsEntity[] | null;\n}\nexport interface AccountsEntity {\n  attrs: AccountAttributes;\n  vaults?: VaultsEntity[] | null;\n}\nexport interface AccountAttributes {\n  accountName: string;\n  name: string;\n  avatar: string;\n  email: string;\n  uuid: string;\n  domain: string;\n}\nexport interface VaultsEntity {\n  attrs: VaultAttributes;\n  items?: Item[] | null;\n}\nexport interface VaultAttributes {\n  uuid: string;\n  desc: string;\n  avatar: string;\n  name: string;\n  type: string;\n}\n\nexport enum CategoryEnum {\n  Login = \"001\",\n  CreditCard = \"002\",\n  SecureNote = \"003\",\n  Identity = \"004\",\n  Password = \"005\",\n  Document = \"006\",\n  SoftwareLicense = \"100\",\n  BankAccount = \"101\",\n  Database = \"102\",\n  DriversLicense = \"103\",\n  OutdoorLicense = \"104\",\n  Membership = \"105\",\n  Passport = \"106\",\n  RewardsProgram = \"107\",\n  SocialSecurityNumber = \"108\",\n  WirelessRouter = \"109\",\n  Server = \"110\",\n  EmailAccount = \"111\",\n  API_Credential = \"112\",\n  MedicalRecord = \"113\",\n}\n\nexport interface Item {\n  uuid: string;\n  favIndex: number;\n  createdAt: number;\n  updatedAt: number;\n  trashed?: boolean;\n  categoryUuid: string;\n  details: Details;\n  overview: Overview;\n}\nexport interface Details {\n  loginFields?: (LoginFieldsEntity | null)[] | null;\n  notesPlain?: string | null;\n  sections?: (SectionsEntity | null)[] | null;\n  passwordHistory?: (PasswordHistoryEntity | null)[] | null;\n  documentAttributes?: DocumentAttributes | null;\n  password?: string | null;\n}\n\nexport enum LoginFieldTypeEnum {\n  TextOrHtml = \"T\",\n  EmailAddress = \"E\",\n  URL = \"U\",\n  Number = \"N\",\n  Password = \"P\",\n  TextArea = \"A\",\n  PhoneNumber = \"T\",\n  CheckBox = \"C\",\n}\nexport interface LoginFieldsEntity {\n  value: string;\n  id: string;\n  name: string;\n  fieldType: LoginFieldTypeEnum | string;\n  designation?: string | null;\n}\nexport interface SectionsEntity {\n  title: string;\n  name?: string | null;\n  fields?: FieldsEntity[] | null;\n}\nexport interface FieldsEntity {\n  title: string;\n  id: string;\n  value: Value;\n  indexAtSource: number;\n  guarded: boolean;\n  multiline: boolean;\n  dontGenerate: boolean;\n  placeholder?: string;\n  inputTraits: InputTraits;\n  clipboardFilter?: string | null;\n}\nexport interface Value {\n  totp?: string | null;\n  date?: number | null;\n  string?: string | null;\n  concealed?: string | null;\n  email?: string | null;\n  phone?: string | null;\n  menu?: string | null;\n  gender?: string | null;\n  monthYear?: number | null;\n  url?: string | null;\n  address?: Address | null;\n  creditCardType?: string | null;\n  creditCardNumber?: string | null;\n  reference?: string | null;\n}\nexport interface Address {\n  street: string;\n  city: string;\n  country: string;\n  zip: string;\n  state: string;\n}\nexport interface InputTraits {\n  keyboard: string;\n  correction: string;\n  capitalization: string;\n}\nexport interface PasswordHistoryEntity {\n  value: string;\n  time: number;\n}\nexport interface DocumentAttributes {\n  fileName: string;\n  documentId: string;\n  decryptedSize: number;\n}\nexport interface Overview {\n  subtitle: string;\n  title: string;\n  url: string;\n  urls?: UrlsEntity[] | null;\n  ps?: number | null;\n  pbe?: number | null;\n  pgrng?: boolean | null;\n  tags?: string[] | null;\n}\nexport interface UrlsEntity {\n  label: string;\n  url: string;\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let headers: string[] = null;\n    results.forEach((value) => {\n      if (headers == null) {\n        headers = value.map((v: string) => v);\n        return;\n      }\n\n      if (value.length < 2 || value.length !== headers.length) {\n        return;\n      }\n\n      if (!this.isNullOrWhitespace(value[1])) {\n        if (this.organization) {\n          const tags = (value[1] as string).split(\",\");\n          tags.forEach((tag) => {\n            tag = tag.trim();\n            let addCollection = true;\n            let collectionIndex = result.collections.length;\n\n            for (let i = 0; i < result.collections.length; i++) {\n              if (result.collections[i].name === tag) {\n                addCollection = false;\n                collectionIndex = i;\n                break;\n              }\n            }\n\n            if (addCollection) {\n              const collection = new CollectionView();\n              collection.name = tag;\n              result.collections.push(collection);\n            }\n\n            result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n          });\n        } else {\n          const tags = (value[1] as string).split(\",\");\n          const tag = tags.length > 0 ? tags[0].trim() : null;\n          this.processFolder(result, tag);\n        }\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      for (let i = 2; i < value.length; i++) {\n        const header = headers[i].trim().toLowerCase();\n        if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\n          continue;\n        }\n\n        if (this.usernameFieldNames.indexOf(header) > -1) {\n          cipher.login.username = value[i];\n        } else if (this.passwordFieldNames.indexOf(header) > -1) {\n          cipher.login.password = value[i];\n        } else if (this.uriFieldNames.indexOf(header) > -1) {\n          cipher.login.uris = this.makeUriArray(value[i]);\n        } else {\n          this.processKvp(cipher, headers[i], value[i]);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValue(\"category\", value));\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValue(\"description\", value);\n      cipher.name = this.getValueOrDefault(this.getValue(\"title\", value), \"--\");\n      cipher.login.username = this.getValue(\"username\", value);\n      cipher.login.password = this.getValue(\"password\", value);\n      cipher.login.uris = this.makeUriArray(this.getValue(\"site\", value));\n      this.processKvp(cipher, \"Password 2\", this.getValue(\"password2\", value));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private getValue(key: string, value: any) {\n    return this.getValueOrDefault(value[key], this.getValueOrDefault(value[\" \" + key]));\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PassmanJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((credential: any) => {\n      if (credential.tags != null && credential.tags.length > 0) {\n        const folderName = credential.tags[0].text;\n        this.processFolder(result, folderName);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = credential.label;\n\n      cipher.login.username = this.getValueOrDefault(credential.username);\n      if (this.isNullOrWhitespace(cipher.login.username)) {\n        cipher.login.username = this.getValueOrDefault(credential.email);\n      } else if (!this.isNullOrWhitespace(credential.email)) {\n        cipher.notes = \"Email: \" + credential.email + \"\\n\";\n      }\n\n      cipher.login.password = this.getValueOrDefault(credential.password);\n      cipher.login.uris = this.makeUriArray(credential.url);\n      cipher.notes += this.getValueOrDefault(credential.description, \"\");\n      if (credential.otp != null) {\n        cipher.login.totp = this.getValueOrDefault(credential.otp.secret);\n      }\n\n      if (credential.custom_fields != null) {\n        credential.custom_fields.forEach((customField: any) => {\n          switch (customField.field_type) {\n            case \"text\":\n            case \"password\":\n              this.processKvp(cipher, customField.label, customField.value);\n              break;\n          }\n        });\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasspackCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const tagsJson = !this.isNullOrWhitespace(value.Tags) ? JSON.parse(value.Tags) : null;\n      const tags: string[] =\n        tagsJson != null && tagsJson.tags != null && tagsJson.tags.length > 0\n          ? tagsJson.tags\n              .map((tagJson: string) => {\n                try {\n                  const t = JSON.parse(tagJson);\n                  return this.getValueOrDefault(t.tag);\n                } catch {\n                  // Ignore error\n                }\n                return null;\n              })\n              .filter((t: string) => !this.isNullOrWhitespace(t))\n          : null;\n\n      if (this.organization && tags != null && tags.length > 0) {\n        tags.forEach((tag) => {\n          let addCollection = true;\n          let collectionIndex = result.collections.length;\n\n          for (let i = 0; i < result.collections.length; i++) {\n            if (result.collections[i].name === tag) {\n              addCollection = false;\n              collectionIndex = i;\n              break;\n            }\n          }\n\n          if (addCollection) {\n            const collection = new CollectionView();\n            collection.name = tag;\n            result.collections.push(collection);\n          }\n\n          result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n        });\n      } else if (!this.organization && tags != null && tags.length > 0) {\n        this.processFolder(result, tags[0]);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Notes, \"\");\n      cipher.notes += \"\\n\\n\" + this.getValueOrDefault(value[\"Shared Notes\"], \"\") + \"\\n\";\n      cipher.name = this.getValueOrDefault(value[\"Entry Name\"], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[\"User ID\"]);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n\n      if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n        value.__parsed_extra.forEach((extra: string) => {\n          if (!this.isNullOrWhitespace(extra)) {\n            cipher.notes += \"\\n\" + extra;\n          }\n        });\n      }\n\n      const fieldsJson = !this.isNullOrWhitespace(value[\"Extra Fields\"])\n        ? JSON.parse(value[\"Extra Fields\"])\n        : null;\n      const fields =\n        fieldsJson != null && fieldsJson.extraFields != null && fieldsJson.extraFields.length > 0\n          ? fieldsJson.extraFields.map((fieldJson: string) => {\n              try {\n                return JSON.parse(fieldJson);\n              } catch {\n                // Ignore error\n              }\n              return null;\n            })\n          : null;\n      if (fields != null) {\n        fields.forEach((f: any) => {\n          if (f != null) {\n            this.processKvp(cipher, f.name, f.data);\n          }\n        });\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let newVersion = true;\n    results.forEach((value) => {\n      if (value.length !== 5 && value.length < 9) {\n        return;\n      }\n      const altFormat = value.length === 10 && value[0] === \"0\";\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[altFormat ? 1 : 0], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[altFormat ? 2 : 1]);\n      cipher.login.password = this.getValueOrDefault(value[altFormat ? 3 : 2]);\n      if (value.length === 5) {\n        newVersion = false;\n        cipher.notes = this.getValueOrDefault(value[4]);\n        cipher.login.uris = this.makeUriArray(value[3]);\n      } else {\n        const folder = this.getValueOrDefault(value[altFormat ? 9 : 8], \"(None)\");\n        let folderName = folder !== \"(None)\" ? folder.split(\"\\\\\").join(\"/\") : null;\n        if (folderName != null) {\n          folderName = folder.split(\" > \").join(\"/\");\n          folderName = folder.split(\">\").join(\"/\");\n        }\n        this.processFolder(result, folderName);\n        cipher.notes = this.getValueOrDefault(value[altFormat ? 5 : 3]);\n        cipher.login.uris = this.makeUriArray(value[4]);\n      }\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (newVersion && this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.items == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, string>();\n    results.folders.forEach((value: any) => {\n      foldersMap.set(value.id, value.name);\n    });\n    const foldersIndexMap = new Map<string, number>();\n    foldersMap.forEach((val, key) => {\n      foldersIndexMap.set(key, result.folders.length);\n      const f = new FolderView();\n      f.name = val;\n      result.folders.push(f);\n    });\n\n    results.items.forEach((value: any) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.login.uris = this.makeUriArray(value.login_url);\n\n      if (value.folder != null && foldersIndexMap.has(value.folder)) {\n        result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(value.folder)]);\n      }\n\n      if (value.identifiers == null) {\n        return;\n      }\n\n      if (!this.isNullOrWhitespace(value.identifiers.notes)) {\n        cipher.notes = value.identifiers.notes.split(\"\\\\r\\\\n\").join(\"\\n\").split(\"\\\\n\").join(\"\\n\");\n      }\n\n      if (value.type === \"CreditCard\") {\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n      }\n\n      for (const property in value.identifiers) {\n        // eslint-disable-next-line\n        if (!value.identifiers.hasOwnProperty(property)) {\n          continue;\n        }\n        const valObj = value.identifiers[property];\n        const val = valObj != null ? valObj.toString() : null;\n        if (\n          this.isNullOrWhitespace(val) ||\n          property === \"notes\" ||\n          property === \"ignoreItemInSecurityScore\"\n        ) {\n          continue;\n        }\n\n        if (property === \"custom_fields\") {\n          valObj.forEach((cf: any) => {\n            this.processKvp(cipher, cf.name, cf.value);\n          });\n          continue;\n        }\n\n        if (cipher.type === CipherType.Card) {\n          if (property === \"cardNumber\") {\n            cipher.card.number = val;\n            cipher.card.brand = this.getCardBrand(val);\n            continue;\n          } else if (property === \"nameOnCard\") {\n            cipher.card.cardholderName = val;\n            continue;\n          } else if (property === \"security_code\") {\n            cipher.card.code = val;\n            continue;\n          } else if (property === \"expires\") {\n            try {\n              const expDate = new Date(val);\n              cipher.card.expYear = expDate.getFullYear().toString();\n              cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n            } catch {\n              // Ignore error\n            }\n            continue;\n          } else if (property === \"cardType\") {\n            continue;\n          }\n        } else {\n          if (\n            (property === \"username\" || property === \"email\") &&\n            this.isNullOrWhitespace(cipher.login.username)\n          ) {\n            cipher.login.username = val;\n            continue;\n          } else if (property === \"password\") {\n            cipher.login.password = val;\n            continue;\n          } else if (property === \"totp\") {\n            cipher.login.totp = val;\n            continue;\n          } else if (\n            (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n            this.uriFieldNames.indexOf(property) > -1\n          ) {\n            cipher.login.uris = this.makeUriArray(val);\n            continue;\n          }\n        }\n\n        this.processKvp(cipher, property, val);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const records = doc.querySelectorAll(\"PasswordManager > record\");\n    Array.from(records).forEach((record) => {\n      const category = this.querySelectorDirectChild(record, \"Category\");\n      const categoryText =\n        category != null &&\n        !this.isNullOrWhitespace(category.textContent) &&\n        category.textContent !== \"Unfiled\"\n          ? category.textContent\n          : null;\n      this.processFolder(result, categoryText);\n\n      const accountName = this.querySelectorDirectChild(record, \"Account-Name\");\n      const userId = this.querySelectorDirectChild(record, \"User-Id\");\n      const password = this.querySelectorDirectChild(record, \"Password\");\n      const url = this.querySelectorDirectChild(record, \"URL\");\n      const notes = this.querySelectorDirectChild(record, \"Notes\");\n      const cipher = this.initLoginCipher();\n      cipher.name =\n        accountName != null ? this.getValueOrDefault(accountName.textContent, \"--\") : \"--\";\n      cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : \"\";\n      cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\n      cipher.login.password =\n        password != null ? this.getValueOrDefault(password.textContent) : null;\n      cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n      const attributes: string[] = [];\n      for (let i = 1; i <= 10; i++) {\n        attributes.push(\"Attribute-\" + i);\n      }\n\n      this.querySelectorAllDirectChild(record, attributes.join(\",\")).forEach((attr) => {\n        if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === \"null\") {\n          return;\n        }\n        this.processKvp(cipher, attr.tagName, attr.textContent);\n      });\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const passwordSafe = doc.querySelector(\"passwordsafe\");\n    if (passwordSafe == null) {\n      result.errorMessage = \"Missing `passwordsafe` node.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const notesDelimiter = passwordSafe.getAttribute(\"delimiter\");\n    const entries = doc.querySelectorAll(\"passwordsafe > entry\");\n    Array.from(entries).forEach((entry) => {\n      const group = this.querySelectorDirectChild(entry, \"group\");\n      const groupText =\n        group != null && !this.isNullOrWhitespace(group.textContent)\n          ? group.textContent.split(\".\").join(\"/\")\n          : null;\n      this.processFolder(result, groupText);\n\n      const title = this.querySelectorDirectChild(entry, \"title\");\n      const username = this.querySelectorDirectChild(entry, \"username\");\n      const email = this.querySelectorDirectChild(entry, \"email\");\n      const password = this.querySelectorDirectChild(entry, \"password\");\n      const url = this.querySelectorDirectChild(entry, \"url\");\n      const notes = this.querySelectorDirectChild(entry, \"notes\");\n      const cipher = this.initLoginCipher();\n      cipher.name = title != null ? this.getValueOrDefault(title.textContent, \"--\") : \"--\";\n      cipher.notes =\n        notes != null\n          ? this.getValueOrDefault(notes.textContent, \"\").split(notesDelimiter).join(\"\\n\")\n          : null;\n      cipher.login.username =\n        username != null ? this.getValueOrDefault(username.textContent) : null;\n      cipher.login.password =\n        password != null ? this.getValueOrDefault(password.textContent) : null;\n      cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n      if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\n        cipher.login.username = this.getValueOrDefault(email.textContent);\n      } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\n        cipher.notes = this.isNullOrWhitespace(cipher.notes)\n          ? \"Email: \" + email.textContent\n          : cipher.notes + \"\\n\" + \"Email: \" + email.textContent;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordWalletTxtImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 1) {\n        return;\n      }\n      if (value.length > 5) {\n        this.processFolder(result, value[5]);\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      if (value.length > 4) {\n        cipher.notes = this.getValueOrDefault(value[4], \"\").split(\"¬\").join(\"\\n\");\n      }\n      if (value.length > 2) {\n        cipher.login.username = this.getValueOrDefault(value[2]);\n      }\n      if (value.length > 3) {\n        cipher.login.password = this.getValueOrDefault(value[3]);\n      }\n      if (value.length > 1) {\n        cipher.login.uris = this.makeUriArray(value[1]);\n      }\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class RememBearCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.trash === \"true\") {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.notes = this.getValueOrDefault(value.notes);\n      if (value.type === \"LoginItem\") {\n        cipher.login.uris = this.makeUriArray(value.website);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.username = this.getValueOrDefault(value.username);\n      } else if (value.type === \"CreditCardItem\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n        cipher.card.number = this.getValueOrDefault(value.number);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.verification);\n\n        try {\n          const expMonth = this.getValueOrDefault(value.expiryMonth);\n          if (expMonth != null) {\n            const expMonthNumber = parseInt(expMonth, null);\n            if (expMonthNumber != null && expMonthNumber >= 1 && expMonthNumber <= 12) {\n              cipher.card.expMonth = expMonthNumber.toString();\n            }\n          }\n        } catch {\n          // Ignore error\n        }\n        try {\n          const expYear = this.getValueOrDefault(value.expiryYear);\n          if (expYear != null) {\n            const expYearNumber = parseInt(expYear, null);\n            if (expYearNumber != null) {\n              cipher.card.expYear = expYearNumber.toString();\n            }\n          }\n        } catch {\n          // Ignore error\n        }\n\n        const pin = this.getValueOrDefault(value.pin);\n        if (pin != null) {\n          this.processKvp(cipher, \"PIN\", pin);\n        }\n        const zip = this.getValueOrDefault(value.zipCode);\n        if (zip != null) {\n          this.processKvp(cipher, \"Zip Code\", zip);\n        }\n      }\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let i = 1;\n    results.forEach((value) => {\n      const folder =\n        !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith(\"/\")\n          ? value.Folder.replace(\"/\", \"\")\n          : value.Folder;\n      const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\n      this.processFolder(result, folderName);\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Note);\n      cipher.name = this.getValueOrDefault(value.Name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Login);\n      cipher.login.password = this.getValueOrDefault(value.Pwd);\n      cipher.login.uris = this.makeUriArray(value.Url);\n\n      if (!this.isNullOrWhitespace(value.Rf_fields)) {\n        let fields: string[] = [value.Rf_fields];\n        if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n          fields = fields.concat(value.__parsed_extra);\n        }\n        fields.forEach((field: string) => {\n          const parts = field.split(\":\");\n          if (parts.length < 3) {\n            return;\n          }\n          const key = parts[0] === \"-no-name-\" ? null : parts[0];\n          const val = parts.length === 4 && parts[2] === \"rck\" ? parts[1] : parts[2];\n          this.processKvp(cipher, key, val);\n        });\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n\n      if (\n        i === results.length &&\n        cipher.name === \"--\" &&\n        this.isNullOrWhitespace(cipher.login.password)\n      ) {\n        return;\n      }\n\n      result.ciphers.push(cipher);\n      i++;\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SafariCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.Url ?? value.URL);\n      cipher.login.totp = this.getValueOrDefault(value.OTPAuth);\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const db = doc.querySelector(\"database\");\n    if (db == null) {\n      result.errorMessage = \"Missing `database` node.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, number>();\n\n    Array.from(doc.querySelectorAll(\"database > label\")).forEach((labelEl) => {\n      const name = labelEl.getAttribute(\"name\");\n      const id = labelEl.getAttribute(\"id\");\n      if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\n        foldersMap.set(id, result.folders.length);\n        const folder = new FolderView();\n        folder.name = name;\n        result.folders.push(folder);\n      }\n    });\n\n    Array.from(doc.querySelectorAll(\"database > card\")).forEach((cardEl) => {\n      if (cardEl.getAttribute(\"template\") === \"true\" || cardEl.getAttribute(\"deleted\") === \"true\") {\n        return;\n      }\n\n      const labelIdEl = this.querySelectorDirectChild(cardEl, \"label_id\");\n      if (labelIdEl != null) {\n        const labelId = labelIdEl.textContent;\n        if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\n          result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\n        }\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(cardEl.getAttribute(\"title\"), \"--\");\n\n      if (cardEl.getAttribute(\"star\") === \"true\") {\n        cipher.favorite = true;\n      }\n\n      const cardType = cardEl.getAttribute(\"type\");\n      if (cardType === \"note\") {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n      } else {\n        Array.from(this.querySelectorAllDirectChild(cardEl, \"field\")).forEach((fieldEl) => {\n          const text = fieldEl.textContent;\n          if (this.isNullOrWhitespace(text)) {\n            return;\n          }\n          const name = fieldEl.getAttribute(\"name\");\n          const fieldType = this.getValueOrDefault(fieldEl.getAttribute(\"type\"), \"\").toLowerCase();\n          if (fieldType === \"login\") {\n            cipher.login.username = text;\n          } else if (fieldType === \"password\" || fieldType === \"secret\") {\n            // safeInCloud allows for more than one password. we just insert them here and find the one used as password later\n            this.processKvp(cipher, name, text, FieldType.Hidden);\n          } else if (fieldType === \"one_time_password\") {\n            cipher.login.totp = text;\n          } else if (fieldType === \"notes\") {\n            cipher.notes += text + \"\\n\";\n          } else if (fieldType === \"weblogin\" || fieldType === \"website\") {\n            cipher.login.uris = this.makeUriArray(text);\n          } else {\n            this.processKvp(cipher, name, text);\n          }\n        });\n      }\n\n      Array.from(this.querySelectorAllDirectChild(cardEl, \"notes\")).forEach((notesEl) => {\n        cipher.notes += notesEl.textContent + \"\\n\";\n      });\n\n      this.setPassword(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  // Choose a password from all passwords. Take one that has password in its name, or the first one if there is no such entry\n  // if its name is password, we can safely remove it form the fields. otherwise, it would maybe be best to keep it as a hidden field\n  setPassword(cipher: CipherView) {\n    const candidates = cipher.fields.filter((field) => field.type === FieldType.Hidden);\n    if (!candidates.length) {\n      return;\n    }\n\n    let choice: FieldView;\n    for (const field of candidates) {\n      if (this.passwordFieldNames.includes(field.name.toLowerCase())) {\n        choice = field;\n        cipher.fields = cipher.fields.filter((f) => f !== choice);\n        break;\n      }\n    }\n\n    if (!choice) {\n      choice = candidates[0];\n    }\n\n    cipher.login.password = choice.value;\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), \"--\");\n      cipher.notes = this.getValueOrDefault(value.notes);\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SecureSafeCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Title);\n      cipher.notes = this.getValueOrDefault(value.Comment);\n      cipher.login.uris = this.makeUriArray(value.Url);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 3) {\n        return;\n      }\n\n      this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 2], \"\");\n      cipher.name = this.getValueOrDefault(value[1], \"--\");\n\n      if (value[0] === \"Web Logins\" || value[0] === \"Servers\" || value[0] === \"Email Accounts\") {\n        cipher.login.username = this.getValueOrDefault(value[2]);\n        cipher.login.password = this.getValueOrDefault(value[3]);\n        cipher.login.uris = this.makeUriArray(value[4]);\n        this.parseFieldsToNotes(cipher, 5, value);\n      } else {\n        this.parseFieldsToNotes(cipher, 2, value);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\n    // last 3 rows do not get parsed\n    for (let i = startIndex; i < value.length - 3; i++) {\n      if (this.isNullOrWhitespace(value[i])) {\n        continue;\n      }\n      cipher.notes += value[i] + \"\\n\";\n    }\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const loginNodes = doc.querySelectorAll(\"root > Database > Logins > Login\");\n    Array.from(loginNodes).forEach((loginNode) => {\n      const accountId = loginNode.getAttribute(\"ID\");\n      if (this.isNullOrWhitespace(accountId)) {\n        return;\n      }\n\n      const usernameText = loginNode.getAttribute(\"Name\");\n      const passwordText = loginNode.getAttribute(\"Password\");\n      let titleText: string = null;\n      let linkText: string = null;\n      let notesText: string = null;\n      let groupId: string = null;\n      let groupText: string = null;\n\n      const accountLogin = doc.querySelector(\n        \"root > Database > Accounts > Account > \" +\n          'LoginLinks > Login[SourceLoginID=\"' +\n          accountId +\n          '\"]'\n      );\n      if (accountLogin != null) {\n        const account = accountLogin.parentElement.parentElement;\n        if (account != null) {\n          titleText = account.getAttribute(\"Name\");\n          linkText = account.getAttribute(\"Link\");\n          groupId = account.getAttribute(\"ParentID\");\n          notesText = account.getAttribute(\"Comments\");\n          if (!this.isNullOrWhitespace(notesText)) {\n            notesText = notesText.split(\"/n\").join(\"\\n\");\n          }\n        }\n      }\n\n      if (!this.isNullOrWhitespace(groupId)) {\n        groupText = this.buildGroupText(doc, groupId, \"\");\n        this.processFolder(result, groupText);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(titleText, \"--\");\n      cipher.notes = this.getValueOrDefault(notesText);\n      cipher.login.username = this.getValueOrDefault(usernameText);\n      cipher.login.password = this.getValueOrDefault(passwordText);\n      cipher.login.uris = this.makeUriArray(linkText);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  buildGroupText(doc: Document, groupId: string, groupText: string): string {\n    const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\n    if (group == null) {\n      return groupText;\n    }\n    if (!this.isNullOrWhitespace(groupText)) {\n      groupText = \"/\" + groupText;\n    }\n    groupText = group.getAttribute(\"Name\") + groupText;\n    return this.buildGroupText(doc, group.getAttribute(\"ParentID\"), groupText);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst PropertiesToIgnore = [\n  \"kind\",\n  \"autologin\",\n  \"favorite\",\n  \"hexcolor\",\n  \"protectedwithpassword\",\n  \"subdomainonly\",\n  \"type\",\n  \"tk_export_version\",\n  \"note\",\n  \"title\",\n  \"document_content\",\n];\n\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.favorite, \"\").toLowerCase() === \"true\";\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.notes = this.getValueOrDefault(value.memo, \"\");\n      cipher.login.username = this.getValueOrDefault(value.login);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n\n      if (value.kind !== \"login\") {\n        cipher.name = this.getValueOrDefault(value.title, \"--\");\n        cipher.notes = this.getValueOrDefault(value.note, \"\");\n      }\n\n      if (value.kind === \"cc\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n        cipher.card.number = this.getValueOrDefault(value.number);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        if (!this.isNullOrWhitespace(value.expiryDate)) {\n          try {\n            const expDate = new Date(value.expiryDate);\n            cipher.card.expYear = expDate.getFullYear().toString();\n            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n          } catch {\n            // Ignore error\n          }\n        }\n      } else if (value.kind !== \"login\") {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n        if (!this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes = this.getValueOrDefault(value.document_content, \"\");\n        }\n        for (const property in value) {\n          if (\n            value.hasOwnProperty(property) && // eslint-disable-line\n            PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\n            !this.isNullOrWhitespace(value[property])\n          ) {\n            this.processKvp(cipher, property, value[property]);\n          }\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class UpmCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length !== 5) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      cipher.notes = this.getValueOrDefault(value[4]);\n      cipher.login.username = this.getValueOrDefault(value[1]);\n      cipher.login.password = this.getValueOrDefault(value[2]);\n      cipher.login.uris = this.makeUriArray(value[3]);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class YotiCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value[\"User name\"]);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (\n        this.isNullOrWhitespace(value[\"Password Name\"]) &&\n        this.isNullOrWhitespace(value[\"Secret Name\"])\n      ) {\n        return;\n      }\n      this.processFolder(result, this.getValueOrDefault(value.ChamberName));\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.Favorite, \"0\") === \"1\";\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.name = this.getValueOrDefault(\n        value[\"Password Name\"],\n        this.getValueOrDefault(value[\"Secret Name\"], \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(\n        this.getValueOrDefault(value[\"Password URL\"], this.getValueOrDefault(value[\"Secret URL\"]))\n      );\n      this.parseData(cipher, value.SecretData);\n      this.parseData(cipher, value.CustomData);\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseData(cipher: CipherView, data: string) {\n    if (this.isNullOrWhitespace(data)) {\n      return;\n    }\n    const dataLines = this.splitNewLine(data);\n    dataLines.forEach((line) => {\n      const delimPosition = line.indexOf(\":\");\n      if (delimPosition < 0) {\n        return;\n      }\n      const field = line.substring(0, delimPosition);\n      const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\n      if (\n        this.isNullOrWhitespace(field) ||\n        this.isNullOrWhitespace(value) ||\n        field === \"SecretType\"\n      ) {\n        return;\n      }\n      const fieldLower = field.toLowerCase();\n      if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\n        cipher.login.username = value;\n      } else if (\n        cipher.login.password == null &&\n        this.passwordFieldNames.indexOf(fieldLower) > -1\n      ) {\n        cipher.login.password = value;\n      } else {\n        this.processKvp(cipher, field, value);\n      }\n    });\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    await this.stateService.setBiometricLocked(false);\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","export function getDomain(host: string): string | null {\n  return null;\n}\n\nexport function isValid(host: string): boolean {\n  return true;\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  userId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  sizeName: string;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.userId = userId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  userId: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse, userId: string) {\n    this.userId = userId;\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse, userId?: string) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.userId = userId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.key = data.key;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders?: DataEncryptionPair<FolderData, FolderView> = new DataEncryptionPair<\n    FolderData,\n    FolderView\n  >();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string;\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, alreadyEncrypted = false, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        userId: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"userId\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login, alreadyEncrypted);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card, alreadyEncrypted);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(userId: string): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.userId = this.organizationId != null ? userId : null;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    alreadyEncrypted: boolean,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      alreadyEncrypted,\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string = \"en\";\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class ImportResult {\n  success = false;\n  missingPassword = false;\n  errorMessage: string;\n  ciphers: CipherView[] = [];\n  folders: FolderView[] = [];\n  folderRelationships: [number, number][] = [];\n  collections: CollectionView[] = [];\n  collectionRelationships: [number, number][] = [];\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u, alreadyEncrypted));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        password: null,\n      },\n      alreadyEncrypted\n    );\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        userId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"accessId\", \"userId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/sendAccessResponse\";\nimport { SendAccessView } from \"../view/sendAccessView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class Card {\n  static template(): Card {\n    const req = new Card();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: Card, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: Card, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { SecureNote } from \"./secureNote\";\n\nexport class Cipher {\n  static template(): Cipher {\n    const req = new Cipher();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: Cipher, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => Field.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = Login.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNote.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = Card.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = Identity.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: Cipher, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => Field.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = Login.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = Card.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: Field[];\n  login: Login;\n  secureNote: SecureNote;\n  card: Card;\n  identity: Identity;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new Field(f));\n      } else {\n        this.fields = o.fields.map((f) => new Field(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new Login(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher } from \"./cipher\";\n\nexport class CipherWithIds extends Cipher {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class Collection {\n  static template(): Collection {\n    const req = new Collection();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: Collection, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: Collection, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { Collection } from \"./collection\";\n\nexport class CollectionWithId extends Collection {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class Event {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class Field {\n  static template(): Field {\n    const req = new Field();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: Field, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: Field, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class Folder {\n  static template(): Folder {\n    const req = new Folder();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: Folder, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: Folder, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { Folder } from \"./folder\";\n\nexport class FolderWithId extends Folder {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class Identity {\n  static template(): Identity {\n    const req = new Identity();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: Identity, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: Identity, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUri } from \"./loginUri\";\n\nexport class Login {\n  static template(): Login {\n    const req = new Login();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: Login, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUri.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: Login, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUri.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUri[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUri {\n  static template(): LoginUri {\n    const req = new LoginUri();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUri, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNote {\n  static template(): SecureNote {\n    const req = new SecureNote();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNote, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { EmailTokenRequest } from \"./emailTokenRequest\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folderRequest\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { CipherRequest } from \"./cipherRequest\";\nimport { FolderRequest } from \"./folderRequest\";\nimport { KvpRequest } from \"./kvpRequest\";\n\nexport class ImportCiphersRequest {\n  ciphers: CipherRequest[] = [];\n  folders: FolderRequest[] = [];\n  folderRelationships: KvpRequest<number, number>[] = [];\n}\n","import { CipherRequest } from \"./cipherRequest\";\nimport { CollectionRequest } from \"./collectionRequest\";\nimport { KvpRequest } from \"./kvpRequest\";\n\nexport class ImportOrganizationCiphersRequest {\n  ciphers: CipherRequest[] = [];\n  collections: CollectionRequest[] = [];\n  collectionRelationships: KvpRequest<number, number>[] = [];\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./passwordRequest\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","export class KvpRequest<TK, TV> {\n  key: TK;\n  value: TV;\n\n  constructor(key: TK, value: TV) {\n    this.key = key;\n    this.value = value;\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  data: SsoConfigApi;\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { KeysRequest } from \"./keysRequest\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","export class OrganizationSubscriptionUpdateRequest {\n  constructor(public seatAdjustment: number, public maxAutoscaleSeats?: number) {}\n}\n","import { TaxInfoUpdateRequest } from \"./taxInfoUpdateRequest\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","import { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","export class OrganizationUserResetPasswordEnrollmentRequest {\n  resetPasswordKey: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../request/organizationTaxInfoUpdateRequest\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { OrganizationCreateRequest } from \"../organizationCreateRequest\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./sendRequest\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"./folderWithIdRequest\";\nimport { SendWithIdRequest } from \"./sendWithIdRequest\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premium: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premium = this.getResponseProperty(\"Premium\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/sendAccess\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/ssoConfigApi\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: boolean;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","export class View {}\n","import { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { DeviceRequest } from \"jslib-common/models/request/deviceRequest\";\nimport { TokenRequestTwoFactor } from \"jslib-common/models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserBilling(): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Folder APIs\n\n  async getFolder(id: string): Promise<FolderResponse> {\n    const r = await this.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  deleteFolder(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<boolean> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      return true;\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" + sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  private async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: StorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, await this.stateService.getUserId(), collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    const userId = await this.stateService.getUserId();\n    await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData(await this.stateService.getUserId());\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import * as hrtime from \"browser-hrtime\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ): Promise<void> {\n    const orgKeys: any = {};\n    orgs.forEach((org) => {\n      orgKeys[org.id] = org.key;\n    });\n\n    for (const providerOrg of providerOrgs) {\n      // Convert provider encrypted keys to user encrypted.\n      const providerKey = await this.getProviderKey(providerOrg.providerId);\n      const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n      orgKeys[providerOrg.id] = (await this.rsaEncrypt(decValue)).encryptedString;\n    }\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(orgKeys);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeys = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encOrgKeys) {\n      // eslint-disable-next-line\n      if (!encOrgKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n      orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(orgKeys);\n    }\n\n    return orgKeys;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    return await this.aesDecryptToUtf8(\n      encString.encryptionType,\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToUtf8(\n    encType: EncryptionType,\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): Promise<string> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIds as CipherExport } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId as CollectionExport } from \"../models/export/collectionWithId\";\nimport { Event } from \"../models/export/event\";\nimport { FolderWithId as FolderExport } from \"../models/export/folderWithId\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new Event(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecrypted().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAll().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { FolderView } from \"../models/view/folderView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n  }\n\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = await this.stateService.getEncryptedFolders();\n    // eslint-disable-next-line\n    if (folders == null || !folders.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Folder(folders[id]);\n  }\n\n  async getAll(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<FolderView[]> {\n    const decryptedFolders = await this.stateService.getDecryptedFolders();\n    if (decryptedFolders != null) {\n      return decryptedFolders;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const decFolders: FolderView[] = [];\n    const promises: Promise<any>[] = [];\n    const folders = await this.getAll();\n    folders.forEach((folder) => {\n      promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n    });\n\n    await Promise.all(promises);\n    decFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decFolders.push(noneFolder);\n\n    await this.stateService.setDecryptedFolders(decFolders);\n    return decFolders;\n  }\n\n  async getAllNested(): Promise<TreeNode<FolderView>[]> {\n    const folders = await this.getAllDecrypted();\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n\n  async saveWithServer(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.apiService.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.apiService.putFolder(folder.id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new FolderData(response, userId);\n    await this.upsert(data);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<any> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<any> {\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteFolder(id);\n    await this.delete(id);\n  }\n}\n","import { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  locale: string;\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: \"base\" });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { ImportService as ImportServiceAbstraction } from \"../abstractions/import.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport {\n  featuredImportOptions,\n  ImportOption,\n  ImportType,\n  regularImportOptions,\n} from \"../enums/importOptions\";\nimport { AscendoCsvImporter } from \"../importers/ascendoCsvImporter\";\nimport { AvastCsvImporter } from \"../importers/avastCsvImporter\";\nimport { AvastJsonImporter } from \"../importers/avastJsonImporter\";\nimport { AviraCsvImporter } from \"../importers/aviraCsvImporter\";\nimport { BitwardenCsvImporter } from \"../importers/bitwardenCsvImporter\";\nimport { BitwardenJsonImporter } from \"../importers/bitwardenJsonImporter\";\nimport { BitwardenPasswordProtectedImporter } from \"../importers/bitwardenPasswordProtectedImporter\";\nimport { BlackBerryCsvImporter } from \"../importers/blackBerryCsvImporter\";\nimport { BlurCsvImporter } from \"../importers/blurCsvImporter\";\nimport { ButtercupCsvImporter } from \"../importers/buttercupCsvImporter\";\nimport { ChromeCsvImporter } from \"../importers/chromeCsvImporter\";\nimport { ClipperzHtmlImporter } from \"../importers/clipperzHtmlImporter\";\nimport { CodebookCsvImporter } from \"../importers/codebookCsvImporter\";\nimport { DashlaneCsvImporter } from \"../importers/dashlaneImporters/dashlaneCsvImporter\";\nimport { DashlaneJsonImporter } from \"../importers/dashlaneImporters/dashlaneJsonImporter\";\nimport { EncryptrCsvImporter } from \"../importers/encryptrCsvImporter\";\nimport { EnpassCsvImporter } from \"../importers/enpassCsvImporter\";\nimport { EnpassJsonImporter } from \"../importers/enpassJsonImporter\";\nimport { FirefoxCsvImporter } from \"../importers/firefoxCsvImporter\";\nimport { FSecureFskImporter } from \"../importers/fsecureFskImporter\";\nimport { GnomeJsonImporter } from \"../importers/gnomeJsonImporter\";\nimport { ImportError } from \"../importers/importError\";\nimport { Importer } from \"../importers/importer\";\nimport { KasperskyTxtImporter } from \"../importers/kasperskyTxtImporter\";\nimport { KeePass2XmlImporter } from \"../importers/keepass2XmlImporter\";\nimport { KeePassXCsvImporter } from \"../importers/keepassxCsvImporter\";\nimport { KeeperCsvImporter } from \"../importers/keeperImporters/keeperCsvImporter\";\nimport { LastPassCsvImporter } from \"../importers/lastpassCsvImporter\";\nimport { LogMeOnceCsvImporter } from \"../importers/logMeOnceCsvImporter\";\nimport { MeldiumCsvImporter } from \"../importers/meldiumCsvImporter\";\nimport { MSecureCsvImporter } from \"../importers/msecureCsvImporter\";\nimport { MykiCsvImporter } from \"../importers/mykiCsvImporter\";\nimport { NordPassCsvImporter } from \"../importers/nordpassCsvImporter\";\nimport { OnePassword1PifImporter } from \"../importers/onepasswordImporters/onepassword1PifImporter\";\nimport { OnePassword1PuxImporter } from \"../importers/onepasswordImporters/onepassword1PuxImporter\";\nimport { OnePasswordMacCsvImporter } from \"../importers/onepasswordImporters/onepasswordMacCsvImporter\";\nimport { OnePasswordWinCsvImporter } from \"../importers/onepasswordImporters/onepasswordWinCsvImporter\";\nimport { PadlockCsvImporter } from \"../importers/padlockCsvImporter\";\nimport { PassKeepCsvImporter } from \"../importers/passkeepCsvImporter\";\nimport { PassmanJsonImporter } from \"../importers/passmanJsonImporter\";\nimport { PasspackCsvImporter } from \"../importers/passpackCsvImporter\";\nimport { PasswordAgentCsvImporter } from \"../importers/passwordAgentCsvImporter\";\nimport { PasswordBossJsonImporter } from \"../importers/passwordBossJsonImporter\";\nimport { PasswordDragonXmlImporter } from \"../importers/passwordDragonXmlImporter\";\nimport { PasswordSafeXmlImporter } from \"../importers/passwordSafeXmlImporter\";\nimport { PasswordWalletTxtImporter } from \"../importers/passwordWalletTxtImporter\";\nimport { RememBearCsvImporter } from \"../importers/rememBearCsvImporter\";\nimport { RoboFormCsvImporter } from \"../importers/roboformCsvImporter\";\nimport { SafariCsvImporter } from \"../importers/safariCsvImporter\";\nimport { SafeInCloudXmlImporter } from \"../importers/safeInCloudXmlImporter\";\nimport { SaferPassCsvImporter } from \"../importers/saferpassCsvImport\";\nimport { SecureSafeCsvImporter } from \"../importers/secureSafeCsvImporter\";\nimport { SplashIdCsvImporter } from \"../importers/splashIdCsvImporter\";\nimport { StickyPasswordXmlImporter } from \"../importers/stickyPasswordXmlImporter\";\nimport { TrueKeyCsvImporter } from \"../importers/truekeyCsvImporter\";\nimport { UpmCsvImporter } from \"../importers/upmCsvImporter\";\nimport { YotiCsvImporter } from \"../importers/yotiCsvImporter\";\nimport { ZohoVaultCsvImporter } from \"../importers/zohoVaultCsvImporter\";\nimport { Utils } from \"../misc/utils\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KvpRequest } from \"../models/request/kvpRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nexport class ImportService implements ImportServiceAbstraction {\n  featuredImportOptions = featuredImportOptions as readonly ImportOption[];\n\n  regularImportOptions = regularImportOptions as readonly ImportOption[];\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService\n  ) {}\n\n  getImportOptions(): ImportOption[] {\n    return this.featuredImportOptions.concat(this.regularImportOptions);\n  }\n\n  async import(\n    importer: Importer,\n    fileContents: string,\n    organizationId: string = null\n  ): Promise<ImportError> {\n    const importResult = await importer.parse(fileContents);\n    if (importResult.success) {\n      if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\n        return new ImportError(this.i18nService.t(\"importNothingError\"));\n      } else if (importResult.ciphers.length > 0) {\n        const halfway = Math.floor(importResult.ciphers.length / 2);\n        const last = importResult.ciphers.length - 1;\n\n        if (\n          this.badData(importResult.ciphers[0]) &&\n          this.badData(importResult.ciphers[halfway]) &&\n          this.badData(importResult.ciphers[last])\n        ) {\n          return new ImportError(this.i18nService.t(\"importFormatError\"));\n        }\n      }\n      try {\n        await this.postImport(importResult, organizationId);\n      } catch (error) {\n        const errorResponse = new ErrorResponse(error, 400);\n        return this.handleServerError(errorResponse, importResult);\n      }\n      return null;\n    } else {\n      if (!Utils.isNullOrWhitespace(importResult.errorMessage)) {\n        return new ImportError(importResult.errorMessage, importResult.missingPassword);\n      } else {\n        return new ImportError(\n          this.i18nService.t(\"importFormatError\"),\n          importResult.missingPassword\n        );\n      }\n    }\n  }\n\n  getImporter(\n    format: ImportType | \"bitwardenpasswordprotected\",\n    organizationId: string = null,\n    password: string = null\n  ): Importer {\n    const importer = this.getImporterInstance(format, password);\n    if (importer == null) {\n      return null;\n    }\n    importer.organizationId = organizationId;\n    return importer;\n  }\n\n  private getImporterInstance(format: ImportType | \"bitwardenpasswordprotected\", password: string) {\n    if (format == null) {\n      return null;\n    }\n\n    switch (format) {\n      case \"bitwardencsv\":\n        return new BitwardenCsvImporter();\n      case \"bitwardenjson\":\n        return new BitwardenJsonImporter(this.cryptoService, this.i18nService);\n      case \"bitwardenpasswordprotected\":\n        return new BitwardenPasswordProtectedImporter(\n          this.cryptoService,\n          this.i18nService,\n          password\n        );\n      case \"lastpasscsv\":\n      case \"passboltcsv\":\n        return new LastPassCsvImporter();\n      case \"keepassxcsv\":\n        return new KeePassXCsvImporter();\n      case \"aviracsv\":\n        return new AviraCsvImporter();\n      case \"blurcsv\":\n        return new BlurCsvImporter();\n      case \"safeincloudxml\":\n        return new SafeInCloudXmlImporter();\n      case \"padlockcsv\":\n        return new PadlockCsvImporter();\n      case \"keepass2xml\":\n        return new KeePass2XmlImporter();\n      case \"chromecsv\":\n      case \"operacsv\":\n      case \"vivaldicsv\":\n        return new ChromeCsvImporter();\n      case \"firefoxcsv\":\n        return new FirefoxCsvImporter();\n      case \"upmcsv\":\n        return new UpmCsvImporter();\n      case \"saferpasscsv\":\n        return new SaferPassCsvImporter();\n      case \"safaricsv\":\n        return new SafariCsvImporter();\n      case \"meldiumcsv\":\n        return new MeldiumCsvImporter();\n      case \"1password1pif\":\n        return new OnePassword1PifImporter();\n      case \"1password1pux\":\n        return new OnePassword1PuxImporter();\n      case \"1passwordwincsv\":\n        return new OnePasswordWinCsvImporter();\n      case \"1passwordmaccsv\":\n        return new OnePasswordMacCsvImporter();\n      case \"keepercsv\":\n        return new KeeperCsvImporter();\n      // case \"keeperjson\":\n      //   return new KeeperJsonImporter();\n      case \"passworddragonxml\":\n        return new PasswordDragonXmlImporter();\n      case \"enpasscsv\":\n        return new EnpassCsvImporter();\n      case \"enpassjson\":\n        return new EnpassJsonImporter();\n      case \"pwsafexml\":\n        return new PasswordSafeXmlImporter();\n      case \"dashlanecsv\":\n        return new DashlaneCsvImporter();\n      case \"dashlanejson\":\n        return new DashlaneJsonImporter();\n      case \"msecurecsv\":\n        return new MSecureCsvImporter();\n      case \"stickypasswordxml\":\n        return new StickyPasswordXmlImporter();\n      case \"truekeycsv\":\n        return new TrueKeyCsvImporter();\n      case \"clipperzhtml\":\n        return new ClipperzHtmlImporter();\n      case \"roboformcsv\":\n        return new RoboFormCsvImporter();\n      case \"ascendocsv\":\n        return new AscendoCsvImporter();\n      case \"passwordbossjson\":\n        return new PasswordBossJsonImporter();\n      case \"zohovaultcsv\":\n        return new ZohoVaultCsvImporter();\n      case \"splashidcsv\":\n        return new SplashIdCsvImporter();\n      case \"passkeepcsv\":\n        return new PassKeepCsvImporter();\n      case \"gnomejson\":\n        return new GnomeJsonImporter();\n      case \"passwordagentcsv\":\n        return new PasswordAgentCsvImporter();\n      case \"passpackcsv\":\n        return new PasspackCsvImporter();\n      case \"passmanjson\":\n        return new PassmanJsonImporter();\n      case \"avastcsv\":\n        return new AvastCsvImporter();\n      case \"avastjson\":\n        return new AvastJsonImporter();\n      case \"fsecurefsk\":\n        return new FSecureFskImporter();\n      case \"kasperskytxt\":\n        return new KasperskyTxtImporter();\n      case \"remembearcsv\":\n        return new RememBearCsvImporter();\n      case \"passwordwallettxt\":\n        return new PasswordWalletTxtImporter();\n      case \"mykicsv\":\n        return new MykiCsvImporter();\n      case \"securesafecsv\":\n        return new SecureSafeCsvImporter();\n      case \"logmeoncecsv\":\n        return new LogMeOnceCsvImporter();\n      case \"blackberrycsv\":\n        return new BlackBerryCsvImporter();\n      case \"buttercupcsv\":\n        return new ButtercupCsvImporter();\n      case \"codebookcsv\":\n        return new CodebookCsvImporter();\n      case \"encryptrcsv\":\n        return new EncryptrCsvImporter();\n      case \"yoticsv\":\n        return new YotiCsvImporter();\n      case \"nordpasscsv\":\n        return new NordPassCsvImporter();\n      default:\n        return null;\n    }\n  }\n\n  private async postImport(importResult: ImportResult, organizationId: string = null) {\n    if (organizationId == null) {\n      const request = new ImportCiphersRequest();\n      for (let i = 0; i < importResult.ciphers.length; i++) {\n        const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n        request.ciphers.push(new CipherRequest(c));\n      }\n      if (importResult.folders != null) {\n        for (let i = 0; i < importResult.folders.length; i++) {\n          const f = await this.folderService.encrypt(importResult.folders[i]);\n          request.folders.push(new FolderRequest(f));\n        }\n      }\n      if (importResult.folderRelationships != null) {\n        importResult.folderRelationships.forEach((r) =>\n          request.folderRelationships.push(new KvpRequest(r[0], r[1]))\n        );\n      }\n      return await this.apiService.postImportCiphers(request);\n    } else {\n      const request = new ImportOrganizationCiphersRequest();\n      for (let i = 0; i < importResult.ciphers.length; i++) {\n        importResult.ciphers[i].organizationId = organizationId;\n        const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n        request.ciphers.push(new CipherRequest(c));\n      }\n      if (importResult.collections != null) {\n        for (let i = 0; i < importResult.collections.length; i++) {\n          importResult.collections[i].organizationId = organizationId;\n          const c = await this.collectionService.encrypt(importResult.collections[i]);\n          request.collections.push(new CollectionRequest(c));\n        }\n      }\n      if (importResult.collectionRelationships != null) {\n        importResult.collectionRelationships.forEach((r) =>\n          request.collectionRelationships.push(new KvpRequest(r[0], r[1]))\n        );\n      }\n      return await this.apiService.postImportOrganizationCiphers(organizationId, request);\n    }\n  }\n\n  private badData(c: CipherView) {\n    return (\n      (c.name == null || c.name === \"--\") &&\n      c.type === CipherType.Login &&\n      c.login != null &&\n      Utils.isNullOrWhitespace(c.login.password)\n    );\n  }\n\n  private handleServerError(errorResponse: ErrorResponse, importResult: ImportResult): ImportError {\n    if (errorResponse.validationErrors == null) {\n      return new ImportError(errorResponse.message);\n    }\n\n    let errorMessage = \"\";\n\n    Object.entries(errorResponse.validationErrors).forEach(([key, value], index) => {\n      let item;\n      let itemType;\n      const i = Number(key.match(/[0-9]+/)[0]);\n\n      switch (key.match(/^\\w+/)[0]) {\n        case \"Ciphers\":\n          item = importResult.ciphers[i];\n          itemType = CipherType[item.type];\n          break;\n        case \"Folders\":\n          item = importResult.folders[i];\n          itemType = \"Folder\";\n          break;\n        case \"Collections\":\n          item = importResult.collections[i];\n          itemType = \"Collection\";\n          break;\n        default:\n          return;\n      }\n\n      if (index > 0) {\n        errorMessage += \"\\n\\n\";\n      }\n\n      if (itemType !== \"Folder\" && itemType !== \"Collection\") {\n        errorMessage += \"[\" + (i + 1) + \"] \";\n      }\n\n      errorMessage += \"[\" + itemType + '] \"' + item.name + '\": ' + value;\n    });\n\n    return new ImportError(errorMessage);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.logService.error(e);\n      throw new Error(\"Unable to reach key connector\");\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { VaultTimeoutService } from \"../abstractions/vaultTimeout.service\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: () => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback();\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    if (await this.stateService.getIsAuthenticated()) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      return !locked;\n    }\n    return false;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private searchableMinLength = 2;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    if ([\"zh-CN\", \"zh-TW\"].indexOf(i18nService.locale) !== -1) {\n      this.searchableMinLength = 1;\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", { boost: 10 });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = query.trim().toLowerCase();\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = query.trim().toLowerCase();\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = query.trim().toLocaleLowerCase();\n\n    return sends.filter((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        return true;\n      }\n      if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n    });\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  protected state: State<TGlobalState, TAccount> = new State<TGlobalState, TAccount>(\n    this.createGlobals()\n  );\n\n  private hasBeenInited = false;\n\n  private accountDiskCache: Map<string, TAccount>;\n\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    this.accountDiskCache = new Map<string, TAccount>();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    this.state.authenticatedAccounts =\n      (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n    for (const i in this.state.authenticatedAccounts) {\n      if (i != null) {\n        await this.syncAccountFromDisk(this.state.authenticatedAccounts[i]);\n      }\n    }\n    const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n    if (storedActiveUser != null) {\n      this.state.activeUserId = storedActiveUser;\n    }\n    await this.pushAccounts();\n    this.activeAccount.next(this.state.activeUserId);\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId] = this.createAccount();\n    const diskAccount = await this.getAccountFromDisk({ userId: userId });\n    this.state.accounts[userId].profile = diskAccount.profile;\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    this.state.authenticatedAccounts.push(account.profile.userId);\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    this.state.accounts[account.profile.userId] = account;\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    this.state.activeUserId = userId;\n    await this.storageService.save(keys.activeUserId, userId);\n    this.activeAccount.next(this.state.activeUserId);\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === this.state.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.settings\n        ?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    if (account.profile.hasPremiumPersonally) {\n      return true;\n    }\n\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(`${options.userId}${partialKeys.autoKey}`, options);\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedFolders(options?: StorageOptions): Promise<FolderView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.folders?.decrypted;\n  }\n\n  async setDecryptedFolders(value: FolderView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.folders.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.privateKey?.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.email = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if (this.state.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLoginRedirect(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.loginRedirect;\n  }\n\n  async setLoginRedirect(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.loginRedirect = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected getGlobalsFromMemory(): TGlobalState {\n    return this.state.globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected saveGlobalsToMemory(globals: TGlobalState): void {\n    this.state.globals = globals;\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected getAccountFromMemory(options: StorageOptions): TAccount {\n    if (this.state.accounts == null) {\n      return null;\n    }\n    return this.state.accounts[this.getUserIdFromMemory(options)];\n  }\n\n  protected getUserIdFromMemory(options: StorageOptions): string {\n    return options?.userId != null\n      ? this.state.accounts[options.userId]?.profile?.userId\n      : this.state.activeUserId;\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && this.state.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      this.state.accounts[account.profile.userId] = account;\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<any>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    if (this.state?.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      this.accounts.next(null);\n      return;\n    }\n\n    this.accounts.next(this.state.accounts);\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected get defaultInMemoryOptions(): StorageOptions {\n    return { storageLocation: StorageLocation.Memory, userId: this.state.activeUserId };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: this.state.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected removeAccountFromMemory(userId: string = this.state.activeUserId): void {\n    delete this.state.accounts[userId];\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(userId);\n    }\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in this.state.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected clearDecryptedDataForActiveUser() {\n    const userId = this.state.activeUserId;\n    if (userId == null || this.state?.accounts[userId]?.data == null) {\n      return;\n    }\n    this.state.accounts[userId].data = new AccountData();\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string) {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    this.state.authenticatedAccounts = this.state.authenticatedAccounts.filter(\n      (activeUserId) => activeUserId !== userId\n    );\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    if (this.state.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in this.state.accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? this.defaultInMemoryOptions\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n}\n","import { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    const userId = await this.stateService.getUserId();\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(userId, response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(userId, response.ciphers);\n      await this.syncSends(userId, response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.apiService.getFolder(notification.id);\n          if (remoteFolder != null) {\n            const userId = await this.stateService.getUserId();\n            await this.folderService.upsert(new FolderData(remoteFolder, userId));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getCipher(notification.id);\n          if (remoteCipher != null) {\n            const userId = await this.stateService.getUserId();\n            await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            const userId = await this.stateService.getUserId();\n            await this.sendService.upsert(new SendData(remoteSend, userId));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(userId: string, response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f, userId);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(userId: string, response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c, userId);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(userId: string, response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s, userId);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getPremium(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.premium === \"undefined\") {\n      return false;\n    }\n\n    return decoded.premium as boolean;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  async isAutoCopyEnabled(): Promise<boolean> {\n    return !(await this.stateService.getDisableAutoTotpCopy());\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\nimport { VerificationType } from \"../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(private cryptoService: CryptoService, private stateService: StateService) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateSubaddress(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","import { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  // Keys aren't stored for a device that is locked or logged out.\n  async isLocked(userId?: string): Promise<boolean> {\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    return !(await this.cryptoService.hasKeyInMemory(userId));\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.folderService.clearCache(userId);\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async isLoggedOut(userId?: string): Promise<boolean> {\n    return !(await this.stateService.getIsAuthenticated({ userId: userId }));\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    if (await this.isLoggedOut(userId)) {\n      return false;\n    }\n\n    if (await this.isLocked(userId)) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input, OnChanges, OnInit } from \"@angular/core\";\n\ntype BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bit-badge], a[bit-badge], button[bit-badge]\",\n})\nexport class BadgeComponent implements OnInit, OnChanges {\n  @HostBinding(\"class\") @Input(\"class\") classList = \"\";\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private isSpan = false;\n\n  constructor(private el: ElementRef<Element>) {\n    this.isSpan = el?.nativeElement?.nodeName == \"SPAN\";\n  }\n\n  ngOnInit(): void {\n    this.classList = this.classes.join(\" \");\n  }\n\n  ngOnChanges() {\n    this.ngOnInit();\n  }\n\n  get classes() {\n    return [\n      \"tw-inline-block\",\n      \"tw-py-1\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-leading-none\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-no-wrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.isSpan ? [] : hoverStyles[this.badgeType]);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeComponent } from \"./badge.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeComponent],\n  declarations: [BadgeComponent],\n})\nexport class BadgeModule {}\n","export * from \"./badge.component\";\nexport * from \"./badge.module\";\n","import { Input, HostBinding, OnChanges, Directive, OnInit } from \"@angular/core\";\n\nexport type ButtonTypes = \"primary\" | \"secondary\" | \"danger\";\n\nconst buttonStyles: Record<ButtonTypes, string> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"focus:tw-bg-primary-700\",\n    \"focus:tw-border-primary-700\",\n  ].join(\" \"),\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-secondary-500\",\n    \"hover:tw-border-secondary-500\",\n    \"hover:!tw-text-contrast\",\n    \"focus:tw-bg-secondary-500\",\n    \"focus:tw-border-secondary-500\",\n    \"focus:!tw-text-contrast\",\n  ].join(\" \"),\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"focus:tw-bg-danger-500\",\n    \"focus:tw-border-danger-500\",\n    \"focus:!tw-text-contrast\",\n  ].join(\" \"),\n};\n\n@Directive({\n  selector: \"button[bit-button], a[bit-button]\",\n})\nexport class ButtonComponent implements OnInit, OnChanges {\n  @HostBinding(\"class\") @Input() classList = \"\";\n\n  @Input()\n  buttonType: ButtonTypes = \"secondary\";\n\n  @Input()\n  block = false;\n\n  ngOnInit(): void {\n    this.classList = this.classes.join(\" \");\n  }\n\n  ngOnChanges() {\n    this.ngOnInit();\n  }\n\n  get classes(): string[] {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"disabled:tw-bg-secondary-100\",\n      \"disabled:tw-border-secondary-100\",\n      \"disabled:!tw-text-main\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n      this.block ? \"tw-w-full tw-block\" : \"\",\n      buttonStyles[this.buttonType ?? \"secondary\"],\n    ];\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonComponent } from \"./button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonComponent],\n  declarations: [ButtonComponent],\n})\nexport class ButtonModule {}\n","export * from \"./button.component\";\nexport * from \"./button.module\";\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-text-danger\";\n      case \"info\":\n        return \"tw-text-info\";\n      case \"success\":\n        return \"tw-text-success\";\n      case \"warning\":\n        return \"tw-text-warning\";\n    }\n  }\n}\n","<div\n  class=\"tw-py-3 tw-px-5 tw-mb-4 tw-leading-5 tw-rounded tw-bg-background-alt tw-border tw-border-secondary-300 tw-border-solid tw-box-border tw-border-l-8 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","export * from \"./callout.module\";\nexport * from \"./callout.component\";\n","export * from \"./badge\";\nexport * from \"./button\";\nexport * from \"./callout\";\n","import { StateService as BaseStateService } from \"jslib-common/abstractions/state.service\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\n\nexport abstract class StateService extends BaseStateService<Account> {\n  getRememberEmail: (options?: StorageOptions) => Promise<boolean>;\n  setRememberEmail: (value: boolean, options?: StorageOptions) => Promise<void>;\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"jslib-common/models/request/emergencyAccessAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: any): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: any): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a routerLink=\"/\" [queryParams]=\"{ email: email }\" class=\"btn btn-primary btn-block\">\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { OrganizationUserAcceptRequest } from \"jslib-common/models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private logService: LogService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: any): Promise<void> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      this.actionPromise = this.apiService\n        .postOrganizationUserAccept(qParams.organizationId, qParams.organizationUserId, request)\n        .then(() => {\n          // Retrieve Public Key\n          return this.apiService.getOrganizationKeys(qParams.organizationId);\n        })\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n          }\n\n          const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n          // RSA Encrypt user's encKey.key with organization public key\n          const encKey = await this.cryptoService.getEncKey();\n          const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n          // Create request and execute enrollment\n          const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n          resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n          return this.apiService.putOrganizationUserResetPasswordEnrollment(\n            qParams.organizationId,\n            await this.stateService.getUserId(),\n            resetRequest\n          );\n        });\n    } else {\n      this.actionPromise = this.apiService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    }\n\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: any): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: any): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.apiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a routerLink=\"/\" [queryParams]=\"{ email: email }\" class=\"btn btn-primary btn-block\">\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"jslib-angular/components/hint.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"jslib-angular/components/lock.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { RouterService } from \"../services/router.service\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigate([this.successRoute]);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"jslib-angular/components/login.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { PolicyData } from \"jslib-common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nimport { StateService } from \"../../abstractions/state.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private policyService: PolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.stateService.setLoginRedirect({ route: \"/settings/premium\" });\n      } else if (qParams.org != null) {\n        this.stateService.setLoginRedirect({\n          route: \"/settings/create-organization\",\n          qParams: { plan: qParams.org },\n        });\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        this.stateService.setLoginRedirect({\n          route: \"/setup/families-for-enterprise\",\n          qParams: { token: qParams.sponsorshipToken },\n        });\n      }\n      await super.ngOnInit();\n      this.rememberEmail = await this.stateService.getRememberEmail();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.apiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.enforcedPasswordPolicyOptions =\n          await this.policyService.getMasterPasswordPolicyOptions(policyList);\n      }\n    }\n  }\n\n  async goAfterLogIn() {\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          this.masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const loginRedirect = await this.stateService.getLoginRedirect();\n    if (loginRedirect != null) {\n      this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n      await this.stateService.setLoginRedirect(null);\n    } else {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  async submit() {\n    await this.stateService.setRememberEmail(this.rememberEmail);\n    if (!this.rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit();\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"mb-2 logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"showResetPasswordAutoEnrollWarning\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"form-text\">\n              <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n            </small>\n          </div>\n          <div class=\"form-check mb-3\">\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              id=\"rememberEmail\"\n              name=\"RememberEmail\"\n              [(ngModel)]=\"rememberEmail\"\n            />\n            <label class=\"form-check-label\" for=\"rememberEmail\">{{ \"rememberEmail\" | i18n }}</label>\n          </div>\n          <div class=\"mb-n3\" [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n            >\n              <i class=\"bwi bwi-pencil-square\" aria-hidden=\"true\"></i>\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n          <div class=\"d-flex\">\n            <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\">\n              <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"jslib-common/models/request/deleteRecoverRequest\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"jslib-common/models/request/twoFactorRecoveryRequest\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"jslib-angular/components/register.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyData } from \"jslib-common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"jslib-common/models/request/referenceEventRequest\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  showCreateOrgMessage = false;\n  layout = \"\";\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  private policies: Policy[];\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.stateService.setLoginRedirect({ route: \"/settings/premium\" });\n      } else if (qParams.org != null) {\n        this.showCreateOrgMessage = true;\n        this.referenceData.flow = qParams.org;\n        this.stateService.setLoginRedirect({\n          route: \"/settings/create-organization\",\n          qParams: { plan: qParams.org },\n        });\n      }\n      if (qParams.layout != null) {\n        this.layout = this.referenceData.layout = qParams.layout;\n      }\n      if (qParams.reference != null) {\n        this.referenceData.id = qParams.reference;\n      } else {\n        this.referenceData.id = (\"; \" + document.cookie)\n          .split(\"; reference=\")\n          .pop()\n          .split(\";\")\n          .shift();\n      }\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        this.stateService.setLoginRedirect({\n          route: \"/setup/families-for-enterprise\",\n          qParams: { token: qParams.sponsorshipToken },\n        });\n      }\n      if (this.referenceData.id === \"\") {\n        this.referenceData.id = null;\n      }\n    });\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.apiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n\n    await super.ngOnInit();\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.masterPasswordScore,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit();\n  }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\n  <!-- TEAMS 1 Header -->\n  <header\n    class=\"header\"\n    *ngIf=\"\n      layout === 'default' ||\n      layout === 'teams' ||\n      layout === 'teams1' ||\n      layout === 'teams2' ||\n      layout === 'enterprise' ||\n      layout === 'enterprise1' ||\n      layout === 'enterprise2' ||\n      layout === 'cnetcmpgnent' ||\n      layout === 'cnetcmpgnteams' ||\n      layout === 'cnetcmpgnind'\n    \"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-7\">\n          <img\n            alt=\"Bitwarden\"\n            class=\"logo mb-2\"\n            src=\"../../images/register-layout/logo-horizontal-white.svg\"\n          />\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row\">\n      <div class=\"col-7\" *ngIf=\"layout\">\n        <div class=\"mt-5\">\n          <!-- Default Body -->\n          <div\n            *ngIf=\"\n              layout === 'teams' ||\n              layout === 'enterprise' ||\n              layout === 'enterprise1' ||\n              layout === 'default'\n            \"\n          >\n            <h1>The Bitwarden Password Manager</h1>\n            <h2>\n              Trusted by millions of individuals, teams, and organizations worldwide for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Collaborate and share securely</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'teams1' || layout === 'teams2' || layout === 'enterprise2'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'teams1' || layout === 'teams1'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'enterprise2'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnent'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'cnetcmpgnteams'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'cnetcmpgnent'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Premium Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnind'\">\n            <h1>Start Your Premium Account Now</h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Secure your account with advanced two-step login</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n        </div>\n      </div>\n      <div [ngClass]=\"{ 'col-5': layout, 'col-12': !layout }\">\n        <div class=\"row justify-content-md-center mt-5\">\n          <div [ngClass]=\"{ 'col-5': !layout, 'col-12': layout }\">\n            <p class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{ \"createAccount\" | i18n }}</p>\n            <div class=\"card d-block\">\n              <div class=\"card-body\">\n                <app-callout\n                  title=\"{{ 'createOrganizationStep1' | i18n }}\"\n                  type=\"info\"\n                  icon=\"bwi bwi-thumb-tack\"\n                  *ngIf=\"showCreateOrgMessage\"\n                >\n                  {{ \"createOrganizationCreatePersonalAccount\" | i18n }}\n                </app-callout>\n                <div class=\"form-group\">\n                  <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n                  <input\n                    id=\"email\"\n                    class=\"form-control\"\n                    type=\"text\"\n                    name=\"Email\"\n                    [(ngModel)]=\"email\"\n                    required\n                    [appAutofocus]=\"email === ''\"\n                    inputmode=\"email\"\n                    appInputVerbatim=\"false\"\n                  />\n                  <small class=\"form-text text-muted\">{{ \"emailAddressDesc\" | i18n }}</small>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"name\">{{ \"yourName\" | i18n }}</label>\n                  <input\n                    id=\"name\"\n                    class=\"form-control\"\n                    type=\"text\"\n                    name=\"Name\"\n                    [(ngModel)]=\"name\"\n                    [appAutofocus]=\"email !== ''\"\n                  />\n                  <small class=\"form-text text-muted\">{{ \"yourNameDesc\" | i18n }}</small>\n                </div>\n                <div class=\"form-group\">\n                  <app-callout\n                    type=\"info\"\n                    [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n                    *ngIf=\"enforcedPolicyOptions\"\n                  >\n                  </app-callout>\n                  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                  <div class=\"d-flex\">\n                    <div class=\"w-100\">\n                      <input\n                        id=\"masterPassword\"\n                        type=\"{{ showPassword ? 'text' : 'password' }}\"\n                        name=\"MasterPassword\"\n                        class=\"text-monospace form-control mb-1\"\n                        [(ngModel)]=\"masterPassword\"\n                        (input)=\"updatePasswordStrength()\"\n                        required\n                        appInputVerbatim\n                      />\n                      <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                      </app-password-strength>\n                    </div>\n                    <div>\n                      <button\n                        type=\"button\"\n                        class=\"ml-1 btn btn-link\"\n                        appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                        (click)=\"togglePassword(false)\"\n                      >\n                        <i\n                          class=\"bwi bwi-lg\"\n                          aria-hidden=\"true\"\n                          [ngClass]=\"{\n                            'bwi-eye': !showPassword,\n                            'bwi-eye-slash': showPassword\n                          }\"\n                        ></i>\n                      </button>\n                      <div class=\"progress-bar invisible\"></div>\n                    </div>\n                  </div>\n                  <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                  <div class=\"d-flex\">\n                    <input\n                      id=\"masterPasswordRetype\"\n                      type=\"{{ showPassword ? 'text' : 'password' }}\"\n                      name=\"MasterPasswordRetype\"\n                      class=\"text-monospace form-control\"\n                      [(ngModel)]=\"confirmMasterPassword\"\n                      required\n                      appInputVerbatim\n                    />\n                    <button\n                      type=\"button\"\n                      class=\"ml-1 btn btn-link\"\n                      appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                      (click)=\"togglePassword(true)\"\n                    >\n                      <i\n                        class=\"bwi bwi-lg\"\n                        aria-hidden=\"true\"\n                        [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                      ></i>\n                    </button>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n                  <input\n                    id=\"hint\"\n                    class=\"form-control\"\n                    type=\"text\"\n                    name=\"Hint\"\n                    [(ngModel)]=\"hint\"\n                  />\n                  <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n                </div>\n                <div [hidden]=\"!showCaptcha()\">\n                  <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n                </div>\n                <div class=\"form-group\" *ngIf=\"showTerms\">\n                  <div class=\"form-check\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      id=\"acceptPolicies\"\n                      [(ngModel)]=\"acceptPolicies\"\n                      name=\"AcceptPolicies\"\n                    />\n                    <label class=\"form-check-label small text-muted\" for=\"acceptPolicies\">\n                      {{ \"acceptPolicies\" | i18n }}<br />\n                      <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n                        \"termsOfService\" | i18n\n                      }}</a\n                      >,\n                      <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n                        \"privacyPolicy\" | i18n\n                      }}</a>\n                    </label>\n                  </div>\n                </div>\n                <hr />\n                <div class=\"d-flex mb-2\">\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary btn-block btn-submit\"\n                    [disabled]=\"form.loading\"\n                  >\n                    <span>{{ \"submit\" | i18n }}</span>\n                    <i\n                      class=\"bwi bwi-spinner bwi-spin\"\n                      title=\"{{ 'loading' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                  </button>\n                  <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                    {{ \"cancel\" | i18n }}\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-7 d-flex align-items-center\">\n        <div\n          *ngIf=\"\n            layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/cnet-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"cnet logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              \"No more excuses; start using Bitwarden today. The identity you save could be your\n              own. The money definitely will be.\"\n            </blockquote>\n          </figure>\n        </div>\n\n        <div\n          *ngIf=\"\n            layout === 'teams' ||\n            layout === 'teams1' ||\n            layout === 'teams2' ||\n            layout === 'enterprise' ||\n            layout === 'enterprise1' ||\n            layout === 'enterprise2' ||\n            layout === 'default'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/forbes-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"Forbes Logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              “Bitwarden boasts the backing of some of the world's best security experts and an\n              attractive, easy-to-use interface”\n            </blockquote>\n          </figure>\n        </div>\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'teams' ||\n          layout === 'teams1' ||\n          layout === 'teams2' ||\n          layout === 'enterprise' ||\n          layout === 'enterprise1' ||\n          layout === 'enterprise2' ||\n          layout === 'default'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"jslib-angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"jslib-angular/components/set-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  (input)=\"updatePasswordStrength()\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"jslib-angular/components/sso.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"organizationIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"jslib-angular/components/two-factor-options.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"jslib-angular/components/two-factor.component\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    const loginRedirect = await this.stateService.getLoginRedirect();\n    if (loginRedirect != null) {\n      this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n      await this.stateService.setLoginRedirect(null);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"jslib-angular/components/update-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    (input)=\"updatePasswordStrength()\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [score]=\"masterPasswordScore\"\n                    [showText]=\"true\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"jslib-angular/components/update-temp-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  (input)=\"updatePasswordStrength()\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"jslib-common/models/request/verifyEmailRequest\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"jslib-common/models/request/verifyDeleteRecoverRequest\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SettingsService } from \"jslib-common/abstractions/settings.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { DisableSendPolicy } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicy } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicy } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicy } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicy } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicy } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicy } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicy } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicy } from \"./organizations/policies/two-factor-authentication.component\";\nimport { PolicyListService } from \"./services/policy-list.service\";\nimport { RouterService } from \"./services/router.service\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n\n  constructor(\n    private broadcasterService: BroadcasterService,\n    private tokenService: TokenService,\n    private folderService: FolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventService: EventService,\n    private policyService: PolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n          case \"loggedOut\":\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            window.setTimeout(() => this.routerService.setPreviousUrl(message.url), 500);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n      new ResetPasswordPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  private async logOut(expired: boolean) {\n    await this.eventService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.eventService.clearEvents(),\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      this.router.navigate([\"/\"]);\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: any): Promise<void>;\n  abstract unauthedHandler(qParams: any): Promise<void>;\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      await this.stateService.setLoginRedirect(null);\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          await this.stateService.setLoginRedirect({\n            route: this.getRedirectRoute(),\n            qParams: qParams,\n          });\n\n          this.email = qParams.email;\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n\n  getRedirectRoute() {\n    const urlTree = this.router.parseUrl(this.router.url);\n    urlTree.queryParams = {};\n    return urlTree.toString();\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { EventView } from \"jslib-common/models/view/eventView\";\n\nimport { EventService } from \"src/app/services/event.service\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.i18nService.t(\"unknown\"),\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.platformUtilsService.saveFile(window, data, { type: \"text/plain\" }, fileName);\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"jslib-angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"jslib-common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"jslib-common/enums/providerUserType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"jslib-common/models/response/organizationUserResponse\";\nimport { ProviderUserUserDetailsResponse } from \"jslib-common/models/response/provider/providerUserResponse\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.allUsers != null ? this.allUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.allUsers != null &&\n      this.statusMap != null &&\n      this.allUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<any>;\n\n  protected allUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<any>;\n  abstract reinviteUser(id: string): Promise<any>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<any>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.allUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.deleteWarningMessage(user),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected deleteWarningMessage(user: UserType): string {\n    return this.i18nService.t(\"removeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"jslib-angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h2>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() score?: number;\n  @Input() showText = false;\n\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnChanges(): void {\n    this.scoreWidth = this.score == null ? 0 : (this.score + 1) * 20;\n    switch (this.score) {\n      case 4:\n        this.color = \"bg-success\";\n        this.text = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        this.color = \"bg-primary\";\n        this.text = this.i18nService.t(\"good\");\n        break;\n      case 2:\n        this.color = \"bg-warning\";\n        this.text = this.i18nService.t(\"weak\");\n        break;\n      default:\n        this.color = \"bg-danger\";\n        this.text = this.score != null ? this.i18nService.t(\"weak\") : null;\n        break;\n    }\n  }\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button *appNotPremium bit-badge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }}, Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }}, Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure provides are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"myVault\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/settings\">{{ \"settings\" | i18n }}</a>\n        </li>\n      </ul>\n    </div>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li class=\"nav-item dropdown\">\n        <a\n          class=\"nav-item nav-link dropdown-toggle\"\n          href=\"#\"\n          id=\"nav-profile\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          <i class=\"bwi bwi-user-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </a>\n        <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"nav-profile\">\n          <div class=\"dropdown-item-text d-flex align-items-center\" *ngIf=\"name\" appStopProp>\n            <app-avatar\n              [data]=\"name\"\n              [email]=\"email\"\n              size=\"25\"\n              fontSize=\"14\"\n              [circle]=\"true\"\n            ></app-avatar>\n            <div class=\"ml-2 overflow-hidden\">\n              <span>{{ \"loggedInAs\" | i18n }}</span>\n              <small class=\"text-muted\">{{ name }}</small>\n            </div>\n          </div>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" href=\"#\" routerLink=\"/settings/account\">\n            <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a\n            class=\"dropdown-item\"\n            href=\"https://bitwarden.com/help/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n            {{ \"getHelp\" | i18n }}\n          </a>\n          <a\n            class=\"dropdown-item\"\n            href=\"https://bitwarden.com/download/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n            {{ \"getApps\" | i18n }}\n          </a>\n          <div class=\"dropdown-divider\"></div>\n          <button type=\"button\" class=\"dropdown-item\" (click)=\"lock()\">\n            <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n            {{ \"lockNow\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\">\n            <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n            {{ \"logOut\" | i18n }}\n          </button>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nconst BroadcasterSubscriptionId = \"OrganizationLayoutComponent\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization: Organization;\n  businessTokenPromise: Promise<any>;\n  private organizationId: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"updatedOrgLicense\":\n            await this.load();\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showToolsTab || this.organization.isOwner;\n  }\n\n  get showManageTab(): boolean {\n    return (\n      this.organization.canManageUsers ||\n      this.organization.canViewAllCollections ||\n      this.organization.canViewAssignedCollections ||\n      this.organization.canManageGroups ||\n      this.organization.canManagePolicies ||\n      this.organization.canAccessEventLogs\n    );\n  }\n\n  get showToolsTab(): boolean {\n    return this.organization.canAccessImportExport || this.organization.canAccessReports;\n  }\n\n  get toolsRoute(): string {\n    return this.organization.canAccessImportExport\n      ? \"tools/import\"\n      : \"tools/exposed-passwords-report\";\n  }\n\n  get manageRoute(): string {\n    let route: string;\n    switch (true) {\n      case this.organization.canManageUsers:\n        route = \"manage/people\";\n        break;\n      case this.organization.canViewAssignedCollections || this.organization.canViewAllCollections:\n        route = \"manage/collections\";\n        break;\n      case this.organization.canManageGroups:\n        route = \"manage/groups\";\n        break;\n      case this.organization.canManagePolicies:\n        route = \"manage/policies\";\n        break;\n      case this.organization.canAccessEventLogs:\n        route = \"manage/events\";\n        break;\n    }\n    return route;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <app-avatar [data]=\"organization.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ organization.name }}</span>\n          <small class=\"text-muted\">{{ \"organization\" | i18n }}</small>\n        </div>\n        <div\n          class=\"ml-3 card border-danger text-danger bg-transparent\"\n          *ngIf=\"!organization.enabled\"\n        >\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"organizationIsDisabled\" | i18n }}\n          </div>\n        </div>\n        <div\n          class=\"ml-3 card border-info text-info bg-transparent\"\n          *ngIf=\"organization.isProviderUser\"\n        >\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"accessingUsingProvider\" | i18n: organization.providerName }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-lock\" aria-hidden=\"true\"></i>\n            {{ \"vault\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showToolsTab\">\n          <a class=\"nav-link\" [routerLink]=\"toolsRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-wrench\" aria-hidden=\"true\"></i>\n            {{ \"tools\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"organization.isOwner\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { OrganizationUserBulkConfirmRequest } from \"jslib-common/models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"jslib-common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new OrganizationUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"jslib-common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(protected apiService: ApiService, protected i18nService: I18nService) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <app-avatar\n                [data]=\"item.user | userName\"\n                [email]=\"item.user.email\"\n                size=\"25\"\n                [circle]=\"true\"\n                [fontSize]=\"14\"\n              ></app-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"jslib-common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { CollectionRequest } from \"jslib-common/models/request/collectionRequest\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { GroupResponse } from \"jslib-common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-collection-add-edit\",\n  templateUrl: \"collection-add-edit.component.html\",\n})\nexport class CollectionAddEditComponent implements OnInit {\n  @Input() collectionId: string;\n  @Input() organizationId: string;\n  @Input() canSave: boolean;\n  @Input() canDelete: boolean;\n  @Output() onSavedCollection = new EventEmitter();\n  @Output() onDeletedCollection = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  accessGroups = false;\n  title: string;\n  name: string;\n  externalId: string;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  private orgKey: SymmetricCryptoKey;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    const organization = await this.organizationService.get(this.organizationId);\n    this.accessGroups = organization.useGroups;\n    this.editMode = this.loading = this.collectionId != null;\n    if (this.accessGroups) {\n      const groupsResponse = await this.apiService.getGroups(this.organizationId);\n      this.groups = groupsResponse.data\n        .map((r) => r)\n        .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    }\n    this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editCollection\");\n      try {\n        const collection = await this.apiService.getCollectionDetails(\n          this.organizationId,\n          this.collectionId\n        );\n        this.name = await this.cryptoService.decryptToUtf8(\n          new EncString(collection.name),\n          this.orgKey\n        );\n        this.externalId = collection.externalId;\n        if (collection.groups != null && this.groups.length > 0) {\n          collection.groups.forEach((s) => {\n            const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n            if (group != null && group.length > 0) {\n              (group[0] as any).checked = true;\n              (group[0] as any).readOnly = s.readOnly;\n              (group[0] as any).hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addCollection\");\n    }\n\n    this.groups.forEach((g) => {\n      if (g.accessAll) {\n        (g as any).checked = true;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    if (g.accessAll) {\n      return;\n    }\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n      (g as any).hidePasswords = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    if (this.orgKey == null) {\n      throw new Error(\"No encryption key for this organization.\");\n    }\n\n    const request = new CollectionRequest();\n    request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n    request.externalId = this.externalId;\n    request.groups = this.groups\n      .filter((g) => (g as any).checked && !g.accessAll)\n      .map(\n        (g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords)\n      );\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putCollection(\n          this.organizationId,\n          this.collectionId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.postCollection(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedCollectionId\" : \"createdCollectionId\", this.name)\n      );\n      this.onSavedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", this.name)\n      );\n      this.onDeletedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n            appAutofocus\n            [disabled]=\"!this.canSave\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n            [disabled]=\"!this.canSave\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <ng-container *ngIf=\"accessGroups\">\n          <h3 class=\"mt-4 d-flex mb-0\">\n            {{ \"groupAccess\" | i18n }}\n            <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </h3>\n          <div *ngIf=\"!groups || !groups.length\">\n            {{ \"noGroupsInList\" | i18n }}\n          </div>\n          <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let g of groups; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.checked\"\n                    name=\"Groups[{{ i }}].Checked\"\n                    [disabled]=\"g.accessAll || !this.canSave\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(g)\">\n                  {{ g.name }}\n                  <ng-container *ngIf=\"g.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter text-muted bwi-fw\"\n                      title=\"{{ 'groupAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"groupAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.hidePasswords\"\n                    name=\"Groups[{{ i }}].HidePasswords\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.readOnly\"\n                    name=\"Groups[{{ i }}].ReadOnly\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"this.canSave\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"this.canDelete\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"jslib-common/models/response/collectionResponse\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { CollectionAddEditComponent } from \"./collection-add-edit.component\";\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection: CollectionView) {\n    const canCreate = collection == null && this.canCreate;\n    const canEdit = collection != null && this.canEdit(collection);\n    const canDelete = collection != null && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      CollectionAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.collectionId = collection != null ? collection.id : null;\n        comp.canSave = canCreate || canEdit;\n        comp.canDelete = canDelete;\n        comp.onSavedCollection.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedCollection.subscribe(() => {\n          modal.close();\n          this.removeCollection(collection);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\n\nimport { EventService } from \"../../services/event.service\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.apiService.getOrganizationUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && refreshBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && refreshBtn.loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && moreBtn.loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { OrganizationUserUserDetailsResponse } from \"jslib-common/models/response/organizationUserResponse\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  async loadUsers() {\n    const users = await this.apiService.getOrganizationUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div\n        class=\"modal-body\"\n        *ngIf=\"\n          !loading && users && (users | search: searchText:'name':'email':'id') as searchedUsers\n        \"\n      >\n        <div class=\"d-flex\">\n          <div class=\"mr-3\">\n            <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n            <input\n              type=\"search\"\n              class=\"form-control form-control-sm\"\n              id=\"search\"\n              placeholder=\"{{ 'search' | i18n }}\"\n              name=\"SearchText\"\n              [(ngModel)]=\"searchText\"\n            />\n          </div>\n          <div class=\"btn-group btn-group-sm\" role=\"group\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              [ngClass]=\"{ active: !showSelected }\"\n              (click)=\"filterSelected(false)\"\n            >\n              {{ \"all\" | i18n }}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              [ngClass]=\"{ active: showSelected }\"\n              (click)=\"filterSelected(true)\"\n            >\n              {{ \"selected\" | i18n }}\n              <span class=\"badge badge-pill badge-info\" *ngIf=\"selectedCount\">{{\n                selectedCount\n              }}</span>\n            </button>\n          </div>\n        </div>\n        <ng-container *ngIf=\"!searchedUsers.length\">\n          <hr />\n          {{ \"noUsersInList\" | i18n }}\n        </ng-container>\n        <ng-container *ngIf=\"searchedUsers.length\">\n          <table class=\"table table-hover table-list mb-0\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let u of searchedUsers\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <app-avatar\n                    [data]=\"u | userName\"\n                    [email]=\"u.email\"\n                    size=\"25\"\n                    [circle]=\"true\"\n                    [fontSize]=\"14\"\n                  >\n                  </app-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    class=\"badge badge-secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    class=\"badge badge-warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"../../common/base.events.component\";\nimport { EventService } from \"../../services/event.service\";\n\n@Component({\n  selector: \"app-org-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"org-events\";\n  organizationId: string;\n  organization: Organization;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService\n  ) {\n    super(eventService, i18nService, exportService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.useEvents) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getOrganizationUsers(this.organizationId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n\n    if (this.organization.providerId != null) {\n      try {\n        const provider = await this.providerService.get(this.organization.providerId);\n        if (\n          provider != null &&\n          (await this.providerService.get(this.organization.providerId)).canManageUsers\n        ) {\n          const providerUsersResponse = await this.apiService.getProviderUsers(\n            this.organization.providerId\n          );\n          providerUsersResponse.data.forEach((u) => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, {\n              name: `${name} (${this.organization.providerName})`,\n              email: u.email,\n            });\n          });\n        }\n      } catch (e) {\n        this.logService.warning(e);\n      }\n    }\n\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsOrganization(\n      this.organizationId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (userId == null) {\n      return null;\n    }\n\n    if (this.orgUsersUserIdMap.has(userId)) {\n      return this.orgUsersUserIdMap.get(userId);\n    }\n\n    if (r.providerId != null && r.providerId === this.organization.providerId) {\n      return {\n        name: this.organization.providerName,\n      };\n    }\n\n    return null;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { GroupRequest } from \"jslib-common/models/request/groupRequest\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"jslib-common/models/response/collectionResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { GroupResponse } from \"jslib-common/models/response/groupResponse\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      if (organization == null || !organization.useGroups) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"groups\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newGroup\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n  \"\n>\n  <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedGroups.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let g of searchedGroups\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n  accessPolicies = false;\n  accessGroups = false;\n  accessEvents = false;\n  accessSso = false;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.accessPolicies = this.organization.usePolicies;\n      this.accessSso = this.organization.useSso;\n      this.accessEvents = this.organization.useEvents;\n      this.accessGroups = this.organization.useGroups;\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups && accessGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManagePolicies && accessPolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageSso && accessSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"jslib-angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { OrganizationKeysRequest } from \"jslib-common/models/request/organizationKeysRequest\";\nimport { OrganizationUserBulkRequest } from \"jslib-common/models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"jslib-common/models/request/organizationUserConfirmRequest\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { OrganizationUserBulkResponse } from \"jslib-common/models/response/organizationUserBulkResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"jslib-common/models/response/organizationUserResponse\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organizationId: string;\n  status: OrganizationUserStatusType = null;\n  accessEvents = false;\n  accessGroups = false;\n  canResetPassword = false; // User permission (admin/custom)\n  orgUseResetPassword = false; // Org plan ability\n  orgHasKeys = false; // Org public/private keys\n  orgResetPasswordPolicyEnabled = false;\n  callingUserType: OrganizationUserType = null;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      if (!organization.canManageUsers) {\n        this.router.navigate([\"../collections\"], { relativeTo: this.route });\n        return;\n      }\n      this.accessEvents = organization.useEvents;\n      this.accessGroups = organization.useGroups;\n      this.canResetPassword = organization.canManageUsersPassword;\n      this.orgUseResetPassword = organization.useResetPassword;\n      this.callingUserType = organization.type;\n      this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n      // Backfill pub/priv key if necessary\n      if (this.canResetPassword && !this.orgHasKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        const response = await this.apiService.postOrganizationKeys(this.organizationId, request);\n        if (response != null) {\n          this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n          await this.syncService.fullSync(true); // Replace oganizations with new data\n        } else {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n      }\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const resetPasswordPolicy = await this.policyService.getPolicyForOrganization(\n      PolicyType.ResetPassword,\n      this.organizationId\n    );\n    this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n    super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.apiService.getOrganizationUsers(this.organizationId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteOrganizationUser(this.organizationId, id);\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<any> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.callingUserType) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.canResetPassword &&\n      callingUserHasPermission &&\n      this.orgUseResetPassword &&\n      this.orgHasKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.orgUseResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new OrganizationUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyOrganizationUserReinvite(\n        this.organizationId,\n        request\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.organizationId = this.organizationId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organizationId;\n        comp.id = user != null ? user.id : null;\n\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected deleteWarningMessage(user: OrganizationUserUserDetailsResponse): string {\n    if (user.usesKeyConnector) {\n      return this.i18nService.t(\"removeUserConfirmationKeyConnector\");\n    }\n\n    return super.deleteWarningMessage(user);\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{\n          acceptedCount\n        }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"usersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span class=\"badge badge-secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span class=\"badge badge-warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(u)\">\n              <i\n                class=\"bwi bwi-key\"\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"resetPassword(u)\"\n                  *ngIf=\"allowResetPassword(u)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"resetPassword\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #resetPasswordTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nimport { PolicyListService } from \"../../services/policy-list.service\";\nimport { BasePolicy } from \"../policies/base-policy.component\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.usePolicies) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span class=\"badge badge-success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"enabled\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies/base-policy.component\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.apiService.getPolicy(this.organizationId, this.policy.type);\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.putPolicy(this.organizationId, this.policy.type, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { OrganizationUserResetPasswordRequest } from \"jslib-common/models/request/organizationUserResetPasswordRequest\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword = false;\n  masterPasswordScore: number;\n  formPromise: Promise<any>;\n  private newPasswordStrengthTimeout: any;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // Get Enforced Policy Options\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.updatePasswordStrength();\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.masterPasswordScore,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.masterPasswordScore < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.apiService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.apiService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  updatePasswordStrength() {\n    if (this.newPasswordStrengthTimeout != null) {\n      clearTimeout(this.newPasswordStrengthTimeout);\n    }\n    this.newPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.newPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n                (input)=\"updatePasswordStrength()\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { PermissionsApi } from \"jslib-common/models/api/permissionsApi\";\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { OrganizationUserInviteRequest } from \"jslib-common/models/request/organizationUserInviteRequest\";\nimport { OrganizationUserUpdateRequest } from \"jslib-common/models/request/organizationUserUpdateRequest\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"jslib-common/models/response/collectionResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        const request = new OrganizationUserUpdateRequest();\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.collections = collections;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        this.formPromise = this.apiService.putOrganizationUser(\n          this.organizationId,\n          this.organizationUserId,\n          request\n        );\n      } else {\n        const request = new OrganizationUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        request.collections = collections;\n        this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <small>{{ \"customDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Manager Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Admin Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { OrganizationUserUpdateGroupsRequest } from \"jslib-common/models/request/organizationUserUpdateGroupsRequest\";\nimport { GroupResponse } from \"jslib-common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.apiService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.apiService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"g.checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new FormControl(false);\n  data: FormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPass\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: FormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{\n      \"personalOwnershipCheckboxDesc\" | i18n\n    }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(private formBuilder: FormBuilder, private organizationService: OrganizationService) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: FormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLogin\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { OrganizationKeysRequest } from \"jslib-common/models/request/organizationKeysRequest\";\nimport { OrganizationUpdateRequest } from \"jslib-common/models/request/organizationUpdateRequest\";\nimport { OrganizationResponse } from \"jslib-common/models/response/organizationResponse\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\nimport { TaxInfoComponent } from \"../../settings/tax-info.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  selfHosted = false;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      try {\n        this.org = await this.apiService.getOrganization(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.apiService.postOrganizationApiKey.bind(this.apiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.apiService.postOrganizationRotateApiKey.bind(this.apiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myOrganization\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"identifier\">{{ \"identifier\" | i18n }}</label>\n        <input\n          id=\"identifier\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Identifier\"\n          [(ngModel)]=\"org.identifier\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ org.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"taxInformation\" | i18n }}</h1>\n</div>\n<p>{{ \"taxInformationDesc\" | i18n }}</p>\n<div *ngIf=\"!org || loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #formTax\n  (ngSubmit)=\"submitTaxInfo()\"\n  [appApiAction]=\"taxFormPromise\"\n  ngNativeValidate\n>\n  <app-tax-info></app-tax-info>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationSubscriptionUpdateRequest } from \"jslib-common/models/request/organizationSubscriptionUpdateRequest\";\n\n@Component({\n  selector: \"app-adjust-subscription\",\n  templateUrl: \"adjust-subscription.component.html\",\n})\nexport class AdjustSubscription {\n  @Input() organizationId: string;\n  @Input() maxAutoscaleSeats: number;\n  @Input() currentSeatCount: number;\n  @Input() seatPrice = 0;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter();\n\n  formPromise: Promise<any>;\n  limitSubscription: boolean;\n  newSeatCount: number;\n  newMaxSeats: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    this.limitSubscription = this.maxAutoscaleSeats != null;\n    this.newSeatCount = this.currentSeatCount;\n    this.newMaxSeats = this.maxAutoscaleSeats;\n  }\n\n  async submit() {\n    try {\n      const seatAdjustment = this.newSeatCount - this.currentSeatCount;\n      const request = new OrganizationSubscriptionUpdateRequest(seatAdjustment, this.newMaxSeats);\n      this.formPromise = this.apiService.postOrganizationUpdateSubscription(\n        this.organizationId,\n        request\n      );\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"subscriptionUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.onAdjusted.emit();\n  }\n\n  limitSubscriptionChanged() {\n    if (!this.limitSubscription) {\n      this.newMaxSeats = null;\n    }\n  }\n\n  get adjustedSeatTotal(): number {\n    return this.newSeatCount * this.seatPrice;\n  }\n\n  get maxSeatTotal(): number {\n    return this.newMaxSeats * this.seatPrice;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"newSeatCount\">{{ \"subscriptionSeats\" | i18n }}</label>\n        <input\n          id=\"newSeatCount\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"NewSeatCount\"\n          [(ngModel)]=\"newSeatCount\"\n          min=\"0\"\n          step=\"1\"\n          required\n        />\n        <small class=\"d-block text-muted mb-4\">\n          <strong>{{ \"total\" | i18n }}:</strong> {{ newSeatCount || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ adjustedSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"form-group col-sm\">\n        <div class=\"form-check\">\n          <input\n            id=\"limitSubscription\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"LimitSubscription\"\n            [(ngModel)]=\"limitSubscription\"\n            (change)=\"limitSubscriptionChanged()\"\n          />\n          <label for=\"limitSubscription\">{{ \"limitSubscription\" | i18n }}</label>\n        </div>\n        <small class=\"d-block text-muted\">{{ \"limitSubscriptionDesc\" | i18n }}</small>\n      </div>\n    </div>\n    <div class=\"row mb-4\" [hidden]=\"!limitSubscription\">\n      <div class=\"form-group col-sm\">\n        <label for=\"maxAutoscaleSeats\">{{ \"maxSeatLimit\" | i18n }}</label>\n        <input\n          id=\"maxAutoscaleSeats\"\n          class=\"form-control col-6\"\n          type=\"number\"\n          name=\"MaxAutoscaleSeats\"\n          [(ngModel)]=\"newMaxSeats\"\n          [min]=\"newSeatCount == null ? 1 : newSeatCount\"\n          step=\"1\"\n          [required]=\"limitSubscription\"\n        />\n        <small class=\"d-block text-muted\">\n          <strong>{{ \"maxSeatCost\" | i18n }}:</strong> {{ newMaxSeats || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ maxSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"save\" | i18n }}</span>\n    </button>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\n\n@Component({\n  selector: \"app-change-plan\",\n  templateUrl: \"change-plan.component.html\",\n})\nexport class ChangePlanComponent {\n  @Input() organizationId: string;\n  @Output() onChanged = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n  defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n  defaultUpgradeProduct: ProductType = ProductType.Families;\n\n  constructor(private logService: LogService) {}\n\n  async submit() {\n    try {\n      this.onChanged.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<div class=\"card card-org-plans\">\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h2 class=\"card-body-header\">{{ \"changeBillingPlan\" | i18n }}</h2>\n    <p class=\"mb-0\">{{ \"changeBillingPlanUpgrade\" | i18n }}</p>\n    <app-organization-plans\n      [showFree]=\"false\"\n      [showCancel]=\"true\"\n      [plan]=\"defaultUpgradePlan\"\n      [product]=\"defaultUpgradeProduct\"\n      [organizationId]=\"organizationId\"\n      (onCanceled)=\"cancel()\"\n    >\n    </app-organization-plans>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { Verification } from \"jslib-common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<any> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.deleteOrganization(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-download-license\",\n  templateUrl: \"download-license.component.html\",\n})\nexport class DownloadLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onDownloaded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  installationId: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.installationId == null || this.installationId === \"\") {\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.getOrganizationLicense(\n        this.organizationId,\n        this.installationId\n      );\n      const license = await this.formPromise;\n      const licenseString = JSON.stringify(license, null, 2);\n      this.platformUtilsService.saveFile(\n        window,\n        licenseString,\n        null,\n        \"bitwarden_organization_license.json\"\n      );\n      this.onDownloaded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"downloadLicense\" | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <div class=\"d-flex\">\n          <label for=\"installationId\">{{ \"enterInstallationId\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/licensing-on-premise/#organization-account-sharing\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"installationId\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"InstallationId\"\n          [(ngModel)]=\"installationId\"\n          required\n        />\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { UserBillingComponent } from \"../../settings/user-billing.component\";\n\n@Component({\n  selector: \"app-org-billing\",\n  templateUrl: \"../../settings/user-billing.component.html\",\n})\nexport class OrganizationBillingComponent extends UserBillingComponent implements OnInit {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>\n    {{ \"billing\" | i18n }}\n  </h1>\n  <button\n    (click)=\"load()\"\n    class=\"btn btn-sm btn-outline-primary ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"addCredit()\"\n    *ngIf=\"!showAddCredit\"\n  >\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <label class=\"sr-only\" for=\"verifyAmount1\">{{ \"amount\" | i18n: \"1\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount1\"\n            placeholder=\"xx\"\n            name=\"Amount1\"\n            [(ngModel)]=\"verifyAmount1\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <label class=\"sr-only\" for=\"verifyAmount2\">{{ \"amount\" | i18n: \"2\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount2\"\n            placeholder=\"xx\"\n            name=\"Amount2\"\n            [(ngModel)]=\"verifyAmount2\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-outline-primary btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"changePayment()\"\n    *ngIf=\"!showAdjustPayment\"\n  >\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    [organizationId]=\"organizationId\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <h2 class=\"spaced-header\">{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { OrganizationSubscriptionResponse } from \"jslib-common/models/response/organizationSubscriptionResponse\";\n\n@Component({\n  selector: \"app-org-subscription\",\n  templateUrl: \"organization-subscription.component.html\",\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  organizationId: string;\n  adjustSeatsAdd = true;\n  showAdjustSeats = false;\n  showAdjustSeatAutoscale = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  showDownloadLicense = false;\n  showChangePlan = false;\n  sub: OrganizationSubscriptionResponse;\n  selfHosted = false;\n\n  userOrg: Organization;\n\n  removeSponsorshipPromise: Promise<any>;\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    this.userOrg = await this.organizationService.get(this.organizationId);\n    this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async changePlan() {\n    this.showChangePlan = !this.showChangePlan;\n  }\n\n  closeChangePlan(changed: boolean) {\n    this.showChangePlan = false;\n  }\n\n  downloadLicense() {\n    this.showDownloadLicense = !this.showDownloadLicense;\n  }\n\n  closeDownloadLicense() {\n    this.showDownloadLicense = false;\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(updated: boolean) {\n    this.showUpdateLicense = false;\n    if (updated) {\n      this.load();\n      this.messagingService.send(\"updatedOrgLicense\");\n    }\n  }\n\n  subscriptionAdjusted() {\n    this.load();\n  }\n\n  adjustStorage(add: boolean) {\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async removeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeSponsorshipConfirmation\"),\n      this.i18nService.t(\"removeSponsorship\"),\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    try {\n      this.removeSponsorshipPromise = this.apiService.deleteRemoveSponsorship(this.organizationId);\n      await this.removeSponsorshipPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removeSponsorshipSuccess\")\n      );\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  get isExpired() {\n    return (\n      this.sub != null && this.sub.expiration != null && new Date(this.sub.expiration) < new Date()\n    );\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get billingInterval() {\n    const monthly = !this.sub.plan.isAnnual;\n    return monthly ? \"month\" : \"year\";\n  }\n\n  get storageGbPrice() {\n    return this.sub.plan.additionalStoragePricePerGb;\n  }\n\n  get seatPrice() {\n    return this.sub.plan.seatPrice;\n  }\n\n  get seats() {\n    return this.sub.seats;\n  }\n\n  get maxAutoscaleSeats() {\n    return this.sub.maxAutoscaleSeats;\n  }\n\n  get canAdjustSeats() {\n    return this.sub.plan.hasAdditionalSeatsOption;\n  }\n\n  get isSponsoredSubscription(): boolean {\n    return this.sub.subscription?.items.some((i) => i.sponsoredSubscriptionItem);\n  }\n\n  get canDownloadLicense() {\n    return (\n      (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n      (this.subscription != null && !this.subscription.cancelled)\n    );\n  }\n\n  get subscriptionDesc() {\n    if (this.sub.planType === PlanType.Free) {\n      return this.i18nService.t(\"subscriptionFreePlan\", this.sub.seats.toString());\n    } else if (\n      this.sub.planType === PlanType.FamiliesAnnually ||\n      this.sub.planType === PlanType.FamiliesAnnually2019\n    ) {\n      if (this.isSponsoredSubscription) {\n        return this.i18nService.t(\"subscriptionSponsoredFamiliesPlan\", this.sub.seats.toString());\n      } else {\n        return this.i18nService.t(\"subscriptionFamiliesPlan\", this.sub.seats.toString());\n      }\n    } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n      return this.i18nService.t(\"subscriptionMaxReached\", this.sub.seats.toString());\n    } else if (this.sub.maxAutoscaleSeats == null) {\n      return this.i18nService.t(\"subscriptionUserSeatsUnlimitedAutoscale\");\n    } else {\n      return this.i18nService.t(\n        \"subscriptionUserSeatsLimitedAutoscale\",\n        this.sub.maxAutoscaleSeats.toString()\n      );\n    }\n  }\n\n  get showChangePlanButton() {\n    return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"subscription\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <dl>\n          <dt>{{ \"billingPlan\" | i18n }}</dt>\n          <dd>{{ sub.plan.name }}</dd>\n          <ng-container *ngIf=\"subscription\">\n            <dt>{{ \"status\" | i18n }}</dt>\n            <dd>\n              <span class=\"text-capitalize\">{{\n                isSponsoredSubscription ? \"sponsored\" : subscription.status || \"-\"\n              }}</span>\n              <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n                \"pendingCancellation\" | i18n\n              }}</span>\n            </dd>\n            <dt>{{ \"nextCharge\" | i18n }}</dt>\n            <dd>\n              {{\n                nextInvoice\n                  ? (nextInvoice.date | date: \"mediumDate\") +\n                    \", \" +\n                    (nextInvoice.amount | currency: \"$\")\n                  : \"-\"\n              }}\n            </dd>\n          </ng-container>\n        </dl>\n      </div>\n      <div class=\"col-8\" *ngIf=\"subscription\">\n        <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n        <table class=\"table\">\n          <tbody>\n            <tr *ngFor=\"let i of subscription.items\">\n              <td>\n                {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n                {{ i.amount | currency: \"$\" }}\n              </td>\n              <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <ng-container *ngIf=\"userOrg?.providerId != null\">\n        <div class=\"col-sm\">\n          <dl>\n            <dt>{{ \"provider\" | i18n }}</dt>\n            <dd>{{ \"yourProviderIs\" | i18n: userOrg.providerName }}</dd>\n          </dl>\n        </div>\n      </ng-container>\n    </div>\n    <ng-container>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"changePlan()\"\n        *ngIf=\"showChangePlanButton\"\n      >\n        {{ \"changeBillingPlan\" | i18n }}\n      </button>\n      <app-change-plan\n        [organizationId]=\"organizationId\"\n        (onChanged)=\"closeChangePlan(true)\"\n        (onCanceled)=\"closeChangePlan(false)\"\n        *ngIf=\"showChangePlan\"\n      ></app-change-plan>\n    </ng-container>\n    <h2 class=\"spaced-header\">{{ \"manageSubscription\" | i18n }}</h2>\n    <p class=\"mb-4\">{{ subscriptionDesc }}</p>\n    <ng-container\n      *ngIf=\"\n        subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\n      \"\n    >\n      <div class=\"mt-3\">\n        <app-adjust-subscription\n          [seatPrice]=\"seatPrice\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          [currentSeatCount]=\"seats\"\n          [maxAutoscaleSeats]=\"maxAutoscaleSeats\"\n          (onAdjusted)=\"subscriptionAdjusted()\"\n        >\n        </app-adjust-subscription>\n      </div>\n    </ng-container>\n    <button\n      #removeSponsorshipBtn\n      type=\"button\"\n      class=\"btn btn-outline-danger btn-submit\"\n      (click)=\"removeSponsorship()\"\n      [appApiAction]=\"removeSponsorshipPromise\"\n      [disabled]=\"removeSponsorshipBtn.loading\"\n      *ngIf=\"isSponsoredSubscription\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"removeSponsorship\" | i18n }}</span>\n    </button>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"storageGbPrice\"\n          [add]=\"adjustStorageAdd\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n\n    <h2 class=\"spaced-header\">{{ \"additionalOptions\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"additionalOptionsDesc\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"canDownloadLicense\"\n        [disabled]=\"showDownloadLicense\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-1\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\n      <app-download-license\n        [organizationId]=\"organizationId\"\n        (onDownloaded)=\"closeDownloadLicense()\"\n        (onCanceled)=\"closeDownloadLicense()\"\n      ></app-download-license>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"selfHosted\">\n    <dl>\n      <dt>{{ \"billingPlan\" | i18n }}</dt>\n      <dd>{{ sub.plan.name }}</dd>\n      <dt>{{ \"expiration\" | i18n }}</dt>\n      <dd *ngIf=\"sub.expiration\">\n        {{ sub.expiration | date: \"mediumDate\" }}\n        <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\n          <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {{ \"licenseIsExpired\" | i18n }}\n        </span>\n      </dd>\n      <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n    </dl>\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          [organizationId]=\"organizationId\"\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        ></app-update-license>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent {\n  access2fa = false;\n  selfHosted: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.selfHosted = await this.platformUtilsService.isSelfHost();\n      const organization = await this.organizationService.get(params.organizationId);\n      this.access2fa = organization.use2fa;\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myOrganization\" | i18n }}\n          </a>\n          <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!selfHosted\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"access2fa\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(apiService, modalService, messagingService, policyService, stateService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"twoStepLogin\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<p *ngIf=\"organizationId\">{{ \"twoStepLoginOrganizationDesc\" | i18n }}</p>\n<app-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</app-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<app-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</app-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary btn-sm\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { PlanSponsorshipType } from \"jslib-common/enums/planSponsorshipType\";\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"jslib-common/models/request/organization/organizationSponsorshipRedeemRequest\";\n\nimport { DeleteOrganizationComponent } from \"src/app/organizations/settings/delete-organization.component\";\nimport { OrganizationPlansComponent } from \"src/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n\n      this.existingFamilyOrganizations = (await this.organizationService.getAll()).filter(\n        (o) => o.planProductType === ProductType.Families\n      );\n\n      if (this.existingFamilyOrganizations.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { ExportComponent as BaseExportComponent } from \"../../tools/export.component\";\n\n@Component({\n  selector: \"app-org-export\",\n  templateUrl: \"../../tools/export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    private route: ActivatedRoute,\n    policyService: PolicyService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      logService,\n      userVerificationService,\n      formBuilder\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n    });\n    await super.ngOnInit();\n  }\n\n  async checkExportDisabled() {\n    return;\n  }\n\n  getExportData() {\n    return this.exportService.getOrganizationExport(this.organizationId, this.format);\n  }\n\n  getFileName() {\n    return super.getFileName(\"org\");\n  }\n\n  async collectEvent(): Promise<any> {\n    // TODO\n    // await this.eventService.collect(EventType.Organization_ClientExportedVault);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  ngNativeValidate\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"exportForm\"\n>\n  <div class=\"page-header\">\n    <h1>{{ \"exportVault\" | i18n }}</h1>\n  </div>\n\n  <app-callout type=\"error\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n    {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n  </app-callout>\n  <app-export-scope-callout\n    [organizationId]=\"organizationId\"\n    *ngIf=\"!disabledByPolicy\"\n  ></app-export-scope-callout>\n\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n      <select class=\"form-control\" id=\"format\" name=\"Format\" formControlName=\"format\">\n        <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <app-verify-master-password ngDefaultControl formControlName=\"secret\" name=\"secret\">\n      </app-verify-master-password>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || exportForm.disabled\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n      *ngIf=\"form.loading\"\n    ></i>\n    <span *ngIf=\"!form.loading\">{{ \"exportVault\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent } from \"../../reports/exposed-passwords-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"../../reports/exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      auditService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  ngOnInit() {\n    const dynamicSuper = Object.getPrototypeOf(this.constructor.prototype);\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      // TODO: We should do something about this, calling super in an async function is bad\n      dynamicSuper.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button\n  bit-button\n  buttonType=\"primary\"\n  type=\"button\"\n  class=\"btn-submit\"\n  [disabled]=\"loading\"\n  (click)=\"load()\"\n>\n  <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n  <span>{{ \"checkExposedPasswords\" | i18n }}</span>\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span class=\"badge badge-warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ImportService } from \"jslib-common/abstractions/import.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\n\nimport { ImportComponent as BaseImportComponent } from \"../../tools/import.component\";\n\n@Component({\n  selector: \"app-org-import\",\n  templateUrl: \"../../tools/import.component.html\",\n})\nexport class ImportComponent extends BaseImportComponent {\n  organizationName: string;\n\n  constructor(\n    i18nService: I18nService,\n    importService: ImportService,\n    router: Router,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(i18nService, importService, router, platformUtilsService, policyService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.successNavigate = [\"organizations\", this.organizationId, \"vault\"];\n      await super.ngOnInit();\n      this.importBlockedByPolicy = false;\n    });\n    const organization = await this.organizationService.get(this.organizationId);\n    this.organizationName = organization.name;\n  }\n\n  async submit() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"importWarning\", this.organizationName),\n      this.i18nService.t(\"warning\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    super.submit();\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"importData\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"importBlockedByPolicy\">\n  {{ \"personalOwnershipPolicyInEffectImports\" | i18n }}\n</app-callout>\n<form #form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"type\">1. {{ \"selectFormat\" | i18n }}</label>\n        <select\n          id=\"type\"\n          name=\"Format\"\n          [(ngModel)]=\"format\"\n          class=\"form-control\"\n          [disabled]=\"importBlockedByPolicy\"\n          required\n        >\n          <option *ngFor=\"let o of featuredImportOptions\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          <ng-container *ngIf=\"importOptions && importOptions.length\">\n            <option value=\"-\" disabled></option>\n            <option *ngFor=\"let o of importOptions\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </ng-container>\n        </select>\n      </div>\n    </div>\n  </div>\n  <app-callout type=\"info\" title=\"{{ getFormatInstructionTitle() }}\" *ngIf=\"format\">\n    <ng-container *ngIf=\"format === 'bitwardencsv' || format === 'bitwardenjson'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/export-your-data/\">\n        https://bitwarden.com/help/export-your-data/</a\n      >\n    </ng-container>\n    <ng-container *ngIf=\"format === 'lastpasscsv'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-lastpass/\">\n        https://bitwarden.com/help/import-from-lastpass/</a\n      >\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keepassxcsv'\">\n      Using the KeePassX desktop application, navigate to \"Database\" &rarr; \"Export to CSV file\" and\n      save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'aviracsv'\">\n      In the Avira web vault, go to \"Settings\" &rarr; \"My Data\" &rarr; \"Export data\" and save the\n      CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'blurcsv'\">\n      In the Blur web vault, click your username at the top and go to \"Settings\" &rarr; \"Export\n      Data\", then click \"Export CSV\" for your \"Accounts\".\n    </ng-container>\n    <ng-container *ngIf=\"format === 'safeincloudxml'\">\n      Using the SaveInCloud desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As XML\"\n      and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'padlockcsv'\">\n      Using the Padlock desktop application, click the hamburger icon in the top left corner and\n      navigate to \"Settings\" &rarr; \"Export\" button and save the file \"As CSV\".\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keepass2xml'\">\n      Using the KeePass 2 desktop application, navigate to \"File\" &rarr; \"Export\" and select the\n      \"KeePass XML (2.x)\" option.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'upmcsv'\">\n      Using the Universal Password Manager desktop application, navigate to \"Database\" &rarr;\n      \"Export\" and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'saferpasscsv'\">\n      Using the SaferPass browser extension, click the hamburger icon in the top left corner and\n      navigate to \"Settings\". Click the \"Export accounts\" button to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'meldiumcsv'\">\n      Using the Meldium web vault, navigate to \"Settings\". Locate the \"Export data\" function and\n      click \"Show me my data\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keepercsv'\">\n      Log into the Keeper web vault (keepersecurity.com/vault). Click on your \"account email\" (top\n      right) and select \"Settings\". Go to \"Export\" and find the \"Export to .csv File\" option. Click\n      \"Export\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keeperjson'\">\n      Log into the Keeper web vault (keepersecurity.com/vault). Click on your \"account email\" (top\n      right) and select \"Settings\". Go to \"Export\" and find the \"Export to .json File\" option. Click\n      \"Export\" to save the JSON file.\n    </ng-container>\n    <ng-container\n      *ngIf=\"format === 'chromecsv' || format === 'operacsv' || format === 'vivaldicsv'\"\n    >\n      <span *ngIf=\"format !== 'chromecsv'\">\n        The process is exactly the same as importing from Google Chrome.\n      </span>\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-chrome/\">\n        https://bitwarden.com/help/import-from-chrome/</a\n      >\n    </ng-container>\n    <ng-container *ngIf=\"format === 'firefoxcsv'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-firefox/\">\n        https://bitwarden.com/help/import-from-firefox/</a\n      >.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'safaricsv'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-safari/\">\n        https://bitwarden.com/help/import-from-safari/</a\n      >.\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        format === '1password1pux' ||\n        format === '1password1pif' ||\n        format === '1passwordwincsv' ||\n        format === '1passwordmaccsv'\n      \"\n    >\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-1password/\">\n        https://bitwarden.com/help/import-from-1password/</a\n      >.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passworddragonxml'\">\n      Using the Password Dragon desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"To\n      XML\". In the dialog that pops up select \"All Rows\" and check all fields. Click the \"Export\"\n      button and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'enpasscsv'\">\n      Using the Enpass desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As CSV\".\n      Select \"OK\" to the warning alert and save the CSV file. Note that the importer only supports\n      files exported while Enpass is set to the English language, so adjust your settings\n      accordingly.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'enpassjson'\">\n      Using the Enpass 6 desktop application, click the menu button and navigate to \"File\" &rarr;\n      \"Export\". Select the \".json\" file format option and save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'pwsafexml'\">\n      Using the Password Safe desktop application, navigate to \"File\" &rarr; \"Export To\" &rarr; \"XML\n      format...\" and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'dashlanecsv'\">\n      Log in to Dashlane, click on \"My Account\" &rarr; \"Settings\" &rarr; \"Export file\" and select\n      \"Export as a CSV file\". This will download a zip archive containing various CSV files. Unzip\n      the archive and import each CSV file individually.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'dashlanejson'\">\n      Dashlane no longer supports the JSON format. Only use this if you have an existing JSON for\n      import. Use the CSV importer when creating new exports.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'msecurecsv'\">\n      Using the mSecure desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"CSV File...\"\n      and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'stickypasswordxml'\">\n      Using the Sticky Password desktop application, navigate to \"Menu\" (top right) &rarr; \"Export\"\n      &rarr; \"Export all\". Select the unencrypted format XML option and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'truekeycsv'\">\n      Using the True Key desktop application, click the gear icon (top right) and then navigate to\n      \"App Settings\". Click the \"Export\" button, enter your password and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'clipperzhtml'\">\n      Log into the Clipperz web application (clipperz.is/app). Click the hamburger menu icon in the\n      top right to expand the navigation bar. Navigate to \"Data\" &rarr; \"Export\". Click the\n      \"download HTML+JSON\" button to save the HTML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'roboformcsv'\">\n      Using the RoboForm Editor desktop application, navigate to \"RoboForm\" (top left) &rarr;\n      \"Options\" &rarr; \"Account &amp; Data\" and click the \"Export\" button. Select all of your data,\n      change the \"Format\" to \"CSV file\" and then click the \"Export\" button to save the CSV file.\n      Note: RoboForm only allows you to export Logins. Other items will not be exported.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passboltcsv'\">\n      Log into the Passbolt web vault and navigate to the \"Passwords\" listing. Select all of the\n      passwords you would like to export and click the \"Export\" button at the top of the listing.\n      Choose the \"csv (lastpass)\" export format and click the \"Export\" button.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'ascendocsv'\">\n      Using the Ascendo DataVault desktop application, navigate to \"Tools\" &rarr; \"Export\". In the\n      dialog that pops up, select the \"All Items (DVX, CSV)\" option. Click the \"Ok\" button to save\n      the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passwordbossjson'\">\n      Using the Password Boss desktop application, navigate to \"File\" &rarr; \"Export data\" &rarr;\n      \"Password Boss JSON - not encrypted\" and save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'zohovaultcsv'\">\n      Log into the Zoho web vault (vault.zoho.com). Navigate to \"Tools\" &rarr; \"Export Secrets\".\n      Select \"All Secrets\" and click the \"Zoho Vault Format CSV\" button. Highlight and copy the data\n      from the textarea. Open a text editor like Notepad and paste the data. Save the data from the\n      text editor as\n      <code>zoho_export.csv</code>.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'splashidcsv'\">\n      Using the SplashID Safe desktop application, click on the SplashID blue lock logo in the top\n      right corner. Navigate to \"Export\" &rarr; \"Export as CSV\" and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passkeepcsv'\">\n      Using the PassKeep mobile app, navigate to \"Backup/Restore\". Locate the \"CSV Backup/Restore\"\n      section and click \"Backup to CSV\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'gnomejson'\">\n      Make sure you have python-keyring and python-gnomekeyring installed. Save the\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bit.ly/2GpOMTg\"\n        >GNOME Keyring Import/Export</a\n      >\n      python script to your desktop as <code>pw_helper.py</code>. Open terminal and run\n      <code>chmod +rx Desktop/pw_helper.py</code> and then\n      <code>python Desktop/pw_helper.py export Desktop/my_passwords.json</code>. Then upload the\n      resulting <code>my_passwords.json</code> file here to Bitwarden.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passwordagentcsv'\">\n      Using the Password Agent desktop application navigate to \"File\" &rarr; \"Export\", select the\n      \"Fields to export\" button and check all of the fields, change the \"Output format\" to \"CSV\",\n      and then click the \"Start\" button to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passpackcsv'\">\n      Log into the Passpack website vault and navigate to \"Settings\" &rarr; \"Export\", then click the\n      \"Download\" button to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passmanjson'\">\n      Open your Passman vault and click on \"Settings\" in the bottom left corner. In the \"Settings\"\n      window switch to the \"Export credentials\" tab and choose \"JSON\" as the export type. Enter your\n      vault's passphrase and click the \"Export\" button to save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'avastcsv'\">\n      Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export\n      data\". Select the \"Export\" button for the \"Export to CSV file\" option to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'avastjson'\">\n      Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export\n      data\". Select the \"Export\" button for the \"Export to JSON file\" option to save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'fsecurefsk'\">\n      Open the F-Secure KEY desktop application and navigate to \"Settings\" &rarr; \"Export\n      Passwords\". Select the \"Export\" button, enter your master password, and save the FSK file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'kasperskytxt'\">\n      Open the Kaspersky Password Manager desktop application and navigate to \"Settings\" &rarr;\n      \"Import/Export\". Locate the \"Export to text file\" section and select the \"Export\" button to\n      save the TXT file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'remembearcsv'\">\n      Open the RememBear desktop application and navigate to \"Settings\" &rarr; \"Account\" &rarr;\n      \"Export\". Enter your master password and select the \"Export Anyway\" button to save the CSV\n      file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passwordwallettxt'\">\n      Open the PasswordWallet desktop application and navigate to \"File\" &rarr; \"Export\" &rarr;\n      \"Visible entries to text file\". Enter your password and select the \"Ok\" button to save the TXT\n      file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'mykicsv'\">\n      Open the Myki desktop browser extension and navigate to \"Advanced\" &rarr; \"Export Accounts\"\n      and then scan the QR code with your mobile device. Various CSV files will then be saved to\n      your computer's downloads folder.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'securesafecsv'\">\n      Export your SecureSafe password safe to a CSV file with a comma delimiter.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'logmeoncecsv'\">\n      Open the LogMeOnce browser extension, then navigate to \"Open Menu\" &rarr; \"Export To\" and\n      select \"CSV File\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'blackberrycsv'\">\n      Open the BlackBerry Password Keeper application, then navigate to \"Settings\" &rarr;\n      \"Import/Export\". Select \"Export Passwords\" and follow the instructions on screen to save the\n      unencrypted CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'buttercupcsv'\">\n      Open the Buttercup desktop application and unlock your vault. Right click on your vault's icon\n      and select \"Export\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'codebookcsv'\">\n      Open the Codebook desktop application and log in. Navigate to \"File\" &rarr; \"Export all\", then\n      click \"Yes\" on the dialog and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'encryptrcsv'\">\n      Open the newest version of the Encryptr desktop application and allow all of your data to\n      sync. Once syncing of your data is complete, the download icon in the top right corner will\n      turn pink. Click the download icon and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'yoticsv'\">\n      From the Yoti browser extension, click on \"Settings\", then \"Export Saved Logins\" and save the\n      CSV file.\n    </ng-container>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"file\">2. {{ \"selectImportFile\" | i18n }}</label>\n        <input\n          type=\"file\"\n          id=\"file\"\n          class=\"form-control-file\"\n          name=\"file\"\n          [disabled]=\"importBlockedByPolicy\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"fileContents\">{{ \"orCopyPasteFileContents\" | i18n }}</label>\n    <textarea\n      id=\"fileContents\"\n      class=\"form-control\"\n      name=\"FileContents\"\n      [(ngModel)]=\"fileContents\"\n      [disabled]=\"importBlockedByPolicy\"\n    ></textarea>\n  </div>\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary btn-submit\"\n    [disabled]=\"loading || importBlockedByPolicy\"\n    [ngClass]=\"{ manual: importBlockedByPolicy }\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"importData\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent } from \"../../reports/inactive-two-factor-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"../../reports/inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      modalService,\n      messagingService,\n      stateService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              class=\"badge badge-primary\"\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent } from \"../../reports/reused-passwords-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"../../reports/reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span class=\"badge badge-warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent {\n  organization: Organization;\n  accessReports = false;\n  loading = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private messagingService: MessagingService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      this.accessReports = this.organization.useTotp;\n      this.loading = false;\n    });\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n  }\n}\n","<div class=\"container page-content\">\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\">\n          <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n          <div class=\"list-group list-group-flush\">\n            <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"importData\" | i18n }}\n            </a>\n            <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"exportVault\" | i18n }}\n            </a>\n          </div>\n        </div>\n        <div class=\"card\" *ngIf=\"organization.canAccessReports\">\n          <div class=\"card-header d-flex\">\n            {{ \"reports\" | i18n }}\n            <div class=\"ml-auto\">\n              <a\n                href=\"#\"\n                appStopClick\n                class=\"badge badge-primary\"\n                *ngIf=\"!accessReports\"\n                (click)=\"upgradeOrganization()\"\n              >\n                {{ \"upgrade\" | i18n }}\n              </a>\n            </div>\n          </div>\n          <div class=\"list-group list-group-flush\">\n            <a\n              routerLink=\"exposed-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"exposedPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"reused-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"reusedPasswordsReport\" | i18n }}\n            </a>\n            <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"weakPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"unsecured-websites-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"unsecuredWebsitesReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"inactive-two-factor-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"inactive2faReport\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-9\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent } from \"../../reports/unsecured-websites-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"../../reports/unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent } from \"../../reports/weak-passwords-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"../../reports/weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      passwordGenerationService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span class=\"badge badge-{{ passwordStrengthMap.get(c.id)[1] }}\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherCreateRequest } from \"jslib-common/models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"jslib-common/models/request/cipherRequest\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  organization: Organization;\n  originalCipher: Cipher = null;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n    this.originalCipher = new Cipher(data);\n    return new Cipher(data);\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"checkPasswordBtn.loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!checkPasswordBtn.loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div *ngIf=\"!cipher.login.totp || !totpCode\">\n                <img\n                  src=\"../../images/totp-countdown.png\"\n                  id=\"totpImage\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  class=\"ml-2\"\n                />\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  class=\"badge badge-primary ml-3\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\">\n                <span class=\"totp-countdown mr-3 ml-2\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span class=\"totp-code mr-2\" title=\"{{ 'verificationCodeTotp' | i18n }}\">{{\n                  totpCodeFormatted\n                }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <select\n                id=\"cardBrand\"\n                class=\"form-control\"\n                name=\"Card.Brand\"\n                [(ngModel)]=\"cipher.card.brand\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <select\n                id=\"cardExpMonth\"\n                class=\"form-control\"\n                name=\"Card.ExpMonth\"\n                [(ngModel)]=\"cipher.card.expMonth\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <select\n                id=\"idTitle\"\n                class=\"form-control\"\n                name=\"Identity.Title\"\n                [(ngModel)]=\"cipher.identity.title\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"c.checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <span class=\"generated-wrapper text-monospace ml-2\">{{ ph.password }}</span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"a.downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"reuploadBtn.loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"deleteBtn.loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"deleteBtn.loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!deleteBtn.loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"../../vault/ciphers.component\";\n\n@Component({\n  selector: \"app-org-vault-ciphers\",\n  templateUrl: \"../../vault/ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  organization: Organization;\n  accessEvents = false;\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    eventService: EventService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            href=\"#\"\n            appStopClick\n            appStopProp\n            (click)=\"selectCipher(c)\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"!organization && c.organizationId\">\n            <i\n              class=\"bwi bwi-collection\"\n              appStopProp\n              title=\"{{ 'shared' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n          </ng-container>\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n              <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"copy(c, c.login.username, 'username', 'Username')\"\n                >\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copyUsername\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                  *ngIf=\"c.viewPassword\"\n                >\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copyPassword\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                  *ngIf=\"displayTotpCopyButton(c)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copyVerificationCode\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  *ngIf=\"c.login.canLaunch\"\n                  (click)=\"launch(c.login.launchUri)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                  {{ \"launch\" | i18n }}\n                </a>\n              </ng-container>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"attachments(c)\">\n                <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                {{ \"attachments\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n                (click)=\"clone(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n                {{ \"clone\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n                (click)=\"share(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n                {{ \"moveToOrganization\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"c.organizationId && !c.isDeleted\"\n                (click)=\"collections(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n                {{ \"collections\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"c.organizationId && accessEvents\"\n                (click)=\"events(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                {{ \"eventLogs\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"restore(c)\"\n                *ngIf=\"c.isDeleted\"\n              >\n                <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n                {{ \"restore\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"jslib-common/models/request/cipherCollectionsRequest\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CollectionDetailsResponse } from \"jslib-common/models/response/collectionResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { GroupingsComponent as BaseGroupingsComponent } from \"../../vault/groupings.component\";\n\n@Component({\n  selector: \"app-org-vault-groupings\",\n  templateUrl: \"../../vault/groupings.component.html\",\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    folderService: FolderService,\n    stateService: StateService,\n    private apiService: ApiService,\n    private i18nService: I18nService\n  ) {\n    super(collectionService, folderService, stateService);\n  }\n\n  async loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      await super.loadCollections(this.organization.id);\n      return;\n    }\n\n    const collections = await this.apiService.getCollections(this.organization.id);\n    if (collections != null && collections.data != null && collections.data.length) {\n      const collectionDomains = collections.data.map(\n        (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n      );\n      this.collections = await this.collectionService.decryptMany(collectionDomains);\n    } else {\n      this.collections = [];\n    }\n\n    const unassignedCollection = new CollectionView();\n    unassignedCollection.name = this.i18nService.t(\"unassigned\");\n    unassignedCollection.id = \"unassigned\";\n    unassignedCollection.organizationId = this.organization.id;\n    unassignedCollection.readOnly = true;\n    this.collections.push(unassignedCollection);\n    this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n  }\n\n  async collapse(grouping: CollectionView) {\n    await super.collapse(grouping, \"org_\");\n  }\n\n  isCollapsed(grouping: CollectionView) {\n    return super.isCollapsed(grouping, \"org_\");\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"card-header d-flex\">\n    {{ \"filters\" | i18n }}\n    <a\n      class=\"ml-auto\"\n      href=\"https://bitwarden.com/help/searching-vault/\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n    >\n      <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n    </a>\n  </div>\n  <div class=\"card-body\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      class=\"form-control\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"searchTextChanged()\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <ul class=\"bwi-ul card-ul\">\n      <li [ngClass]=\"{ active: selectedAll }\">\n        <a href=\"#\" appStopClick (click)=\"selectAll()\">\n          <i class=\"bwi bwi-li bwi-fw bwi-filter\"></i>{{ \"allItems\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedFavorites }\" *ngIf=\"showFavorites\">\n        <a href=\"#\" appStopClick (click)=\"selectFavorites()\">\n          <i class=\"bwi bwi-li bwi-fw bwi-star\"></i>{{ \"favorites\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedTrash }\" *ngIf=\"showTrash\">\n        <a href=\"#\" appStopClick (click)=\"selectTrash()\">\n          <i class=\"bwi bwi-li bwi-fw bwi-trash\"></i>{{ \"trash\" | i18n }}\n        </a>\n      </li>\n    </ul>\n    <h3>{{ \"types\" | i18n }}</h3>\n    <ul class=\"bwi-ul card-ul\">\n      <li [ngClass]=\"{ active: selectedType === cipherType.Login }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Login)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-globe\"></i>{{ \"typeLogin\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedType === cipherType.Card }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Card)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-credit-card\"></i>{{ \"typeCard\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedType === cipherType.Identity }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Identity)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-id-card\"></i>{{ \"typeIdentity\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedType === cipherType.SecureNote }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.SecureNote)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-sticky-note\"></i>{{ \"typeSecureNote\" | i18n }}\n        </a>\n      </li>\n    </ul>\n    <p *ngIf=\"!loaded\" class=\"text-muted\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n    <ng-container *ngIf=\"loaded\">\n      <ng-container *ngIf=\"showFolders\">\n        <h3 class=\"d-flex\">\n          {{ \"folders\" | i18n }}\n          <a\n            href=\"#\"\n            class=\"text-muted ml-auto\"\n            appStopClick\n            (click)=\"addFolder()\"\n            appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <ul class=\"bwi-ul card-ul\">\n          <ng-template #recursiveFolders let-folders>\n            <li\n              *ngFor=\"let f of folders\"\n              [ngClass]=\"{ active: selectedFolder && f.node.id === selectedFolderId }\"\n            >\n              <div class=\"d-flex\">\n                <i\n                  *ngIf=\"f.children.length\"\n                  class=\"bwi-li bwi\"\n                  title=\"{{ 'toggleCollapse' | i18n }}\"\n                  [ngClass]=\"{\n                    'bwi-angle-right': isCollapsed(f.node),\n                    'bwi-angle-down': !isCollapsed(f.node)\n                  }\"\n                  (click)=\"collapse(f.node)\"\n                ></i>\n                <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectFolder(f.node)\">\n                  <i\n                    *ngIf=\"f.children.length === 0\"\n                    class=\"bwi bwi-li bwi-folder\"\n                    aria-hidden=\"true\"\n                  ></i\n                  >{{ f.node.name }}\n                </a>\n                <a\n                  href=\"#\"\n                  class=\"text-muted ml-auto show-active\"\n                  appStopClick\n                  (click)=\"editFolder(f.node)\"\n                  appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n                  *ngIf=\"f.node.id\"\n                >\n                  <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n              <ul class=\"bwi-ul card-ul carets\" *ngIf=\"f.children.length && !isCollapsed(f.node)\">\n                <ng-container\n                  *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\"\n                >\n                </ng-container>\n              </ul>\n            </li>\n          </ng-template>\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\">\n          </ng-container>\n        </ul>\n      </ng-container>\n      <ng-container *ngIf=\"showCollections && collections && collections.length\">\n        <h3>{{ \"collections\" | i18n }}</h3>\n        <ul class=\"bwi-ul card-ul\">\n          <ng-template #recursiveCollections let-collections>\n            <li\n              *ngFor=\"let c of collections\"\n              [ngClass]=\"{ active: c.node.id === selectedCollectionId }\"\n            >\n              <i\n                *ngIf=\"c.children.length\"\n                class=\"bwi-li bwi\"\n                title=\"{{ 'toggleCollapse' | i18n }}\"\n                [ngClass]=\"{\n                  'bwi-angle-right': isCollapsed(c.node),\n                  'bwi-angle-down': !isCollapsed(c.node)\n                }\"\n                (click)=\"collapse(c.node)\"\n              ></i>\n              <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectCollection(c.node)\">\n                <i\n                  *ngIf=\"c.children.length === 0\"\n                  class=\"bwi bwi-li bwi-collection\"\n                  aria-hidden=\"true\"\n                ></i\n                >{{ c.node.name }}\n              </a>\n              <ul class=\"bwi-ul card-ul carets\" *ngIf=\"c.children.length && !isCollapsed(c.node)\">\n                <ng-container\n                  *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n                >\n                </ng-container>\n              </ul>\n            </li>\n          </ng-template>\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n          >\n          </ng-container>\n        </ul>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { GroupingsComponent } from \"./groupings.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  deleted = false;\n  trashCleanupWarning: string = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n    this.route.parent.params.pipe(first()).subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.groupingsComponent.organization = this.organization;\n      this.ciphersComponent.organization = this.organization;\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.ciphersComponent.searchText = this.groupingsComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.groupingsComponent.load(),\n                      this.ciphersComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n        await this.groupingsComponent.load();\n\n        if (qParams == null) {\n          this.groupingsComponent.selectedAll = true;\n          await this.ciphersComponent.reload();\n        } else {\n          if (qParams.deleted) {\n            this.groupingsComponent.selectedTrash = true;\n            await this.filterDeleted(true);\n          } else if (qParams.type) {\n            const t = parseInt(qParams.type, null);\n            this.groupingsComponent.selectedType = t;\n            await this.filterCipherType(t, true);\n          } else if (qParams.collectionId) {\n            this.groupingsComponent.selectedCollectionId = qParams.collectionId;\n            await this.filterCollection(qParams.collectionId, true);\n          } else {\n            this.groupingsComponent.selectedAll = true;\n            await this.ciphersComponent.reload();\n          }\n        }\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async clearGroupingFilters() {\n    this.ciphersComponent.showAddNew = true;\n    this.ciphersComponent.deleted = false;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchVault\");\n    await this.ciphersComponent.applyFilter();\n    this.clearFilters();\n    this.go();\n  }\n\n  async filterCipherType(type: CipherType, load = false) {\n    this.ciphersComponent.showAddNew = true;\n    this.ciphersComponent.deleted = false;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchType\");\n    const filter = (c: CipherView) => c.type === type;\n    if (load) {\n      await this.ciphersComponent.reload(filter);\n    } else {\n      await this.ciphersComponent.applyFilter(filter);\n    }\n    this.clearFilters();\n    this.type = type;\n    this.go();\n  }\n\n  async filterCollection(collectionId: string, load = false) {\n    this.ciphersComponent.showAddNew = true;\n    this.ciphersComponent.deleted = false;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n    const filter = (c: CipherView) => {\n      if (collectionId === \"unassigned\") {\n        return c.collectionIds == null || c.collectionIds.length === 0;\n      } else {\n        return c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1;\n      }\n    };\n    if (load) {\n      await this.ciphersComponent.reload(filter);\n    } else {\n      await this.ciphersComponent.applyFilter(filter);\n    }\n    this.clearFilters();\n    this.collectionId = collectionId;\n    this.go();\n  }\n\n  async filterDeleted(load = false) {\n    this.ciphersComponent.showAddNew = false;\n    this.ciphersComponent.deleted = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n    if (load) {\n      await this.ciphersComponent.reload(null, true);\n    } else {\n      await this.ciphersComponent.applyFilter(null);\n    }\n    this.clearFilters();\n    this.deleted = true;\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private clearFilters() {\n    this.collectionId = null;\n    this.type = null;\n    this.deleted = false;\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.type,\n        collectionId: this.collectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      replaceUrl: true,\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <app-org-vault-groupings\n        [showFolders]=\"false\"\n        [showFavorites]=\"false\"\n        [showTrash]=\"true\"\n        (onAllClicked)=\"clearGroupingFilters()\"\n        (onCipherTypeClicked)=\"filterCipherType($event)\"\n        (onCollectionClicked)=\"filterCollection($event.id)\"\n        (onSearchTextChanged)=\"filterSearchText($event)\"\n        (onTrashClicked)=\"filterDeleted()\"\n      >\n      </app-org-vault-groupings>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vault\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-ciphers>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from \"jslib-angular/services/auth-guard.service\";\nimport { LockGuardService } from \"jslib-angular/services/lock-guard.service\";\nimport { UnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"./organizations/manage/collections.component\";\nimport { EventsComponent as OrgEventsComponent } from \"./organizations/manage/events.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"./organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"./organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"./organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"./organizations/manage/policies.component\";\nimport { AccountComponent as OrgAccountComponent } from \"./organizations/settings/account.component\";\nimport { OrganizationBillingComponent } from \"./organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingsComponent } from \"./organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"./organizations/settings/two-factor-setup.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExportComponent as OrgExportComponent } from \"./organizations/tools/export.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"./organizations/tools/exposed-passwords-report.component\";\nimport { ImportComponent as OrgImportComponent } from \"./organizations/tools/import.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"./organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"./organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"./organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"./organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"./organizations/tools/weak-passwords-report.component\";\nimport { VaultComponent as OrgVaultComponent } from \"./organizations/vault/vault.component\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { OrganizationGuardService } from \"./services/organization-guard.service\";\nimport { OrganizationTypeGuardService } from \"./services/organization-type-guard.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { OrganizationsComponent } from \"./settings/organizations.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { UserBillingComponent } from \"./settings/user-billing.component\";\nimport { UserSubscriptionComponent } from \"./settings/user-subscription.component\";\nimport { ExportComponent } from \"./tools/export.component\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ImportComponent } from \"./tools/import.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultComponent } from \"./vault/vault.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      { path: \"\", pathMatch: \"full\", component: LoginComponent, canActivate: [UnauthGuardService] },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuardService] },\n      {\n        path: \"register\",\n        component: RegisterComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"createAccount\" },\n      },\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuardService],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\" },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\" },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuardService],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuardService],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuardService],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      { path: \"vault\", component: VaultComponent, data: { titleId: \"myVault\" } },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          { path: \"options\", component: OptionsComponent, data: { titleId: \"options\" } },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"two-factor\",\n            component: TwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          { path: \"premium\", component: PremiumComponent, data: { titleId: \"goPremium\" } },\n          { path: \"billing\", component: UserBillingComponent, data: { titleId: \"billing\" } },\n          {\n            path: \"subscription\",\n            component: UserSubscriptionComponent,\n            data: { titleId: \"premiumMembership\" },\n          },\n          {\n            path: \"organizations\",\n            component: OrganizationsComponent,\n            data: { titleId: \"organizations\" },\n          },\n          {\n            path: \"create-organization\",\n            component: CreateOrganizationComponent,\n            data: { titleId: \"newOrganization\" },\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuardService],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          { path: \"import\", component: ImportComponent, data: { titleId: \"importData\" } },\n          { path: \"export\", component: ExportComponent, data: { titleId: \"exportVault\" } },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: async () => (await import(\"./reports/reports.module\")).ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuardService, OrganizationGuardService],\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      { path: \"vault\", component: OrgVaultComponent, data: { titleId: \"vault\" } },\n      {\n        path: \"tools\",\n        component: OrgToolsComponent,\n        canActivate: [OrganizationTypeGuardService],\n        data: { permissions: [Permissions.AccessImportExport, Permissions.AccessReports] },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"import\",\n          },\n          {\n            path: \"import\",\n            component: OrgImportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"importData\",\n              permissions: [Permissions.AccessImportExport],\n            },\n          },\n          {\n            path: \"export\",\n            component: OrgExportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"exportVault\",\n              permissions: [Permissions.AccessImportExport],\n            },\n          },\n          {\n            path: \"exposed-passwords-report\",\n            component: OrgExposedPasswordsReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"exposedPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: OrgInactiveTwoFactorReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"inactive2faReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: OrgReusedPasswordsReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"reusedPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: OrgUnsecuredWebsitesReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"unsecuredWebsitesReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: OrgWeakPasswordsReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"weakPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n        ],\n      },\n      {\n        path: \"manage\",\n        component: OrgManageComponent,\n        canActivate: [OrganizationTypeGuardService],\n        data: {\n          permissions: [\n            Permissions.CreateNewCollections,\n            Permissions.EditAnyCollection,\n            Permissions.DeleteAnyCollection,\n            Permissions.EditAssignedCollections,\n            Permissions.DeleteAssignedCollections,\n            Permissions.AccessEventLogs,\n            Permissions.ManageGroups,\n            Permissions.ManageUsers,\n            Permissions.ManagePolicies,\n          ],\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"people\",\n          },\n          {\n            path: \"collections\",\n            component: OrgManageCollectionsComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"collections\",\n              permissions: [\n                Permissions.CreateNewCollections,\n                Permissions.EditAnyCollection,\n                Permissions.DeleteAnyCollection,\n                Permissions.EditAssignedCollections,\n                Permissions.DeleteAssignedCollections,\n              ],\n            },\n          },\n          {\n            path: \"events\",\n            component: OrgEventsComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"eventLogs\",\n              permissions: [Permissions.AccessEventLogs],\n            },\n          },\n          {\n            path: \"groups\",\n            component: OrgGroupsComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"groups\",\n              permissions: [Permissions.ManageGroups],\n            },\n          },\n          {\n            path: \"people\",\n            component: OrgPeopleComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"people\",\n              permissions: [Permissions.ManageUsers, Permissions.ManageUsersPassword],\n            },\n          },\n          {\n            path: \"policies\",\n            component: OrgPoliciesComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"policies\",\n              permissions: [Permissions.ManagePolicies],\n            },\n          },\n        ],\n      },\n      {\n        path: \"settings\",\n        component: OrgSettingsComponent,\n        canActivate: [OrganizationTypeGuardService],\n        data: { permissions: [Permissions.ManageOrganization] },\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: OrgAccountComponent, data: { titleId: \"myOrganization\" } },\n          {\n            path: \"two-factor\",\n            component: OrgTwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          {\n            path: \"billing\",\n            component: OrganizationBillingComponent,\n            data: { titleId: \"billing\" },\n          },\n          {\n            path: \"subscription\",\n            component: OrganizationSubscriptionComponent,\n            data: { titleId: \"subscription\" },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { DatePipe, registerLocaleData, CommonModule } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { BadgeModule, ButtonModule } from \"@bitwarden/components\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { VerifyMasterPasswordComponent } from \"jslib-angular/components/verify-master-password.component\";\nimport { JslibModule } from \"jslib-angular/jslib.module\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { NestedCheckboxComponent } from \"./components/nested-checkbox.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PasswordStrengthComponent } from \"./components/password-strength.component\";\nimport { PremiumBadgeComponent } from \"./components/premium-badge.component\";\nimport { FooterComponent } from \"./layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"./layouts/navbar.component\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"./organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"./organizations/manage/bulk/bulk-remove.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"./organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"./organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"./organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"./organizations/manage/entity-events.component\";\nimport { EntityUsersComponent as OrgEntityUsersComponent } from \"./organizations/manage/entity-users.component\";\nimport { EventsComponent as OrgEventsComponent } from \"./organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"./organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"./organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"./organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"./organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"./organizations/manage/policies.component\";\nimport { PolicyEditComponent as OrgPolicyEditComponent } from \"./organizations/manage/policy-edit.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"./organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"./organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"./organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"./organizations/manage/user-groups.component\";\nimport { DisableSendPolicyComponent } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicyComponent } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicyComponent } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"./organizations/policies/two-factor-authentication.component\";\nimport { AccountComponent as OrgAccountComponent } from \"./organizations/settings/account.component\";\nimport { AdjustSubscription } from \"./organizations/settings/adjust-subscription.component\";\nimport { ChangePlanComponent } from \"./organizations/settings/change-plan.component\";\nimport { DeleteOrganizationComponent } from \"./organizations/settings/delete-organization.component\";\nimport { DownloadLicenseComponent } from \"./organizations/settings/download-license.component\";\nimport { OrganizationBillingComponent } from \"./organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingComponent } from \"./organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"./organizations/settings/two-factor-setup.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExportComponent as OrgExportComponent } from \"./organizations/tools/export.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"./organizations/tools/exposed-passwords-report.component\";\nimport { ImportComponent as OrgImportComponent } from \"./organizations/tools/import.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"./organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"./organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"./organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"./organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"./organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"./organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"./organizations/vault/attachments.component\";\nimport { CiphersComponent as OrgCiphersComponent } from \"./organizations/vault/ciphers.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"./organizations/vault/collections.component\";\nimport { GroupingsComponent as OrgGroupingsComponent } from \"./organizations/vault/groupings.component\";\nimport { VaultComponent as OrgVaultComponent } from \"./organizations/vault/vault.component\";\nimport { ProvidersComponent } from \"./providers/providers.component\";\nimport { BreachReportComponent } from \"./reports/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./reports/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./reports/inactive-two-factor-report.component\";\nimport { ReportCardComponent } from \"./reports/report-card.component\";\nimport { ReportListComponent } from \"./reports/report-list.component\";\nimport { ReportsComponent } from \"./reports/reports.component\";\nimport { ReusedPasswordsReportComponent } from \"./reports/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./reports/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./reports/weak-passwords-report.component\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"./send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { AddCreditComponent } from \"./settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"./settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"./settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"./settings/api-key.component\";\nimport { ChangeEmailComponent } from \"./settings/change-email.component\";\nimport { ChangeKdfComponent } from \"./settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"./settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"./settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./settings/delete-account.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"./settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"./settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"./settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"./settings/emergency-add-edit.component\";\nimport { LinkSsoComponent } from \"./settings/link-sso.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { OrganizationPlansComponent } from \"./settings/organization-plans.component\";\nimport { OrganizationsComponent } from \"./settings/organizations.component\";\nimport { PaymentComponent } from \"./settings/payment.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { ProfileComponent } from \"./settings/profile.component\";\nimport { PurgeVaultComponent } from \"./settings/purge-vault.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"./settings/sponsoring-org-row.component\";\nimport { TaxInfoComponent } from \"./settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"./settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"./settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"./settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"./settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"./settings/update-license.component\";\nimport { UserBillingComponent } from \"./settings/user-billing.component\";\nimport { UserSubscriptionComponent } from \"./settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"./settings/verify-email.component\";\nimport { ExportComponent } from \"./tools/export.component\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ImportComponent } from \"./tools/import.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./tools/password-generator-history.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { BulkActionsComponent } from \"./vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"./vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"./vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"./vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"./vault/bulk-share.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { FolderAddEditComponent } from \"./vault/folder-add-edit.component\";\nimport { GroupingsComponent } from \"./vault/groupings.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultComponent } from \"./vault/vault.component\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n  ],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BreachReportComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    ExportComponent,\n    ExposedPasswordsReportComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    GroupingsComponent,\n    HintComponent,\n    ImportComponent,\n    InactiveTwoFactorReportComponent,\n    LinkSsoComponent,\n    LockComponent,\n    LoginComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OptionsComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationsComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCiphersComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEntityUsersComponent,\n    OrgEventsComponent,\n    OrgExportComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupingsComponent,\n    OrgGroupsComponent,\n    OrgImportComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgVaultComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    PasswordStrengthComponent,\n    PaymentComponent,\n    PersonalOwnershipPolicyComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    ReportCardComponent,\n    ReportListComponent,\n    ReportsComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    ReusedPasswordsReportComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UnsecuredWebsitesReportComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    VaultComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyMasterPasswordComponent,\n    VerifyRecoverDeleteComponent,\n    WeakPasswordsReportComponent,\n  ],\n  exports: [FooterComponent, NavbarComponent, OrganizationPlansComponent],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  @Input() vault = false;\n\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<ng-container *ngIf=\"vault\">\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <ul class=\"bwi-ul card-ul carets\" *ngIf=\"providers && providers.length\">\n      <li *ngFor=\"let p of providers\">\n        <a [routerLink]=\"['/providers', p.id]\" class=\"text-body\">\n          <i class=\"bwi bwi-li bwi-caret-right\" aria-hidden=\"true\"></i> {{ p.name }}\n          <ng-container *ngIf=\"!p.enabled\">\n            <i\n              class=\"bwi bwi-exclamation-triangle text-danger\"\n              title=\"{{ 'providerIsDisabled' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n          </ng-container>\n        </a>\n      </li>\n    </ul>\n  </ng-container>\n</ng-container>\n<ng-container *ngIf=\"!vault\">\n  <app-navbar></app-navbar>\n  <div class=\"container page-content\">\n    <div class=\"page-header d-flex\">\n      <h1>{{ \"providers\" | i18n }}</h1>\n    </div>\n    <p *ngIf=\"!loaded\" class=\"text-muted\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n    <ng-container *ngIf=\"loaded\">\n      <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n        <tbody>\n          <tr *ngFor=\"let p of providers\">\n            <td width=\"30\">\n              <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n            </td>\n            <td>\n              <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n              <ng-container *ngIf=\"!p.enabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle text-danger\"\n                  title=\"{{ 'providerIsDisabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n              </ng-container>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </ng-container>\n  </div>\n  <app-footer></app-footer>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"jslib-common/models/response/breachAccountResponse\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <button\n    bit-button\n    buttonType=\"primary\"\n    class=\"btn-submit\"\n    type=\"submit\"\n    [disabled]=\"form.loading\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"checkBreaches\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    } else {\n      const accessPremium = await this.stateService.getCanAccessPremium();\n      if (this.requiresPaid && !accessPremium) {\n        this.messagingService.send(\"premiumRequired\");\n        this.loading = false;\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://2fa.directory/api/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nexport enum ReportTypes {\n  \"exposedPasswords\" = \"exposedPasswords\",\n  \"reusedPasswords\" = \"reusedPasswords\",\n  \"weakPasswords\" = \"weakPasswords\",\n  \"unsecuredWebsites\" = \"unsecuredWebsites\",\n  \"inactive2fa\" = \"inactive2fa\",\n  \"dataBreach\" = \"dataBreach\",\n}\n\ntype ReportEntry = {\n  title: string;\n  description: string;\n  route: string;\n  icon: string;\n  requiresPremium: boolean;\n};\n\nconst reports: Record<ReportTypes, ReportEntry> = {\n  exposedPasswords: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: `\n      <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n        <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n        <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n        <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n      </svg>\n    `,\n    requiresPremium: true,\n  },\n  reusedPasswords: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: `\n    <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n    `,\n    requiresPremium: true,\n  },\n  weakPasswords: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: `\n      <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n      </svg>\n    `,\n    requiresPremium: true,\n  },\n  unsecuredWebsites: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: `\n      <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n        <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n        <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n      </svg>\n    `,\n    requiresPremium: true,\n  },\n  inactive2fa: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: `\n      <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n        <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n        <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      </svg>\n    `,\n    requiresPremium: true,\n  },\n  dataBreach: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: `\n      <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n        <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n        <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n      </svg>\n    `,\n    requiresPremium: false,\n  },\n};\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent implements OnInit {\n  @Input() type: ReportTypes;\n\n  report: ReportEntry;\n\n  hasPremium: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private messagingService: MessagingService,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  async ngOnInit() {\n    this.report = reports[this.type];\n\n    this.hasPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  get premium() {\n    return this.report.requiresPremium && !this.hasPremium;\n  }\n\n  get route() {\n    if (this.premium) {\n      return null;\n    }\n\n    return this.report.route;\n  }\n\n  get icon() {\n    return this.sanitizer.bypassSecurityTrustHtml(this.report.icon);\n  }\n\n  click() {\n    if (this.premium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n  }\n}\n","<a\n  class=\"tw-border tw-border-solid tw-border-secondary-300 tw-rounded tw-overflow-hidden tw-h-full tw-w-72 tw-block !tw-text-main hover:tw-no-underline hover:tw-scale-105 tw-transition-all focus:tw-outline-none focus:tw-ring focus:tw-ring-offset-2 focus:tw-ring-primary-700\"\n  [routerLink]=\"route\"\n  (click)=\"click()\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-text-center tw-h-28 tw-flex tw-bg-background-alt2 tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': premium }\"\n    >\n      <div class=\"tw-m-auto\" [innerHtml]=\"icon\"></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': report.requiresPremium }\">\n      <h3 class=\"tw-text-xl tw-font-bold tw-mb-4\">{{ report.title | i18n }}</h3>\n      <p class=\"tw-mb-0\">{{ report.description | i18n }}</p>\n    </div>\n    <span\n      bit-badge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"premium\"\n      >{{ \"premium\" | i18n }}</span\n    >\n  </div>\n</a>\n","import { Component } from \"@angular/core\";\n\nimport { ReportTypes } from \"./report-card.component\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  reports = [\n    ReportTypes.exposedPasswords,\n    ReportTypes.reusedPasswords,\n    ReportTypes.weakPasswords,\n    ReportTypes.unsecuredWebsites,\n    ReportTypes.inactive2fa,\n    ReportTypes.dataBreach,\n  ];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card [type]=\"report\"></app-report-card>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports\",\n  templateUrl: \"reports.component.html\",\n})\nexport class ReportsComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bit-button routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from \"jslib-angular/services/auth-guard.service\";\n\nimport { BreachReportComponent } from \"./breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./inactive-two-factor-report.component\";\nimport { ReportListComponent } from \"./report-list.component\";\nimport { ReportsComponent } from \"./reports.component\";\nimport { ReusedPasswordsReportComponent } from \"./reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./weak-passwords-report.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportListComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, string]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, string] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"jslib-common/enums/kdfType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { SendAccess } from \"jslib-common/models/domain/sendAccess\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { SendAccessRequest } from \"jslib-common/models/request/sendAccessRequest\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { SendAccessResponse } from \"jslib-common/models/response/sendAccessResponse\";\nimport { SendAccessView } from \"jslib-common/models/view/sendAccessView\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, this.decKey);\n      this.platformUtilsService.saveFile(window, decBuf, null, this.send.file.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <p class=\"lead text-center mb-4\">Bitwarden Send</p>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [(ngModel)]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged(o)\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input\n            type=\"text\"\n            readonly\n            id=\"link\"\n            name=\"Link\"\n            [(ngModel)]=\"link\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">{{ \"options\" | i18n }}</h3>\n          <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\">\n            <i\n              class=\"bwi\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-angle-down': !showOptions, 'bwi-chevron-up': showOptions }\"\n            ></i>\n          </a>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"jslib-angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n              [readOnly]=\"disableSend\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <ul class=\"bwi-ul card-ul\">\n            <li [ngClass]=\"{ active: selectedAll }\">\n              <a href=\"#\" appStopClick (click)=\"selectAll()\">\n                <i class=\"bwi bwi-li bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n              </a>\n            </li>\n          </ul>\n          <h3>{{ \"types\" | i18n }}</h3>\n          <ul class=\"bwi-ul card-ul\">\n            <li [ngClass]=\"{ active: selectedType === sendType.Text }\">\n              <a href=\"#\" appStopClick (click)=\"selectType(sendType.Text)\">\n                <i class=\"bwi bwi-li bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n              </a>\n            </li>\n            <li [ngClass]=\"{ active: selectedType === sendType.File }\">\n              <a href=\"#\" appStopClick (click)=\"selectType(sendType.File)\">\n                <i class=\"bwi bwi-li bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <div class=\"dropdown\" appListDropdown>\n                <button\n                  class=\"btn btn-outline-secondary dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  appA11yTitle=\"{{ 'options' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                  <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(s)\">\n                    <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                    {{ \"copySendLink\" | i18n }}\n                  </a>\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"removePassword(s)\"\n                    *ngIf=\"s.password && !disableSend\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                    {{ \"removePassword\" | i18n }}\n                  </a>\n                  <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(s)\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </a>\n                </div>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\n\n@Injectable()\nexport class EventService {\n  constructor(private i18nService: I18nService, private policyService: PolicyService) {}\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      /*\n            case EventType.Organization_ClientExportedVault:\n                msg = this.i18nService.t('exportedOrganizationVault');\n                break;\n            */\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policies = await this.policyService.getAll();\n        const policy = policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/groups?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"jslib-angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"jslib-angular/services/modal.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class OrganizationGuardService implements CanActivate {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const org = await this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\n@Injectable()\nexport class OrganizationTypeGuardService implements CanActivate {\n  constructor(private organizationService: OrganizationService, private router: Router) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const org = await this.organizationService.get(route.params.organizationId);\n    const permissions = route.data == null ? null : (route.data.permissions as Permissions[]);\n\n    if (\n      (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && org.canAccessEventLogs) ||\n      (permissions.indexOf(Permissions.AccessImportExport) !== -1 && org.canAccessImportExport) ||\n      (permissions.indexOf(Permissions.AccessReports) !== -1 && org.canAccessReports) ||\n      (permissions.indexOf(Permissions.CreateNewCollections) !== -1 &&\n        org.canCreateNewCollections) ||\n      (permissions.indexOf(Permissions.EditAnyCollection) !== -1 && org.canEditAnyCollection) ||\n      (permissions.indexOf(Permissions.DeleteAnyCollection) !== -1 && org.canDeleteAnyCollection) ||\n      (permissions.indexOf(Permissions.EditAssignedCollections) !== -1 &&\n        org.canEditAssignedCollections) ||\n      (permissions.indexOf(Permissions.DeleteAssignedCollections) !== -1 &&\n        org.canDeleteAssignedCollections) ||\n      (permissions.indexOf(Permissions.ManageGroups) !== -1 && org.canManageGroups) ||\n      (permissions.indexOf(Permissions.ManageOrganization) !== -1 && org.isOwner) ||\n      (permissions.indexOf(Permissions.ManagePolicies) !== -1 && org.canManagePolicies) ||\n      (permissions.indexOf(Permissions.ManageUsers) !== -1 && org.canManageUsers) ||\n      (permissions.indexOf(Permissions.ManageUsersPassword) !== -1 && org.canManageUsersPassword) ||\n      (permissions.indexOf(Permissions.ManageSso) !== -1 && org.canManageSso)\n    ) {\n      return true;\n    }\n\n    this.router.navigate([\"/organizations\", org.id]);\n    return false;\n  }\n}\n","import { BasePolicy } from \"../organizations/policies/base-policy.component\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n    router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.previousUrl = this.currentUrl;\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let titleId: string = null;\n        let rawTitle: string = null;\n        let child = this.activatedRoute.firstChild;\n        while (child != null) {\n          if (child.firstChild != null) {\n            child = child.firstChild;\n          } else if (child.snapshot.data != null && child.snapshot.data.title != null) {\n            rawTitle = child.snapshot.data.title;\n            break;\n          } else if (child.snapshot.data != null && child.snapshot.data.titleId != null) {\n            titleId = child.snapshot.data.titleId;\n            break;\n          } else {\n            titleId = null;\n            rawTitle = null;\n            break;\n          }\n        }\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n      }\n    });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import { APP_INITIALIZER, NgModule } from \"@angular/core\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibServicesModule } from \"jslib-angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"jslib-angular/services/modal.service\";\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventLoggingServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { ImportService as ImportServiceAbstraction } from \"jslib-common/abstractions/import.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"jslib-common/abstractions/stateMigration.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { ContainerService } from \"jslib-common/services/container.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EventService as EventLoggingService } from \"jslib-common/services/event.service\";\nimport { ImportService } from \"jslib-common/services/import.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\n\nimport { StateService as StateServiceAbstraction } from \"../../abstractions/state.service\";\nimport { Account } from \"../../models/account\";\nimport { GlobalState } from \"../../models/globalState\";\nimport { BroadcasterMessagingService } from \"../../services/broadcasterMessaging.service\";\nimport { HtmlStorageService } from \"../../services/htmlStorage.service\";\nimport { I18nService } from \"../../services/i18n.service\";\nimport { MemoryStorageService } from \"../../services/memoryStorage.service\";\nimport { PasswordRepromptService } from \"../../services/passwordReprompt.service\";\nimport { StateService } from \"../../services/state.service\";\nimport { StateMigrationService } from \"../../services/stateMigration.service\";\nimport { WebPlatformUtilsService } from \"../../services/webPlatformUtils.service\";\n\nimport { EventService } from \"./event.service\";\nimport { ModalService } from \"./modal.service\";\nimport { OrganizationGuardService } from \"./organization-guard.service\";\nimport { OrganizationTypeGuardService } from \"./organization-type-guard.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\n\nexport function initFactory(\n  window: Window,\n  environmentService: EnvironmentServiceAbstraction,\n  notificationsService: NotificationsServiceAbstraction,\n  vaultTimeoutService: VaultTimeoutService,\n  i18nService: I18nService,\n  eventLoggingService: EventLoggingService,\n  twoFactorService: TwoFactorServiceAbstraction,\n  stateService: StateServiceAbstraction,\n  platformUtilsService: PlatformUtilsServiceAbstraction,\n  cryptoService: CryptoServiceAbstraction\n): () => void {\n  return async () => {\n    await stateService.init();\n\n    const urls = process.env.URLS as Urls;\n    urls.base ??= window.location.origin;\n    environmentService.setUrls(urls);\n\n    setTimeout(() => notificationsService.init(), 3000);\n\n    vaultTimeoutService.init(true);\n    const locale = await stateService.getLocale();\n    await i18nService.init(locale);\n    eventLoggingService.init(true);\n    twoFactorService.init();\n    const htmlEl = window.document.documentElement;\n    htmlEl.classList.add(\"locale_\" + i18nService.translationLocale);\n\n    // Initial theme is set in index.html which must be updated if there are any changes to theming logic\n    platformUtilsService.onDefaultSystemThemeChange(async (sysTheme) => {\n      const bwTheme = await stateService.getTheme();\n      if (bwTheme === ThemeType.System) {\n        htmlEl.classList.remove(\"theme_\" + ThemeType.Light, \"theme_\" + ThemeType.Dark);\n        htmlEl.classList.add(\"theme_\" + sysTheme);\n      }\n    });\n\n    const containerService = new ContainerService(cryptoService);\n    containerService.attachToWindow(window);\n  };\n}\n\n@NgModule({\n  imports: [ToastrModule, JslibServicesModule],\n  declarations: [],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initFactory,\n      deps: [\n        \"WINDOW\",\n        EnvironmentServiceAbstraction,\n        NotificationsServiceAbstraction,\n        VaultTimeoutServiceAbstraction,\n        I18nServiceAbstraction,\n        EventLoggingServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        StateServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n      multi: true,\n    },\n    OrganizationGuardService,\n    OrganizationTypeGuardService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: I18nServiceAbstraction,\n      useFactory: (window: Window) => new I18nService(window.navigator.language, \"locales\"),\n      deps: [\"WINDOW\"],\n    },\n    { provide: StorageServiceAbstraction, useClass: HtmlStorageService },\n    {\n      provide: \"SECURE_STORAGE\",\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useFactory: (\n        i18nService: I18nServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) => new WebPlatformUtilsService(i18nService, messagingService, logService, stateService),\n      deps: [\n        I18nServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: ImportServiceAbstraction,\n      useClass: ImportService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        ApiServiceAbstraction,\n        I18nServiceAbstraction,\n        CollectionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction\n      ) =>\n        new StateMigrationService(\n          storageService,\n          secureStorageService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [StorageServiceAbstraction, \"SECURE_STORAGE\"],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction,\n        logService: LogService,\n        stateMigrationService: StateMigrationServiceAbstraction\n      ) =>\n        new StateService(\n          storageService,\n          secureStorageService,\n          logService,\n          stateMigrationService,\n          new StateFactory(GlobalState, Account),\n          false\n        ),\n      deps: [\n        StorageServiceAbstraction,\n        \"SECURE_STORAGE\",\n        LogService,\n        StateMigrationServiceAbstraction,\n      ],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangePassword = true;\n  showChangeKdf = true;\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail =\n      this.showChangeKdf =\n      this.showChangePassword =\n        !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<ng-container *ngIf=\"showChangePassword\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n  </div>\n  <app-change-password></app-change-password>\n</ng-container>\n<ng-container *ngIf=\"showChangeKdf\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"encKeySettings\" | i18n }}</h1>\n  </div>\n  <app-change-kdf></app-change-kdf>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { PayPalConfig } from \"jslib-common/abstractions/environment.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"jslib-common/models/request/bitPayInvoiceRequest\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"jslib-common/models/request/paymentRequest\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.apiService.postOrganizationPayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"jslib-common/models/request/storageRequest\";\nimport { PaymentResponse } from \"jslib-common/models/response/paymentResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.apiService.postOrganizationStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\nimport { ApiKeyResponse } from \"jslib-common/models/response/apiKeyResponse\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-verify-master-password\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-verify-master-password>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { EmailRequest } from \"jslib-common/models/request/emailRequest\";\nimport { EmailTokenRequest } from \"jslib-common/models/request/emailTokenRequest\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"jslib-common/enums/kdfType\";\nimport { KdfRequest } from \"jslib-common/models/request/kdfRequest\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedKdfIterations = DEFAULT_KDF_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (recommendedKdfIterations | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"changeKdf\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"jslib-angular/components/change-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { EmergencyAccessStatusType } from \"jslib-common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { CipherWithIdRequest } from \"jslib-common/models/request/cipherWithIdRequest\";\nimport { EmergencyAccessUpdateRequest } from \"jslib-common/models/request/emergencyAccessUpdateRequest\";\nimport { FolderWithIdRequest } from \"jslib-common/models/request/folderWithIdRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { PasswordRequest } from \"jslib-common/models/request/passwordRequest\";\nimport { SendWithIdRequest } from \"jslib-common/models/request/sendWithIdRequest\";\nimport { UpdateKeyRequest } from \"jslib-common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await this.folderService.getAllDecrypted();\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0]);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.apiService.getOrganizationKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n    }\n  }\n}\n","<app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          (input)=\"updatePasswordStrength()\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [score]=\"masterPasswordScore\"\n          [showText]=\"true\"\n        ></app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"changeMasterPassword\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newOrganizationDesc\" | i18n }}</p>\n<app-organization-plans></app-organization-plans>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.deleteAccount(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"jslib-common/models/request/updateDomainsRequest\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"jslib-common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"jslib-common/models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessUpdateRequest } from \"jslib-common/models/request/emergencyAccessUpdateRequest\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          #submitBtn\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          [disabled]=\"loading || submitBtn.loading || readOnly\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"loading || submitBtn.loading\"\n          ></i>\n          <span *ngIf=\"!loading && !submitBtn.loading\">{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"jslib-angular/components/attachments.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ChangePasswordComponent } from \"jslib-angular/components/change-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { PolicyData } from \"jslib-common/models/data/policyData\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessPasswordRequest } from \"jslib-common/models/request/emergencyAccessPasswordRequest\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        policies\n      );\n    }\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                (input)=\"updatePasswordStrength()\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessViewResponse } from \"jslib-common/models/response/emergencyAccessResponse\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"jslib-common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"jslib-common/enums/emergencyAccessType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"jslib-common/models/request/emergencyAccessConfirmRequest\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"jslib-common/models/response/emergencyAccessResponse\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          class=\"badge badge-secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{\n          \"accepted\" | i18n\n        }}</span>\n        <span\n          class=\"badge badge-warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          class=\"badge badge-success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{\n          \"view\" | i18n\n        }}</span>\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <div class=\"dropdown\" appListDropdown>\n          <button\n            class=\"btn btn-outline-secondary dropdown-toggle\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <div class=\"dropdown-menu dropdown-menu-right\">\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              appStopClick\n              (click)=\"reinvite(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            >\n              <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n              {{ \"resendInvitation\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item text-success\"\n              href=\"#\"\n              appStopClick\n              (click)=\"confirm(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            >\n              <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n              {{ \"confirm\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item text-success\"\n              href=\"#\"\n              appStopClick\n              (click)=\"approve(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            >\n              <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n              {{ \"approve\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item text-warning\"\n              href=\"#\"\n              appStopClick\n              (click)=\"reject(c)\"\n              *ngIf=\"\n                c.status === emergencyAccessStatusType.RecoveryInitiated ||\n                c.status === emergencyAccessStatusType.RecoveryApproved\n              \"\n            >\n              <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n              {{ \"reject\" | i18n }}\n            </a>\n            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\">\n              <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n              {{ \"remove\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<p *ngIf=\"!trustedContacts || !trustedContacts.length\">{{ \"noTrustedContacts\" | i18n }}</p>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span\n          class=\"badge badge-secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{\n          \"accepted\" | i18n\n        }}</span>\n        <span\n          class=\"badge badge-warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          class=\"badge badge-success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{\n          \"view\" | i18n\n        }}</span>\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <div class=\"dropdown\" appListDropdown>\n          <button\n            class=\"btn btn-outline-secondary dropdown-toggle\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <div class=\"dropdown-menu dropdown-menu-right\">\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              appStopClick\n              (click)=\"requestAccess(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            >\n              <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n              {{ \"requestAccess\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              appStopClick\n              (click)=\"takeover(c)\"\n              *ngIf=\"\n                c.status === emergencyAccessStatusType.RecoveryApproved &&\n                c.type === emergencyAccessType.Takeover\n              \"\n            >\n              <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n              {{ \"takeover\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item\"\n              [routerLink]=\"c.id\"\n              *ngIf=\"\n                c.status === emergencyAccessStatusType.RecoveryApproved &&\n                c.type === emergencyAccessType.View\n              \"\n            >\n              <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n              {{ \"view\" | i18n }}\n            </a>\n            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\">\n              <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n              {{ \"remove\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<p *ngIf=\"!grantedContacts || !grantedContacts.length\">{{ \"noGrantedAccess\" | i18n }}</p>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"jslib-angular/components/sso.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"submit(returnUri, true)\">\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  disableIcons: boolean;\n  enableGravatars: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: FormControl = new FormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.disableIcons = await this.stateService.getDisableFavicon();\n    this.enableGravatars = await this.stateService.getEnableGravitars();\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = await this.stateService.getLocale();\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"vaultTimeoutToLarge\"));\n      return;\n    }\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(this.disableIcons);\n    await this.stateService.setEnableGravitars(this.enableGravatars);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.stateService.setTheme(this.theme);\n      this.startingTheme = this.theme;\n      const effectiveTheme = await this.platformUtilsService.getEffectiveTheme();\n      const htmlEl = window.document.documentElement;\n      htmlEl.classList.remove(\"theme_\" + ThemeType.Light, \"theme_\" + ThemeType.Dark);\n      htmlEl.classList.add(\"theme_\" + effectiveTheme);\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"optionsUpdated\"));\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"options\" | i18n }}</h1>\n</div>\n<p>{{ \"optionsDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"disableIcons\"\n        name=\"DisableIcons\"\n        [(ngModel)]=\"disableIcons\"\n      />\n      <label class=\"form-check-label\" for=\"disableIcons\">\n        {{ \"disableIcons\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"disableIconsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableGravatars\"\n        name=\"enableGravatars\"\n        [(ngModel)]=\"enableGravatars\"\n      />\n      <label class=\"form-check-label\" for=\"enableGravatars\">\n        {{ \"enableGravatars\" | i18n }}\n      </label>\n      <a\n        href=\"https://gravatar.com/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableGravatarsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { OrganizationCreateRequest } from \"jslib-common/models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"jslib-common/models/request/organizationKeysRequest\";\nimport { OrganizationUpgradeRequest } from \"jslib-common/models/request/organizationUpgradeRequest\";\nimport { ProviderOrganizationCreateRequest } from \"jslib-common/models/request/provider/providerOrganizationCreateRequest\";\nimport { PlanResponse } from \"jslib-common/models/response/planResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  ownedBusiness = false;\n  premiumAccessAddon = false;\n  additionalStorage = 0;\n  additionalSeats = 0;\n  name: string;\n  billingEmail: string;\n  clientOwnerEmail: string;\n  businessName: string;\n  productTypes = ProductType;\n  formPromise: Promise<any>;\n  singleOrgPolicyBlock = false;\n  discount = 0;\n\n  plans: PlanResponse[];\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.ownedBusiness = true;\n      }\n    }\n\n    if (this.providerId) {\n      this.ownedBusiness = true;\n      this.changedOwnedBusiness();\n    }\n\n    this.loading = false;\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.plan);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.ownedBusiness) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans.filter(\n      (plan) => !plan.legacyYear && !plan.disabled && plan.product === this.product\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return plan.additionalStoragePricePerGb * Math.abs(this.additionalStorage || 0);\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.additionalSeats || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (this.selectedPlan.hasAdditionalSeatsOption && this.additionalSeats) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (this.selectedPlan.hasAdditionalStorageOption && this.additionalStorage) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.plan = this.selectablePlans[0].type;\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.premiumAccessAddon = false;\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.additionalStorage = 0;\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.additionalSeats = 0;\n    } else if (\n      !this.additionalSeats &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.additionalSeats = 1;\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.ownedBusiness || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.product = ProductType.Teams;\n    this.plan = PlanType.TeamsAnnually;\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n        if (!this.acceptingSponsorship) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async userHasBlockingSingleOrgPolicy() {\n    return this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.ownedBusiness ? this.businessName : null;\n    request.additionalSeats = this.additionalSeats;\n    request.additionalStorageGb = this.additionalStorage;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.name;\n    request.billingEmail = this.billingEmail;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.ownedBusiness ? this.businessName : null;\n      request.additionalSeats = this.additionalSeats;\n      request.additionalStorageGb = this.additionalStorage;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(this.clientOwnerEmail, request);\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.apiService.postOrganization(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.apiService.postOrganizationLicense(fd);\n    const orgId = response.id;\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.apiService.postOrganizationKeys(orgId, request);\n\n    return orgId;\n  }\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n>\n  <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"row\" *ngIf=\"createOrganization\">\n    <div class=\"form-group col-6\">\n      <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n      <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n      <input\n        id=\"billingEmail\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"BillingEmail\"\n        [(ngModel)]=\"billingEmail\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!!providerId\">\n      <label for=\"email\">{{ \"clientOwnerEmail\" | i18n }}</label>\n      <input\n        id=\"email\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"Email\"\n        [(ngModel)]=\"clientOwnerEmail\"\n        required\n      />\n      <small class=\"text-muted\">{{ \"clientOwnerDesc\" | i18n: \"20\" }}</small>\n    </div>\n  </div>\n  <div *ngIf=\"!providerId && !acceptingSponsorship\">\n    <div class=\"form-group form-check\">\n      <input\n        id=\"ownedBusiness\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        name=\"OwnedBusiness\"\n        [(ngModel)]=\"ownedBusiness\"\n        (change)=\"changedOwnedBusiness()\"\n      />\n      <label for=\"ownedBusiness\" class=\"form-check-label\">{{\n        \"accountOwnedBusiness\" | i18n\n      }}</label>\n    </div>\n    <div class=\"row\" *ngIf=\"ownedBusiness\">\n      <div class=\"form-group col-6\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"businessName\"\n        />\n      </div>\n    </div>\n  </div>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      [(ngModel)]=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"product !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"AdditionalSeats\"\n            [(ngModel)]=\"additionalSeats\"\n            min=\"1\"\n            max=\"100000\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"AdditionalSeats\"\n          [(ngModel)]=\"additionalSeats\"\n          min=\"0\"\n          max=\"100000\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"AdditionalStorageGb\"\n          [(ngModel)]=\"additionalStorage\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"PremiumAccessAddon\"\n            [(ngModel)]=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"BillingInterval\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        [(ngModel)]=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ additionalSeats || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ additionalSeats || 0 }} &times; {{ selectablePlan.seatPrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"month\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\n@Component({\n  selector: \"app-organizations\",\n  templateUrl: \"organizations.component.html\",\n})\nexport class OrganizationsComponent implements OnInit {\n  @Input() vault = false;\n\n  organizations: Organization[];\n  policies: Policy[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    if (!this.vault) {\n      await this.syncService.fullSync(true);\n      await this.load();\n    }\n  }\n\n  async load() {\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.organizations = orgs;\n    this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n    this.loaded = true;\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    // Set variables\n    let keyString: string = null;\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    // Enrolling\n    if (!org.resetPasswordEnrolled) {\n      // Alert user about enrollment\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"resetPasswordEnrollmentWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        return;\n      }\n\n      // Retrieve Public Key\n      this.actionPromise = this.apiService\n        .getOrganizationKeys(org.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n          }\n\n          const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n          // RSA Encrypt user's encKey.key with organization public key\n          const encKey = await this.cryptoService.getEncKey();\n          const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n          keyString = encryptedKey.encryptedString;\n          toastStringRef = \"enrollPasswordResetSuccess\";\n\n          // Create request and execute enrollment\n          const request = new OrganizationUserResetPasswordEnrollmentRequest();\n          request.resetPasswordKey = keyString;\n          return this.apiService.putOrganizationUserResetPasswordEnrollment(\n            org.id,\n            org.userId,\n            request\n          );\n        })\n        .then(() => {\n          return this.syncService.fullSync(true);\n        });\n    } else {\n      // Withdrawal\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.resetPasswordKey = keyString;\n      this.actionPromise = this.apiService\n        .putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request)\n        .then(() => {\n          return this.syncService.fullSync(true);\n        });\n    }\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<ng-container *ngIf=\"vault\">\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <ul class=\"bwi-ul card-ul carets\" *ngIf=\"organizations && organizations.length\">\n      <li *ngFor=\"let o of organizations\">\n        <a [routerLink]=\"['/organizations', o.id]\" class=\"text-body\">\n          <i class=\"bwi bwi-li bwi-caret-right\" aria-hidden=\"true\"></i> {{ o.name }}\n          <ng-container *ngIf=\"!o.enabled\">\n            <i\n              class=\"bwi bwi-exclamation-triangle text-danger\"\n              title=\"{{ 'organizationIsDisabled' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"organizationIsDisabled\" | i18n }}</span>\n          </ng-container>\n        </a>\n      </li>\n    </ul>\n    <p *ngIf=\"!organizations || !organizations.length\">{{ \"noOrganizationsList\" | i18n }}</p>\n  </ng-container>\n  <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-block btn-outline-primary\">\n    <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    {{ \"newOrganization\" | i18n }}\n  </a>\n</ng-container>\n<ng-container *ngIf=\"!vault\">\n  <div class=\"page-header d-flex\">\n    <h1>\n      {{ \"organizations\" | i18n }}\n      <small [appApiAction]=\"actionPromise\" #action>\n        <ng-container *ngIf=\"action.loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n      </small>\n    </h1>\n    <a\n      href=\"#\"\n      routerLink=\"/settings/create-organization\"\n      class=\"btn btn-sm btn-outline-primary ml-auto\"\n      *ngIf=\"!loaded || (organizations && organizations.length)\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newOrganization\" | i18n }}\n    </a>\n  </div>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"loaded\">\n    <ng-container *ngIf=\"!organizations || !organizations.length\">\n      <p>{{ \"noOrganizationsList\" | i18n }}</p>\n      <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-outline-primary\">\n        <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n        {{ \"newOrganization\" | i18n }}\n      </a>\n    </ng-container>\n    <table class=\"table table-hover table-list\" *ngIf=\"organizations && organizations.length\">\n      <tbody>\n        <tr *ngFor=\"let o of organizations\">\n          <td width=\"30\">\n            <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/organizations', o.id]\">{{ o.name }}</a>\n            <ng-container *ngIf=\"!o.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'organizationIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"organizationIsDisabled\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(o)\">\n              <i\n                class=\"bwi bwi-key\"\n                appStopProp\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  *ngIf=\"allowEnrollmentChanges(o) && !o.resetPasswordEnrolled\"\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"toggleResetPasswordEnrollment(o)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"enrollPasswordReset\" | i18n }}\n                </a>\n                <a\n                  *ngIf=\"allowEnrollmentChanges(o) && o.resetPasswordEnrolled\"\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"toggleResetPasswordEnrollment(o)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n                  {{ \"withdrawPasswordReset\" | i18n }}\n                </a>\n                <ng-container *ngIf=\"o.useSso && o.identifier\">\n                  <a\n                    *ngIf=\"o.ssoBound; else linkSso\"\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"unlinkSso(o)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n                    {{ \"unlinkSso\" | i18n }}\n                  </a>\n                  <ng-template #linkSso>\n                    <app-link-sso [organization]=\"o\"> </app-link-sso>\n                  </ng-template>\n                </ng-container>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"leave(o)\">\n                  <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n                  {{ \"leave\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport ThemeVariables from \"src/scss/export.module.scss\";\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    await this.setTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private async setTheme() {\n    const theme = await this.platformUtilsService.getEffectiveTheme();\n    if (theme === ThemeType.Dark) {\n      this.StripeElementStyle.base.color = darkInputColor;\n      this.StripeElementStyle.base[\"::placeholder\"].color = darkInputPlaceholderColor;\n      this.StripeElementStyle.invalid.color = darkInputColor;\n    } else {\n      this.StripeElementStyle.base.color = lightInputColor;\n      this.StripeElementStyle.base[\"::placeholder\"].color = lightInputPlaceholderColor;\n      this.StripeElementStyle.invalid.color = lightInputColor;\n    }\n  }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div class=\"form-group col-4\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div class=\"form-group col-4\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premium = await this.tokenService.getPremium();\n    if (premium) {\n      this.router.navigate([\"/settings/subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<app-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</app-callout>\n<app-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    class=\"btn btn-outline-secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</app-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"jslib-common/models/request/updateProfileRequest\";\nimport { ProfileResponse } from \"jslib-common/models/response/profileResponse\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n  hidePasswordHint = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n    this.hidePasswordHint = await this.keyConnectorService.getUsesKeyConnector();\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n      <div class=\"form-group\" *ngIf=\"!hidePasswordHint\">\n        <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n        <input\n          id=\"masterPasswordHint\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"MasterPasswordHint\"\n          [(ngModel)]=\"profile.masterPasswordHint\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <app-avatar\n          data=\"{{ profile | userName }}\"\n          [email]=\"profile.email\"\n          dynamic=\"true\"\n          size=\"75\"\n          fontSize=\"35\"\n        >\n        </app-avatar>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.tokenService.getPremium();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"options\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"options\" | i18n }}\n          </a>\n          <a routerLink=\"organizations\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"organizations\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"premium\"\n          >\n            {{ \"premiumMembership\" | i18n }}\n          </a>\n          <a\n            routerLink=\"premium\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!selfHosted\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { PlanSponsorshipType } from \"jslib-common/enums/planSponsorshipType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit {\n  loading = false;\n\n  availableSponsorshipOrgs: Organization[] = [];\n  activeSponsorshipOrgs: Organization[] = [];\n  selectedSponsorshipOrgId = \"\";\n  sponsorshipEmail = \"\";\n\n  // Conditional display properties\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(this.selectedSponsorshipOrgId, {\n      sponsoredEmail: this.sponsorshipEmail,\n      planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n      friendlyName: this.sponsorshipEmail,\n    });\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.load(true);\n  }\n\n  async load(forceReload = false) {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    if (forceReload) {\n      await this.syncService.fullSync(true);\n    }\n\n    const allOrgs = await this.organizationService.getAll();\n    this.availableSponsorshipOrgs = allOrgs.filter((org) => org.familySponsorshipAvailable);\n\n    this.activeSponsorshipOrgs = allOrgs.filter(\n      (org) => org.familySponsorshipFriendlyName !== null\n    );\n\n    if (this.availableSponsorshipOrgs.length === 1) {\n      this.selectedSponsorshipOrgId = this.availableSponsorshipOrgs[0].id;\n    }\n    this.loading = false;\n  }\n\n  private async resetForm() {\n    this.sponsorshipEmail = \"\";\n    this.selectedSponsorshipOrgId = \"\";\n  }\n\n  get anyActiveSponsorships(): boolean {\n    return this.activeSponsorshipOrgs.length > 0;\n  }\n\n  get anyOrgsAvailable(): boolean {\n    return this.availableSponsorshipOrgs.length > 0;\n  }\n\n  get moreThanOneOrgAvailable(): boolean {\n    return this.availableSponsorshipOrgs.length > 1;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable\"\n  >\n    <div *ngIf=\"moreThanOneOrgAvailable\" class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"accountEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"accountEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        [(ngModel)]=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n      />\n      <button class=\"btn btn-primary btn-submit mt-4\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs\">\n            <tr sponsoring-org-row [sponsoringOrg]=\"o\" (sponsorshipRemoved)=\"load(true)\"></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent {\n  @Input() sponsoringOrg: Organization = null;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"resendEmailBtn.loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"revokeSponsorshipBtn.loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationTaxInfoUpdateRequest } from \"jslib-common/models/request/organizationTaxInfoUpdateRequest\";\nimport { TaxInfoUpdateRequest } from \"jslib-common/models/request/taxInfoUpdateRequest\";\nimport { TaxRateResponse } from \"jslib-common/models/response/taxRateResponse\";\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\nexport class TaxInfoComponent {\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: any = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: any = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.apiService.getOrganizationTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        const taxInfo = await this.apiService.getTaxInfo();\n        if (taxInfo) {\n          this.taxInfo.postalCode = taxInfo.postalCode;\n          this.taxInfo.country = taxInfo.country || \"US\";\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    const taxRates = await this.apiService.getTaxRates();\n    this.taxRates = taxRates.data;\n    this.loading = false;\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.apiService.putOrganizationTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"col-3\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"jslib-common/models/request/updateTwoFactorAuthenticatorRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"jslib-common/models/response/twoFactorAuthenticatorResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<any>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new (window as any).QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\nimport { TwoFactorProviderRequest } from \"jslib-common/models/request/twoFactorProviderRequest\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: any) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<any>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"jslib-common/models/request/updateTwoFactorDuoRequest\";\nimport { TwoFactorDuoResponse } from \"jslib-common/models/response/twoFactorDuoResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" title=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"jslib-common/models/request/updateTwoFactorEmailRequest\";\nimport { TwoFactorEmailResponse } from \"jslib-common/models/response/twoFactorEmailResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"sendBtn.loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"jslib-common/models/response/twoFactorRescoverResponse\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalRef } from \"jslib-angular/components/modal/modal.ref\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { TwoFactorProviders } from \"jslib-common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  modal: ModalRef;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n    await this.load();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = await this.policyService.policyAppliesToUser(\n        PolicyType.TwoFactorAuthentication\n      );\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"jslib-common/models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"jslib-common/models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"jslib-common/models/response/twoFactorEmailResponse\";\nimport { TwoFactorRecoverResponse } from \"jslib-common/models/response/twoFactorRescoverResponse\";\nimport { TwoFactorWebAuthnResponse } from \"jslib-common/models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"jslib-common/models/response/twoFactorYubiKeyResponse\";\nimport { Verification } from \"jslib-common/types/verification\";\n\ntype TwoFactorResponse =\n  | TwoFactorRecoverResponse\n  | TwoFactorDuoResponse\n  | TwoFactorEmailResponse\n  | TwoFactorWebAuthnResponse\n  | TwoFactorAuthenticatorResponse\n  | TwoFactorYubiKeyResponse;\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<any>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-verify-master-password [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-verify-master-password>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"jslib-common/models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"jslib-common/models/request/updateTwoFactorWebAuthnRequest\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"jslib-common/models/response/twoFactorWebAuthnResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: any[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: any) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"removeKeyBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"readKeyBtn.loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!readKeyBtn.loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"jslib-common/models/request/updateTwoFactorYubioOtpRequest\";\nimport { TwoFactorYubiKeyResponse } from \"jslib-common/models/response/twoFactorYubiKeyResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: any[];\n  nfc = false;\n\n  formPromise: Promise<any>;\n  disablePromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: any) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { CipherWithIdRequest } from \"jslib-common/models/request/cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"jslib-common/models/request/folderWithIdRequest\";\nimport { UpdateKeyRequest } from \"jslib-common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await this.folderService.getAllDecrypted();\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<any> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { TransactionType } from \"jslib-common/enums/transactionType\";\nimport { VerifyBankRequest } from \"jslib-common/models/request/verifyBankRequest\";\nimport { BillingResponse } from \"jslib-common/models/response/billingResponse\";\n\n@Component({\n  selector: \"app-user-billing\",\n  templateUrl: \"user-billing.component.html\",\n})\nexport class UserBillingComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n  organizationId: string;\n  verifyAmount1: number;\n  verifyAmount2: number;\n\n  verifyBankPromise: Promise<any>;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    if (this.organizationId != null) {\n      this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n    } else {\n      this.billing = await this.apiService.getUserBilling();\n    }\n    this.loading = false;\n  }\n\n  async verifyBank() {\n    if (this.loading) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyAmount1;\n      request.amount2 = this.verifyAmount2;\n      this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(\n        this.organizationId,\n        request\n      );\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { SubscriptionResponse } from \"jslib-common/models/response/subscriptionResponse\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private tokenService: TokenService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.tokenService.getPremium()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.platformUtilsService.saveFile(\n      window,\n      licenseString,\n      null,\n      \"bitwarden_premium_license.json\"\n    );\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"premiumMembership\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"ml-1 btn btn-outline-secondary\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"jslib-angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.postAccountVerifyEmail();\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"checkInboxForVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"sendBtn.loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { ExportComponent as BaseExportComponent } from \"jslib-angular/components/export.component\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  organizationId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"exportSuccess\"));\n  }\n}\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"jslib-angular/components/generator.component\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"jslib-common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      route,\n      window\n    );\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <div\n      *ngIf=\"type === 'password'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"password | colorPassword\"\n      appSelectCopy\n    ></div>\n    <div\n      *ngIf=\"type === 'username'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"username | colorPassword\"\n      appSelectCopy\n    ></div>\n  </div>\n</div>\n<div class=\"form-group\">\n  <label class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type_{{ o.value }}\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType_{{ o.value }}\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div class=\"form-group\">\n    <div class=\"d-block\">\n      <label>{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType_{{ o.value }}\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <div class=\"form-group\" *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of forwardOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.forwardedService\"\n        name=\"ForwardType_{{ o.value }}\"\n        id=\"forwardtype_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.forwardedService === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"forwardtype_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n      {{ \"regenerateUsername\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport * as JSZip from \"jszip\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ImportService } from \"jslib-common/abstractions/import.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { ImportOption, ImportType } from \"jslib-common/enums/importOptions\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\n@Component({\n  selector: \"app-import\",\n  templateUrl: \"import.component.html\",\n})\nexport class ImportComponent implements OnInit {\n  featuredImportOptions: ImportOption[];\n  importOptions: ImportOption[];\n  format: ImportType = null;\n  fileContents: string;\n  formPromise: Promise<Error>;\n  loading = false;\n  importBlockedByPolicy = false;\n\n  protected organizationId: string = null;\n  protected successNavigate: any[] = [\"vault\"];\n\n  constructor(\n    protected i18nService: I18nService,\n    protected importService: ImportService,\n    protected router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.setImportOptions();\n\n    this.importBlockedByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.PersonalOwnership\n    );\n  }\n\n  async submit() {\n    if (this.importBlockedByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalOwnershipPolicyInEffectImports\")\n      );\n      return;\n    }\n\n    this.loading = true;\n\n    const importer = this.importService.getImporter(this.format, this.organizationId);\n    if (importer === null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFormat\")\n      );\n      this.loading = false;\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (\n      (files == null || files.length === 0) &&\n      (this.fileContents == null || this.fileContents === \"\")\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      this.loading = false;\n      return;\n    }\n\n    let fileContents = this.fileContents;\n    if (files != null && files.length > 0) {\n      try {\n        const content = await this.getFileContents(files[0]);\n        if (content != null) {\n          fileContents = content;\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (fileContents == null || fileContents === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      this.loading = false;\n      return;\n    }\n\n    try {\n      this.formPromise = this.importService.import(importer, fileContents, this.organizationId);\n      const error = await this.formPromise;\n      if (error != null) {\n        this.error(error);\n        this.loading = false;\n        return;\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"importSuccess\"));\n      this.router.navigate(this.successNavigate);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  getFormatInstructionTitle() {\n    if (this.format == null) {\n      return null;\n    }\n\n    const results = this.featuredImportOptions\n      .concat(this.importOptions)\n      .filter((o) => o.id === this.format);\n    if (results.length > 0) {\n      return this.i18nService.t(\"instructionsFor\", results[0].name);\n    }\n    return null;\n  }\n\n  protected setImportOptions() {\n    this.featuredImportOptions = [\n      {\n        id: null,\n        name: \"-- \" + this.i18nService.t(\"select\") + \" --\",\n      },\n      ...this.importService.featuredImportOptions,\n    ];\n    this.importOptions = [...this.importService.regularImportOptions].sort((a, b) => {\n      if (a.name == null && b.name != null) {\n        return -1;\n      }\n      if (a.name != null && b.name == null) {\n        return 1;\n      }\n      if (a.name == null && b.name == null) {\n        return 0;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(a.name, b.name)\n        : a.name.localeCompare(b.name);\n    });\n  }\n\n  private async error(error: Error) {\n    await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: \"error\" as SweetAlertIcon,\n      iconHtml: `<i class=\"swal-custom-icon bwi bwi-error text-danger\"></i>`,\n      input: \"textarea\",\n      inputValue: error.message,\n      inputAttributes: {\n        readonly: \"true\",\n      },\n      titleText: this.i18nService.t(\"importError\"),\n      text: this.i18nService.t(\"importErrorDesc\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"ok\"),\n      onOpen: (popupEl) => {\n        popupEl.querySelector(\".swal2-textarea\").scrollTo(0, 0);\n      },\n    });\n  }\n\n  private getFileContents(file: File): Promise<string> {\n    if (this.format === \"1password1pux\") {\n      return this.extract1PuxContent(file);\n    }\n\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsText(file, \"utf-8\");\n      reader.onload = (evt) => {\n        if (this.format === \"lastpasscsv\" && file.type === \"text/html\") {\n          const parser = new DOMParser();\n          const doc = parser.parseFromString((evt.target as any).result, \"text/html\");\n          const pre = doc.querySelector(\"pre\");\n          if (pre != null) {\n            resolve(pre.textContent);\n            return;\n          }\n          reject();\n          return;\n        }\n\n        resolve((evt.target as any).result);\n      };\n      reader.onerror = () => {\n        reject();\n      };\n    });\n  }\n\n  private extract1PuxContent(file: File): Promise<string> {\n    return new JSZip()\n      .loadAsync(file)\n      .then((zip) => {\n        return zip.file(\"export.data\").async(\"string\");\n      })\n      .then(\n        function success(content) {\n          return content;\n        },\n        function error(e) {\n          return \"\";\n        }\n      );\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"jslib-angular/components/password-generator-history.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"password-row\">\n              <div\n                class=\"text-monospace generated-wrapper\"\n                [innerHTML]=\"h.password | colorPassword\"\n                appSelectCopy\n              ></div>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"jslib-angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/add-edit.component\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n\n  protected totpInterval: number;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventService: EventService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())[0];\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"jslib-angular/components/attachments.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\nexport class BulkActionsComponent {\n  @Input() ciphersComponent: CiphersComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.ciphersComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"jslib-common/models/request/cipherBulkDeleteRequest\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders: FolderView[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders = await this.folderService.getAllDecrypted();\n    this.folderId = this.folders[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<any>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections\n      .filter((c) => (c as any).checked)\n      .map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"jslib-angular/components/ciphers.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventService: EventService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"jslib-angular/components/collections.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"jslib-angular/components/folder-add-edit.component\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, i18nService, platformUtilsService, logService);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { GroupingsComponent as BaseGroupingsComponent } from \"jslib-angular/components/groupings.component\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-vault-groupings\",\n  templateUrl: \"groupings.component.html\",\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchText = \"\";\n  searchPlaceholder: string = null;\n\n  constructor(\n    collectionService: CollectionService,\n    folderService: FolderService,\n    stateService: StateService\n  ) {\n    super(collectionService, folderService, stateService);\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"jslib-angular/components/share.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n        {{ \"noOrganizationsList\" | i18n }}\n      </div>\n      <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n        <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n          *ngIf=\"organizations && organizations.length\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <a\n          href=\"#\"\n          routerLink=\"/settings/create-organization\"\n          class=\"btn btn-primary\"\n          *ngIf=\"!organizations || !organizations.length\"\n        >\n          {{ \"newOrganization\" | i18n }}\n        </a>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { OrganizationsComponent } from \"../settings/organizations.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { GroupingsComponent } from \"./groupings.component\";\nimport { ShareComponent } from \"./share.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(OrganizationsComponent, { static: true })\n  organizationsComponent: OrganizationsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  favorites = false;\n  type: CipherType = null;\n  folderId: string = null;\n  collectionId: string = null;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  showProviders = false;\n  deleted = false;\n  trashCleanupWarning: string = null;\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.showProviders = (await this.providerService.getAll()).length > 0;\n\n      await Promise.all([this.groupingsComponent.load(), this.organizationsComponent.load()]);\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      if (params == null) {\n        this.groupingsComponent.selectedAll = true;\n        await this.ciphersComponent.reload();\n      } else {\n        if (params.deleted) {\n          this.groupingsComponent.selectedTrash = true;\n          await this.filterDeleted();\n        } else if (params.favorites) {\n          this.groupingsComponent.selectedFavorites = true;\n          await this.filterFavorites();\n        } else if (params.type) {\n          const t = parseInt(params.type, null);\n          this.groupingsComponent.selectedType = t;\n          await this.filterCipherType(t);\n        } else if (params.folderId) {\n          this.groupingsComponent.selectedFolder = true;\n          this.groupingsComponent.selectedFolderId = params.folderId;\n          await this.filterFolder(params.folderId);\n        } else if (params.collectionId) {\n          this.groupingsComponent.selectedCollectionId = params.collectionId;\n          await this.filterCollection(params.collectionId);\n        } else {\n          this.groupingsComponent.selectedAll = true;\n          await this.ciphersComponent.reload();\n        }\n      }\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.groupingsComponent.load(),\n                  this.organizationsComponent.load(),\n                  this.ciphersComponent.load(this.ciphersComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async clearGroupingFilters() {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchVault\");\n    await this.ciphersComponent.reload();\n    this.clearFilters();\n    this.go();\n  }\n\n  async filterFavorites() {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchFavorites\");\n    await this.ciphersComponent.reload((c) => c.favorite);\n    this.clearFilters();\n    this.favorites = true;\n    this.go();\n  }\n\n  async filterDeleted() {\n    this.ciphersComponent.showAddNew = false;\n    this.ciphersComponent.deleted = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n    await this.ciphersComponent.reload(null, true);\n    this.clearFilters();\n    this.deleted = true;\n    this.go();\n  }\n\n  async filterCipherType(type: CipherType) {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchType\");\n    await this.ciphersComponent.reload((c) => c.type === type);\n    this.clearFilters();\n    this.type = type;\n    this.go();\n  }\n\n  async filterFolder(folderId: string) {\n    this.ciphersComponent.showAddNew = true;\n    folderId = folderId === \"none\" ? null : folderId;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n    await this.ciphersComponent.reload((c) => c.folderId === folderId);\n    this.clearFilters();\n    this.folderId = folderId == null ? \"none\" : folderId;\n    this.go();\n  }\n\n  async filterCollection(collectionId: string) {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n    await this.ciphersComponent.reload(\n      (c) => c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1\n    );\n    this.clearFilters();\n    this.collectionId = collectionId;\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.groupingsComponent.loadFolders();\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.groupingsComponent.loadFolders();\n        });\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.groupingsComponent.loadFolders();\n          await this.filterFolder(\"none\");\n          this.groupingsComponent.selectedFolderId = null;\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.type;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.collectionId != null) {\n      const collection = this.groupingsComponent.collections.filter(\n        (c) => c.id === this.collectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.collectionId];\n      }\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private clearFilters() {\n    this.folderId = null;\n    this.collectionId = null;\n    this.favorites = false;\n    this.type = null;\n    this.deleted = false;\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.favorites ? true : null,\n        type: this.type,\n        folderId: this.folderId,\n        collectionId: this.collectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      replaceUrl: true,\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <app-vault-groupings\n        (onAllClicked)=\"clearGroupingFilters()\"\n        (onFavoritesClicked)=\"filterFavorites()\"\n        (onCipherTypeClicked)=\"filterCipherType($event)\"\n        (onFolderClicked)=\"filterFolder($event.id)\"\n        (onAddFolder)=\"addFolder()\"\n        (onEditFolder)=\"editFolder($event.id)\"\n        (onCollectionClicked)=\"filterCollection($event.id)\"\n        (onSearchTextChanged)=\"filterSearchText($event)\"\n        (onTrashClicked)=\"filterDeleted()\"\n      >\n      </app-vault-groupings>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"myVault\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [deleted]=\"deleted\">\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-vault-ciphers>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a class=\"btn btn-block btn-outline-secondary\" routerLink=\"/settings/premium\">\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card mb-4\">\n        <div class=\"card-header d-flex\">\n          {{ \"organizations\" | i18n }}\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/about-organizations/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <div class=\"card-body\">\n          <app-organizations [vault]=\"true\"></app-organizations>\n        </div>\n      </div>\n      <div class=\"card mt-4\" *ngIf=\"showProviders\">\n        <div class=\"card-header d-flex\">\n          {{ \"providers\" | i18n }}\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/providers/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <div class=\"card-body\">\n          <app-providers vault=\"true\"></app-providers>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"jslib-common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { ThemeType } from \"jslib-common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"jslib-common/models/domain/globalState\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { StorageService } from \"jslib-common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"jslib-common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\n@Injectable()\nexport class HtmlStorageService implements StorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { I18nService as BaseI18nService } from \"jslib-common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { StorageService } from \"jslib-common/abstractions/storage.service\";\n\nexport class MemoryStorageService implements StorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"jslib-angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../app/components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { FolderData } from \"jslib-common/models/data/folderData\";\nimport { SendData } from \"jslib-common/models/data/sendData\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"jslib-common/services/state.service\";\n\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { Account } from \"../models/account\";\nimport { GlobalState } from \"../models/globalState\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async addAccount(account: Account) {\n    // Apply web overides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getRememberEmail(options?: StorageOptions) {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberEmail;\n  }\n\n  async setRememberEmail(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.setLastSync(value, options);\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"jslib-common/services/stateMigration.service\";\n\nimport { Account } from \"../models/account\";\nimport { GlobalState } from \"../models/globalState\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","import Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { ClientType } from \"jslib-common/enums/clientType\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n  private prefersColorSchemeDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n    let blob: Blob = null;\n    let type: string = null;\n    const fileNameLower = fileName.toLowerCase();\n    let doDownload = true;\n    if (fileNameLower.endsWith(\".pdf\")) {\n      type = \"application/pdf\";\n      doDownload = false;\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      type = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      type = \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      type = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      type = \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      type = \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      type = \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      type = \"image/gif\";\n    }\n    if (type != null) {\n      blobOptions = blobOptions || {};\n      if (blobOptions.type == null) {\n        blobOptions.type = type;\n      }\n    }\n    if (blobOptions != null) {\n      blob = new Blob([blobData], blobOptions);\n    } else {\n      blob = new Blob([blobData]);\n    }\n\n    const a = win.document.createElement(\"a\");\n    if (doDownload) {\n      a.download = fileName;\n    } else if (!this.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(blob);\n    a.style.position = \"fixed\";\n    win.document.body.appendChild(a);\n    a.click();\n    win.document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n\n  getDefaultSystemTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    return Promise.resolve(this.prefersColorSchemeDark.matches ? ThemeType.Dark : ThemeType.Light);\n  }\n\n  async getEffectiveTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    const theme = await this.stateService.getTheme();\n    if (theme === ThemeType.Dark) {\n      return ThemeType.Dark;\n    } else if (theme === ThemeType.System) {\n      return this.getDefaultSystemTheme();\n    } else {\n      return ThemeType.Light;\n    }\n  }\n\n  onDefaultSystemThemeChange(callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown) {\n    try {\n      this.prefersColorSchemeDark.addEventListener(\"change\", ({ matches }) => {\n        callback(matches ? ThemeType.Dark : ThemeType.Light);\n      });\n    } catch (e) {\n      // Safari older than v14\n      this.prefersColorSchemeDark.addListener((ev) => {\n        callback(ev.matches ? ThemeType.Dark : ThemeType.Light);\n      });\n    }\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(22977)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","routes","path","loadChildren","ProvidersModule","AppRoutingModule","RouterModule","forChild","AppComponent","ngOnInit","super","this","policyListService","addPolicies","MaximumVaultTimeoutPolicy","DisablePersonalVaultExportPolicy","AppModule","JslibModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","ServicesModule","InfiniteScrollModule","DragDropModule","OssRoutingModule","OrganizationsModule","WildcardRoutingModule","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","BaseCvaComponent","constructor","controlDir","internalControl","FormControl","onValueChangesInternal","value","onChange","valueAccessor","describedById","showDescribedBy","controlId","helperText","control","hasError","isRequired","hasValidator","Validators","required","dirtyRequired","valueChanges","subscribe","onBlurInternal","onTouched","writeValue","setValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disable","enable","InputCheckboxComponent","InputTextReadOnlyComponent","platformUtilsService","showCopy","showLaunch","copy","copyToClipboard","launchUri","url","InputTextComponent","stripSpaces","transformValue","newValue","emitEvent","doStripSpaces","onValueChangeInternal","replace","disabled","SelectComponent","defaultSigningAlgorithm","SsoComponent","formBuilder","route","apiService","i18nService","organizationService","ssoType","SsoType","ssoTypeOptions","name","t","None","OpenIdConnect","Saml2","samlSigningAlgorithms","saml2SigningBehaviourOptions","Saml2SigningBehavior","IfIdpWantAuthnRequestsSigned","Always","Never","saml2BindingTypeOptions","Saml2BindingType","HttpRedirect","HttpPost","saml2NameIdFormatOptions","Saml2NameIdFormat","NotConfigured","Unspecified","EmailAddress","X509SubjectName","WindowsDomainQualifiedName","KerberosPrincipalName","EntityIdentifier","Persistent","Transient","connectRedirectOptions","OpenIdConnectRedirectBehavior","RedirectGet","FormPost","showOpenIdCustomizations","loading","haveTestedKeyConnector","enabled","openIdForm","group","authority","clientId","clientSecret","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","updateOn","samlForm","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpAllowOutboundLogoutRequests","idpWantAuthnRequestsSigned","ssoConfigForm","configType","keyConnectorEnabled","keyConnectorUrl","openId","saml","get","newType","updateValueAndValidity","parent","params","organizationId","load","organization","ssoSettings","getOrganizationSso","populateForm","callbackPath","urls","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","submit","validateForm","validateKeyConnectorUrl","valid","readOutErrors","request","OrganizationSsoRequest","data","SsoConfigApi","fromView","formPromise","postOrganizationSso","response","showToast","markAsPending","getKeyConnectorAlive","setErrors","invalidUrl","toggleOpenIdCustomizations","getErrorCount","form","Object","values","controls","reduce","acc","FormGroup","errors","keys","length","enableTestKeyConnector","Utils","isNullOrWhitespace","samlSigningAlgorithmOptions","map","algorithm","forEach","markAsDirty","markAsTouched","ssoConfigView","SsoConfigView","patchValue","errorText","errorCount","errorCountText","toString","div","document","createElement","className","id","setAttribute","innerText","existing","getElementById","remove","body","append","component","OrganizationLayoutComponent","canActivate","AuthGuardService","OrganizationGuardService","children","ManageComponent","OrganizationTypeGuardService","permissions","Permissions","CreateNewCollections","EditAnyCollection","DeleteAnyCollection","EditAssignedCollections","DeleteAssignedCollections","AccessEventLogs","ManageGroups","ManageUsers","ManagePolicies","ManageSso","OrganizationsRoutingModule","CommonModule","BasePolicy","description","type","PolicyType","DisablePersonalVaultExport","DisablePersonalVaultExportPolicyComponent","BasePolicyComponent","MaximumVaultTimeout","MaximumVaultTimeoutPolicyComponent","hours","minutes","loadData","policyResponse","Math","floor","buildRequestData","buildRequest","policiesEnabledMap","singleOrgEnabled","SingleOrg","Error","AddOrganizationComponent","providerService","webProviderService","validationService","onAddedOrganization","EventEmitter","providerId","provider","add","showDialog","addOrganizationToProvider","e","showError","emit","DisallowedPlanTypes","PlanType","Free","FamiliesAnnually2019","FamiliesAnnually","ClientsComponent","searchService","logService","modalService","manageOrganizations","showAddExisting","didScroll","pageSize","pagedClientsCount","queryParams","pipe","first","qParams","searchText","search","getProviderClients","clients","ProviderUserType","ProviderAdmin","candidateOrgs","getAll","filter","o","isOwner","allowedOrgsIds","Promise","all","getOrganization","then","orgs","includes","planType","addableOrganizations","isPaging","searching","isSearching","resetPaging","isSearchable","pagedClients","loadMore","pagedLength","pagedSize","concat","slice","addExistingOrganization","modal","openViewRef","addModalRef","comp","organizations","close","error","organizationName","actionPromise","detachOrganizastion","ViewContainerRef","CreateOrganizationComponent","OrganizationPlansComponent","AcceptProviderComponent","BaseAcceptComponent","router","stateService","platformUtilService","failedMessage","requiredParameters","authedHandler","ProviderUserAcceptRequest","token","postProviderUserAccept","providerUserId","timeout","navigate","unauthedHandler","providerName","BulkConfirmComponent","isAccepted","user","status","ProviderUserStatusType","Accepted","getPublicKeys","ProviderUserBulkRequest","filteredUsers","postProviderUsersPublicKey","getCryptoKey","cryptoService","getProviderKey","postConfirmRequest","userIdsWithKeys","ProviderUserBulkConfirmRequest","postProviderUserBulkConfirm","BulkRemoveComponent","deleteUsers","users","deleteManyProviderUsers","EventsComponent","BaseEventsComponent","eventService","exportService","userNamePipe","exportFileName","providerUsersUserIdMap","Map","providerUsersIdMap","useEvents","getProviderUsers","u","transform","set","email","userId","loadEvents","loaded","requestEvents","startDate","endDate","continuationToken","getEventsProvider","getUserName","r","has","exportEvents","accessEvents","PeopleComponent","BasePeopleComponent","searchPipe","userType","userStatusType","canManageUsers","viewEvents","Confirmed","events","relativeTo","getUsers","deleteUser","deleteProviderUser","reinviteUser","postProviderUserReinvite","confirmUser","publicKey","providerKey","key","rsaEncrypt","buffer","ProviderUserConfirmRequest","encryptedString","postProviderUserConfirm","edit","UserAddEditComponent","addEditModalRef","onSavedUser","onDeletedUser","removeUser","EntityEventsComponent","eventsModalRef","entityId","showUser","entity","bulkRemove","bulkRemoveModalRef","getCheckedUsers","onClosedPromise","bulkReinvite","Invited","postManyProviderUserReinvite","showBulkStatus","bulkConfirm","bulkConfirmModalRef","successfullMessage","childComponent","BulkStatusComponent","bulkStatusModalRef","onShown","keyedErrors","a","x","keyedFilteredUsers","message","hasOwnProperty","selectAll","invite","editMode","ServiceUser","PermissionsApi","showCustom","access","title","getProviderUser","ProviderUserUpdateRequest","putProviderUser","ProviderUserInviteRequest","emails","trim","split","postProviderUserInvite","delete","deletePromise","ProvidersLayoutComponent","classList","showMenuBar","showManageTab","showSettingsTab","canAccessEventLogs","isProviderAdmin","manageRoute","ProvidersComponent","FrontendLayoutComponent","SetupProviderComponent","titleId","SetupComponent","ProviderGuardService","pathMatch","redirectTo","ProviderTypeGuardService","SettingsComponent","AccountComponent","ManageProvider","ProvidersRoutingModule","componentFactoryResolver","registerComponentFactoryResolver","WebProviderService","OssModule","indexOf","syncService","orgKey","getOrgKey","encryptedOrgKey","encrypt","ProviderAddOrganizationRequest","postProviderAddOrganization","fullSync","deleteProviderOrganization","selfHosted","isSelfHost","getProvider","ProviderUpdateRequest","businessName","billingEmail","putProvider","failedShortMessage","authed","replaceUrl","doSubmit","makeShareKey","ProviderSetupRequest","postProviderSetup","AddEditCustomFieldsComponent","addFieldType","FieldType","Text","linkedFieldOptions","cipherType","CipherType","fieldType","eventType","EventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","ngOnChanges","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","cipher","fields","f","FieldView","newField","linkedId","push","removeField","field","i","splice","toggleFieldValue","showValue","collect","Cipher_ClientToggledHiddenFieldVisible","trackByFunction","index","item","drop","event","moveItemInArray","previousIndex","currentIndex","options","linkedFieldOption","i18nKey","sort","getSortFunction","AddEditComponent","cipherService","folderService","auditService","collectionService","messagingService","policyService","passwordRepromptService","cloneMode","folderId","onSavedCipher","onDeletedCipher","onRestoredCipher","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","collections","showPassword","showCardNumber","showCardCode","ownershipOptions","currentDate","Date","allowPersonal","reprompt","canUseReprompt","typeOptions","Login","Card","Identity","SecureNote","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","UriMatchType","Domain","Host","StartsWith","RegularExpression","Exact","autofillOnPageLoadOptions","init","policyAppliesToUser","PersonalOwnership","myEmail","getEmail","OrganizationUserStatusType","writeableCollections","loadCollections","cipherId","addEditCipherInfo","getAddEditCipherInfo","collectionIds","setAddEditCipherInfo","loadCipher","decrypt","CipherView","login","LoginView","uris","LoginUriView","card","CardView","identity","IdentityView","secureNote","SecureNoteView","SecureNoteType","Generic","CipherRepromptType","organizationChanged","c","checked","folders","getAllDecrypted","previousCipherId","Cipher_ClientViewed","isDeleted","restore","uri","encryptCipher","saveCipher","send","addUri","removeUri","cancel","attachments","share","editCollections","deleteCipher","restorePromise","restoreCipher","generateUsername","username","generatePassword","password","togglePassword","focus","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","showOptions","match","loginUriMatchChanged","org","organizationUseTotp","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","Password","readOnly","saveWithServer","deleteWithServer","softDeleteWithServer","restoreWithServer","AttachmentsComponent","win","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","files","size","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","download","downloading","canAccessAttachments","getAttachmentData","ErrorResponse","statusCode","getSingleMessage","fetch","Request","cache","buf","arrayBuffer","decBuf","decryptFromBytes","saveFile","fileName","hasEncKey","canAccessPremium","getCanAccessPremium","reuploadCipherAttachment","admin","resolve","saveAttachmentRawWithServer","foundAttachment","a2","file","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","Window","AvatarComponent","sanitizer","cryptoFunctionService","charCount","textColor","fontSize","fontWeight","dynamic","circle","generate","getEnableGravitars","hashBytes","hash","toLowerCase","fromBufferToHex","src","chars","upperData","toUpperCase","getFirstLetters","unicodeSafeSubstring","regexpEmojiPresentation","charObj","getCharText","color","stringToColor","svg","getSvg","appendChild","html","window","outerHTML","svgHtml","btoa","unescape","encodeURIComponent","str","charCodeAt","substr","count","parts","text","svgTag","style","backgroundColor","width","height","character","textTag","textContent","characters","join","CalloutComponent","useAlertRole","calloutStyle","undefined","enforcedPolicyMessage","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","minComplexity","CaptchaProtectedComponent","environmentService","captchaSiteKey","captchaToken","setupCaptcha","webVaultUrl","getWebVaultUrl","captcha","CaptchaIFrame","info","showCaptcha","handleCaptchaRequired","ChangePasswordComponent","passwordGenerationService","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","kdf","getKdfType","kdfIterations","getKdfIterations","makeKey","masterPassword","masterPasswordHash","hashPassword","encKey","getEncKey","makeEncKey","remakeEncKey","performSubmitActions","masterPasswordRetype","strengthResult","passwordStrength","getPasswordStrengthUserInput","evaluateMasterPassword","score","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","setTimeout","masterPasswordScore","logOut","userInput","atPosition","CiphersComponent","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","searchPlaceholder","deleted","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","searchCiphers","CollectionsComponent","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","ExportScopeCalloutComponent","show","hasOrganizations","scopeConfig","scopeIdentifier","ExportComponent","userVerificationService","onSaved","disabledByPolicy","exportForm","format","secret","formatOptions","checkExportDisabled","encryptedFormat","warningDialog","verifyUser","getExportData","downloadFile","saved","collectEvent","getExport","getFileName","prefix","extension","User_ClientExportedVault","csv","FolderAddEditComponent","onSavedFolder","onDeletedFolder","folder","FolderView","GeneratorComponent","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","passwordOptions","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","getOptions","enforcedPasswordPolicyOptions","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerate","typeChanged","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","copyOptions","select","toggleOptions","uppercase","lowercase","number","special","querySelector","normalizeOptions","GroupingsComponent","showFolders","showCollections","showFavorites","showTrash","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","selectedAll","selectedFavorites","selectedTrash","selectedType","selectedFolder","selectedFolderId","selectedCollectionId","setLoaded","collapsedGroupings","getCollapsedGroupings","Set","loadFolders","nestedCollections","getAllNested","nestedFolders","clearSelections","selectFavorites","selectTrash","selectType","selectFolder","addFolder","editFolder","selectCollection","collection","collapse","grouping","idPrefix","isCollapsed","setCollapsedGroupings","Array","from","successRoute","postPasswordHint","PasswordHintRequest","onSuccessfulSubmit","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","IconComponent","iconsUrl","getIconsUrl","image","fallbackImage","imageEnabled","getDisableFavicon","setLoginIcon","setCardIcon","hostnameUri","isWebsite","getHostname","brand","LockComponent","vaultTimeoutService","keyConnectorService","ngZone","pin","pinLock","webVaultHostname","invalidPinAttempts","activeAccount","failed","pinSet","makeKeyFromPin","getDecryptedPinProtected","protectedPin","getProtectedPin","decryptToUtf8","EncString","setKeyAndContinue","passwordValid","getKeyHash","compareAndUpdateKeyHash","SecretVerificationRequest","serverKeyHash","HashPurpose","ServerAuthorization","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","unlockBiometric","biometricLock","success","getKey","KeySuffixOptions","Biometric","doContinue","input","isStable","onStable","take","setKey","setBiometricLocked","setEverBeenUnlocked","disableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","LoginComponent","authService","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","getRememberedEmail","isBrowser","isNode","focusInput","credentials","PasswordLogInCredentials","logIn","setRememberedEmail","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","launchSsoBrowser","ssoRedirectUri","numbers","state","ssoCodeVerifier","codeVerifierHash","codeChallenge","fromBufferToUrlB64","setSsoState","setSsoCodeVerifier","webUrl","DynamicModalComponent","cd","el","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","detectChanges","created","nativeElement","focusTrap","create","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","clear","createComponent","ngOnDestroy","destroy","getFocus","autoFocusEl","_parentInjector","_additionalTokens","notFoundValue","flags","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","onCreated","asObservable","onClose","onClosed","onShow","next","shown","result","lastResult","closed","toPromise","PasswordGeneratorHistoryComponent","history","getHistory","PasswordRepromptComponent","RegisterComponent","confirmMasterPassword","hint","showTerms","acceptPolicies","masterPasswordScoreWidth","masterPasswordScoreColor","masterPasswordScoreText","DEFAULT_KDF_TYPE","DEFAULT_KDF_ITERATIONS","hashedPassword","makeKeyPair","RegisterRequest","referenceData","KeysRequest","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","confirmField","RemovePasswordComponent","continuing","leaving","getManagingOrganization","convert","migrateUser","removeConvertAccountRequired","leave","postLeaveOrganization","datePipe","sendService","onSavedSend","onDeletedSend","copyLink","disableSend","disableHideEmail","sendType","SendType","emailVerified","alertShown","File","sendLinkBaseUrl","getSendUrl","link","accessId","urlB64Key","isSafari","isDateTimeLocalSupported","isFirefox","sendId","setDates","deletionDate","expirationDate","DisableSend","SendOptions","p","getEmailVerified","loadSend","SendView","SendFileView","SendTextView","setDate","getDate","hasPassword","encryptSend","encSend","uploadPromise","copySuccess","copyLinkToClipboard","sendData","togglePasswordVisible","BrowserPath","DateField","DatePreset","EffluxDatesComponent","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","browserPath","Firefox","Safari","Default","formattedDeletionDate","now","miliseconds","setTime","getTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","m","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","SendComponent","refreshing","expired","sends","filteredSends","hasSearched","onSuccessfulLoad","s","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","searchSends","SetPasswordComponent","syncLoading","identifier","resetPasswordAutoEnroll","getOrganizationAutoEnrollStatus","orgId","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","SetPasswordRequest","setPassword","onSetPasswordSuccess","getOrganizationKeys","getUserId","fromB64ToArray","userEncKey","encryptedKey","resetRequest","OrganizationUserResetPasswordEnrollmentRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","VaultTimeoutInputComponent","vaultTimeout","custom","CUSTOM_VALUE","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","getVaultTimeout","current","max","every","validate","policyError","registerOnValidatorChange","ShareComponent","onSharedCipher","allCollections","filterCollections","cipherView","orgName","find","shareWithServer","canSave","loggingIn","changePasswordRoute","code","codeVerifier","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","redirectUri","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","authorizeUrl","buildAuthorizeUrl","sameWindow","preValidateSso","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","SsoLogInCredentials","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","BitwardenToast","toastrService","toastPackage","trigger","opacity","transition","animate","BitwardenToastGlobalConfig","DefaultNoComponentGlobalConfig","toastComponent","BitwardenToastModule","static","config","ngModule","providers","provide","TOAST_CONFIG","useValue","default","TwoFactorOptionsComponent","twoFactorService","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","TwoFactorComponent","remember","webAuthnReady","webAuthnNewTab","TwoFactorProviders","providerType","TwoFactorProviderType","selectedProviderType","Authenticator","webAuthnSupported","webAuthn","twoFactorEmail","loginRoute","supportsWebAuthn","webAuthnAllow","authing","getProviders","needsLock","WebAuthnIFrame","getDefaultProvider","cleanupWebAuthn","providerData","WebAuthn","authWebAuthn","Duo","OrganizationDuo","DuoWebSDK","iframe","host","sig_request","Signature","submit_callback","sig","Email","sendEmail","stop","start","logInTwoFactor","TokenRequestTwoFactor","doToast","emailPromise","TwoFactorEmailRequest","postTwoFactorEmail","cleanup","authingWithPassword","authingWithSso","authingWithApiKey","UpdatePasswordComponent","setOrganizationInvitation","setLoginRedirect","currentMasterPassword","VerificationType","MasterPassword","PasswordRequest","newMasterPasswordHash","postPassword","UpdateTempPasswordComponent","newKey","newPasswordHash","newEncKey","UpdateTempPasswordRequest","masterPasswordHint","putUpdateTempPassword","VerifyMasterPasswordComponent","disableRequestOTP","sentCode","processChanges","requestOTP","obj","OTP","NG_VALUE_ACCESSOR","multi","useExisting","A11yInvalidDirective","formControlDirective","sub","statusChanges","unsubscribe","A11yTitleDirective","renderer","appA11yTitle","hasAttribute","ApiActionDirective","appApiAction","captchaRequired","AutofocusDirective","appAutofocus","condition","autofocus","isMobileBrowser","BlurClickDirective","onClick","blur","FallbackSrcDirective","onError","appFallbackSrc","InputStripSpacesDirective","onInput","InputVerbatimDirective","appInputVerbatim","disableComplete","NotPremiumDirective","templateRef","viewContainer","createEmbeddedView","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","substring","StopClickDirective","$event","preventDefault","StopPropDirective","stopPropagation","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","ev","target","setProperty","forwardRef","UserNamePipe","SearchPipe","I18nPipe","DatePipe","forRoot","maxOpened","autoDismiss","closeButton","ColorPasswordPipe","generateTemplate","templateGenerator","passwordArray","colorizedPassword","isSpecial","p1","p2","p3","items","prop1","prop2","prop3","routerState","getIsAuthenticated","isLocked","promptBiometric","getConvertAccountRequired","BroadcasterService","JslibServicesModule","LOCALE_ID","useFactory","translationLocale","deps","I18nService","ValidationService","UnauthGuardService","LockGuardService","ModalService","AppIdService","useClass","StorageService","AuditService","CryptoFunctionService","ApiService","AuthService","CryptoService","TokenService","PlatformUtilsService","MessagingService","LogService","KeyConnectorService","EnvironmentService","StateService","TwoFactorService","CipherService","settingsService","fileUploadService","injector","SearchService","SettingsService","FileUploadService","Injector","FolderService","ConsoleLogService","CollectionService","TotpService","PasswordGenerationService","PolicyService","UsernameGenerationService","tokenService","appIdService","SyncService","SendService","OrganizationService","ProviderService","VaultTimeoutService","storageService","secureStorageService","stateMigrationService","StateFactory","GlobalState","Account","StateMigrationService","ExportService","NotificationsService","WebCryptoFunctionService","EventService","UserVerificationService","PasswordRepromptService","homepage","loginpage","redirectUrl","ModalConfig","allowMultipleModals","applicationRef","modalList","factoryResolvers","addEventListener","modalCount","topModal","viewContainerRef","modalComponentRef","openInternal","insert","hostView","open","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","zIndex","prepend","modals","querySelectorAll","closeElement","ModalRef","WeakMap","ModalInjector","protectedFields","showPasswordPrompt","ref","defaultErrorMessage","validationErrors","getAllMessages","dirty","indexedEntityId","AuthenticationType","ClientType","DeviceType","EmergencyAccessStatusType","EmergencyAccessType","EncryptionType","FileUploadType","HtmlStorageLocation","featuredImportOptions","regularImportOptions","KdfType","PBKDF2_SHA256","SEND_KDF_ITERATIONS","LoginLinkedId","CardLinkedId","IdentityLinkedId","LogLevelType","NotificationType","OrganizationUserType","PaymentMethodType","PlanSponsorshipType","ProductType","StateVersion","StorageLocation","ThemeType","TransactionType","accountConstructor","args","globalStateConstructor","globalStateFactory","GlobalStateFactory","accountFactory","AccountFactory","createGlobal","createAccount","AscendoCsvImporter","BaseImporter","parse","ImportResult","results","parseCsv","initLoginCipher","notes","getValueOrDefault","val","fieldLower","passwordFieldNames","usernameFieldNames","uriFieldNames","makeUriArray","processKvp","convertToNoteIfNeeded","cleanupCipher","AvastCsvImporter","web","AvastJsonImporter","JSON","logins","custName","note","pwd","loginName","label","cards","cardholderName","holderName","cardNumber","cvv","getCardBrand","month","expMonth","year","expYear","AviraCsvImporter","nameFromUrl","secondary_username","newLineRegex","notesFieldNames","parseCsvOptions","encoding","skipEmptyLines","parseXml","doc","DOMParser","parseFromString","header","parseOptions","assign","splitNewLine","papa","row","warning","parseSingleRowCsv","rowData","parsedRow","loginUri","fixUri","returnArr","hostname","startsWith","defaultValue","cardNum","re","RegExp","test","setCardExpiration","expiration","moveFoldersToCollections","folderRelationships","collectionRelationships","CollectionView","querySelectorDirectChild","parentEl","query","els","querySelectorAllDirectChild","parentNode","favorite","processFolder","folderName","folderIndex","hasFolder","processFullName","fullName","nameParts","firstName","lastName","middleName","BitwardenCsvImporter","col","addCollection","collectionIndex","parseInt","console","delimPosition","lastIndexOf","totp","login_totp","login_username","login_password","login_uri","BitwardenJsonImporter","passwordProtected","missingPassword","errorMessage","encrypted","parseEncrypted","parseDecrypted","encKeyValidation_DO_NOT_EDIT","encKeyValidation","groupingsMap","CollectionWithId","toDomain","view","FolderWithId","CipherWithIds","passwordHistory","cId","toView","BitwardenPasswordProtectedImporter","parsedData","cannotParseFile","encData","clearTextData","jdoc","salt","kdfType","BlackBerryCsvImporter","fav","extra","BlurCsvImporter","domain","OfficialProps","ButtercupCsvImporter","URL","processingCustomFields","prop","ChromeCsvImporter","ClipperzHtmlImporter","textarea","entry","currentVersion","property","actionType","labelLower","CodebookCsvImporter","Category","Favorite","Entry","Note","Username","TOTP","Website","Phone","PIN","_mappedCredentialsColums","_mappedPersonalInfoAsIdentiyColumns","_mappedSecureNoteColumns","DashlaneCsvImporter","parsePersonalInformationRecordAsIdentity","rowKeys","category","parseCredentialsRecord","parsePaymentRecord","parseIdRecord","parsePersonalInformationRecord","parseSecureNoteRecords","otpSecret","importUnmappedFields","account_name","mappedValues","cc_number","expiration_month","expiration_year","account_holder","account_number","licenseNumber","passportNumber","ssn","first_name","middle_name","last_name","item_name","dataRow","phone","phone_number","address1","address","city","postalCode","zip","country","HandledResults","DashlaneJsonImporter","ADDRESS","processAddress","AUTHENTIFIANT","processAuth","BANKSTATEMENT","processNote","IDCARD","PAYMENTMEANS_CREDITCARD","processCard","IDENTITY","processIdentity","credential","secondaryLogin","pseudo","addressName","addressFull","zipcode","bank","owner","nameProperty","EncryptrCsvImporter","Label","Notes","CVV","expiry","Expiry","expParts","EnpassCsvImporter","firstRow","containsField","fieldValue","fieldName","fieldNameLower","EnpassJsonImporter","foldersMap","foldersIndexMap","folderTree","buildFolderTree","flattenFolderTree","template_type","processLogin","some","sensitive","uuid","parent_uuid","titlePrefix","tree","FirefoxCsvImporter","FSecureFskImporter","service","creditNumber","creditCvv","creditExpiry","GnomeJsonImporter","keyRing","display_name","attributes","username_value","attr","ImportError","passwordRequired","NotesHeader","ApplicationsHeader","WebsitesHeader","Delimiter","KasperskyTxtImporter","notesData","applicationsData","websitesData","workingData","parseDataCategory","applications","websites","n","w","nameKey","itemComment","itemCommentKey","l","colonIndex","KeePass2XmlImporter","rootGroup","traverse","node","isRootNode","groupPrefixName","groupName","nameEl","cipherIndex","entryString","valueEl","keyEl","attrs","ProtectInMemory","KeePassXCsvImporter","Title","Group","KeeperCsvImporter","LastPassCsvImporter","buildBaseCipher","parseSecureNote","parseCard","parseIdentity","ccnum","cardCipher","profilename","firstname","lastname","ccname","cccsc","ccexp","ccexpParts","middlename","company","address2","address3","charAt","extraParts","processedNote","typeParts","mappedData","parseSecureNoteMapping","Number","monthString","getMonth","isNaN","Company","State","Country","dataObj","processingNotes","extraPart","LogMeOnceCsvImporter","MeldiumCsvImporter","DisplayName","UserName","Url","MSecureCsvImporter","mappedBaseColumns","_mappedUserAccountColumns","_mappedCreditCardColumns","_mappedIdentityColumns","_mappedIdCardColumns","_mappedTwoFaColumns","_mappedUserNoteColumns","MykiCsvImporter","nickname","additionalInfo","twofaSecret","authToken","cardName","exp_month","exp_year","firstAddressLine","secondAddressLine","zipCode","idType","idName","idCountry","idNumber","content","NordPassCsvImporter","record","recordType","evaluateType","cardholdername","cardnumber","cvc","expirydate","full_name","importRecord","lowerProperty","OnePassword1PifImporter","line","trashed","hmac","processStandardItem","processWinOpVaultItem","overview","URLs","details","parsePasswordHistory","notesPlain","parseFields","sections","section","openContents","faveIndex","typeName","location","secureContents","maxSize","time","b","ph","PasswordHistoryView","lastUsedDate","designationKey","valueKey","k","toUTCString","fieldDesignation","street","OnePassword1PuxImporter","accounts","vaults","vault","categoryUuid","CategoryEnum","Database","WirelessRouter","Server","API_Credential","CreditCard","BankAccount","SoftwareLicense","EmailAccount","MedicalRecord","DriversLicense","OutdoorLicense","Membership","Passport","RewardsProgram","SocialSecurityNumber","favIndex","processOverview","processLoginFields","processDetails","processSections","tags","capitalize","inputString","loginFields","loginField","designation","LoginFieldTypeEnum","CheckBox","parseSectionFields","anyField","getFieldName","extractValue","fillLogin","fillApiCredentials","fillCreditCard","fillBankAccount","fillIdentity","fillDriversLicense","fillOutdoorLicense","fillMembership","fillPassport","fillRewardsProgram","fillSSN","guarded","date","monthYear","historyItems","IgnoredProperties","OnePasswordCsvImporter","loginPropertyParsers","setLoginUsername","setLoginPassword","setLoginUris","creditCardPropertyParsers","setCreditCardNumber","setCreditCardVerification","setCreditCardCardholderName","setCreditCardExpiry","identityPropertyParsers","setIdentityFirstName","setIdentityInitial","setIdentityLastName","setIdentityUserName","setIdentityEmail","setIdentityPhone","setIdentityCompany","quoteChar","escapeChar","getProp","setNotes","setCipherType","altUsername","context","CipherImportContext","setKnownLoginValue","setKnownCreditCardValue","setKnownIdentityValue","setUnknownValue","entries","agg","getPropByRegexp","regexp","matchingKeys","getPropIncluding","includesMap","func","bind","readableDate","OnePasswordMacCsvImporter","OnePasswordWinCsvImporter","setIdentityAddress","expSplit","PadlockCsvImporter","headers","v","tag","PassKeepCsvImporter","getValue","PassmanJsonImporter","otp","custom_fields","customField","field_type","PasspackCsvImporter","tagsJson","Tags","tagJson","__parsed_extra","fieldsJson","extraFields","fieldJson","PasswordAgentCsvImporter","newVersion","altFormat","PasswordBossJsonImporter","login_url","identifiers","valObj","expDate","getFullYear","cf","PasswordDragonXmlImporter","records","categoryText","accountName","tagName","PasswordSafeXmlImporter","passwordSafe","notesDelimiter","getAttribute","groupText","PasswordWalletTxtImporter","RememBearCsvImporter","trash","cardholder","verification","expiryMonth","expMonthNumber","expiryYear","expYearNumber","RoboFormCsvImporter","Folder","Name","Pwd","Rf_fields","SafariCsvImporter","OTPAuth","SafeInCloudXmlImporter","labelEl","cardEl","labelIdEl","labelId","fieldEl","notesEl","candidates","choice","SaferPassCsvImporter","SecureSafeCsvImporter","Comment","SplashIdCsvImporter","parseFieldsToNotes","startIndex","StickyPasswordXmlImporter","loginNodes","loginNode","accountId","usernameText","passwordText","titleText","linkText","notesText","groupId","accountLogin","account","parentElement","buildGroupText","PropertiesToIgnore","TrueKeyCsvImporter","memo","kind","expiryDate","document_content","UpmCsvImporter","YotiCsvImporter","ZohoVaultCsvImporter","ChamberName","parseData","SecretData","CustomData","IFrameComponent","successCallback","errorCallback","infoCallback","parsedMessage","siteKey","initComponent","createParams","locale","iframeId","parseFunction","parseMessage","connectorLink","sendMessage","contentWindow","postMessage","base64Encode","String","fromCharCode","removeEventListener","version","URLSearchParams","stringify","href","validMessage","origin","LinkedMetadata","propertyKey","_i18nKey","prototype","ApiLogInStrategy","LogInStrategy","tokenResponse","apiUseKeyConnector","getKeyConnectorUrl","getAndSetKey","tokenRequest","ApiTokenRequest","buildTwoFactor","buildDeviceRequest","startLogIn","saveAccountInformation","setApiKeyClientId","setApiKeyClientSecret","captchaBypassToken","twoFactor","captchaResponse","setTwoFactor","clearSelectedProvider","postIdentityToken","IdentityTwoFactorResponse","processTwoFactorResponse","IdentityCaptchaResponse","processCaptchaResponse","IdentityTokenResponse","processTokenResponse","appId","getAppId","DeviceRequest","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","accountInformation","decodeToken","accessToken","addAccount","profile","AccountProfile","hasPremiumPersonally","premium","tokens","AccountTokens","refreshToken","AuthResult","twoFactorToken","setTwoFactorToken","privateKey","createKeyPairForOldAccount","twoFactorProviders","twoFactorProviders2","setProviders","postAccountKeys","PasswordLogInStrategy","localHashedPassword","makePreloginKey","PasswordTokenRequest","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","SsoTokenRequest","cacheKey","descriptor","originalMethod","caches","getCache","argsCacheKey","onFinally","apply","catch","err","ServiceUtils","nodeTree","partIndex","delimiter","end","partName","TreeNode","nestedTraverse","newPartName","getTreeNodeObject","limit","throttleKey","allThrottles","throttles","getThrottles","argsThrottleKey","queue","reject","exec","nodeURL","inited","process","release","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","Uint8Array","Buffer","binaryString","atob","bytes","fromUrlB64ToB64","strUtf8","arr","binary","byteLength","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","call","urlB64Str","output","fromB64ToUtf8","utfStr","fromUtf8ToArray","random","uriString","getUrl","httpUrl","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","pair","collator","compare","localeCompare","source","ipString","mobile","navigator","userAgent","vendor","opera","hasProtocol","anchor","btnText","allow","EEFLongWordList","CardApi","BaseResponse","getResponseProperty","FieldApi","IdentityApi","LoginApi","passwordRevisionDate","autofillOnPageLoad","LoginUriApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","SecureNoteApi","SendFileApi","sizeName","SendTextApi","hidden","idpDisableOutboundLogoutRequests","api","viewPassword","revisionDate","deletedDate","LoginData","SecureNoteData","CardData","IdentityData","FieldData","AttachmentData","PasswordHistoryData","externalId","LoginUriData","usePolicies","useGroups","useDirectory","use2fa","useApi","useSso","useKeyConnector","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","ssoBound","resetPasswordEnrolled","hasPublicAndPrivateKeys","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","maxAccessCount","accessCount","hideEmail","SendTextData","SendFileData","EncryptionPair","DataEncryptionPair","AccountData","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","AccountSettings","environmentUrls","EnvironmentUrls","pinProtected","vaultTimeoutAction","settings","Attachment","alreadyEncrypted","buildDomainModel","decryptObj","AttachmentView","containerService","bitwardenContainerService","getCryptoService","decValue","decryptToBytes","SymmetricCryptoKey","toAttachmentData","buildDataModel","requiresCaptcha","toCardData","Cipher","localData","Field","model","promise","decAttachment","decField","decPh","toCipherData","CipherData","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","hidePasswords","notEncList","objProp","notEncStringList","viewModel","promises","self","theProp","mapProp","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decryptedValue","base","icons","notifications","webVault","keyConnector","theme","System","WindowState","stateVersion","One","Sso","Api","LoginUri","toLoginUriData","MasterPasswordPolicyOptions","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","isProviderUser","canAccess","Owner","isManager","Manager","Admin","isAdmin","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManagePolicies","canManageUsersPassword","isExemptFromPolicies","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","includeNumber","inEffect","Policy","canCreateOrganizations","ResetPasswordPolicyOptions","autoEnrollEnabled","Send","SendText","SendFile","cryptoKey","makeSendKey","SendAccess","creatorIdentifier","SendAccessView","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","globals","authenticatedAccounts","accountActivity","macKey","keyB64","encKeyB64","macKeyB64","req","build","humanReadableMessage","appIcon","appName","userName","userEmail","ip","orgIdentifier","ids","CipherWithIdRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","AttachmentRequest","groups","getDevice","getDeviceString","pushToken","EmailRequest","EmailTokenRequest","FolderWithIdRequest","FolderRequest","TokenRequest","device","toIdentityToken","scope","grant_type","client_secret","alterIdentityTokenHeaders","fromUtf8ToUrlB64","code_verifier","redirect_uri","client_id","deviceType","deviceIdentifier","deviceName","twoFactorProvider","twoFactorRemember","KdfRequest","encryptedPrivateKey","OrganizationKeysRequest","seatAdjustment","maxAutoscaleSeats","OrganizationTaxInfoUpdateRequest","TaxInfoUpdateRequest","groupIds","PaymentRequest","clientOwnerEmail","organizationCreateRequest","fileLength","SendWithIdRequest","SendRequest","TwoFactorProviderRequest","TwoFactorRecoveryRequest","culture","OrganizationUserResetPasswordRequest","UpdateTwoFactorAuthenticatorRequest","UpdateTwoFactorDuoRequest","UpdateTwoFactorEmailRequest","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","UpdateTwoFactorYubioOtpRequest","ApiKeyResponse","apiKey","AttachmentResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","CipherResponse","propertyName","exactName","otherCasePropertyName","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","PasswordHistoryResponse","CollectionResponse","SelectionReadOnlyResponse","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","GlobalDomainResponse","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","identityResponse","errorModel","responseErrorModel","HCaptcha_SiteKey","messages","lastSep","EventResponse","collectionId","policyId","providerOrganizationId","actingUserId","ipAddress","FolderResponse","domains","excluded","GroupResponse","accessAll","access_token","expiresIn","expires_in","refresh_token","tokenType","token_type","KeyConnectorUserKeyResponse","KeysResponse","ListResponse","dr","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","OrganizationSsoResponse","SsoUrls","OrganizationAutoEnrollStatusResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","plan","PlanResponse","OrganizationSubscriptionResponse","storageName","storageGb","subscription","BillingSubscriptionResponse","upcomingInvoice","BillingSubscriptionUpcomingInvoiceResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","OrganizationUserResponse","twoFactorEnabled","OrganizationUserResetPasswordDetailsReponse","PaymentResponse","userProfile","ProfileResponse","paymentIntentClientSecret","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PolicyResponse","PreloginResponse","ProfileOrganizationResponse","ProfileProviderOrganizationResponse","ProfileProviderResponse","providerOrganizations","securityStamp","ProviderOrganizationResponse","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","SendAccessResponse","SendFileDownloadDataResponse","SendFileUploadDataResponse","sendResponse","SendResponse","SubscriptionResponse","license","usingInAppPurchase","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","SyncResponse","CollectionDetailsResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","fileSize","ItemView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","exp","formatYear","CardholderName","ExpMonth","ExpYear","Code","Brand","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","linkedFieldValue","linkedFieldI18nKey","showCount","maskedValue","_firstName","_lastName","fullAddress","fullAddressPart2","addressPart2","MiddleName","Address1","Address2","Address3","City","PostalCode","Ssn","PassportNumber","LicenseNumber","FirstName","LastName","FullName","CanLaunchWhitelist","_uri","_domain","_hostname","_host","_canLaunch","getHost","hostnameOrUri","hostOrUri","canLaunch","hasUris","maskedPassword","maskedText","maxAccessCountReached","pendingDelete","View","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","Headers","Accept","identityToken","getClientType","qsStringify","getCredentials","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","refreshIdentityToken","doAuthRefresh","getProfile","getUserBilling","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","isDev","getApiUrl","postEmailToken","postEmail","postSetKeyConnectorKey","postSecurityStamp","deleteAccount","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getFolder","postFolder","putFolder","deleteFolder","getSend","postSendAccess","apiUrl","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","CollectionGroupDetailsResponse","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","GroupDetailsResponse","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","putPolicy","getOrganizationUser","OrganizationUserDetailsResponse","getOrganizationUserGroups","getOrganizationUsers","OrganizationUserUserDetailsResponse","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganizationBilling","getOrganizationSubscription","getOrganizationLicense","installationId","getOrganizationTaxInfo","postOrganization","putOrganization","putOrganizationTaxInfo","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","postOrganizationRotateApiKey","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","postOrganizationKeys","ProviderUserUserDetailsResponse","ProviderOrganizationOrganizationDetailsResponse","postProviderCreateOrganization","getEvents","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getEventsUrl","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getToken","tokenNeedsRefresh","getApplicationVersion","nativeFetch","postCreateSponsorship","sponsoredOrgId","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","decodedToken","setTokens","deviceRequest","setToken","hasResponse","alterHeaders","requestUrl","requestInit","FormData","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","newGuid","save","hashStart","hashEnding","breachedAccounts","throttle","logInStrategy","strategy","clearState","saveState","callback","preloginResponse","PreloginRequest","startSessionTimeout","clearSessionTimeout","sessionTimeout","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","searchParams","blobResponse","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","ceil","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","utfBlockId","fromUtf8ToB64","blockIdList","xml","Version","day","compareTo","encryptedFileName","encryptedFileData","apiCall","fd","blob","Blob","filepath","contentType","subscribers","messageCallback","DomainMatchBlacklist","sortedCiphersCache","SortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","getDefaultUriMatch","domainUrlHost","urlHost","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","CipherCreateRequest","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","CipherShareRequest","shareManyWithServer","encCiphers","CipherBulkShareRequest","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","filename","encFileName","dataEncKey","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","CipherCollectionsRequest","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","CipherBulkMoveRequest","deleteManyWithServer","CipherBulkDeleteRequest","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","CipherBulkRestoreRequest","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","sequentialize","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","nodes","collectionCopy","getNested","CollectionData","setEncryptedCollections","timersMap","debug","write","Debug","Info","Warning","level","log","warn","hrtime","timeEnd","elapsed","attachToWindow","attachToGlobal","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","orgKeys","providerOrg","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","getFingerprint","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","encOrgKeys","getEncryptedOrganizationKeys","rsaDecrypt","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","pbkdf2","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","decKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForEncryption","buildEncKey","plainValue","plainBuf","encObj","aesEncrypt","encValue","macLen","encBytes","EncArrayBuffer","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","decipher","aesDecryptToBytes","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","EncryptedObject","macData","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","compareFast","aesDecryptFast","aesDecrypt","legacyKey","getLegacyEtmKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","bigInt","fromArray","remainder","mod","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","urlsSubject","setUrlsFromStorage","getNotificationsUrl","notificationsUrl","identityUrl","eventsUrl","getEnvironmentUrls","envUrls","setUrls","formatUrl","setEnvironmentUrls","getUrls","checkOnInterval","uploadEvents","setInterval","uploadImmediately","orgIds","eventCollection","getEventCollection","EventData","setEventCollection","EventRequest","clearEvents","getOrganizationExport","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encText","jsonDoc","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","unparse","Event","padNumber","getHours","getMinutes","getSeconds","decFolders","exportCiphers","buildCommonCipher","collectionPromises","decCol","cipherPromises","decCipher","collectionsMap","num","padCharacter","numString","azureFileUploadService","AzureFileUploadService","bitwardenFileUploadService","BitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","setDecryptedFolders","getEncryptedFolders","decryptedFolders","getDecryptedFolders","noneFolder","folderCopy","FolderData","setEncryptedFolders","updates","systemLanguage","localesDirectory","getLocalesJson","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","replaceToken","replaceContent","getImportOptions","import","importer","fileContents","importResult","halfway","last","badData","postImport","errorResponse","handleServerError","getImporter","getImporterInstance","ImportCiphersRequest","KvpRequest","ImportOrganizationCiphersRequest","CollectionRequest","itemType","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","KeyConnectorUserKeyRequest","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","SetKeyConnectorKeyRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","connected","inactive","reconnectTimer","signalrConnection","off","signalR","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","withHubProtocol","signalRMsgPack","MessagePackHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","notification","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","getOrganizations","Organization","getByIdentifier","setOrganizations","canManageSponsorships","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decrypted","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","GeneratedPasswordHistory","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","zxcvbn","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","setDecryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","policy","getPolicyForOrganization","policyType","PolicyData","setEncryptedPolicies","mapPoliciesFromToken","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyFilter","filteredPolicies","policySet","isExcemptFromPolicies","Provider","indexing","searchableMinLength","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","setDecryptedSends","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","SendData","setEncryptedSends","Keys","setSettings","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","partialKeys","stateFactory","useAccountCache","BehaviorSubject","createGlobals","hasBeenInited","accountDiskCache","needsMigration","migrate","initAccountState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","autoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricLocked","biometricLocked","setBiometricText","biometricUnlock","setBiometricUnlock","getClearClipboard","defaultOnDiskLocalOptions","clearClipboard","setClearClipboard","convertAccountToKeyConnector","cryptoMasterKey","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","setDecodedToken","defaultUriMatch","setDefaultUriMatch","getDisableAddLoginNotification","disableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","disableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","disableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","disableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","disableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","disableContextMenuItem","setDisableContextMenuItem","getDisableGa","disableGa","setDisableGa","getDontShowCardsCurrentTab","dontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","dontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","enableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","getEverBeenUnlocked","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","getLastSync","lastSync","setLastSync","legacyEtmKey","getLocale","setLocale","getLoginRedirect","loginRedirect","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","passwordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","setProtectedPin","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","getTheme","setTheme","setVaultTimeout","getVaultTimeoutAction","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","authenticationStatus","authenticatedUserIds","Four","syncInProgress","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","successfully","OrganizationData","ProviderData","decoded","fromUrlB64ToUtf8","clientIdClientSecret","setClientId","setClientSecret","clearToken","storedToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","email_verified","getName","getPremium","getIssuer","iss","amr","B32Chars","SteamChars","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","fullCode","trunc","getTimeInterval","isAutoCopyEnabled","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","priority","Yubikey","selectedTwoFactorProviderType","twoFactorProvidersData","supportsDuo","providerPriority","_value","setSelectedProvider","clearProviders","requestClass","alreadyHashed","validateInput","VerifyOTPRequest","wordCapitalize","wordIncludeNumber","generateCatchall","generateSubaddress","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","charSet","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","isViewOpen","shouldLock","executeTimeoutAction","lock","allowSoftLock","setVaultTimeoutOptions","action","currentAction","isLoggedOut","vaultTimeoutSeconds","crypto","subtle","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","forge","md5","sha1","valueBytes","toByteString","update","fromByteStringToArray","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","util","createBuffer","putInt32","DecryptParameters","meta","encKeyByteString","macKeyByteString","decode64","parameters","dataBuffer","createDecipher","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","encodeUtf8","fromBufferToByteString","styles","primary","secondary","danger","hoverStyles","BadgeComponent","badgeType","isSpan","nodeName","classes","BadgeModule","buttonStyles","ButtonComponent","buttonType","block","ButtonModule","defaultIcon","defaultI18n","calloutClass","headerClass","CalloutModule","AcceptEmergencyComponent","EmergencyAccessAcceptRequest","AcceptOrganizationComponent","OrganizationUserAcceptRequest","performResetPasswordAutoEnroll","policyList","HintComponent","routerService","previousUrl","getPreviousUrl","showResetPasswordAutoEnrollWarning","goAfterLogIn","getRememberEmail","resetPasswordPolicy","policiesData","setRememberEmail","RecoverDeleteComponent","DeleteRecoverRequest","RecoverTwoFactorComponent","recoveryCode","showCreateOrgMessage","layout","ReferenceEventRequest","flow","reference","cookie","shift","storedIdentifier","anotherMethod","twoFactorOptionsModal","VerifyEmailTokenComponent","VerifyEmailRequest","VerifyRecoverDeleteComponent","VerifyDeleteRecoverRequest","BroadcasterSubscriptionId","broadcasterService","notificationsService","lastActivity","idleTimer","isIdle","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","run","command","setPreviousUrl","setFullWidth","NavigationEnd","jq","TwoFactorAuthenticationPolicy","MasterPasswordPolicy","PasswordGeneratorPolicy","SingleOrgPolicy","RequireSsoPolicy","PersonalOwnershipPolicy","DisableSendPolicy","SendOptionsPolicy","ResetPasswordPolicy","idleStateChanged","msg","sanitize","SecurityContext","HTML","enableHtml","trustedHtml","timeOut","getRedirectRoute","urlTree","parseUrl","dirtyDates","defaultDates","getDefaultDateFilters","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","clearExisting","loadAndParseEvents","refreshPromise","morePromise","eventInfo","getEventInfo","EventView","formatDateFilters","statusMap","pagedUsers","allUsers","pagedUsersCount","allCount","invitedCount","acceptedCount","confirmedCount","showConfirmUsers","showBulkConfirmUsers","iterateEnum","checkUser","selectCount","deleteWarningMessage","reinvite","confirm","mapIndex","updateUser","publicKeyResponse","autoConfirm","UserConfirmComponent","confirmModalRef","onConfirmedUser","fingerprint","NestedCheckboxComponent","parentIndeterminate","parentChecked","checkboxes","pascalize","camelToPascalCase","PasswordStrengthComponent","showText","scoreWidth","PremiumBadgeComponent","premiumRequired","FooterComponent","NavbarComponent","showToolsTab","toolsRoute","UserLayoutComponent","publicKeys","fingerprints","statuses","done","excludedUsers","OrganizationUserBulkRequest","OrganizationUserBulkConfirmRequest","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","accessGroups","groupsResponse","check","SelectionReadOnlyRequest","canCreate","pagedCollectionsCount","decryptCollections","assignedCollections","pagedCollections","canEdit","canDelete","removeCollection","EntityUsersComponent","usersModalRef","entityName","onEditedUsers","orgUsersUserIdMap","orgUsersIdMap","organizationUserType","organizationUserStatusType","showSelected","selectedCount","loadUsers","selectedChanged","filterSelected","selections","GroupAddEditComponent","onSavedGroup","onDeletedGroup","GroupRequest","GroupsComponent","pagedGroupsCount","pagedGroups","removeGroup","accessPolicies","accessSso","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","orgShareKey","OrganizationUserConfirmRequest","allowResetPassword","orgUser","callingUserHasPermission","showEnrolledStatus","UserGroupsComponent","groupsModalRef","resetPassword","ResetPasswordComponent","resetPasswordModalRef","onPasswordReset","PoliciesComponent","policyIdFromEvents","orgPolicy","orgPolicies","op","PolicyEditComponent","editModalRef","onSavedPolicy","cdr","factory","policyComponent","policyFormRef","Enabled","loggedOutWarningName","orgSymKey","decPrivateKey","newPasswordStrengthTimeout","User","manageAllCollectionsCheckboxes","manageAssignedCollectionsCheckboxes","customUserTypeSelected","setRequestPermissions","clearPermissions","handleDependentPermissions","OrganizationUserUpdateRequest","OrganizationUserInviteRequest","dontAskAgain","userGroups","ug","OrganizationUserUpdateGroupsRequest","display","PolicyRequest","DisableSendPolicyComponent","MasterPasswordPolicyComponent","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicyComponent","RequireSso","RequireSsoPolicyComponent","ResetPasswordPolicyComponent","SendOptionsPolicyComponent","SingleOrgPolicyComponent","TwoFactorAuthentication","TwoFactorAuthenticationPolicyComponent","canUseApi","OrganizationUpdateRequest","submitTaxInfo","taxFormPromise","taxInfo","DeleteOrganizationComponent","deleteModalRef","onSuccess","purgeVault","PurgeVaultComponent","purgeModalRef","viewApiKey","ApiKeyComponent","apiKeyModalRef","keyType","postKey","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKey","rotateApiKeyModalRef","isRotation","TaxInfoComponent","AdjustSubscription","onAdjusted","limitSubscription","newSeatCount","currentSeatCount","newMaxSeats","OrganizationSubscriptionUpdateRequest","limitSubscriptionChanged","adjustedSeatTotal","maxSeatTotal","ChangePlanComponent","onChanged","onCanceled","defaultUpgradePlan","defaultUpgradeProduct","Families","CountBasedLocalizationKey","singular","plural","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","deleteOrganizationRequestType","organizationContentSummary","buildOrganizationContentSummary","organizationItems","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","DownloadLicenseComponent","onDownloaded","licenseString","OrganizationBillingComponent","UserBillingComponent","firstLoaded","OrganizationSubscriptionComponent","adjustSeatsAdd","showAdjustSeats","showAdjustSeatAutoscale","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showDownloadLicense","showChangePlan","userOrg","reinstate","reinstatePromise","cancelPromise","changePlan","closeChangePlan","changed","downloadLicense","closeDownloadLicense","updateLicense","closeUpdateLicense","updated","subscriptionAdjusted","adjustStorage","closeStorage","removeSponsorship","removeSponsorshipPromise","isExpired","subscriptionMarkedForCancel","nextInvoice","storagePercentage","toFixed","storageProgressWidth","billingInterval","storageGbPrice","canAdjustSeats","isSponsoredSubscription","canDownloadLicense","subscriptionDesc","showChangePlanButton","access2fa","TwoFactorSetupComponent","manage","duoComp","openModal","duoModalRef","TwoFactorDuoComponent","onUpdated","updateStatus","filterProvider","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","acceptingSponsorship","onOrganizationCreateSuccess","existingFamilyOrganizations","selectedFamilyOrganizationId","OrganizationSponsorshipRedeemRequest","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","ExposedPasswordsReportComponent","dynamicSuper","getPrototypeOf","manageableCiphers","getAllCiphers","canManageCipher","ImportComponent","importService","successNavigate","importBlockedByPolicy","InactiveTwoFactorReportComponent","ReusedPasswordsReportComponent","ToolsComponent","upgradeOrganization","UnsecuredWebsitesReportComponent","WeakPasswordsReportComponent","totpService","allowOwnershipAssignment","viewOnly","reupload","showFixOldAttachments","onEventsClicked","allCiphers","collectionDomains","unassignedCollection","VaultComponent","changeDetectorRef","trashCleanupWarning","groupingsComponent","ciphersComponent","filterDeleted","filterCipherType","filterCollection","clearGroupingFilters","showAddNew","clearFilters","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","editCipherCollections","collectionsModalRef","editCipher","cipherAddEditModalRef","cloneCipher","AccessComponent","OptionsComponent","DomainRulesComponent","PremiumComponent","UserSubscriptionComponent","OrganizationsComponent","EmergencyAccessComponent","EmergencyAccessViewComponent","SponsoredFamiliesComponent","ReportsModule","AccessImportExport","AccessReports","ManageUsersPassword","ManageOrganization","useHash","paramsInheritanceStrategy","registerLocaleData","ToastrModule","BreachReportComponent","checkedUsername","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","repromptCipher","checkAccess","accessPremium","exposedPasswordMap","exposedPasswordCiphers","exposedCount","services","cipherDocs","load2fa","inactive2faCiphers","docs","serviceData","documentation","additionalDomain","ReportTypes","reports","exposedPasswords","requiresPremium","reusedPasswords","weakPasswords","unsecuredWebsites","inactive2fa","dataBreach","ReportCardComponent","report","hasPremium","bypassSecurityTrustHtml","click","ReportListComponent","ReportsComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","unsecuredCiphers","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","scoreKey","unavailable","sendText","downloadData","accessRequest","toggleText","keyArray","SendAccessRequest","sendAccess","ControlContainer","NgForm","addSend","editSend","sendAddEditModalRef","toDateTimeLocalString","filterStart","filterEnd","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","User_LoggedIn","User_ChangedPassword","User_Updated2fa","User_Disabled2fa","User_Recovered2fa","User_FailedLogIn","User_FailedLogIn2fa","User_UpdatedTempPassword","User_MigratedKeyToKeyConnector","Cipher_Created","formatCipherId","getShortId","Cipher_Updated","Cipher_Deleted","Cipher_SoftDeleted","Cipher_Restored","Cipher_AttachmentCreated","Cipher_AttachmentDeleted","Cipher_Shared","Cipher_ClientCopiedHiddenField","Cipher_ClientCopiedPassword","Cipher_ClientCopiedCardCode","Cipher_ClientAutofilled","Cipher_UpdatedCollections","Collection_Created","formatCollectionId","Collection_Updated","Collection_Deleted","Group_Created","formatGroupId","Group_Updated","Group_Deleted","OrganizationUser_Invited","formatOrgUserId","OrganizationUser_Confirmed","OrganizationUser_Updated","OrganizationUser_Removed","OrganizationUser_UpdatedGroups","OrganizationUser_UnlinkedSso","OrganizationUser_ResetPassword_Enroll","OrganizationUser_ResetPassword_Withdraw","OrganizationUser_AdminResetPassword","OrganizationUser_ResetSsoLink","OrganizationUser_FirstSsoLogin","Organization_Updated","Organization_PurgedVault","Organization_VaultAccessed","Organization_EnabledSso","Organization_DisabledSso","Organization_EnabledKeyConnector","Organization_DisabledKeyConnector","Policy_Updated","formatPolicyId","ProviderUser_Invited","formatProviderUserId","ProviderUser_Confirmed","ProviderUser_Updated","ProviderUser_Removed","ProviderOrganization_Created","formatProviderOrganizationId","ProviderOrganization_Added","ProviderOrganization_Removed","ProviderOrganization_VaultAccessed","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","shortId","cipherInfo","makeAnchor","innerHTML","pad","norm","abs","modalOpen","RouterService","activatedRoute","titleService","currentUrl","rawTitle","child","firstChild","snapshot","newTitle","setTitle","initFactory","eventLoggingService","htmlEl","documentElement","onDefaultSystemThemeChange","sysTheme","Light","Dark","ContainerService","APP_INITIALIZER","PolicyListService","language","HtmlStorageService","MemoryStorageService","WebPlatformUtilsService","BroadcasterMessagingService","ImportService","showChangePassword","showChangeKdf","showChangeEmail","deauthorizeSessions","DeauthorizeSessionsComponent","deauthModalRef","DeleteAccountComponent","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","AddCreditComponent","PayPal","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","BitPay","BitPayInvoiceRequest","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","ElementRef","AdjustPaymentComponent","paymentComponent","createPaymentToken","paymentToken","taxInfoComponent","changeCountry","hideBank","changeMethod","PaymentComponent","AdjustStorageComponent","storageAdjustment","StorageRequest","storageGbAdjustment","paymentFailed","handleStripeCardPayment","adjustedStorageTotal","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","reset","ChangeKdfComponent","kdfOptions","recommendedKdfIterations","rotateEncKey","rotateEncKeyClicked","updateKey","UpdateKeyRequest","updateEmergencyAccesses","updateAllResetPasswordKeys","emergencyAccess","allowedStatuses","RecoveryInitiated","RecoveryApproved","filteredAccesses","updateRequest","EmergencyAccessUpdateRequest","orgPlansComponent","TeamsAnnually","Teams","EnterpriseAnnually","Enterprise","toggleExcluded","globalDomain","customize","UpdateDomainsRequest","excludedGlobalEquivalentDomains","d2","indexTrackBy","EmergencyAccessAddEditComponent","onDeleted","emergencyAccessType","waitTimes","waitTime","EmergencyAccessInviteRequest","EmergencyAccessAttachmentsComponent","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","oldKeyBuffer","oldEncKey","EmergencyAccessPasswordRequest","EmergencyAddEditComponent","viewAttachments","cipherData","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","contact","doConfirmation","removeGrantee","removeGrantor","requestAccess","approve","takeover","takeoverModalRef","EmergencyAccessConfirmRequest","LinkSsoComponent","ngAfterContentInit","localeOptions","themeOptions","disableIcons","startingLocale","startingTheme","effectiveTheme","getEffectiveTheme","vaultTimeoutActionChanged","showFree","showCancel","ownedBusiness","premiumAccessAddon","additionalStorage","additionalSeats","productTypes","singleOrgPolicyBlock","discount","plans","changedOwnedBusiness","createOrganization","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","familyPlan","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","additionalStorageTotal","seatTotal","subtotal","subTotal","freeTrial","taxCharges","taxComponent","taxRate","total","paymentDesc","changedProduct","changedCountry","userHasBlockingSingleOrgPolicy","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","OrganizationUpgradeRequest","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","OrganizationCreateRequest","collectionName","tokenResult","includeTaxId","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","ProviderOrganizationCreateRequest","allowEnrollmentChanges","unlinkSso","toggleResetPasswordEnrollment","keyString","toastStringRef","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","showMethods","hidePaypal","hideCredit","routing_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","fontFamily","fontSmoothing","invalid","StripeElementClasses","empty","Credit","head","removeChild","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","shape","tagline","createErr","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","handleCardPayment","paymentIntent","placeholder","mount","premiumPrice","finalizePremium","paymentResponse","ProfileComponent","hidePasswordHint","UpdateProfileRequest","hasFamilySponsorshipAvailable","availableSponsorshipOrgs","activeSponsorshipOrgs","selectedSponsorshipOrgId","sponsorshipEmail","sponsoredEmail","friendlyName","resetForm","forceReload","allOrgs","anyActiveSponsorships","anyOrgsAvailable","moreThanOneOrgAvailable","SponsoringOrgRowComponent","sponsoringOrg","sponsorshipRemoved","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmail","resendEmailPromise","onCountryChanged","pristine","taxRates","localTaxRate","getTaxInfoRequest","hasChanged","TwoFactorAuthenticatorComponent","TwoFactorBaseComponent","qrScript","auth","authResponse","processResponse","buildRequestModel","QRious","element","twoFactorProviderType","hashedSecret","verificationType","enableFunction","ikey","skey","TwoFactorEmailComponent","sentEmail","TwoFactorRecoveryComponent","print","onafterprint","formatString","showPolicyWarning","evaluatePolicies","authenticatorModalRef","yubikeyModalRef","TwoFactorYubiKeyComponent","emailModalRef","webAuthnModalRef","TwoFactorWebAuthnComponent","recoveryModalRef","TwoFactorVerifyComponent","onAuthed","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","readKey","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","webAuthnListening","webAuthnError","listening","configured","disablePromise","existingKey","padRight","UpdateKeyComponent","makeRequest","UpdateLicenseComponent","updatePromise","showAdjustPayment","showAddCredit","transactionType","billing","verifyBank","VerifyBankRequest","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","addCredit","paymentSourceInApp","closeAddCredit","changePayment","closePayment","isCreditBalance","creditOrBalance","AppleInApp","GoogleInApp","NG_VALIDATORS","VerifyEmailComponent","historyModalRef","lengthChanged","minNumberChanged","minSpecialChanged","setImportOptions","getFileContents","getFormatInstructionTitle","importOptions","fire","heightAuto","buttonsStyling","iconHtml","inputValue","inputAttributes","readonly","showConfirmButton","confirmButtonText","onOpen","popupEl","scrollTo","extract1PuxContent","readAsText","pre","JSZip","loadAsync","showRevisionDate","viewingPasswordHistory","cleanUp","totpUpdateCode","totpTick","totpInterval","toggleFavorite","launch","typeI18nKey","aType","confirmed","viewHistory","clearInterval","totpCode","half","totpCodeFormatted","intervalSeconds","totpSec","totpDash","totpLow","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","getSelectedIds","BulkDeleteComponent","bulkDeleteModalRef","permanent","cipherIds","bulkRestore","BulkRestoreComponent","bulkRestoreModalRef","onRestored","bulkShare","selectedCiphers","getSelected","BulkShareComponent","bulkShareModalRef","onShared","bulkMove","BulkMoveComponent","bulkMoveModalRef","onMoved","deleteCiphersAdmin","deleteCiphers","deleteRequest","nonShareableCount","shareableCiphers","checkedCollectionIds","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","pagedCiphers","userHasPremiumAccess","pagedCiphersCount","clone","displayTotpCopyButton","checkCipher","onSearchTextChanged","favorites","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","showProviders","organizationsComponent","filterFavorites","filterFolder","shareCipher","shareModalRef","folderAddEditModalRef","updateKeyModalRef","subscriber","arg","localStorage","getItem","sessionStorage","setItem","removeItem","filePath","localesResult","store","migrationStateFrom1To2","browserCache","prefersColorSchemeDark","matchMedia","chrome","Web","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","rel","blobData","blobOptions","fileNameLower","doDownload","endsWith","createObjectURL","position","PublicKeyCredential","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","showCancelButton","cancelButtonText","clipboardData","setData","queryCommandSupported","copyEl","contains","execCommand","readFromClipboard","authenticateBiometric","getDefaultSystemTheme","addListener","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}