{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./jslib/common/src/abstractions/i18n.service.ts","webpack:///./jslib/common/src/abstractions/platformUtils.service.ts","webpack:///./jslib/common/src/abstractions/api.service.ts","webpack:///./jslib/common/src/abstractions/user.service.ts","webpack:///./jslib/angular/src/pipes/i18n.pipe.ts","webpack:///./jslib/common/src/abstractions/crypto.service.ts","webpack:///./jslib/common/src/abstractions/messaging.service.ts","webpack:///./jslib/angular/src/directives/a11y-title.directive.ts","webpack:///./jslib/angular/src/directives/api-action.directive.ts","webpack:///./jslib/common/src/abstractions/cipher.service.ts","webpack:///./jslib/common/src/models/response/baseResponse.ts","webpack:///./jslib/angular/src/components/callout.component.ts","webpack:///./jslib/angular/src/components/callout.component.html","webpack:///./jslib/common/src/misc/utils.ts","webpack:///./jslib/common/src/abstractions/policy.service.ts","webpack:///./jslib/common/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/common/src/importers/baseImporter.ts","webpack:///./jslib/common/src/models/domain/importResult.ts","webpack:///./jslib/common/src/abstractions/state.service.ts","webpack:///./jslib/angular/src/directives/stop-click.directive.ts","webpack:///./jslib/common/src/abstractions/storage.service.ts","webpack:///./jslib/common/src/enums/cipherType.ts","webpack:///./jslib/common/src/abstractions/environment.service.ts","webpack:///./jslib/common/src/abstractions/collection.service.ts","webpack:///./jslib/common/src/abstractions/sync.service.ts","webpack:///./jslib/angular/src/directives/input-verbatim.directive.ts","webpack:///./jslib/angular/src/directives/stop-prop.directive.ts","webpack:///./jslib/common/src/abstractions/auth.service.ts","webpack:///./jslib/common/src/abstractions/folder.service.ts","webpack:///./jslib/common/src/abstractions/search.service.ts","webpack:///./jslib/angular/src/directives/autofocus.directive.ts","webpack:///./jslib/angular/src/pipes/user-name.pipe.ts","webpack:///./jslib/common/src/services/constants.service.ts","webpack:///./jslib/common/src/abstractions/event.service.ts","webpack:///./src/app/components/avatar.component.ts","webpack:///./src/app/modal.component.ts","webpack:///./jslib/common/src/models/request/passwordVerificationRequest.ts","webpack:///./jslib/common/src/models/domain/domainBase.ts","webpack:///./jslib/common/src/abstractions/log.service.ts","webpack:///./jslib/common/src/abstractions/vaultTimeout.service.ts","webpack:///./jslib/common/src/abstractions/audit.service.ts","webpack:///./jslib/common/src/models/domain/encString.ts","webpack:///./jslib/common/src/models/view/cardView.ts","webpack:///./jslib/common/src/abstractions/cryptoFunction.service.ts","webpack:///./jslib/angular/src/services/validation.service.ts","webpack:///./jslib/common/src/models/view/secureNoteView.ts","webpack:///./jslib/common/src/enums/secureNoteType.ts","webpack:///./jslib/common/src/abstractions/token.service.ts","webpack:///./jslib/angular/src/components/icon.component.ts","webpack:///./jslib/angular/src/components/icon.component.html","webpack:///./jslib/common/src/abstractions/export.service.ts","webpack:///./jslib/angular/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/enums/twoFactorProviderType.ts","webpack:///./jslib/common/src/enums/policyType.ts","webpack:///./jslib/common/src/abstractions/totp.service.ts","webpack:///./jslib/angular/src/pipes/search.pipe.ts","webpack:///./src/app/settings/payment.component.ts","webpack:///./src/app/settings/payment.component.html","webpack:///./jslib/common/src/enums/fieldType.ts","webpack:///./jslib/common/src/abstractions/send.service.ts","webpack:///./jslib/common/src/models/view/cipherView.ts","webpack:///./jslib/common/src/models/view/folderView.ts","webpack:///./src/app/settings/tax-info.component.ts","webpack:///./src/app/settings/tax-info.component.html","webpack:///./jslib/common/src/enums/organizationUserStatusType.ts","webpack:///./src/app/services/event.service.ts","webpack:///./jslib/common/src/models/domain/collection.ts","webpack:///./jslib/common/src/models/view/identityView.ts","webpack:///./jslib/common/src/models/view/loginView.ts","webpack:///./jslib/common/src/models/data/collectionData.ts","webpack:///./jslib/common/src/models/view/collectionView.ts","webpack:///./jslib/common/src/models/data/cipherData.ts","webpack:///./jslib/common/src/enums/sendType.ts","webpack:///./jslib/common/src/enums/cipherRepromptType.ts","webpack:///./jslib/common/src/models/api/permissionsApi.ts","webpack:///./src/app/components/password-strength.component.ts","webpack:///./src/app/components/password-strength.component.html","webpack:///./src/app/settings/two-factor-verify.component.ts","webpack:///./src/app/settings/two-factor-verify.component.html","webpack:///./jslib/common/src/models/domain/cipher.ts","webpack:///./jslib/common/src/abstractions/passwordReprompt.service.ts","webpack:///./src/app/layouts/navbar.component.ts","webpack:///./src/app/layouts/navbar.component.html","webpack:///./src/app/layouts/footer.component.ts","webpack:///./src/app/layouts/footer.component.html","webpack:///./src/app/settings/organization-plans.component.ts","webpack:///./src/app/settings/organization-plans.component.html","webpack:///./jslib/common/src/models/response/errorResponse.ts","webpack:///./jslib/common/src/enums/eventType.ts","webpack:///./jslib/common/src/abstractions/index.ts","webpack:///./jslib/common/src/models/view/fieldView.ts","webpack:///./jslib/common/src/models/request/cipherRequest.ts","webpack:///./bitwarden_license/src/app/providers/services/provider.service.ts","webpack:///./jslib/common/src/enums/planType.ts","webpack:///./jslib/common/src/enums/providerUserType.ts","webpack:///./jslib/common/src/enums/paymentMethodType.ts","webpack:///./jslib/common/src/enums/organizationUserType.ts","webpack:///./jslib/common/src/models/response/cipherResponse.ts","webpack:///./src/app/services/router.service.ts","webpack:///./jslib/common/src/enums/kdfType.ts","webpack:///./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack:///./src/app/settings/two-factor-base.component.ts","webpack:///./src/app/tools/cipher-report.component.ts","webpack:///./jslib/common/src/models/view/loginUriView.ts","webpack:///./jslib/common/src/enums/uriMatchType.ts","webpack:///./src/app/vault/add-edit.component.ts","webpack:///./src/app/vault/add-edit.component.html","webpack:///./jslib/common/src/abstractions/import.service.ts","webpack:///./src/app/vault/ciphers.component.ts","webpack:///./src/app/vault/ciphers.component.html","webpack:///./jslib/common/src/enums/permissions.ts","webpack:///./jslib/common/src/models/request/keysRequest.ts","webpack:///./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/common/src/models/response/profileResponse.ts","webpack:///./src/app/common/base.accept.component.ts","webpack:///./jslib/common/src/enums/deviceType.ts","webpack:///./jslib/common/src/abstractions/settings.service.ts","webpack:///./src/app/organizations/manage/entity-events.component.ts","webpack:///./src/app/organizations/manage/entity-events.component.html","webpack:///./jslib/common/src/enums/encryptionType.ts","webpack:///./jslib/common/src/enums/hashPurpose.ts","webpack:///./jslib/common/src/models/data/policyData.ts","webpack:///./jslib/angular/src/components/change-password.component.ts","webpack:///./jslib/common/src/services/auth.service.ts","webpack:///./jslib/common/src/models/request/selectionReadOnlyRequest.ts","webpack:///./jslib/common/src/models/domain/card.ts","webpack:///./jslib/common/src/models/domain/field.ts","webpack:///./jslib/common/src/models/domain/identity.ts","webpack:///./jslib/common/src/models/domain/login.ts","webpack:///./jslib/common/src/models/domain/loginUri.ts","webpack:///./jslib/common/src/models/domain/secureNote.ts","webpack:///./jslib/angular/src/directives/true-false-value.directive.ts","webpack:///./src/app/vault/groupings.component.ts","webpack:///./src/app/vault/groupings.component.html","webpack:///./jslib/common/src/models/domain/organization.ts","webpack:///./jslib/common/src/models/view/sendFileView.ts","webpack:///./jslib/common/src/models/view/sendTextView.ts","webpack:///./src/app/settings/organizations.component.ts","webpack:///./src/app/settings/organizations.component.html","webpack:///./jslib/angular/src/services/auth-guard.service.ts","webpack:///./jslib/common/src/enums/productType.ts","webpack:///./jslib/common/src/models/request/organizationKeysRequest.ts","webpack:///./jslib/common/src/models/response/attachmentResponse.ts","webpack:///./jslib/common/src/models/response/collectionResponse.ts","webpack:///./jslib/common/src/models/response/domainsResponse.ts","webpack:///./jslib/common/src/models/response/folderResponse.ts","webpack:///./jslib/common/src/models/response/sendResponse.ts","webpack:///./jslib/common/src/models/api/sendFileApi.ts","webpack:///./jslib/common/src/models/api/sendTextApi.ts","webpack:///./jslib/common/src/enums/providerUserStatusType.ts","webpack:///./jslib/common/src/models/request/provider/providerUserBulkRequest.ts","webpack:///./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-status.component.html","webpack:///./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack:///./jslib/common/src/models/request/organizationUserBulkRequest.ts","webpack:///./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack:///./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack:///./src/app/layouts/frontend-layout.component.ts","webpack:///./src/app/layouts/frontend-layout.component.html","webpack:///./src/app/providers/providers.component.ts","webpack:///./src/app/providers/providers.component.html","webpack:///./jslib/common/src/abstractions/notifications.service.ts","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///./jslib/common/src/models/domain/policy.ts","webpack:///./src/app/organizations/manage/entity-users.component.ts","webpack:///./src/app/organizations/manage/entity-users.component.html","webpack:///./src/app/settings/api-key.component.ts","webpack:///./src/app/settings/api-key.component.html","webpack:///./src/app/settings/purge-vault.component.ts","webpack:///./src/app/settings/purge-vault.component.html","webpack:///./src/app/settings/user-billing.component.ts","webpack:///./src/app/settings/user-billing.component.html","webpack:///./src/app/settings/add-credit.component.ts","webpack:///./src/app/settings/add-credit.component.html","webpack:///./src/app/settings/adjust-payment.component.ts","webpack:///./src/app/settings/adjust-payment.component.html","webpack:///./src/app/settings/update-license.component.ts","webpack:///./src/app/settings/update-license.component.html","webpack:///./src/app/settings/adjust-storage.component.ts","webpack:///./src/app/settings/adjust-storage.component.html","webpack:///./src/app/settings/two-factor-duo.component.ts","webpack:///./src/app/settings/two-factor-duo.component.html","webpack:///./src/app/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-setup.component.html","webpack:///./src/app/tools/export.component.ts","webpack:///./src/app/tools/export.component.html","webpack:///./src/app/tools/exposed-passwords-report.component.ts","webpack:///./src/app/tools/exposed-passwords-report.component.html","webpack:///./src/app/organizations/vault/add-edit.component.ts","webpack:///./jslib/common/src/models/data/attachmentData.ts","webpack:///./jslib/common/src/models/data/cardData.ts","webpack:///./jslib/common/src/models/data/fieldData.ts","webpack:///./jslib/common/src/models/data/identityData.ts","webpack:///./jslib/common/src/models/data/loginData.ts","webpack:///./jslib/common/src/models/data/loginUriData.ts","webpack:///./jslib/common/src/models/data/secureNoteData.ts","webpack:///./jslib/common/src/models/domain/attachment.ts","webpack:///./jslib/common/src/models/view/passwordHistoryView.ts","webpack:///./src/app/tools/import.component.ts","webpack:///./src/app/tools/import.component.html","webpack:///./src/app/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/tools/inactive-two-factor-report.component.html","webpack:///./src/app/tools/reused-passwords-report.component.ts","webpack:///./src/app/tools/reused-passwords-report.component.html","webpack:///./src/app/tools/unsecured-websites-report.component.ts","webpack:///./src/app/tools/unsecured-websites-report.component.html","webpack:///./src/app/tools/weak-passwords-report.component.ts","webpack:///./src/app/tools/weak-passwords-report.component.html","webpack:///./src/app/vault/attachments.component.ts","webpack:///./src/app/vault/attachments.component.html","webpack:///./src/app/organizations/vault/ciphers.component.ts","webpack:///./src/app/vault/collections.component.ts","webpack:///./src/app/vault/collections.component.html","webpack:///./src/app/organizations/vault/groupings.component.ts","webpack:///./src/app/vault/bulk-actions.component.ts","webpack:///./src/app/vault/bulk-actions.component.html","webpack:///./jslib/common/src/models/domain/sendFile.ts","webpack:///./jslib/common/src/models/domain/sendText.ts","webpack:///./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/common/src/models/request/folderRequest.ts","webpack:///./jslib/common/src/models/data/folderData.ts","webpack:///./jslib/common/src/models/domain/folder.ts","webpack:///./jslib/angular/src/directives/select-copy.directive.ts","webpack:///./jslib/angular/src/pipes/color-password.pipe.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./bitwarden_license/src/app/providers/services/provider-guard.service.ts","webpack:///./bitwarden_license/src/app/providers/services/provider-type-guard.service.ts","webpack:///./bitwarden_license/src/app/providers/providers-layout.component.ts","webpack:///./bitwarden_license/src/app/providers/providers-layout.component.html","webpack:///./bitwarden_license/src/app/providers/clients/clients.component.ts","webpack:///./bitwarden_license/src/app/providers/clients/clients.component.html","webpack:///./bitwarden_license/src/app/providers/clients/add-organization.component.ts","webpack:///./bitwarden_license/src/app/providers/clients/add-organization.component.html","webpack:///./bitwarden_license/src/app/providers/clients/create-organization.component.ts","webpack:///./bitwarden_license/src/app/providers/clients/create-organization.component.html","webpack:///./src/services/webConstants.ts","webpack:///./jslib/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack:///./jslib/common/src/models/request/taxInfoUpdateRequest.ts","webpack:///./jslib/common/src/models/response/index.ts","webpack:///./jslib/common/src/models/api/cardApi.ts","webpack:///./jslib/common/src/models/api/fieldApi.ts","webpack:///./jslib/common/src/models/api/identityApi.ts","webpack:///./jslib/common/src/models/api/loginApi.ts","webpack:///./jslib/common/src/models/api/loginUriApi.ts","webpack:///./jslib/common/src/models/api/secureNoteApi.ts","webpack:///./jslib/common/src/models/response/globalDomainResponse.ts","webpack:///./jslib/common/src/models/response/identityTokenResponse.ts","webpack:///./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/common/src/models/response/keysResponse.ts","webpack:///./jslib/common/src/models/response/listResponse.ts","webpack:///./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/syncResponse.ts","webpack:///./jslib/common/src/models/response/policyResponse.ts","webpack:///./bitwarden_license/src/app/providers/manage/accept-provider.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/accept-provider.component.html","webpack:///./bitwarden_license/src/app/providers/manage/events.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/events.component.html","webpack:///./src/app/common/base.events.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/manage.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/manage.component.html","webpack:///./bitwarden_license/src/app/providers/manage/people.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/people.component.html","webpack:///./src/app/common/base.people.component.ts","webpack:///./src/app/organizations/manage/user-confirm.component.ts","webpack:///./src/app/organizations/manage/user-confirm.component.html","webpack:///./bitwarden_license/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/user-add-edit.component.ts","webpack:///./bitwarden_license/src/app/providers/manage/user-add-edit.component.html","webpack:///./bitwarden_license/src/app/providers/settings/settings.component.ts","webpack:///./bitwarden_license/src/app/providers/settings/settings.component.html","webpack:///./bitwarden_license/src/app/providers/setup/setup-provider.component.ts","webpack:///./bitwarden_license/src/app/providers/setup/setup-provider.component.html","webpack:///./bitwarden_license/src/app/providers/setup/setup.component.ts","webpack:///./bitwarden_license/src/app/providers/setup/setup.component.html","webpack:///./bitwarden_license/src/app/providers/settings/account.component.ts","webpack:///./bitwarden_license/src/app/providers/settings/account.component.html","webpack:///./src/app/oss.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/layouts/organization-layout.component.ts","webpack:///./src/app/layouts/organization-layout.component.html","webpack:///./src/app/layouts/user-layout.component.ts","webpack:///./src/app/layouts/user-layout.component.html","webpack:///./src/app/accounts/accept-emergency.component.ts","webpack:///./src/app/accounts/accept-emergency.component.html","webpack:///./src/app/accounts/accept-organization.component.ts","webpack:///./src/app/accounts/accept-organization.component.html","webpack:///./src/app/accounts/hint.component.ts","webpack:///./src/app/accounts/hint.component.html","webpack:///./src/app/accounts/lock.component.ts","webpack:///./src/app/accounts/lock.component.html","webpack:///./src/app/accounts/login.component.ts","webpack:///./src/app/accounts/login.component.html","webpack:///./jslib/angular/src/components/captchaProtected.component.ts","webpack:///./jslib/common/src/misc/iframe_component.ts","webpack:///./src/app/accounts/recover-delete.component.ts","webpack:///./src/app/accounts/recover-delete.component.html","webpack:///./src/app/accounts/recover-two-factor.component.ts","webpack:///./src/app/accounts/recover-two-factor.component.html","webpack:///./src/app/accounts/register.component.ts","webpack:///./src/app/accounts/register.component.html","webpack:///./src/app/accounts/set-password.component.ts","webpack:///./src/app/accounts/set-password.component.html","webpack:///./src/app/accounts/sso.component.ts","webpack:///./src/app/accounts/sso.component.html","webpack:///./jslib/angular/src/components/sso.component.ts","webpack:///./src/app/accounts/two-factor-options.component.ts","webpack:///./src/app/accounts/two-factor-options.component.html","webpack:///./src/app/accounts/two-factor.component.ts","webpack:///./src/app/accounts/two-factor.component.html","webpack:///./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack:///./jslib/common/src/models/domain/authResult.ts","webpack:///./src/app/accounts/update-temp-password.component.ts","webpack:///./src/app/accounts/update-temp-password.component.html","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///./src/app/accounts/verify-email-token.component.ts","webpack:///./src/app/accounts/verify-email-token.component.html","webpack:///./src/app/accounts/verify-recover-delete.component.ts","webpack:///./src/app/accounts/verify-recover-delete.component.html","webpack:///./src/app/organizations/manage/collection-add-edit.component.ts","webpack:///./src/app/organizations/manage/collection-add-edit.component.html","webpack:///./jslib/common/src/models/request/collectionRequest.ts","webpack:///./src/app/organizations/manage/collections.component.ts","webpack:///./src/app/organizations/manage/collections.component.html","webpack:///./src/app/organizations/manage/events.component.ts","webpack:///./src/app/organizations/manage/events.component.html","webpack:///./src/app/organizations/manage/group-add-edit.component.ts","webpack:///./src/app/organizations/manage/group-add-edit.component.html","webpack:///./src/app/organizations/manage/groups.component.ts","webpack:///./src/app/organizations/manage/groups.component.html","webpack:///./src/app/organizations/manage/manage.component.ts","webpack:///./src/app/organizations/manage/manage.component.html","webpack:///./src/app/organizations/manage/people.component.ts","webpack:///./src/app/organizations/manage/people.component.html","webpack:///./src/app/organizations/manage/reset-password.component.ts","webpack:///./src/app/organizations/manage/reset-password.component.html","webpack:///./src/app/organizations/manage/user-add-edit.component.ts","webpack:///./src/app/organizations/manage/user-add-edit.component.html","webpack:///./src/app/organizations/manage/user-groups.component.ts","webpack:///./src/app/organizations/manage/user-groups.component.html","webpack:///./src/app/organizations/manage/policies.component.ts","webpack:///./src/app/organizations/manage/policies.component.html","webpack:///./src/app/organizations/manage/policy-edit.component.ts","webpack:///./src/app/organizations/manage/policy-edit.component.html","webpack:///./src/app/organizations/settings/account.component.ts","webpack:///./src/app/organizations/settings/account.component.html","webpack:///./src/app/organizations/settings/delete-organization.component.ts","webpack:///./src/app/organizations/settings/delete-organization.component.html","webpack:///./src/app/organizations/settings/adjust-seats.component.ts","webpack:///./src/app/organizations/settings/adjust-seats.component.html","webpack:///./src/app/organizations/settings/change-plan.component.ts","webpack:///./src/app/organizations/settings/change-plan.component.html","webpack:///./src/app/organizations/settings/download-license.component.ts","webpack:///./src/app/organizations/settings/download-license.component.html","webpack:///./src/app/organizations/settings/organization-billing.component.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.html","webpack:///./src/app/organizations/settings/settings.component.ts","webpack:///./src/app/organizations/settings/settings.component.html","webpack:///./src/app/organizations/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.html","webpack:///./src/app/settings/two-factor-email.component.ts","webpack:///./src/app/settings/two-factor-email.component.html","webpack:///./src/app/settings/two-factor-recovery.component.ts","webpack:///./src/app/settings/two-factor-recovery.component.html","webpack:///./src/app/settings/two-factor-webauthn.component.ts","webpack:///./src/app/settings/two-factor-webauthn.component.html","webpack:///./src/app/settings/two-factor-yubikey.component.ts","webpack:///./src/app/settings/two-factor-yubikey.component.html","webpack:///./src/app/organizations/tools/export.component.ts","webpack:///./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack:///./jslib/common/src/models/data/passwordHistoryData.ts","webpack:///./jslib/common/src/models/view/attachmentView.ts","webpack:///./jslib/common/src/models/domain/password.ts","webpack:///./jslib/common/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/angular/src/directives/fallback-src.directive.ts","webpack:///./src/app/organizations/tools/import.component.ts","webpack:///./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/organizations/tools/reused-passwords-report.component.ts","webpack:///./src/app/organizations/tools/tools.component.ts","webpack:///./src/app/organizations/tools/tools.component.html","webpack:///./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack:///./src/app/organizations/tools/weak-passwords-report.component.ts","webpack:///./src/app/organizations/vault/attachments.component.ts","webpack:///./jslib/angular/src/components/attachments.component.ts","webpack:///./src/app/organizations/vault/collections.component.ts","webpack:///./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack:///./src/app/organizations/vault/vault.component.ts","webpack:///./src/app/organizations/vault/vault.component.html","webpack:///./src/app/vault/bulk-delete.component.ts","webpack:///./src/app/vault/bulk-delete.component.html","webpack:///./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./src/app/vault/bulk-move.component.ts","webpack:///./src/app/vault/bulk-move.component.html","webpack:///./src/app/vault/bulk-restore.component.ts","webpack:///./src/app/vault/bulk-restore.component.html","webpack:///./src/app/vault/bulk-share.component.ts","webpack:///./src/app/vault/bulk-share.component.html","webpack:///./src/app/send/access.component.ts","webpack:///./src/app/send/access.component.html","webpack:///./src/app/send/add-edit.component.ts","webpack:///./src/app/send/add-edit.component.html","webpack:///./jslib/common/src/models/view/sendView.ts","webpack:///./src/app/send/efflux-dates.component.ts","webpack:///./src/app/send/efflux-dates.component.html","webpack:///./src/app/send/send.component.ts","webpack:///./src/app/send/send.component.html","webpack:///./src/app/settings/account.component.ts","webpack:///./src/app/settings/account.component.html","webpack:///./src/app/settings/deauthorize-sessions.component.ts","webpack:///./src/app/settings/deauthorize-sessions.component.html","webpack:///./src/app/settings/delete-account.component.ts","webpack:///./src/app/settings/delete-account.component.html","webpack:///./src/app/settings/profile.component.ts","webpack:///./src/app/settings/profile.component.html","webpack:///./src/app/settings/change-email.component.ts","webpack:///./src/app/settings/change-email.component.html","webpack:///./jslib/common/src/models/request/emailTokenRequest.ts","webpack:///./src/app/settings/change-password.component.ts","webpack:///./src/app/settings/change-password.component.html","webpack:///./jslib/common/src/enums/emergencyAccessStatusType.ts","webpack:///./jslib/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack:///./jslib/common/src/models/request/folderWithIdRequest.ts","webpack:///./jslib/common/src/models/request/passwordRequest.ts","webpack:///./jslib/common/src/models/request/sendRequest.ts","webpack:///./jslib/common/src/models/request/updateKeyRequest.ts","webpack:///./src/app/settings/change-kdf.component.ts","webpack:///./src/app/settings/change-kdf.component.html","webpack:///./src/app/settings/create-organization.component.ts","webpack:///./src/app/settings/create-organization.component.html","webpack:///./src/app/settings/domain-rules.component.ts","webpack:///./src/app/settings/domain-rules.component.html","webpack:///./src/app/settings/emergency-access-add-edit.component.ts","webpack:///./src/app/settings/emergency-access-add-edit.component.html","webpack:///./jslib/common/src/enums/emergencyAccessType.ts","webpack:///./src/app/settings/emergency-access-attachments.component.ts","webpack:///./src/app/settings/emergency-access-confirm.component.ts","webpack:///./src/app/settings/emergency-access-confirm.component.html","webpack:///./src/app/settings/emergency-access-takeover.component.ts","webpack:///./src/app/settings/emergency-access-takeover.component.html","webpack:///./src/app/settings/emergency-access-view.component.ts","webpack:///./src/app/settings/emergency-access-view.component.html","webpack:///./jslib/common/src/models/domain/encryptedObject.ts","webpack:///./jslib/common/src/models/domain/environmentUrls.ts","webpack:///./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack:///./src/app/settings/emergency-add-edit.component.ts","webpack:///./src/app/settings/emergency-access.component.ts","webpack:///./src/app/settings/emergency-access.component.html","webpack:///./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack:///./src/app/settings/link-sso.component.ts","webpack:///./src/app/settings/link-sso.component.html","webpack:///./src/app/settings/options.component.ts","webpack:///./src/app/settings/options.component.html","webpack:///./src/app/settings/premium.component.ts","webpack:///./src/app/settings/premium.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/update-key.component.ts","webpack:///./src/app/settings/update-key.component.html","webpack:///./src/app/settings/user-subscription.component.ts","webpack:///./src/app/settings/user-subscription.component.html","webpack:///./src/app/settings/verify-email.component.ts","webpack:///./src/app/settings/verify-email.component.html","webpack:///./src/app/tools/breach-report.component.ts","webpack:///./src/app/tools/breach-report.component.html","webpack:///./src/app/tools/password-generator-history.component.ts","webpack:///./src/app/tools/password-generator-history.component.html","webpack:///./src/app/tools/password-generator.component.ts","webpack:///./src/app/tools/password-generator.component.html","webpack:///./src/app/tools/tools.component.ts","webpack:///./src/app/tools/tools.component.html","webpack:///./src/app/vault/folder-add-edit.component.ts","webpack:///./src/app/vault/folder-add-edit.component.html","webpack:///./src/app/vault/share.component.ts","webpack:///./src/app/vault/share.component.html","webpack:///./src/app/vault/vault.component.ts","webpack:///./src/app/vault/vault.component.html","webpack:///./src/app/services/organization-guard.service.ts","webpack:///./src/app/services/organization-type-guard.service.ts","webpack:///./jslib/angular/src/services/lock-guard.service.ts","webpack:///./jslib/angular/src/services/unauth-guard.service.ts","webpack:///./jslib/common/src/services/api.service.ts","webpack:///./jslib/common/src/models/response/organizationResponse.ts","webpack:///./jslib/common/src/models/response/planResponse.ts","webpack:///./jslib/common/src/models/response/subscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///./jslib/common/src/services/appId.service.ts","webpack:///./jslib/common/src/services/audit.service.ts","webpack:///./jslib/common/src/services/cipher.service.ts","webpack:///./jslib/common/src/misc/sequentialize.ts","webpack:///./jslib/common/src/services/collection.service.ts","webpack:///./jslib/common/src/misc/serviceUtils.ts","webpack:///./jslib/common/src/services/container.service.ts","webpack:///./jslib/common/src/services/crypto.service.ts","webpack:///./jslib/common/src/misc/wordlist.ts","webpack:///./jslib/common/src/services/environment.service.ts","webpack:///./jslib/common/src/services/folder.service.ts","webpack:///./jslib/common/src/services/i18n.service.ts","webpack:///./jslib/common/src/services/passwordGeneration.service.ts","webpack:///./jslib/common/src/services/settings.service.ts","webpack:///./jslib/common/src/services/state.service.ts","webpack:///./jslib/common/src/services/sync.service.ts","webpack:///./jslib/common/src/models/data/sendData.ts","webpack:///./jslib/common/src/services/token.service.ts","webpack:///./jslib/common/src/services/totp.service.ts","webpack:///./jslib/common/src/services/user.service.ts","webpack:///./jslib/common/src/services/vaultTimeout.service.ts","webpack:///./jslib/common/src/services/consoleLog.service.ts","webpack:///./jslib/common/src/enums/logLevelType.ts","webpack:///./jslib/common/src/models/export/cipherWithIds.ts","webpack:///./jslib/common/src/models/export/collectionWithId.ts","webpack:///./jslib/common/src/models/export/folderWithId.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordCsvImporter.ts","webpack:///./jslib/common/src/models/view/index.ts","webpack:///./jslib/common/src/enums/notificationType.ts","webpack:///./bitwarden_license/src/app/main.ts","webpack:///./src/scss/styles.scss?580e","webpack:///./bitwarden_license/src/app/app.module.ts","webpack:///./bitwarden_license/src/app/app-routing.module.ts","webpack:///./bitwarden_license/src/app/providers/providers.module.ts","webpack:///./jslib/common/src/models/request/provider/providerAddOrganizationRequest.ts","webpack:///./jslib/common/src/misc/tldjs.noop.ts","webpack:///./bitwarden_license/src/app/providers/providers-routing.module.ts","webpack:///./jslib/angular/src/components/modal.component.ts","webpack:///./jslib/common/src/models/request/organizationCreateRequest.ts","webpack:///./jslib/common/src/models/request/organizationUpgradeRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack:///./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/common/src/models/response/deviceResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderResponse.ts","webpack:///./jslib/common/src/models/request/provider/providerUserAcceptRequest.ts","webpack:///./jslib/common/src/models/view/eventView.ts","webpack:///./jslib/common/src/abstractions/appId.service.ts","webpack:///./jslib/common/src/models/request/provider/providerUserConfirmRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUserBulkConfirmRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUserInviteRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUserUpdateRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerSetupRequest.ts","webpack:///./jslib/common/src/models/request/provider/providerUpdateRequest.ts","webpack:///./jslib/common/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserAcceptRequest.ts","webpack:///./jslib/angular/src/components/hint.component.ts","webpack:///./jslib/common/src/models/request/passwordHintRequest.ts","webpack:///./jslib/angular/src/components/lock.component.ts","webpack:///./jslib/angular/src/components/login.component.ts","webpack:///./jslib/common/src/misc/captcha_iframe.ts","webpack:///./jslib/common/src/models/request/deleteRecoverRequest.ts","webpack:///./jslib/common/src/models/request/twoFactorRecoveryRequest.ts","webpack:///./jslib/angular/src/components/register.component.ts","webpack:///./jslib/common/src/models/request/registerRequest.ts","webpack:///./jslib/common/src/models/request/referenceEventRequest.ts","webpack:///./jslib/angular/src/components/set-password.component.ts","webpack:///./jslib/common/src/models/request/setPasswordRequest.ts","webpack:///./jslib/angular/src/components/two-factor-options.component.ts","webpack:///./jslib/angular/src/components/two-factor.component.ts","webpack:///./jslib/common/src/models/request/deviceRequest.ts","webpack:///./jslib/common/src/models/request/preloginRequest.ts","webpack:///./jslib/common/src/models/request/tokenRequest.ts","webpack:///./jslib/common/src/misc/webauthn_iframe.ts","webpack:///./jslib/angular/src/components/update-temp-password.component.ts","webpack:///./jslib/common/src/models/request/updateTempPasswordRequest.ts","webpack:///./jslib/common/src/models/request/verifyEmailRequest.ts","webpack:///./jslib/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack:///./jslib/common/src/models/request/groupRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserConfirmRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserInviteRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserUpdateRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack:///./jslib/common/src/models/request/policyRequest.ts","webpack:///./jslib/common/src/models/request/organizationUpdateRequest.ts","webpack:///./jslib/common/src/models/request/seatRequest.ts","webpack:///./jslib/common/src/enums/transactionType.ts","webpack:///./jslib/common/src/models/request/verifyBankRequest.ts","webpack:///./jslib/common/src/models/request/bitPayInvoiceRequest.ts","webpack:///./jslib/common/src/models/request/paymentRequest.ts","webpack:///./jslib/common/src/models/request/storageRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack:///./jslib/common/src/models/request/twoFactorProviderRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack:///./jslib/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack:///./jslib/angular/src/components/export.component.ts","webpack:///./jslib/common/src/models/request/attachmentRequest.ts","webpack:///./jslib/angular/src/components/add-edit.component.ts","webpack:///./jslib/angular/src/components/ciphers.component.ts","webpack:///./jslib/angular/src/components/collections.component.ts","webpack:///./jslib/angular/src/components/groupings.component.ts","webpack:///./jslib/common/src/models/domain/sendAccess.ts","webpack:///./jslib/common/src/models/view/sendAccessView.ts","webpack:///./jslib/common/src/models/request/sendAccessRequest.ts","webpack:///./jslib/angular/src/components/send/add-edit.component.ts","webpack:///./jslib/angular/src/components/send/efflux-dates.component.ts","webpack:///./jslib/angular/src/components/send/send.component.ts","webpack:///./jslib/common/src/models/request/updateProfileRequest.ts","webpack:///./jslib/common/src/models/request/emailRequest.ts","webpack:///./jslib/common/src/models/request/sendWithIdRequest.ts","webpack:///./jslib/common/src/models/request/kdfRequest.ts","webpack:///./jslib/common/src/models/request/updateDomainsRequest.ts","webpack:///./jslib/common/src/models/request/emergencyAccessInviteRequest.ts","webpack:///./jslib/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack:///./jslib/common/src/models/data/index.ts","webpack:///./jslib/common/src/models/domain/index.ts","webpack:///./jslib/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack:///./jslib/angular/src/components/password-generator-history.component.ts","webpack:///./jslib/angular/src/components/password-generator.component.ts","webpack:///./jslib/angular/src/components/folder-add-edit.component.ts","webpack:///./jslib/angular/src/components/share.component.ts","webpack:///./jslib/angular/src/directives/blur-click.directive.ts","webpack:///./jslib/angular/src/directives/box-row.directive.ts","webpack:///./jslib/angular/src/pipes/search-ciphers.pipe.ts","webpack:///./src/app/oss-routing.module.ts","webpack:///./src/app/services/services.module.ts","webpack:///./src/services/broadcasterMessaging.service.ts","webpack:///./src/services/htmlStorage.service.ts","webpack:///./jslib/common/src/services/index.ts","webpack:///./jslib/common/src/models/response/apiKeyResponse.ts","webpack:///./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/billingResponse.ts","webpack:///./jslib/common/src/models/response/breachAccountResponse.ts","webpack:///./jslib/common/src/models/response/eventResponse.ts","webpack:///./jslib/common/src/models/response/groupResponse.ts","webpack:///./jslib/common/src/models/response/organizationKeysResponse.ts","webpack:///./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserResponse.ts","webpack:///./jslib/common/src/models/response/paymentResponse.ts","webpack:///./jslib/common/src/models/response/preloginResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack:///./jslib/common/src/models/response/sendAccessResponse.ts","webpack:///./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/taxInfoResponse.ts","webpack:///./jslib/common/src/models/response/taxRateResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/common/src/models/response/userKeyResponse.ts","webpack:///./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack:///./jslib/common/src/misc/throttle.ts","webpack:///./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/common/src/models/request/cipherShareRequest.ts","webpack:///./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/common/src/models/domain/treeNode.ts","webpack:///./jslib/common/src/models/domain/encArrayBuffer.ts","webpack:///./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/common/src/models/data/organizationData.ts","webpack:///./jslib/common/src/models/data/providerData.ts","webpack:///./jslib/common/src/models/data/sendFileData.ts","webpack:///./jslib/common/src/models/data/sendTextData.ts","webpack:///./jslib/common/src/models/domain/provider.ts","webpack:///./src/services/i18n.service.ts","webpack:///./src/services/memoryStorage.service.ts","webpack:///./src/services/webPlatformUtils.service.ts","webpack:///./jslib/common/src/services/event.service.ts","webpack:///./jslib/common/src/models/data/eventData.ts","webpack:///./jslib/common/src/models/request/eventRequest.ts","webpack:///./jslib/common/src/services/export.service.ts","webpack:///./jslib/common/src/models/export/cipher.ts","webpack:///./jslib/common/src/models/export/card.ts","webpack:///./jslib/common/src/models/export/field.ts","webpack:///./jslib/common/src/models/export/identity.ts","webpack:///./jslib/common/src/models/export/login.ts","webpack:///./jslib/common/src/models/export/loginUri.ts","webpack:///./jslib/common/src/models/export/secureNote.ts","webpack:///./jslib/common/src/models/export/collection.ts","webpack:///./jslib/common/src/models/export/event.ts","webpack:///./jslib/common/src/models/export/folder.ts","webpack:///./jslib/common/src/services/fileUpload.service.ts","webpack:///./jslib/common/src/enums/fileUploadType.ts","webpack:///./jslib/common/src/services/azureFileUpload.service.ts","webpack:///./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack:///./jslib/common/src/services/import.service.ts","webpack:///./jslib/common/src/models/request/importCiphersRequest.ts","webpack:///./jslib/common/src/models/request/importOrganizationCiphersRequest.ts","webpack:///./jslib/common/src/models/request/kvpRequest.ts","webpack:///./jslib/common/src/importers/ascendoCsvImporter.ts","webpack:///./jslib/common/src/importers/avastCsvImporter.ts","webpack:///./jslib/common/src/importers/avastJsonImporter.ts","webpack:///./jslib/common/src/importers/aviraCsvImporter.ts","webpack:///./jslib/common/src/importers/bitwardenCsvImporter.ts","webpack:///./jslib/common/src/importers/bitwardenJsonImporter.ts","webpack:///./jslib/common/src/importers/blackBerryCsvImporter.ts","webpack:///./jslib/common/src/importers/blurCsvImporter.ts","webpack:///./jslib/common/src/importers/buttercupCsvImporter.ts","webpack:///./jslib/common/src/importers/chromeCsvImporter.ts","webpack:///./jslib/common/src/importers/clipperzHtmlImporter.ts","webpack:///./jslib/common/src/importers/codebookCsvImporter.ts","webpack:///./jslib/common/src/importers/dashlaneJsonImporter.ts","webpack:///./jslib/common/src/importers/encryptrCsvImporter.ts","webpack:///./jslib/common/src/importers/enpassCsvImporter.ts","webpack:///./jslib/common/src/importers/enpassJsonImporter.ts","webpack:///./jslib/common/src/importers/firefoxCsvImporter.ts","webpack:///./jslib/common/src/importers/fsecureFskImporter.ts","webpack:///./jslib/common/src/importers/gnomeJsonImporter.ts","webpack:///./jslib/common/src/importers/kasperskyTxtImporter.ts","webpack:///./jslib/common/src/importers/keepass2XmlImporter.ts","webpack:///./jslib/common/src/importers/keepassxCsvImporter.ts","webpack:///./jslib/common/src/importers/keeperCsvImporter.ts","webpack:///./jslib/common/src/importers/lastpassCsvImporter.ts","webpack:///./jslib/common/src/importers/logMeOnceCsvImporter.ts","webpack:///./jslib/common/src/importers/meldiumCsvImporter.ts","webpack:///./jslib/common/src/importers/msecureCsvImporter.ts","webpack:///./jslib/common/src/importers/mykiCsvImporter.ts","webpack:///./jslib/common/src/importers/nordpassCsvImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepassword1PifImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordMacCsvImporter.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/cipherImportContext.ts","webpack:///./jslib/common/src/models/view/view.ts","webpack:///./jslib/common/src/importers/onepasswordImporters/onepasswordWinCsvImporter.ts","webpack:///./jslib/common/src/importers/padlockCsvImporter.ts","webpack:///./jslib/common/src/importers/passkeepCsvImporter.ts","webpack:///./jslib/common/src/importers/passmanJsonImporter.ts","webpack:///./jslib/common/src/importers/passpackCsvImporter.ts","webpack:///./jslib/common/src/importers/passwordAgentCsvImporter.ts","webpack:///./jslib/common/src/importers/passwordBossJsonImporter.ts","webpack:///./jslib/common/src/importers/passwordDragonXmlImporter.ts","webpack:///./jslib/common/src/importers/passwordSafeXmlImporter.ts","webpack:///./jslib/common/src/importers/passwordWalletTxtImporter.ts","webpack:///./jslib/common/src/importers/rememBearCsvImporter.ts","webpack:///./jslib/common/src/importers/roboformCsvImporter.ts","webpack:///./jslib/common/src/importers/safeInCloudXmlImporter.ts","webpack:///./jslib/common/src/enums/index.ts","webpack:///./jslib/common/src/importers/saferpassCsvImport.ts","webpack:///./jslib/common/src/importers/secureSafeCsvImporter.ts","webpack:///./jslib/common/src/importers/splashIdCsvImporter.ts","webpack:///./jslib/common/src/importers/stickyPasswordXmlImporter.ts","webpack:///./jslib/common/src/importers/truekeyCsvImporter.ts","webpack:///./jslib/common/src/importers/upmCsvImporter.ts","webpack:///./jslib/common/src/importers/yotiCsvImporter.ts","webpack:///./jslib/common/src/importers/zohoVaultCsvImporter.ts","webpack:///./jslib/common/src/services/notifications.service.ts","webpack:///./jslib/common/src/models/response/notificationResponse.ts","webpack:///./jslib/common/src/services/passwordReprompt.service.ts","webpack:///./jslib/common/src/services/policy.service.ts","webpack:///./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///./jslib/common/src/services/search.service.ts","webpack:///./jslib/common/src/services/send.service.ts","webpack:///./jslib/common/src/models/domain/send.ts","webpack:///./jslib/common/src/services/webCryptoFunction.service.ts","webpack:///./jslib/common/src/models/domain/decryptParameters.ts","webpack:///./jslib/common/src/abstractions/fileUpload.service.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","I18nService","PlatformUtilsService","ApiService","UserService","i18nService","transform","id","p1","p2","p3","this","I18nPipe","Pipe","CryptoService","MessagingService","el","renderer","title","ngOnInit","nativeElement","hasAttribute","setAttribute","A11yTitleDirective","Directive","selector","appA11yTitle","Input","validationService","logService","ngOnChanges","changes","appApiAction","then","loading","response","e","ErrorResponse","constructor","captchaRequired","error","getSingleMessage","showError","ApiActionDirective","CipherService","getResponseProperty","propertyName","exactName","Error","undefined","otherCasePropertyName","charAt","toUpperCase","toLowerCase","BaseResponse","type","calloutStyle","icon","CalloutComponent","Component","templateUrl","clickable","nodeURL","init","Utils","inited","isNode","process","release","isBrowser","isNativeScript","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","fromB64ToArray","str","Uint8Array","Buffer","from","binaryString","atob","bytes","charCodeAt","fromUrlB64ToArray","fromUrlB64ToB64","fromHexToArray","parseInt","substr","fromUtf8ToArray","strUtf8","unescape","encodeURIComponent","arr","fromByteStringToArray","fromBufferToB64","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromBufferToUrlB64","fromB64toUrlB64","b64Str","replace","fromBufferToUtf8","encodedString","decodeURIComponent","escape","fromBufferToByteString","fromBufferToHex","Array","map","x","join","urlB64Str","output","fromUrlB64ToUtf8","fromB64ToUtf8","fromUtf8ToB64","utfStr","fromUtf8ToUrlB64","newGuid","Math","random","isGuid","RegExp","test","getHostname","uriString","url","getUrl","hostname","getHost","host","getDomain","trim","startsWith","httpUrl","indexOf","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","domain","getQueryParams","search","Map","split","forEach","pair","parts","set","getSortFunction","prop","a","b","collator","compare","localeCompare","isNullOrWhitespace","nameOf","assign","target","source","iterateEnum","obj","keys","filter","k","Number","isNaN","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","parse","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","PolicyService","PasswordGenerationService","organizationId","ConsoleLogService","newLineRegex","passwordFieldNames","usernameFieldNames","notesFieldNames","uriFieldNames","parseCsvOptions","encoding","skipEmptyLines","parseXml","doc","DOMParser","parseFromString","querySelector","parseCsv","header","options","parseOptions","splitNewLine","papa","errors","row","warning","message","parseSingleRowCsv","rowData","parsedRow","makeUriArray","uri","loginUri","LoginUriView","fixUri","u","substring","nameFromUrl","getValueOrDefault","defaultValue","getCardBrand","cardNum","re","setCardExpiration","cipher","expiration","month","year","card","expMonth","expYear","moveFoldersToCollections","folderRelationships","collectionRelationships","collections","folders","f","collection","CollectionView","querySelectorDirectChild","parentEl","query","els","querySelectorAllDirectChild","querySelectorAll","parentNode","initLoginCipher","CipherView","favorite","notes","fields","login","LoginView","CipherType","Login","cleanupCipher","processKvp","FieldType","Text","field","FieldView","processFolder","folderName","folderIndex","hasFolder","addFolder","FolderView","ciphers","convertToNoteIfNeeded","username","password","uris","SecureNote","secureNote","SecureNoteView","SecureNoteType","Generic","BaseImporter","success","ImportResult","StateService","onClick","$event","preventDefault","StopClickDirective","HostListener","StorageService","EnvironmentService","CollectionService","SyncService","condition","disableComplete","InputVerbatimDirective","appInputVerbatim","stopPropagation","StopPropDirective","AuthService","FolderService","indexedEntityId","SearchService","autofocus","focus","AutofocusDirective","appAutofocus","user","email","UserNamePipe","environmentUrlsKey","ConstantsService","disableGaKey","disableAddLoginNotificationKey","disableContextMenuItemKey","disableFaviconKey","disableBadgeCounterKey","disableAutoTotpCopyKey","enableAutoFillOnPageLoadKey","autoFillOnPageLoadDefaultKey","vaultTimeoutKey","vaultTimeoutActionKey","lastActiveKey","neverDomainsKey","installedVersionKey","localeKey","themeKey","collapsedGroupingsKey","autoConfirmFingerprints","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","defaultUriMatch","pinProtectedKey","protectedPin","clearClipboardKey","eventCollectionKey","ssoCodeVerifierKey","ssoStateKey","biometricUnlockKey","biometricText","biometricAwaitingAcceptance","biometricFingerprintValidated","disableChangedPasswordNotificationKey","EventService","componentFactoryResolver","messagingService","ngOnDestroy","show","parentContainer","fade","setComponentParameters","factory","resolveComponentFactory","componentRef","container","createComponent","instance","modals","jq","modal","on","onShow","emit","send","onShown","find","onClose","onClosed","clear","close","ModalComponent","template","PasswordVerificationRequest","buildDomainModel","dataObj","alreadyEncrypted","notEncList","objProp","EncString","buildDataModel","notEncStringList","encryptedString","decryptObj","viewModel","orgId","promises","self","theProp","Promise","resolve","mapProp","decrypt","val","all","LogService","VaultTimeoutService","AuditService","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","EncryptionType","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decryptedValue","containerService","bitwardenContainerService","cryptoService","getCryptoService","getOrgKey","decryptToUtf8","cardholderName","code","_brand","_number","_subTitle","repeat","number","brand","count","exp","formatYear","CardView","CryptoFunctionService","platformUtilsService","defaultErrorMessage","validationErrors","concat","getAllMessages","showToast","timeout","ValidationService","Injectable","TokenService","IconMap","environmentService","stateService","iconsUrl","getIconsUrl","imageEnabled","load","setLoginIcon","Card","Identity","hostnameUri","isWebsite","image","fallbackImage","IconComponent","ExportService","BroadcasterService","TwoFactorProviderType","PolicyType","TotpService","items","searchText","prop1","prop2","prop3","SearchPipe","StripeElementStyle","base","color","fontFamily","fontSize","fontSmoothing","invalid","StripeElementClasses","empty","apiService","showMethods","showOptions","method","PaymentMethodType","hideBank","hidePaypal","hideCredit","bank","routing_number","account_number","account_holder_name","account_holder_type","currency","country","paymentMethodType","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","src","async","onload","Stripe","isDev","WebConstants","stripeTestKey","stripeLiveKey","elements","setStripeElement","btScript","PayPal","BankAccount","Credit","head","appendChild","removeChild","setTimeout","body","btStylesheet","changeMethod","braintree","dropin","authorization","btProductionKey","paymentOptionPriority","paypal","flow","buttonStyle","label","size","shape","createErr","console","createPaymentToken","reject","requestPaymentMethod","payload","nonce","catch","err","postSetupPayment","clientSecret","handleCardSetup","setupIntent","status","payment_method","createToken","token","handleStripeCardPayment","successCallback","paymentIntent","style","classes","placeholder","mount","PaymentComponent","SendService","folderId","organizationUseTotp","edit","viewPassword","identity","IdentityView","attachments","passwordHistory","collectionIds","revisionDate","deletedDate","reprompt","CipherRepromptType","None","localData","subTitle","hasAttachments","passwordRevisionDate","route","onCountryChanged","EventEmitter","taxInfo","taxId","line1","line2","city","state","postalCode","includeTaxId","pristine","parent","params","subscribe","getOrganizationTaxInfo","getTaxInfo","getTaxRates","taxRates","localTaxRate","rate","getTaxInfoRequest","request","OrganizationTaxInfoUpdateRequest","TaxInfoUpdateRequest","submitTaxInfo","hasChanged","putOrganizationTaxInfo","putTaxInfo","changeCountry","TaxInfoComponent","Output","OrganizationUserStatusType","policyService","getDefaultDateFilters","Date","end","getFullYear","getMonth","getDate","setDate","start","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","getTime","toISOString","getEventInfo","ev","EventOptions","appInfo","getAppInfo","deviceType","getEventMessage","humanReadableMessage","appIcon","appName","msg","humanReadableMsg","EventType","User_LoggedIn","User_ChangedPassword","User_Updated2fa","User_Disabled2fa","User_Recovered2fa","User_FailedLogIn","User_FailedLogIn2fa","User_ClientExportedVault","User_UpdatedTempPassword","Cipher_Created","Cipher_Updated","Cipher_Deleted","Cipher_SoftDeleted","Cipher_Restored","Cipher_AttachmentCreated","Cipher_AttachmentDeleted","Cipher_Shared","Cipher_ClientViewed","Cipher_ClientToggledPasswordVisible","Cipher_ClientToggledHiddenFieldVisible","Cipher_ClientToggledCardCodeVisible","Cipher_ClientCopiedHiddenField","Cipher_ClientCopiedPassword","Cipher_ClientCopiedCardCode","Cipher_ClientAutofilled","Cipher_UpdatedCollections","Collection_Created","Collection_Updated","Collection_Deleted","Group_Created","Group_Updated","Group_Deleted","OrganizationUser_Invited","OrganizationUser_Confirmed","OrganizationUser_Updated","OrganizationUser_Removed","OrganizationUser_UpdatedGroups","OrganizationUser_UnlinkedSso","OrganizationUser_ResetPassword_Enroll","OrganizationUser_ResetPassword_Withdraw","OrganizationUser_AdminResetPassword","Organization_Updated","Organization_PurgedVault","Organization_VaultAccessed","Policy_Updated","ProviderUser_Invited","ProviderUser_Confirmed","ProviderUser_Updated","ProviderUser_Removed","ProviderOrganization_Created","ProviderOrganization_Added","ProviderOrganization_Removed","ProviderOrganization_VaultAccessed","formatCipherId","getShortId","cipherId","formatCollectionId","collectionId","formatGroupId","groupId","formatOrgUserId","organizationUserId","formatPolicyId","getAll","policies","policy","policyId","formatProviderUserId","providerUserId","formatProviderOrganizationId","providerOrganizationId","DeviceType","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","WindowsDesktop","MacOsDesktop","LinuxDesktop","ChromeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","VivaldiBrowser","EdgeBrowser","IEBrowser","UnknownBrowser","shortId","cipherInfo","makeAnchor","outerHTML","providerId","innerHTML","date","pad","getHours","getMinutes","num","norm","floor","abs","EventInfo","externalId","readOnly","hidePasswords","Collection","middleName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","address","addressPart2","totp","autofillOnPageLoad","hasUris","some","canLaunch","launchUri","CollectionData","userId","LoginData","SecureNoteData","CardData","IdentityData","FieldData","AttachmentData","ph","PasswordHistoryData","CipherData","SendType","accessBusinessPortal","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","PermissionsApi","showText","scoreWidth","score","text","PasswordStrengthComponent","toasterService","onAuthed","submit","masterPassword","popAsync","hashPassword","masterPasswordHash","formPromise","getTwoFactorRecover","Duo","OrganizationDuo","getTwoFactorOrganizationDuo","getTwoFactorDuo","Email","getTwoFactorEmail","WebAuthn","getTwoFactorWebAuthn","Authenticator","getTwoFactorAuthenticator","Yubikey","getTwoFactorYubiKey","TwoFactorVerifyComponent","Attachment","Field","Password","encKey","model","reduce","promise","attachment","decAttachment","decField","decPh","toCipherData","toLoginData","toSecureNoteData","toCardData","toIdentityData","toFieldData","toAttachmentData","toPasswordHistoryData","Cipher","PasswordRepromptService","tokenService","userService","syncService","selfHosted","providers","isSelfHost","getName","getEmail","getLastSync","fullSync","getAllProviders","lock","logOut","NavbarComponent","getApplicationVersion","version","FooterComponent","router","showFree","showCancel","product","ProductType","Free","plan","PlanType","onSuccess","onCanceled","ownedBusiness","premiumAccessAddon","additionalStorage","additionalSeats","productTypes","singleOrgPolicyBlock","freeTrial","getPlans","plans","Enterprise","Teams","changedOwnedBusiness","selectedPlan","isAnnual","validPlans","Custom","canBeUsedByBusiness","legacyYear","disabled","additionalStoragePriceMonthly","additionalStoragePricePerGb","seatPriceMonthly","seatPrice","additionalStorageTotal","hasAdditionalStorageOption","seatTotal","hasAdditionalSeatsOption","subTotal","basePrice","hasPremiumAccessOption","premiumAccessOptionPrice","taxComponent","taxRate","subtotal","taxCharges","changedProduct","selectablePlans","baseSeats","trialPeriodDays","TeamsAnnually","changedCountry","paymentComponent","cancel","userHasBlockingSingleOrgPolicy","doSubmit","createOrganization","makeShareKey","shareKey","encrypt","collectionCt","makeKeyPair","orgKeys","createSelfHosted","createCloudHosted","updateOrganization","refreshIdentityToken","navigate","SingleOrg","getAllOrganizations","orgs","orgsWithSingleOrgPolicy","enabled","org","OrganizationUserType","Owner","Admin","Invited","includes","OrganizationUpgradeRequest","businessName","additionalStorageGb","planType","billingAddressCountry","billingAddressPostalCode","getOrganization","hasPublicAndPrivateKeys","orgShareKey","OrganizationKeysRequest","postOrganizationUpgrade","paymentIntentClientSecret","orgKey","OrganizationCreateRequest","collectionName","billingEmail","tokenResult","paymentToken","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","getProviderKey","providerKey","organizationCreateRequest","postProviderCreateOrganization","postOrganization","fileEl","getElementById","files","fd","FormData","append","postOrganizationLicense","postOrganizationKeys","OrganizationPlansComponent","ViewChild","identityResponse","errorModel","responseErrorModel","captchaSiteKey","HCaptcha_SiteKey","statusCode","messages","item","prefix","lastSep","lastIndexOf","AppIdService","SettingsService","newField","showValue","lastKnownRevisionDate","LoginApi","LoginUriApi","SecureNoteApi","CardApi","IdentityApi","FieldApi","lastUsedDate","attachments2","fileName","attachmentRequest","AttachmentRequest","CipherRequest","addOrganizationToProvider","encryptedOrgKey","ProviderAddOrganizationRequest","postProviderAddOrganization","detachOrganizastion","deleteProviderOrganization","ProviderService","ProviderUserType","AttachmentResponse","h","PasswordHistoryResponse","CipherResponse","activatedRoute","titleService","previousUrl","currentUrl","events","event","NavigationEnd","titleId","rawTitle","child","firstChild","snapshot","newTitle","setTitle","getPreviousUrl","setPreviousUrl","RouterService","KdfType","macKey","keyB64","encKeyB64","macKeyB64","SymmetricCryptoKey","onUpdated","twoFactorProviderType","authed","auth","authResponse","enable","enableFunction","disable","showDialog","TwoFactorProviderRequest","putTwoFactorOrganizationDisable","putTwoFactorDisable","TwoFactorBaseComponent","requiresPaid","hasLoaded","setCiphers","selectCipher","childComponent","cipherAddEditModalRef","organization","AddEditComponent","onSavedCipher","onDeletedCipher","onRestoredCipher","checkAccess","useTotp","canAccessPremium","accessPremium","CipherReportComponent","ViewContainerRef","read","static","CanLaunchWhitelist","_uri","_domain","_hostname","_host","_canLaunch","UriMatchType","RegularExpression","cipherService","folderService","auditService","collectionService","totpService","passwordGenerationService","eventService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","getTimeInterval","totpTick","totpInterval","setInterval","toggleFavorite","launch","copy","typeI18nKey","aType","copyToClipboard","editMode","collect","generatePassword","confirmed","getOptions","premiumRequired","upgradeOrganization","viewHistory","clearInterval","getCode","totpCode","half","totpCodeFormatted","allowOwnershipAssignment","cloneMode","ownershipOptions","allowPersonal","intervalSeconds","epoch","round","mod","totpSec","totpDash","totpLow","ImportService","searchService","passwordRepromptService","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","pagedCiphers","pageSize","cipherType","userHasPremiumAccess","didScroll","pagedCiphersCount","refreshing","selectAll","loadMore","pagedLength","pagedSize","refresh","reload","deleted","isPaging","searching","isSearching","resetPaging","doSearch","indexedCiphers","searchCiphers","deletedFilter","repromptCipher","share","clone","delete","actionPromise","permanent","isDeleted","deleteCipher","restore","restoreWithServer","protectedFields","displayTotpCopyButton","select","selectCount","checkCipher","checked","getSelected","getSelectedIds","hasTotp","deleteWithServer","softDeleteWithServer","showFixOldAttachments","hasOldAttachments","showPasswordPrompt","CiphersComponent","Permissions","publicKey","encryptedPrivateKey","KeysRequest","SelectionReadOnlyResponse","organizations","providerOrganizations","emailVerified","masterPasswordHint","premium","culture","twoFactorEnabled","privateKey","securityStamp","forcePasswordReset","ProfileOrganizationResponse","ProfileProviderResponse","ProfileProviderOrganizationResponse","ProfileResponse","requiredParameters","failedShortMessage","failedMessage","fired","queryParams","qParams","remove","errorMessage","isAuthenticated","authedHandler","save","getRedirectRoute","unauthedHandler","toast","urlTree","parseUrl","BaseAcceptComponent","userNamePipe","showUser","loaded","orgUsersUserIdMap","orgUsersIdMap","defaultDates","getOrganizationUsers","loadEvents","clearExisting","refreshPromise","morePromise","dates","entity","getEventsProviderUser","entityId","continuationToken","getEventsOrganizationUser","getEventsCipher","actingUserId","eventInfo","has","userName","userEmail","ip","ipAddress","EntityEventsComponent","HashPurpose","PolicyData","getMasterPasswordPolicyOptions","enforcedPolicyOptions","getPasswordScoreAlertDisplay","minComplexity","strongPassword","setupSubmitActions","kdf","getKdf","kdfIterations","getKdfIterations","makeKey","getEncKey","makeEncKey","remakeEncKey","performSubmitActions","masterPasswordRetype","strengthResult","passwordStrength","getPasswordStrengthUserInput","evaluateMasterPassword","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","masterPasswordScore","userInput","atPosition","ChangePasswordComponent","TwoFactorProviders","description","priority","sort","appIdService","vaultTimeoutService","setCryptoKeys","selectedTwoFactorProviderType","logIn","captchaToken","makePreloginKey","hashedPassword","LocalAuthorization","localHashedPassword","logInHelper","logInSso","codeVerifier","redirectUrl","logInApiKey","clientId","logInTwoFactor","twoFactorProvider","twoFactorToken","remember","localMasterPasswordHash","ssoRedirectUrl","logInComplete","logInSsoComplete","logInApiKeyComplete","callback","getSupportedTwoFactorProviders","twoFactorProvidersData","supportsDuo","supportsWebAuthn","getDefaultTwoFactorProvider","webAuthnSupported","providerType","providerPriority","provider","postPrelogin","PreloginRequest","preloginResponse","authingWithApiKey","authingWithSso","authingWithPassword","getTwoFactorToken","storedTwoFactorToken","getAppId","appId","deviceRequest","DeviceRequest","emailPassword","codeCodeVerifier","clientIdClientSecret","TokenRequest","Remember","postIdentityToken","clearState","AuthResult","siteKey","twoFactor","twoFactorProviders2","twoFactorResponse","twoFactorProviders","tokenResponse","resetMasterPassword","setTwoFactorToken","setTokens","accessToken","refreshToken","setInformation","getUserId","setKey","setKeyHash","setEncKey","keyPair","postAccountKeys","setEncPrivateKey","biometricLocked","SelectionReadOnlyRequest","LoginUri","view","toLoginUriData","LoginUriData","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","TrueFalseValueDirective","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","storageService","onSearchTextChanged","searchPlaceholder","searchTextChanged","GroupingsComponent","selectType","usePolicies","useGroups","useDirectory","useEvents","use2fa","useApi","useBusinessPortal","useSso","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","ssoBound","identifier","permissions","resetPasswordEnrolled","providerName","isProviderUser","Confirmed","Manager","isAdmin","isManager","Organization","sizeName","SendFileView","hidden","SendTextView","vault","ResetPassword","allowEnrollmentChanges","autoEnrollEnabled","showEnrolledStatus","unlinkSso","deleteSsoUser","leave","postLeaveOrganization","toggleResetPasswordEnrollment","keyString","toastStringRef","getOrganizationKeys","rsaEncrypt","encryptedKey","OrganizationUserResetPasswordEnrollmentRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","OrganizationsComponent","canActivate","routerState","isLocked","promptBiometric","AuthGuardService","CollectionResponse","CollectionDetailsResponse","groups","g","CollectionGroupDetailsResponse","globalEquivalentDomains","equivalentDomains","GlobalDomainResponse","DomainsResponse","FolderResponse","accessId","maxAccessCount","accessCount","expirationDate","deletionDate","hideEmail","SendTextApi","file","SendFileApi","SendResponse","ProviderUserStatusType","ids","ProviderUserBulkRequest","BulkStatusComponent","publicKeys","fingerprints","statuses","done","excludedUsers","users","isAccepted","filteredUsers","getPublicKeys","entry","getFingerprint","fingerprint","getCryptoKey","userIdsWithKeys","postConfirmRequest","Accepted","OrganizationUserBulkRequest","postOrganizationUsersPublicKey","OrganizationUserBulkConfirmRequest","postOrganizationUserBulkConfirm","BulkConfirmComponent","deleteUsers","deleteManyOrganizationUsers","BulkRemoveComponent","classList","add","FrontendLayoutComponent","ProvidersComponent","NotificationsService","Policy","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","getGroupUsers","getCollectionUsers","accessAll","check","selectedChanged","filterSelected","selections","putGroupUsers","putCollectionUsers","EntityUsersComponent","entityName","postKey","apiKey","keyType","ApiKeyComponent","postPurgeCiphers","PurgeVaultComponent","firstLoaded","showAdjustPayment","showAddCredit","transactionType","TransactionType","getOrganizationBilling","billing","getUserBilling","verifyBank","VerifyBankRequest","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","postOrganizationVerifyBank","addCredit","paymentSourceInApp","closeAddCredit","changePayment","closePayment","balance","paymentSource","AppleInApp","GoogleInApp","invoices","transactions","UserBillingComponent","onAdded","ppButtonFormAction","buttonActionProduction","ppButtonBusinessId","businessIdProduction","ppLoading","buttonActionSandbox","businessIdSandbox","creditAmount","ppButtonCustomField","subject","returnUrl","location","ppButtonFormRef","BitPay","req","BitPayInvoiceRequest","credit","amount","creditAmountNumber","postBitPayInvoice","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","AddCreditComponent","ElementRef","onAdjusted","PaymentRequest","taxInfoComponent","postAccountPayment","postOrganizationPayment","AdjustPaymentComponent","currentType","updatePromise","postAccountLicense","postOrganizationLicenseUpdate","UpdateLicenseComponent","storageGbPrice","interval","storageAdjustment","StorageRequest","storageGbAdjustment","action","postAccountStorage","postOrganizationStorage","relativeTo","AdjustStorageComponent","processResponse","UpdateTwoFactorDuoRequest","integrationKey","ikey","secretKey","skey","putTwoFactorOrganizationDuo","putTwoFactorDuo","TwoFactorDuoComponent","showPolicyWarning","filterProvider","getTwoFactorProviders","evaluatePolicies","manage","openModal","authenticatorModalRef","TwoFactorAuthenticatorComponent","updateStatus","yubikeyModalRef","TwoFactorYubiKeyComponent","duoModalRef","emailModalRef","TwoFactorEmailComponent","webAuthnModalRef","TwoFactorWebAuthnComponent","recoveryCode","recoveryModalRef","TwoFactorRecoveryComponent","ref","TwoFactorAuthentication","TwoFactorSetupComponent","exportService","saved","ExportComponent","exposedPasswordMap","getAllCiphers","allCiphers","exposedPasswordCiphers","passwordLeaked","exposedCount","getAllDecrypted","canManageCipher","ExposedPasswordsReportComponent","originalCipher","canManageAllCollections","loadCollections","loadCipher","getCipherAdmin","encryptCipher","saveCipher","putCipherAdmin","CipherCreateRequest","postCipherAdmin","deleteCipherAdmin","putDeleteCipherAdmin","AttachmentView","decryptToBytes","decValue","PasswordHistoryView","importService","format","successNavigate","setImportOptions","importOptions","importer","getImporter","fileContents","getFileContents","content","import","getFormatInstructionTitle","results","featuredImportOptions","regularImportOptions","fire","heightAuto","buttonsStyling","iconHtml","input","inputValue","inputAttributes","titleText","showConfirmButton","confirmButtonText","onOpen","popupEl","scrollTo","reader","FileReader","readAsText","evt","pre","textContent","onerror","ImportComponent","services","cipherDocs","load2fa","fetch","Request","json","categoryName","responseJson","serviceName","category","service","InactiveTwoFactorReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","ReusedPasswordsReportComponent","unsecuredCiphers","UnsecuredWebsitesReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","cacheKey","scoreKey","WeakPasswordsReportComponent","reupload","reuploadCipherAttachment","AttachmentsComponent","onEventsClicked","accessEvents","getAllFromApiForOrganization","indexCiphers","applyFilter","CollectionsComponent","getCollections","collectionDomains","decryptMany","unassignedCollection","getAllNested","nestedCollections","collapse","grouping","isCollapsed","bulkDelete","promptPassword","selectedIds","ciphersComponent","bulkDeleteModalRef","BulkDeleteComponent","cipherIds","onDeleted","bulkRestore","bulkRestoreModalRef","BulkRestoreComponent","onRestored","bulkShare","selectedCiphers","bulkShareModalRef","BulkShareComponent","onShared","bulkMove","bulkMoveModalRef","BulkMoveComponent","onMoved","notProtected","BulkActionsComponent","SendFile","SendText","CipherWithIdRequest","folder","FolderRequest","FolderData","Folder","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","SelectCopyDirective","passwordArray","colorizedPassword","character","isSpecial","ColorPasswordPipe","webpackEmptyAsyncContext","getProvider","isProviderAdmin","ProviderGuardService","AccessEventLogs","canAccessEventLogs","ManageProvider","ManageUsers","canManageUsers","ProviderTypeGuardService","showManageTab","showSettingsTab","ProvidersLayoutComponent","DisallowedPlanTypes","FamiliesAnnually2019","FamiliesAnnually","providerService","manageOrganizations","showAddExisting","pagedClientsCount","queryParamsSub","unsubscribe","getProviderClients","clients","ProviderAdmin","candidateOrgs","allowedOrgsIds","addableOrganizations","isSearchable","pagedClients","addExistingOrganization","addModalRef","AddOrganizationComponent","onAddedOrganization","organizationName","ClientsComponent","CreateOrganizationComponent","orgPlansComponent","btSandboxKey","DeviceResponse","IdentityTokenResponse","IdentityTwoFactorResponse","KeysResponse","ListResponse","SyncResponse","domains","excluded","access_token","expiresIn","expires_in","refresh_token","tokenType","token_type","dr","sends","profile","PolicyResponse","ProviderUserAcceptRequest","postProviderUserAccept","AcceptProviderComponent","exportFileName","providerUsersUserIdMap","providerUsersIdMap","getProviderUsers","requestEvents","startDate","endDate","getEventsProvider","getUserName","EventsComponent","exportEvents","BaseEventsComponent","dirtyDates","appApiPromiseUnfulfilled","parseDates","exportPromise","export","loadAndParseEvents","EventView","getEventExport","getFileName","saveFile","ManageComponent","searchPipe","userType","userStatusType","viewEvents","getUsers","deleteUser","deleteProviderUser","reinviteUser","postProviderUserReinvite","confirmUser","ProviderUserConfirmRequest","postProviderUserConfirm","addEditModalRef","UserAddEditComponent","onSavedUser","onDeletedUser","removeUser","eventsModalRef","bulkRemove","bulkRemoveModalRef","getCheckedUsers","bulkReinvite","postManyProviderUserReinvite","showBulkStatus","bulkConfirm","bulkConfirmModalRef","successfullMessage","bulkStatusModalRef","PeopleComponent","invite","BasePeopleComponent","groupsModalRef","statusMap","pagedUsers","pagedUsersCount","confirmedCount","acceptedCount","checkUser","reinvite","confirm","mapIndex","updateUser","getUserPublicKey","publicKeyResponse","autoConfirm","confirmModalRef","UserConfirmComponent","onConfirmedUser","info","index","dontAskAgain","postProviderUsersPublicKey","ProviderUserBulkConfirmRequest","postProviderUserBulkConfirm","deleteManyProviderUsers","ServiceUser","showCustom","access","getProviderUser","ProviderUserUpdateRequest","putProviderUser","ProviderUserInviteRequest","emails","postProviderUserInvite","deletePromise","SettingsComponent","SetupProviderComponent","ProviderSetupRequest","postProviderSetup","SetupComponent","ProviderUpdateRequest","putProvider","AccountComponent","registerLocaleData","OssModule","DatePipe","CommonModule","FormsModule","InfiniteScrollModule","DragDropModule","ToasterModule","forChild","ReactiveFormsModule","RouterModule","AcceptEmergencyComponent","AccessComponent","AcceptOrganizationComponent","SetPasswordComponent","AdjustSeatsComponent","AppComponent","AvatarComponent","BlurClickDirective","BoxRowDirective","BreachReportComponent","ChangeEmailComponent","ChangeKdfComponent","ChangePlanComponent","DeauthorizeSessionsComponent","DeleteAccountComponent","DeleteOrganizationComponent","DomainRulesComponent","DownloadLicenseComponent","EmergencyAccessAddEditComponent","EmergencyAccessAttachmentsComponent","EmergencyAccessComponent","EmergencyAccessConfirmComponent","EmergencyAccessTakeoverComponent","EmergencyAccessViewComponent","EmergencyAddEditComponent","FallbackSrcDirective","FolderAddEditComponent","HintComponent","LinkSsoComponent","LockComponent","LoginComponent","OptionsComponent","OrganizationBillingComponent","OrganizationSubscriptionComponent","OrganizationLayoutComponent","PasswordGeneratorComponent","PasswordGeneratorHistoryComponent","PremiumComponent","ProfileComponent","RecoverDeleteComponent","RecoverTwoFactorComponent","RegisterComponent","SearchCiphersPipe","SendComponent","ShareComponent","SsoComponent","ToolsComponent","TwoFactorComponent","TwoFactorOptionsComponent","UpdateKeyComponent","UpdateTempPasswordComponent","UserLayoutComponent","UserSubscriptionComponent","VaultComponent","VerifyEmailComponent","VerifyEmailTokenComponent","VerifyRecoverDeleteComponent","NgModule","imports","declarations","bootstrap","BroadcasterSubscriptionId","broadcasterService","settingsService","authService","ngZone","sanitizer","notificationsService","routerService","toasterConfig","ToasterConfig","showCloseButton","mouseoverTimerStop","animation","limit","lastActivity","idleTimer","isIdle","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","run","command","updateConnection","expired","setFullWidth","uploadEvents","clearEvents","setLastSync","clearToken","clearKeys","purge","clearIndex","now","idleStateChanged","sanitize","SecurityContext","HTML","bodyOutputType","BodyOutputType","TrustedHtml","trustedHtml","disconnectFromInactivity","reconnectFromActivity","businessUrl","getEnterpriseUrl","goToBusinessPortal","businessTokenPromise","getEnterprisePortalSignInToken","showToolsTab","isOwner","canManageAssignedCollections","canManageGroups","canManagePolicies","canAccessImportExport","canAccessReports","canAccessBusinessPortal","EmergencyAccessAcceptRequest","postEmergencyAccessAccept","OrganizationUserAcceptRequest","performResetPasswordAutoEnroll","postOrganizationUserAccept","resetRequest","orgName","policyList","getPoliciesByToken","mapPoliciesFromToken","getResetPasswordPolicyOptions","onSuccessfulSubmit","successRoute","togglePassword","cryptoFunctionService","showResetPasswordAutoEnrollWarning","onSuccessfulLoginNavigate","goAfterLogIn","loginRedirect","setupCaptcha","webVaultUrl","getWebVaultUrl","captcha","CaptchaIFrame","showCaptcha","handleCaptchaRequired","CaptchaProtectedComponent","path","iframeId","errorCallback","infoCallback","parseFunction","parseMessage","connectorLink","stop","sendMessage","iframe","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","createParams","URLSearchParams","JSON","stringify","v","initComponent","addEventListener","validMessage","origin","IFrameComponent","DeleteRecoverRequest","postAccountRecoverDelete","TwoFactorRecoveryRequest","postTwoFactorRecover","showCreateOrgMessage","layout","referenceData","ReferenceEventRequest","reference","cookie","pop","policiesData","IdentifierStorageKey","redirectUri","storedIdentifier","loggingIn","twoFactorRoute","changePasswordRoute","checkState","getOrgIdentiferFromState","codeChallenge","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","buildAuthorizeUrl","authorizeUrl","sameWindow","preValidateSso","passwordOptions","uppercase","lowercase","numbers","special","hash","codeVerifierHash","getIdentityUrl","getSsoUserIdentifier","userIdentifier","orgIdFromState","onSuccessfulLoginTwoFactorNavigate","sso","onSuccessfulLoginChangePasswordNavigate","disableFavicon","onSuccessfulLogin","stateSplit","checkStateSplit","recover","anotherMethod","twoFactorOptionsModal","onProviderSelected","selectedProviderType","onRecoverSelected","TwoFactorEmailRequest","OrganizationUserResetPasswordRequest","postAccountVerifyEmailToken","VerifyEmailRequest","VerifyDeleteRecoverRequest","postAccountRecoverDeleteToken","onSavedCollection","onDeletedCollection","accessGroups","getGroups","groupsResponse","getCollectionDetails","group","CollectionRequest","putCollection","postCollection","deleteCollection","CollectionAddEditComponent","pagedCollectionsCount","getUserCollections","pagedCollections","removeCollection","usersModalRef","getEventsOrganization","onSavedGroup","onDeletedGroup","getGroupDetails","GroupRequest","putGroup","postGroup","deleteGroup","GroupAddEditComponent","pagedGroupsCount","pagedGroups","removeGroup","GroupsComponent","accessPolicies","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","canManageUsersPassword","deleteOrganizationUser","postOrganizationUserReinvite","OrganizationUserConfirmRequest","postOrganizationUserConfirm","allowResetPassword","orgUser","callingUserHasPermission","UserGroupsComponent","postManyOrganizationUserReinvite","resetPassword","resetPasswordModalRef","ResetPasswordComponent","onPasswordReset","newPassword","showPassword","getOrganizationUserResetPasswordDetails","kdfType","orgSymKey","decPrivateKey","rsaDecrypt","userEncKey","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putOrganizationUserResetPassword","newPasswordStrengthTimeout","User","getOrganizationUser","setRequestPermissions","clearPermissions","handleDependentPermissions","OrganizationUserUpdateRequest","putOrganizationUser","OrganizationUserInviteRequest","postOrganizationUserInvite","getOrganizationUserGroups","userGroups","ug","OrganizationUserUpdateGroupsRequest","groupIds","putOrganizationUserGroups","userCanAccessBusinessPortal","policiesEnabledMap","display","MasterPassword","PasswordGenerator","RequireSso","PersonalOwnership","DisableSend","SendOptions","policyIdFromEvents","orgPolicies","orgPolicy","enterpriseUrl","getPolicies","op","editModalRef","PolicyEditComponent","onSavedPolicy","goToEnterprisePortal","enterpriseTokenPromise","PoliciesComponent","policyType","masterPassMinComplexity","passwordScores","defaultTypes","getPolicy","passGenDefaultType","defaultType","passGenMinLength","minLength","passGenUseUpper","useUpper","passGenUseLower","useLower","passGenUseNumbers","useNumbers","passGenUseSpecial","useSpecial","passGenMinNumbers","minNumbers","passGenMinSpecial","minSpecial","passGenMinNumberWords","minNumberWords","passGenCapitalize","capitalize","passGenIncludeNumber","includeNumber","masterPassMinLength","masterPassRequireUpper","requireUpper","masterPassRequireLower","requireLower","masterPassRequireNumbers","requireNumbers","masterPassRequireSpecial","requireSpecial","sendDisableHideEmail","disableHideEmail","resetPasswordAutoEnroll","PolicyRequest","putPolicy","canUseApi","OrganizationUpdateRequest","putOrganization","taxFormPromise","deleteOrganization","deleteModalRef","purgeVault","purgeModalRef","viewApiKey","apiKeyModalRef","postOrganizationApiKey","scope","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKey","rotateApiKeyModalRef","isRotation","postOrganizationRotateApiKey","seatAdjustment","SeatRequest","postOrganizationSeat","onChanged","defaultUpgradePlan","defaultUpgradeProduct","Families","onDownloaded","installationId","getOrganizationLicense","license","licenseString","adjustSeatsAdd","showAdjustSeats","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showDownloadLicense","showChangePlan","userOrg","getOrganizationSubscription","sub","reinstate","reinstatePromise","postOrganizationReinstate","cancelPromise","postOrganizationCancel","changePlan","subscription","closeChangePlan","changed","downloadLicense","closeDownloadLicense","updateLicense","closeUpdateLicense","updated","adjustSeats","closeSeats","adjustStorage","closeStorage","cancelled","cancelAtEndDate","upcomingInvoice","storageGb","storagePercentage","access2fa","duoComp","getTwoFactorOrganizationProviders","qrScript","UpdateTwoFactorAuthenticatorRequest","putTwoFactorAuthenticator","QRious","element","sendEmail","emailPromise","postTwoFactorEmailSetup","sentEmail","UpdateTwoFactorEmailRequest","putTwoFactorEmail","print","w","open","write","onafterprint","formatString","keyIdAvailable","keysConfiguredCount","webAuthnResponse","UpdateTwoFactorWebAuthnRequest","deviceResponse","putTwoFactorWebAuthn","removePromise","UpdateTwoFactorWebAuthnDeleteRequest","deleteTwoFactorWebAuthn","readKey","challengePromise","getTwoFactorWebAuthnChallenge","challenge","readDevice","webAuthnChallenge","log","resetWebAuthn","credentials","webAuthnListening","webAuthnError","listening","configured","migrated","nfc","UpdateTwoFactorYubioOtpRequest","key1","key2","key3","key4","key5","putTwoFactorYubiKey","disablePromise","existingKey","padRight","max","getExportData","getOrganizationExport","collectEvent","manageableCiphers","onError","appFallbackSrc","saveCipherAttachment","saveAttachmentWithServer","cipherDomain","deleteCipherAttachment","attachmentId","deleteCipherAttachmentAdmin","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","download","downloading","canAccessAttachments","getAttachmentData","attachmentDownloadResponse","cache","arrayBuffer","buf","decryptFromBytes","decBuf","hasEncKey","admin","saveAttachmentRawWithServer","foundAttachment","a2","deleteAttachmentWithServer","Window","allowSelectNone","loadCipherCollections","saveCollections","CipherCollectionsRequest","putCipherCollectionsAdmin","changeDetectorRef","trashCleanupWarning","groupingsComponent","successfully","detectChanges","selectedAll","selectedTrash","filterDeleted","selectedType","filterCipherType","selectedCollectionId","filterCollection","clearGroupingFilters","clearFilters","go","filterSearchText","editCipherAttachments","attachmentsModalRef","madeAttachmentChanges","editCipherCollections","collectionsModalRef","onSavedCollections","addCipher","component","editCipher","cloneCipher","replaceUrl","deleteCiphers","deleteCiphersAdmin","deleteManyWithServer","softDeleteManyWithServer","deleteRequest","CipherBulkDeleteRequest","deleteManyCiphersAdmin","putDeleteManyCiphersAdmin","moveManyWithServer","restoreManyWithServer","nonShareableCount","shareableCiphers","writeableCollections","allCollections","filterCollections","checkedCollectionIds","shareManyWithServer","sendType","passwordRequired","unavailable","maskedText","creatorIdentifier","sendId","decKey","getSendFileDownloadData","accessRequest","downloadData","toggleText","keyArray","SendAccessRequest","pbkdf2","passwordHash","sendResponse","postSendAccess","sendAccess","SendAccess","makeSendKey","datePipe","sendService","copyLinkToClipboard","link","SendView","EffluxDatesComponent","ControlContainer","NgForm","viewProviders","addSend","disableSend","editSend","sendAddEditModalRef","onSavedSend","onDeletedSend","deauthorizeSessions","deauthModalRef","deleteAccount","viewUserApiKey","viewUserApiKeyModalRef","postUserApiKey","rotateUserApiKey","rotateUserApiKeyModalRef","postUserRotateApiKey","postSecurityStamp","getProfile","UpdateProfileRequest","putProfile","tokenSent","newEmail","EmailTokenRequest","postEmailToken","EmailRequest","postEmail","reset","rotateEncKey","rotateEncKeyClicked","currentMasterPassword","PasswordRequest","postPassword","updateKey","getPrivateKey","encPrivateKey","UpdateKeyRequest","FolderWithIdRequest","cryptoKey","SendWithIdRequest","postAccountKey","updateEmergencyAccesses","updateAllResetPasswordKeys","getEmergencyAccessTrusted","emergencyAccess","allowedStatuses","EmergencyAccessStatusType","RecoveryInitiated","RecoveryApproved","filteredAccesses","details","granteeId","updateRequest","EmergencyAccessUpdateRequest","waitTimeDays","keyEncrypted","putEmergencyAccess","fileLength","File","SendRequest","PBKDF2_SHA256","kdfOptions","KdfRequest","postAccountKdf","EnterpriseAnnually","custom","getSettingsDomains","toggleExcluded","globalDomain","customize","UpdateDomainsRequest","excludedGlobalEquivalentDomains","d2","putSettingsDomains","indexTrackBy","onSaved","EmergencyAccessType","View","emergencyAccessType","waitTimes","getEmergencyAccess","waitTime","EmergencyAccessInviteRequest","postEmergencyAccessInvite","onConfirmed","onDone","getEmergencyGrantorPolicies","policyResponse","postEmergencyAccessTakeover","takeoverResponse","oldKeyBuffer","oldEncKey","EmergencyAccessPasswordRequest","postEmergencyAccessPassword","postEmergencyAccessView","viewAttachments","decCiphers","cipherResponse","cipherData","getLocaleSortingFunction","EncryptedObject","EnvironmentUrls","GeneratedPasswordHistory","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","getEmergencyAccessGranted","grantedContacts","contact","postEmergencyAccessReinvite","doConfirmation","deleteEmergencyAccess","EmergencyAccessGranteeDetailsResponse","removeGrantee","removeGrantor","requestAccess","postEmergencyAccessInitiate","approve","postEmergencyAccessApprove","postEmergencyAccessReject","takeover","takeoverModalRef","EmergencyAccessConfirmRequest","postEmergencyAccessConfirm","creationDate","grantorId","EmergencyAccessGrantorDetailsResponse","EmergencyAccessTakeoverResponse","EmergencyAccessViewResponse","ngAfterContentInit","vaultTimeout","vaultTimeoutAction","vaultTimeouts","localeOptions","supportedTranslationLocales","locale","localeNames","disableIcons","enableGravatars","enableFullWidth","startingLocale","setVaultTimeoutOptions","vaultTimeoutActionChanged","newValue","premiumPrice","getPremium","getEmailVerified","finalizePremium","postPremium","paymentResponse","makeRequest","getKey","getUserSubscription","usingInAppPurchase","postReinstatePremium","postCancelPremium","postAccountVerifyEmail","breachedAccounts","checkedUsername","history","historyModalRef","lengthChanged","minNumberChanged","minSpecialChanged","regenerate","favorites","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","showProviders","getForcePasswordReset","organizationsComponent","selectedFavorites","filterFavorites","selectedFolder","selectedFolderId","filterFolder","shareCipher","shareModalRef","onSharedCipher","folderAddEditModalRef","onSavedFolder","loadFolders","editFolder","onDeletedFolder","updateKeyModalRef","OrganizationGuardService","AccessBusinessPortal","AccessImportExport","AccessReports","ManageAllCollections","ManageAssignedCollections","ManageGroups","ManageOrganization","ManagePolicies","ManageUsersPassword","OrganizationTypeGuardService","homepage","LockGuardService","UnauthGuardService","logoutCallback","customUserAgent","isWebClient","isDesktopClient","device","getDevice","headers","Headers","alterIdentityTokenHeaders","qsStringify","toIdentityToken","identityClientId","getCredentials","isJsonResponse","TwoFactorProviders2","clearTwoFactorToken","IdentityCaptchaResponse","doAuthRefresh","BillingResponse","SubscriptionResponse","TaxInfoResponse","PreloginResponse","setPassword","getAccountRevisionDate","postPasswordHint","postRegister","PaymentResponse","postIapCheck","postAccountVerifyPassword","ApiKeyResponse","putUpdateTempPassword","getFolder","postFolder","putFolder","deleteFolder","getSend","apiUrl","addSendIdHeader","SendAccessResponse","SendFileDownloadDataResponse","getSends","postSend","postFileTypeSend","SendFileUploadDataResponse","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCiphersOrganization","postCipher","postCipherCreate","putCipher","deleteManyCiphers","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteManyCiphers","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","AttachmentUploadDataResponse","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","deleteCollectionUser","GroupDetailsResponse","GroupResponse","deleteGroupUser","OrganizationUserDetailsResponse","OrganizationUserUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","OrganizationUserBulkResponse","OrganizationUserBulkPublicKeyResponse","PlanResponse","postImportDirectory","postPublicImportDirectory","TaxRateResponse","getSync","TwoFactorProviderResponse","TwoFactorAuthenticatorResponse","TwoFactorEmailResponse","TwoFactorDuoResponse","TwoFactorYubiKeyResponse","TwoFactorWebAuthnResponse","ChallengeResponse","TwoFactorRecoverResponse","rawId","extensions","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","postTwoFactorEmail","OrganizationResponse","OrganizationSubscriptionResponse","OrganizationKeysResponse","ProviderResponse","ProviderUserUserDetailsResponse","ProviderUserResponse","ProviderUserBulkResponse","ProviderUserBulkPublicKeyResponse","ProviderOrganizationOrganizationDetailsResponse","ProviderOrganizationResponse","getEvents","addEventParameters","EventResponse","postEventsCollect","getActiveBearerToken","authHeader","getEventsUrl","UserKeyResponse","getHibpBreach","BreachAccountResponse","getToken","tokenNeedsRefresh","nativeFetch","handleError","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","apiKeyRefresh","decodedToken","decodeToken","grant_type","client_id","hasResponse","alterHeaders","getApiUrl","requestInit","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","nameLocalizationKey","descriptionLocalizationKey","baseStorageGb","maxUsers","maxAdditionalSeats","maxAdditionalStorage","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","storageName","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","BillingSubscriptionItemResponse","quantity","KeyResponse","attestation","authenticatorSelection","excludeCredentials","pubKeyCredParams","rp","makeAndGetAppId","getAnonymousAppId","existingId","guid","hashBytes","hashStart","hashEnding","leakedHashes","throttle","Keys","DomainMatchBlacklist","Set","fileUploadService","sortedCiphersCache","SortedCiphersCache","sortCiphersByLastUsed","_decryptedCipherCache","clearCache","decryptedCipherCache","existingCipher","hasFields","existingHiddenFields","Hidden","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encryptField","encField","fieldModel","Boolean","phModels","encPhs","encryptPasswordHistory","encPh","phModel","hasKey","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","matches","eqDomain","matchingDomains","Domain","domainUrlHost","Host","urlHost","Exact","StartsWith","Never","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedIndex","updateLastUsedDate","ciphersLocalData","cached","updateLastLaunchedDate","lastLaunched","saveNeverDomain","saveWithServer","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","CipherShareRequest","encCiphers","CipherBulkShareRequest","unencryptedFile","readAsArrayBuffer","cData","filename","encFileName","dataEncKey","encryptToBytes","encData","fileSize","adminRequest","uploadDataResponse","cipherMiniResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","blob","Blob","filepath","contentType","saveCollectionsWithServer","CipherBulkMoveRequest","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","clearDeletedDate","CipherBulkRestoreRequest","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","isCached","addCiphers","getLastLaunched","getLastUsed","getNext","sequentialize","propertyKey","descriptor","originalMethod","caches","getCache","argsCacheKey","args","onFinally","decryptedCollectionCache","decCollections","nodes","collectionCopy","ServiceUtils","nestedTraverse","getNested","getTreeNodeObject","nodeTree","partIndex","delimiter","partName","node","TreeNode","children","newPartName","attachToWindow","attachToGlobal","ContainerService","encOrgKeys","encProviderKeys","keyHash","secureStorageService","platformUtilService","storeKey","setOrgKeys","providerOrgs","providerOrg","setProviderKeys","providerKeys","keySuffix","getKeyFromStorage","symmetricKey","retrieveKeyFromStorage","validateKey","getKeyHash","compareAndUpdateKeyHash","storedKeyHash","localKeyHash","ServerAuthorization","serverKeyHash","encKeyCipher","decEncKey","stretchKey","getPublicKey","rsaExtractPublicKey","keyFingerprint","hkdfExpand","userFingerprint","hashPhrase","getOrgKeys","getProviderKeys","hasKeyInMemory","hasKeyStored","clearKey","clearSecretStorage","legacyEtmKey","clearStoredKey","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","toggleKey","salt","makeKeyFromPin","pin","protectedKeyCs","makePinKey","pinKey","randomBytes","rsaGenerateKeyPair","publicB64","privateEnc","keyMaterial","hkdf","sendKey","hashPurpose","iterations","getKeyForEncryption","theKey","buildEncKey","plainValue","plainBuf","aesEncrypt","encObj","encValue","macLen","encBytes","EncArrayBuffer","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","aesDecryptToBytes","decipher","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","biometricUnlock","supportsSecureStorage","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","hmacFast","computedMac","compareFast","aesDecryptFast","aesDecrypt","minimumEntropy","entropyPerWord","EEFLongWordList","numWords","hashArr","entropyAvailable","phrase","hashNumber","bigInt","fromArray","remainder","divide","encKeyEnc","urlsSubject","Subject","urls","baseUrl","getNotificationsUrl","notificationsUrl","getSendUrl","identityUrl","eventsUrl","setUrlsFromStorage","urlsObj","api","icons","notifications","webVault","enterprise","envUrls","setUrls","saveSettings","formatUrl","next","getUrls","decryptedFolderCache","decFolders","noneFolder","folderCopy","cId","updates","systemLanguage","localesDirectory","getLocalesJson","defaultMessages","localeMessages","translationLocale","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","replaceToken","replaceContent","DefaultOptions","ambiguous","minNumber","minUppercase","minLowercase","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","optionsCache","enforcePasswordGeneratorPoliciesOnOptions","enforcedOptions","getPasswordGeneratorPolicyOptions","useUppercase","useLowercase","numberCount","specialCount","PasswordGeneratorPolicyOptions","currentPolicy","saveOptions","getHistory","encrypted","decryptHistory","addHistory","currentHistory","matchesPrevious","unshift","encryptHistory","newHistory","userInputs","globalUserInputs","finalUserInputs","zxcvbn","normalizeOptions","decrypted","array","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","settingsCache","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","settings","syncInProgress","lastSync","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","notification","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","SendData","syncDeleteSend","getSecurityStamp","stamp","setSecurityStamp","setEmailVerified","setForcePasswordReset","OrganizationData","ProviderData","replaceOrganizations","replaceProviders","SendTextData","SendFileData","setToken","setRefreshToken","setClientId","setClientSecret","storeTokenValue","toggleTokens","decoded","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","valueOf","minutes","email_verified","getIssuer","iss","skipTokenStorage","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","isAutoCopyEnabled","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","clearOrganizations","clearProviders","Provider","lockedCallback","loggedOutCallback","everBeenUnlocked","checkOnInterval","startCheck","checkVaultTimeout","isViewOpen","lockTimeout","lastActive","vaultTimeoutSeconds","allowSoftLock","isPinLockSet","isBiometricLockSet","timersMap","debug","LogLevelType","Debug","Info","Warning","level","warn","time","hrtime","timeEnd","elapsed","build","CipherWithIds","CollectionWithId","FolderWithId","IgnoredProperties","loginPropertyParsers","setLoginUsername","setLoginPassword","setLoginUris","creditCardPropertyParsers","setCreditCardNumber","setCreditCardVerification","setCreditCardCardholderName","setCreditCardExpiry","identityPropertyParsers","setIdentityFirstName","setIdentityInitial","setIdentityLastName","setIdentityUserName","setIdentityEmail","setIdentityPhone","setIdentityCompany","quoteChar","escapeChar","getProp","setNotes","setCipherType","altUsername","context","CipherImportContext","setKnownLoginValue","setKnownCreditCardValue","setKnownIdentityValue","setUnknownValue","entries","agg","getPropByRegexp","regexp","matchingKeys","getPropIncluding","includesMap","importRecord","func","lowerProperty","readableDate","toUTCString","OnePasswordCsvImporter","NotificationType","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","AppModule","BrowserAnimationsModule","ServicesModule","forRoot","AppRoutingModule","OssRoutingModule","routes","loadChildren","ProvidersModule","ProvidersRoutingModule","pathMatch","redirectTo","backdrop","className","subscribers","messageCallback","PasswordHintRequest","pinLock","webVaultHostname","invalidPinAttempts","pinSet","supportsBiometric","biometricLock","vaultUrl","failed","decPin","setKeyAndContinue","passwordValid","unlockBiometric","doContinue","rememberEmail","focusInput","launchSsoBrowser","ssoRedirectUri","ssoCodeVerifier","webUrl","parsedMessage","height","width","confirmMasterPassword","hint","showTerms","acceptPolicies","useLowerKdf","isIE","RegisterRequest","orgInvite","confirmField","captchaResponse","syncLoading","SetPasswordRequest","orgIdentifier","onSuccessfulChangePassword","choose","webAuthnReady","webAuthnNewTab","webAuthn","twoFactorEmail","loginRoute","authing","needsLock","WebAuthnIFrame","cleanupWebAuthn","providerData","authWebAuthn","DuoWebSDK","sig_request","Signature","submit_callback","sig","doToast","getDeviceString","pushToken","codes","client_secret","code_verifier","redirect_uri","deviceIdentifier","deviceName","twoFactorRemember","btnText","allow","UpdateTempPasswordRequest","warningDialog","downloadFile","encryptedFormat","getExport","extension","csv","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","showCardNumber","showCardCode","fieldType","addFieldType","currentDate","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","addFieldTypeOptions","uriMatchOptions","autofillOnPageLoadOptions","myEmail","addEditCipherInfo","organizationChanged","previousCipherId","addUri","removeUri","addField","removeField","trackByFunction","editCollections","restorePromise","restoreCipher","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","toggleFieldValue","toggleUriOptions","loginUriMatchChanged","drop","moveItemInArray","previousIndex","currentIndex","checkPassword","checkPasswordPromise","repromptChanged","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","searchPending","searchTimeout","rightClickCipher","addCipherOptions","selectedCollectionIds","showFolders","showCollections","showFavorites","showTrash","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","setLoaded","collapsedGroupings","nestedFolders","clearSelections","selectFavorites","selectTrash","selectFolder","selectCollection","idPrefix","SendAccessView","copyLink","alertShown","sendLinkBaseUrl","urlB64Key","isSafari","isFirefox","setDates","disableSendPolicies","sendOptionsPolicies","loadSend","hasPassword","encryptSend","encSend","copySuccess","typeChanged","toggleOptions","sendData","togglePasswordVisible","BrowserPath","DateField","DatePreset","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","FormControl","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","expirationDatePresets","Firefox","Safari","Default","setValue","formattedDeletionDate","browserPath","miliseconds","setTime","safariTimePresetOptions","DeletionDate","ExpriationDate","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","formattedExpirationDate","initialDeletionDate","toTimeString","initialExpirationDate","noon","midnight","ams","pms","hour","midnightOption","twelveHour","twentyFourHour","noonOption","amOption","pmOption","validTimes","previousValue","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchSends","copyOptions","showSelect","onSelected","avoidAmbiguous","passTypeOptions","optionsResponse","sliderChanged","sliderInput","cipherView","blur","elRef","formEls","formEl","contains","tagName","inputEl","click","useHash","paramsInheritanceStrategy","language","BroadcasterMessagingService","consoleLogService","WebPlatformUtilsService","HtmlStorageService","MemoryStorageService","WebCryptoFunctionService","FileUploadService","eventLoggingService","initFactory","htmlEl","documentElement","theme","useValue","APP_INITIALIZER","useFactory","deps","LOCALE_ID","subscriber","arg","localStorageKeys","localStorageStartsWithKeys","memoryStorageStartsWithKeys","memoryStorage","isLocalStorage","localStorage","getItem","isMemoryStorage","sessionStorage","setItem","removeItem","swKey","fileUploadType","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","createdDate","refunded","partiallyRefunded","refundedAmount","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","OrganizationUserResponse","userProfile","taxIdType","throttleKey","allThrottles","getThrottles","throttles","argsThrottleKey","queue","exec","comparator","sortedCiphersByUrl","timeouts","Ciphers","resetTimer","lastUsedIndex","y","getNextIndex","inEffect","filePath","store","browserCache","chrome","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","rel","blobData","blobOptions","fileNameLower","doDownload","endsWith","msSaveOrOpenBlob","msSaveBlob","createObjectURL","position","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","html","showCancelButton","cancelButtonText","showPasswordDialog","passwordValidation","autocapitalize","autocorrect","inputValidator","isConfirmed","clipboardData","setData","queryCommandSupported","textarea","copyEl","execCommand","readFromClipboard","authenticateBiometric","getDefaultSystemTheme","onDefaultSystemThemeChange","eventType","uploadImmediately","orgIds","eventCollection","EventData","EventRequest","getEncryptedExport","getDecryptedExport","getOrganizationEncryptedExport","getOrganizationDecryptedExport","unparse","Event","padNumber","getSeconds","buildCommonCipher","encKeyValidation","jsonDoc","encKeyValidation_DO_NOT_EDIT","collectionPromises","decCol","cipherPromises","decCipher","padCharacter","numString","login_uri","login_username","login_password","login_totp","toView","values","toDomain","azureFileUploadService","AzureFileUploadService","bitwardenFileUploadService","BitwardenFileUploadService","uploadSendFile","uploadData","encryptedFileData","FileUploadType","Direct","Azure","upload","renewalCallback","encryptedFileName","azureUploadBlob","azureUploadBlocks","urlObject","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","blockIdList","xml","Version","day","compareTo","apiCall","getImportOptions","importResult","halfway","last","badData","postImport","errorResponse","handleServerError","getImporterInstance","BitwardenCsvImporter","BitwardenJsonImporter","LastPassCsvImporter","KeePassXCsvImporter","AviraCsvImporter","BlurCsvImporter","SafeInCloudXmlImporter","PadlockCsvImporter","KeePass2XmlImporter","ChromeCsvImporter","FirefoxCsvImporter","UpmCsvImporter","SaferPassCsvImporter","MeldiumCsvImporter","OnePassword1PifImporter","OnePasswordWinCsvImporter","OnePasswordMacCsvImporter","KeeperCsvImporter","PasswordDragonXmlImporter","EnpassCsvImporter","EnpassJsonImporter","PasswordSafeXmlImporter","DashlaneJsonImporter","MSecureCsvImporter","StickyPasswordXmlImporter","TrueKeyCsvImporter","ClipperzHtmlImporter","RoboFormCsvImporter","AscendoCsvImporter","PasswordBossJsonImporter","ZohoVaultCsvImporter","SplashIdCsvImporter","PassKeepCsvImporter","GnomeJsonImporter","PasswordAgentCsvImporter","PasspackCsvImporter","PassmanJsonImporter","AvastCsvImporter","AvastJsonImporter","FSecureFskImporter","KasperskyTxtImporter","RememBearCsvImporter","PasswordWalletTxtImporter","MykiCsvImporter","SecureSafeCsvImporter","LogMeOnceCsvImporter","BlackBerryCsvImporter","ButtercupCsvImporter","CodebookCsvImporter","EncryptrCsvImporter","YotiCsvImporter","NordPassCsvImporter","ImportCiphersRequest","KvpRequest","ImportOrganizationCiphersRequest","itemType","fieldLower","web","logins","custName","note","pwd","loginName","cards","holderName","cardNumber","cvv","website","secondary_username","col","addCollection","collectionIndex","delimPosition","parseEncrypted","parseDecrypted","groupingsMap","fav","extra","OfficialProps","processingCustomFields","currentVersion","actionType","labelLower","Category","Favorite","Entry","Note","Username","TOTP","Website","Phone","PIN","Account","HandledResults","ADDRESS","processAddress","AUTHENTIFIANT","processAuth","BANKSTATEMENT","processNote","IDCARD","PAYMENTMEANS_CREDITCARD","processCard","IDENTITY","processIdentity","credential","secondaryLogin","fullName","nameParts","pseudo","addressName","addressFull","zipcode","owner","nameProperty","Label","Notes","CVV","Expiry","expParts","firstRow","containsField","fieldValue","fieldName","fieldNameLower","foldersMap","foldersIndexMap","folderTree","buildFolderTree","flattenFolderTree","template_type","processLogin","sensitive","uuid","parent_uuid","titlePrefix","tree","creditNumber","creditCvv","creditExpiry","keyRing","display_name","secret","attributes","attr","username_value","NotesHeader","ApplicationsHeader","WebsitesHeader","Delimiter","notesData","applicationsData","websitesData","workingData","parseDataCategory","applications","websites","nameKey","itemComment","itemCommentKey","colonIndex","rootGroup","traverse","isRootNode","groupPrefixName","groupName","nameEl","cipherIndex","entryString","valueEl","keyEl","attrs","ProtectInMemory","Title","Group","buildBaseCipher","parseSecureNote","parseCard","parseIdentity","ccnum","cardCipher","profilename","firstname","lastname","ccname","cccsc","ccexp","ccexpParts","middlename","zip","extraParts","processedNote","typeParts","mappedData","parseSecureNoteMapping","monthString","processingNotes","extraPart","DisplayName","UserName","Url","nickname","additionalInfo","twoFactAuthToken","cardName","exp_month","exp_year","firstAddressLine","secondAddressLine","zipCode","record","recordType","evaluateType","cardholdername","cardnumber","cvc","expirydate","processName","full_name","phone_number","line","trashed","processStandardItem","processWinOpVaultItem","overview","URLs","parsePasswordHistory","notesPlain","parseFields","sections","section","openContents","faveIndex","typeName","secureContents","maxSize","designationKey","valueKey","fieldDesignation","street","setIdentityAddress","expSplit","tags","tag","getValue","custom_fields","customField","field_type","tagsJson","Tags","tagJson","__parsed_extra","fieldsJson","extraFields","fieldJson","newVersion","altFormat","login_url","identifiers","valObj","expDate","cf","records","categoryText","accountName","passwordSafe","notesDelimiter","getAttribute","groupText","trash","cardholder","verification","expiryMonth","expMonthNumber","expiryYear","expYearNumber","Name","Pwd","Rf_fields","labelEl","cardEl","labelIdEl","labelId","fieldEl","notesEl","candidates","choice","Comment","parseFieldsToNotes","startIndex","loginNodes","loginNode","accountId","usernameText","passwordText","linkText","notesText","accountLogin","account","parentElement","buildGroupText","PropertiesToIgnore","memo","kind","expiryDate","document_content","ChamberName","parseData","SecretData","CustomData","connected","inactive","reconnectTimer","signalrConnection","off","signalR","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","withHubProtocol","signalRMsgPack","MessagePackHubProtocol","processNotification","NotificationResponse","onclose","reconnect","isAuthedAndUnlocked","sync","contextId","payloadUserId","UserId","myUserId","SyncCipherCreate","SyncCipherUpdate","SyncCipherDelete","SyncLoginDelete","SyncFolderCreate","SyncFolderUpdate","SyncFolderDelete","SyncVault","SyncCiphers","SyncSettings","SyncOrgKeys","LogOut","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncCipherNotification","SyncFolderNotification","UserNotification","SyncSendNotification","passwordValidator","policyCache","MasterPasswordPolicyOptions","toLocaleLowerCase","toLocaleUpperCase","resetPasswordPolicyOptions","ResetPasswordPolicyOptions","policiesResponse","indexing","searchableMinLength","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","isArray","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","decryptedSendCache","fileData","Send","ArrayBuffer","encryptFileData","parseFile","decSends","legacyServerSendFileUpload","encFileData","crypto","subtle","ua","isOldSafari","algorithm","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","forge","wcLen","passwordBuf","toBuf","saltBuf","pbkdf2Params","toWebCryptoAlgorithm","importKey","impKey","deriveBits","ikm","outputByteSize","infoBuf","hkdfParams","prk","hashLen","infoArr","runningOkmLength","previousT","okm","md","md5","sha1","valueBytes","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","util","createBuffer","putInt32","DecryptParameters","meta","encKeyByteString","macKeyByteString","decode64","parameters","dataBuffer","createDecipher","finish","rsaParams","impPrivateKey","exportKey","jwkPrivateKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","encodeUtf8"],"mappings":"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6B,KAAK8xC,SAASvX,aACrCpV,EAAQkW,aAAer7B,KAAK8xC,SAASzW,aAErCr7B,KAAKmyB,YAAcnyB,KAAK0d,WAAW66C,YAAYv4D,KAAK0tB,WAAYvI,GAAS7jB,MAAK,WAC1E,OAAO,EAAKmzB,YAAYO,UAAS,MAErC,GAAMh1B,KAAKmyB,a,cAAX,SACAnyB,KAAK4xB,eAAeI,SAAS,UAAW,KAAMhyB,KAAKN,YAAYnB,EAAE,oB,+BAEjEyB,KAAKkB,WAAWW,MAAM,sBAAsB,G,gEAxC3C22D,GAAgB,oQ,iCAAhBA,EAAgB,qyBClB7B,4BAA0B,yCAAI,Y,mBAAuB,iBAAM,iCAAO,8CAAgL,iDAAg6B,kB,MAApnC,oEAA0C,8CAAiL,6D,qLDczP,GAIa,EAAAA,oB,+DAAAA,EAAgB,E,KAJ5B,EAAAx1D,U,MAAU,CACPlC,SAAU,mBACVmC,YAAa,8B,6REhBjB,aACA,OAIA,OACA,OACA,QACA,OAEA,OACA,SAEA,SACA,QAEA,QACA,SAEA,SACA,SACA,SACA,SACA,SAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,SACA,SACA,SACA,SAGA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAIA,UACA,UAGA,UACA,UAGA,UAGA,UACA,UAGA,UAIA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,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AAd,iBACA,EAAAe,qBACA,GAAAzX,mBACA,GAAA5f,iBACA,GAAAmgB,uBACA,GAAAmX,qBACA,GAAApW,uBACA,GAAAphD,mBACA,GAAAq8C,gBACA,EAAAob,aACA,GAAAxO,qBACA,GAAAj4C,mBACA,EAAA0mD,gBACA,GAAAC,mBACA,GAAAC,gBACA,GAAAC,sBACA,GAAAtM,qBACA,GAAAjB,oBACA,GAAAc,kBACA,GAAAT,qBACA,GAAAK,mBACA,GAAAjqD,iBACA,GAAA+2D,qBACA,GAAAC,mBACA,GAAAxqB,wBACA,GAAAyqB,oBACA,GAAApwB,iBACA,GAAA2hB,qBACA,GAAAqD,kBACA,GAAAqC,4BACA,GAAAgJ,6BACA,GAAAC,uBACA,GAAAC,4BACA,GAAAC,qBACA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,oCACA,GAAAC,yBACA,GAAAC,gCACA,GAAAC,iCACA,GAAAC,6BACA,GAAAC,0BACA,GAAAtV,gBACA,GAAAS,gCACA,GAAA8U,qBACA,GAAAC,uBACA,EAAAvlC,gBACA,EAAAqnB,wBACA,GAAAzG,mBACA,EAAA4kB,cACA,GAAA96D,SACA,GAAAoc,cACA,GAAA8sC,gBACA,GAAAY,iCACA,GAAAz3C,uBACA,GAAA0oD,iBACA,EAAAC,cACA,EAAAC,eACA,EAAAjkD,eACA,EAAAme,gBACA,GAAA+lC,iBACA,mBACA,oBACA,GAAAC,6BACA,GAAAv+B,2BACA,GAAAw+B,kCACA,wBACA,sBACA,uBACA,sBACA,oBACA,6BACA,wBACA,wBACA,uBACA,kBACA,mBACA,mCACA,mBACA,oCACA,wBACA,sBACA,kBACA,uBACA,kBACA,kBACA,sBACA,oBACA,yBACA,kCACA,qBACA,kBACA,2BACA,uBACA,uBACA,sBACA,GAAAjiB,uBACA,EAAAkiB,4BACA,oCACA,kBACA,gCACA,GAAAC,2BACA,GAAAC,kCACA,EAAA7pC,0BACA,GAAAlP,iBACA,GAAAg5C,iBACA,GAAAC,iBACA,GAAAnd,oBACA,EAAAod,uBACA,EAAAC,0BACA,EAAAC,kBACA,GAAA1R,+BACA,GAA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A,SACA,WACA,WACA,WACA,UACA,OACA,UACA,YACA,WACA,WACA,UACA,YACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,SACA,QACA,YACA,WACA,SACA,UACA,SACA,SACA,WACA,QACA,SACA,YACA,YACA,YACA,YACA,YACA,OACA,UACA,SACA,SACA,QACA,YACA,SACA,QACA,UACA,QACA,WACA,UACA,YACA,QACA,YACA,YACA,SACA,WACA,YACA,UACA,QACA,OACA,OACA,OACA,MACA,OACA,YACA,QACA,YACA,QACA,UACA,UACA,YACA,QACA,QACA,YACA,WACA,SACA,QACA,QACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,QACA,QACA,YACA,QACA,WACA,UACA,WACA,WACA,OACA,WACA,SACA,SACA,WACA,QACA,YACA,QACA,WACA,YACA,YACA,WACA,YACA,YACA,SACA,YACA,YACA,SACA,UACA,UACA,WACA,OACA,QACA,QACA,QACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,SACA,WACA,SACA,YACA,SACA,UACA,WACA,YACA,UACA,YACA,UACA,SACA,UACA,UACA,UACA,SACA,SACA,WACA,OACA,YACA,UACA,QACA,SACA,SACA,SACA,UACA,UACA,YACA,YACA,UACA,SACA,UACA,YACA,YACA,WACA,QACA,YACA,QACA,QACA,WACA,YACA,WACA,WACA,UACA,WACA,UACA,YACA,UACA,YACA,WACA,WACA,WACA,SACA,UACA,YACA,WACA,SACA,WACA,WACA,YACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,SACA,UACA,QACA,QACA,UACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,WACA,QACA,SACA,UACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,QACA,YACA,YACA,UACA,QACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,WACA,QACA,OACA,WACA,YACA,YACA,WACA,OACA,QACA,WACA,WACA,QACA,QACA,YACA,UACA,WACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,OACA,QACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,QACA,MACA,SACA,YACA,SACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,YACA,SACA,WACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,YACA,SACA,WACA,QACA,OACA,WACA,OACA,SACA,YACA,UACA,SACA,SACA,UACA,YACA,WACA,YACA,YACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,UACA,WACA,QACA,WACA,YACA,SACA,YACA,SACA,SACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,UACA,WACA,QACA,WACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,SACA,QACA,OACA,OACA,SACA,WACA,SACA,SACA,WACA,YACA,YACA,WACA,SACA,SACA,YACA,WACA,WACA,UACA,YACA,WACA,WACA,YACA,UACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,YACA,SACA,WACA,WACA,YACA,WACA,QACA,WACA,YACA,SACA,QACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,UACA,SACA,SACA,YACA,UACA,QACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,QACA,WACA,SACA,SACA,SACA,WACA,QACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,SACA,YACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,QACA,WACA,UACA,WACA,SACA,UACA,SACA,OACA,YACA,UACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,OACA,YACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,OACA,YACA,WACA,YACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,UACA,YACA,YACA,QACA,YACA,YACA,QACA,WACA,YACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,QACA,WACA,QACA,QACA,UACA,UACA,WACA,SACA,OACA,WACA,QACA,WACA,UACA,WACA,OACA,OACA,WACA,WACA,UACA,OACA,SACA,UACA,QACA,SACA,YACA,QACA,QACA,UACA,SACA,QACA,QACA,WACA,UACA,WACA,WACA,OACA,SACA,UACA,SACA,SACA,UACA,UACA,YACA,OACA,SACA,SACA,QACA,OACA,MACA,UACA,OACA,UACA,SACA,UACA,WACA,QACA,WACA,WACA,WACA,QACA,UACA,SACA,SACA,QACA,OACA,YACA,YACA,OACA,YACA,SACA,QACA,SACA,UACA,WACA,UACA,QACA,QACA,QACA,SACA,UACA,WACA,YACA,OACA,YACA,WACA,SACA,QACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,YACA,YACA,SACA,SACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,YACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,YACA,OACA,QACA,QACA,UACA,UACA,YACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,WACA,QACA,QACA,UACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,QACA,QACA,WACA,QACA,YACA,SACA,WACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,UACA,QACA,OACA,QACA,YACA,SACA,OACA,UACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,QACA,QACA,SACA,SACA,SACA,UACA,YACA,WACA,QACA,OACA,SACA,OACA,SACA,UACA,OACA,WACA,OACA,SACA,UACA,SACA,YACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,WACA,UACA,OACA,UACA,OACA,WACA,WACA,UACA,YACA,WACA,UACA,YACA,OACA,UACA,UACA,UACA,YACA,QACA,SACA,WACA,SACA,WACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,SACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,SACA,SACA,QACA,YACA,SACA,UACA,SACA,UACA,UACA,WACA,OACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,UACA,YACA,UACA,YACA,UACA,UACA,QACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,YACA,YACA,YACA,WACA,SACA,YACA,QACA,SACA,UACA,UACA,WACA,UACA,YACA,WACA,YACA,QACA,YACA,YACA,UACA,UACA,UACA,SACA,YACA,QACA,SACA,WACA,SACA,UACA,YACA,YACA,QACA,UACA,UACA,UACA,OACA,OACA,SACA,SACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,WACA,SACA,UACA,WACA,WACA,UACA,YACA,WACA,UACA,SACA,SACA,SACA,UACA,YACA,SACA,QACA,UACA,YACA,SACA,SACA,YACA,QACA,UACA,YACA,UACA,WACA,WACA,UACA,SACA,SACA,QACA,SACA,YACA,WACA,WACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,WACA,QACA,QACA,UACA,YACA,UACA,YACA,WACA,SACA,SACA,UACA,QACA,QACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,WACA,UACA,WACA,UACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,SACA,WACA,WACA,WACA,UACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,SACA,OACA,YACA,UACA,QACA,YACA,SACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,QACA,YACA,YACA,YACA,WACA,YACA,YACA,QACA,QACA,QACA,OACA,WACA,SACA,WACA,WACA,QACA,WACA,WACA,SACA,YACA,UACA,QACA,UACA,WACA,SACA,OACA,SACA,UACA,WACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,UACA,SACA,SACA,OACA,QACA,QACA,OACA,QACA,WACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,OACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,YACA,WACA,QACA,SACA,UACA,SACA,UACA,WACA,QACA,SACA,WACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,UACA,UACA,WACA,QACA,SACA,UACA,WACA,YACA,QACA,WACA,SACA,SACA,YACA,SACA,UACA,QACA,YACA,UACA,UACA,WACA,YACA,YACA,OACA,WACA,SACA,UACA,SACA,QACA,UACA,MACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,OACA,OACA,OACA,OACA,WACA,WACA,UACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,SACA,WACA,OACA,OACA,OACA,UACA,QACA,QACA,SACA,QACA,WACA,UACA,UACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,YACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,QACA,YACA,UACA,WACA,WACA,SACA,WACA,YACA,YACA,UACA,YACA,YACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,YACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,UACA,YACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,OACA,QACA,OACA,WACA,YACA,UACA,SACA,SACA,SACA,YACA,YACA,WACA,WACA,YACA,QACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,OACA,UACA,SACA,QACA,QACA,QACA,YACA,YACA,WACA,YACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,SACA,WACA,OACA,WACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,YACA,SACA,QACA,YACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,WACA,WACA,WACA,WACA,SACA,SACA,UACA,YACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,SACA,WACA,WACA,WACA,WACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,WACA,UACA,WACA,YACA,UACA,WACA,UACA,WACA,OACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,YACA,SACA,WACA,UACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,UACA,UACA,QACA,QACA,UACA,UACA,YACA,UACA,YACA,UACA,QACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,UACA,UACA,WACA,QACA,OACA,SACA,UACA,UACA,YACA,OACA,UACA,UACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,YACA,WACA,UACA,YACA,UACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,SACA,SACA,SACA,YACA,UACA,QACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,YACA,QACA,QACA,QACA,OACA,SACA,UACA,YACA,UACA,YACA,WACA,YACA,UACA,MACA,QACA,SACA,UACA,UACA,WACA,SACA,YACA,YACA,MACA,MACA,WACA,SACA,QACA,WACA,SACA,QACA,QACA,WACA,QACA,UACA,YACA,SACA,WACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,WACA,YACA,UACA,WACA,WACA,UACA,OACA,OACA,YACA,OACA,YACA,OACA,WACA,SACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,SACA,YACA,WACA,SACA,UACA,YACA,QACA,OACA,YACA,SACA,WACA,QACA,UACA,WACA,SACA,QACA,SACA,SACA,QACA,QACA,YACA,QACA,WACA,SACA,WACA,YACA,WACA,UACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,WACA,OACA,WACA,UACA,SACA,YACA,YACA,YACA,QACA,WACA,SACA,WACA,YACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,SACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,SACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,QACA,WACA,UACA,UACA,SACA,SACA,OACA,WACA,YACA,WACA,SACA,YACA,QACA,WACA,QACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,QACA,SACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,OACA,YACA,YACA,WACA,YACA,SACA,UACA,YACA,WACA,SACA,SACA,SACA,WACA,YACA,YACA,UACA,UACA,QACA,WACA,SACA,SACA,WACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,WACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,QACA,UACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,OACA,WACA,SACA,YACA,QACA,OACA,SACA,UACA,YACA,WACA,YACA,WACA,WACA,YACA,YACA,MACA,WACA,YACA,WACA,OACA,SACA,OACA,WACA,QACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,YACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,SACA,WACA,WACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,WACA,OACA,YACA,UACA,OACA,UACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,QACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,WACA,SACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,QACA,SACA,SACA,OACA,WACA,WACA,QACA,QACA,QACA,QACA,OACA,SACA,YACA,SACA,QACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,QACA,QACA,SACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,UACA,QACA,OACA,YACA,SACA,SACA,OACA,SACA,WACA,SACA,OACA,OACA,QACA,OACA,OACA,WACA,YACA,YACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,YACA,QACA,UACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,SACA,QACA,OACA,UACA,QACA,QACA,QACA,UACA,WACA,YACA,WACA,WACA,SACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,QACA,QACA,QACA,YACA,UACA,WACA,UACA,UACA,UACA,QACA,QACA,WACA,SACA,OACA,MACA,SACA,YACA,UACA,WACA,UACA,WACA,WACA,QACA,OACA,OACA,SACA,SACA,MACA,OACA,SACA,WACA,OACA,UACA,WACA,WACA,MACA,OACA,SACA,YACA,YACA,UACA,UACA,WACA,SACA,SACA,OACA,OACA,UACA,OACA,QACA,QACA,QACA,UACA,UACA,WACA,UACA,YACA,UACA,WACA,UACA,WACA,WACA,OACA,QACA,UACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,SACA,UACA,QACA,UACA,SACA,WACA,SACA,YACA,YACA,SACA,WACA,UACA,QACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,YACA,OACA,SACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,YACA,OACA,WACA,SACA,OACA,UACA,SACA,WACA,YACA,WACA,MACA,YACA,UACA,YACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,UACA,SACA,QACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,SACA,MACA,WACA,WACA,YACA,QACA,UACA,SACA,MACA,UACA,WACA,MACA,YACA,QACA,YACA,WACA,YACA,QACA,UACA,QACA,QACA,UACA,SACA,UACA,YACA,YACA,QACA,WACA,UACA,SACA,SACA,WACA,SACA,YACA,QACA,UACA,YACA,WACA,OACA,QACA,WACA,UACA,WACA,UACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,YACA,QACA,MACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,SACA,SACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,YACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,UACA,SACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,YACA,WACA,YACA,WACA,SACA,UACA,SACA,SACA,YACA,SACA,SACA,WACA,UACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,WACA,QACA,OACA,SACA,OACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,WACA,UACA,QACA,SACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,WACA,SACA,SACA,UACA,YACA,SACA,SACA,UACA,QACA,QACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,SACA,WACA,WACA,YACA,YACA,WACA,UACA,UACA,WACA,UACA,QACA,YACA,SACA,YACA,WACA,UACA,QACA,WACA,YACA,YACA,UACA,UACA,OACA,YACA,YACA,YACA,WACA,WACA,QACA,WACA,UACA,OACA,QACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,SACA,UACA,SACA,QACA,WACA,OACA,SACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,YACA,YACA,YACA,QACA,SACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,YACA,SACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,SACA,WACA,SACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,OACA,SACA,UACA,SACA,OACA,QACA,UACA,OACA,WACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,UACA,OACA,UACA,YACA,YACA,UACA,UACA,WACA,SACA,UACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,MACA,QACA,UACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,WACA,WACA,WACA,WACA,QACA,QACA,UACA,SACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,SACA,SACA,WACA,UACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,WACA,YACA,UACA,UACA,QACA,WACA,QACA,UACA,SACA,WACA,SACA,SACA,SACA,UACA,OACA,SACA,QACA,WACA,SACA,WACA,WACA,UACA,UACA,YACA,QACA,WACA,QACA,UACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,MACA,OACA,UACA,UACA,WACA,WACA,YACA,YACA,QACA,UACA,QACA,QACA,YACA,UACA,WACA,WACA,OACA,UACA,YACA,YACA,YACA,WACA,WACA,SACA,QACA,UACA,WACA,SACA,WACA,UACA,YACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,OACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,WACA,OACA,SACA,UACA,QACA,WACA,UACA,UACA,QACA,SACA,UACA,WACA,OACA,MACA,MACA,OACA,QACA,OACA,WACA,SACA,WACA,SACA,WACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,YACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,MACA,QACA,WACA,WACA,UACA,YACA,WACA,YACA,WACA,QACA,QACA,UACA,UACA,YACA,SACA,UACA,QACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,SACA,YACA,WACA,YACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,WACA,SACA,YACA,WACA,QACA,UACA,UACA,WACA,SACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,QACA,SACA,UACA,QACA,UACA,YACA,SACA,OACA,QACA,YACA,UACA,WACA,WACA,YACA,SACA,QACA,QACA,SACA,WACA,YACA,WACA,QACA,YACA,SACA,MACA,QACA,MACA,YACA,UACA,QACA,OACA,YACA,WACA,UACA,SACA,SACA,UACA,YACA,SACA,YACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,MACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,MACA,WACA,YACA,SACA,UACA,WACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,WACA,WACA,QACA,UACA,YACA,SACA,QACA,YACA,WACA,YACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,YACA,WACA,YACA,UACA,YACA,UACA,UACA,UACA,QACA,QACA,YACA,SACA,UACA,YACA,QACA,OACA,WACA,YACA,WACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,SACA,WACA,QACA,QACA,SACA,QACA,UACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,SACA,WACA,YACA,QACA,UACA,QACA,WACA,UACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,QACA,QACA,QACA,UACA,WACA,UACA,OACA,SACA,YACA,UACA,SACA,OACA,OACA,WACA,OACA,UACA,QACA,WACA,WACA,YACA,OACA,UACA,QACA,UACA,OACA,OACA,OACA,QACA,WACA,YACA,QACA,SACA,OACA,SACA,OACA,SACA,WACA,OACA,UACA,SACA,SACA,SACA,OACA,OACA,OACA,WACA,YACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,UACA,WACA,QACA,WACA,WACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,QACA,WACA,QACA,QACA,UACA,YACA,QACA,QACA,YACA,UACA,UACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,QACA,OACA,UACA,WACA,WACA,YACA,SACA,QACA,UACA,WACA,OACA,YACA,OACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,OACA,UACA,OACA,WACA,SACA,QACA,QACA,SACA,WACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,UACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,OACA,WACA,QACA,OACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,OACA,OACA,QACA,QACA,UACA,OACA,SACA,MACA,UACA,WACA,YACA,WACA,UACA,WACA,SACA,SACA,UACA,UACA,MACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,YACA,SACA,QACA,YACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,WACA,QACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,UACA,QACA,UACA,OACA,SACA,QACA,UACA,YACA,QACA,SACA,YACA,WACA,UACA,WACA,YACA,OACA,UACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,SACA,OACA,WACA,WACA,YACA,YACA,YACA,SACA,SACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,UACA,WACA,OACA,OACA,QACA,UACA,YACA,UACA,QACA,UACA,YACA,QACA,SACA,SACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,QACA,WACA,QACA,SACA,SACA,YACA,QACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,YACA,WACA,WACA,UACA,WACA,SACA,SACA,WACA,OACA,MACA,OACA,OACA,OACA,QACA,SACA,WACA,SACA,QACA,YACA,WACA,UACA,SACA,YACA,WACA,YACA,WACA,WACA,SACA,SACA,YACA,YACA,SACA,WACA,SACA,OACA,SACA,UACA,WACA,WACA,SACA,SACA,SACA,UACA,SACA,YACA,UACA,QACA,OACA,UACA,OACA,SACA,YACA,MACA,SACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,MACA,UACA,QACA,OACA,OACA,MACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,QACA,OACA,QACA,WACA,SACA,SACA,YACA,WACA,WACA,QACA,YACA,WACA,UACA,WACA,UACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,SACA,YACA,UACA,WACA,YACA,YACA,WACA,SACA,UACA,YACA,YACA,WACA,UACA,YACA,YACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,SACA,SACA,MACA,OACA,SACA,OACA,QACA,MACA,OACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,WACA,YACA,YACA,UACA,QACA,UACA,YACA,UACA,OACA,YACA,SACA,QACA,MACA,MACA,SACA,SACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,MACA,UACA,UACA,SACA,UACA,UACA,WACA,QACA,OACA,QACA,UACA,UACA,OACA,UACA,YACA,OACA,OACA,YACA,UACA,QACA,SACA,SACA,MACA,QACA,SACA,QACA,SACA,WACA,OACA,UACA,UACA,MACA,SACA,YACA,SACA,UACA,OACA,UACA,WACA,WACA,YACA,QACA,OACA,MACA,SACA,WACA,YACA,SACA,UACA,WACA,YACA,WACA,QACA,YACA,WACA,YACA,OACA,SACA,WACA,UACA,QACA,YACA,QACA,UACA,UACA,OACA,SACA,QACA,OACA,WACA,WACA,OACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,OACA,UACA,YACA,UACA,SACA,WACA,WACA,QACA,WACA,UACA,SACA,QACA,QACA,SACA,WACA,OACA,MACA,OACA,SACA,OACA,WACA,WACA,SACA,OACA,OACA,WACA,WACA,YACA,WACA,OACA,SACA,SACA,WACA,SACA,WACA,UACA,UACA,UACA,OACA,UACA,UACA,YACA,WACA,SACA,UACA,UACA,OACA,SACA,QACA,OACA,UACA,WACA,OACA,QACA,WACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,UACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,UACA,WACA,SACA,UACA,SACA,OACA,OACA,QACA,SACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,OACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,WACA,UACA,SACA,WACA,SACA,UACA,UACA,SACA,WACA,SACA,WACA,SACA,WACA,OACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,OACA,UACA,SACA,YACA,UACA,QACA,OACA,SACA,OACA,OACA,UACA,SACA,UACA,YACA,WACA,SACA,UACA,QACA,WACA,SACA,WACA,YACA,YACA,SACA,UACA,YACA,UACA,UACA,WACA,MACA,OACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,SACA,QACA,QACA,OACA,OACA,UACA,YACA,QACA,QACA,UACA,WACA,OACA,QACA,WACA,WACA,SACA,SACA,WACA,UACA,OACA,OACA,MACA,UACA,UACA,SACA,OACA,OACA,WACA,YACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,YACA,UACA,SACA,SACA,YACA,YACA,QACA,UACA,YACA,WACA,YACA,YACA,SACA,WACA,UACA,SACA,YACA,WACA,YACA,UACA,UACA,SACA,QACA,WACA,WACA,YACA,YACA,OACA,QACA,OACA,YACA,OACA,SACA,WACA,SACA,YACA,UACA,YACA,WACA,QACA,YACA,SACA,QACA,YACA,WACA,WACA,SACA,WACA,WACA,QACA,OACA,UACA,YACA,WACA,UACA,SACA,UACA,WACA,QACA,YACA,WACA,YACA,YACA,YACA,UACA,YACA,WACA,WACA,SACA,WACA,UACA,YACA,WACA,WACA,QACA,YACA,SACA,YACA,OACA,OACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,YACA,UACA,UACA,UACA,YACA,WACA,YACA,SACA,UACA,UACA,YACA,QACA,UACA,SACA,UACA,QACA,WACA,SACA,SACA,SACA,OACA,MACA,WACA,YACA,UACA,UACA,WACA,QACA,QACA,YACA,YACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,YACA,SACA,UACA,SACA,QACA,YACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,UACA,WACA,SACA,UACA,UACA,UACA,YACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,OACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,WACA,WACA,WACA,QACA,WACA,WACA,UACA,QACA,SACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,QACA,SACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,YACA,WACA,QACA,WACA,OACA,YACA,WACA,WACA,UACA,MACA,YACA,SACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,YACA,YACA,YACA,WACA,MACA,SACA,WACA,UACA,YACA,WACA,WACA,WACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,OACA,WACA,YACA,SACA,WACA,YACA,SACA,YACA,QACA,QACA,YACA,WACA,UACA,WACA,UACA,WACA,QACA,YACA,YACA,QACA,QACA,UACA,OACA,QACA,SACA,QACA,SACA,OACA,OACA,MACA,MACA,WACA,QACA,OACA,SACA,UACA,WACA,WACA,YACA,YACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,WACA,UACA,YACA,SACA,QACA,YACA,QACA,YACA,WACA,SACA,UACA,YACA,WACA,QACA,QACA,SACA,YACA,QACA,UACA,UACA,SACA,YACA,QACA,UACA,SACA,WACA,OACA,YACA,YACA,SACA,OACA,SACA,SACA,SACA,UACA,YACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,QACA,YACA,OACA,SACA,SACA,UACA,QACA,SACA,UACA,YACA,WACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,WACA,SACA,WACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,UACA,OACA,SACA,OACA,UACA,QACA,OACA,MACA,YACA,SACA,WACA,WACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,QACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,QACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,WACA,YACA,QACA,SACA,QACA,MACA,MACA,QACA,MACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,YACA,OACA,UACA,YACA,YACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,SACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,SACA,QACA,SACA,UACA,SACA,UACA,UACA,OACA,MACA,OACA,WACA,OACA,MACA,QACA,WACA,QACA,OACA,UACA,WACA,OACA,WACA,UACA,WACA,UACA,QACA,SACA,WACA,OACA,WACA,QACA,UACA,YACA,UACA,OACA,SACA,OACA,OACA,OACA,OACA,UACA,OACA,OACA,WACA,UACA,YACA,YACA,YACA,WACA,QACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,MACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,QACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,YACA,UACA,UACA,SACA,UACA,UACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,OACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,UACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,MACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,SACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,SACA,YACA,OACA,WACA,YACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,QACA,WACA,OACA,YACA,QACA,UACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,SACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,YACA,SACA,SACA,QACA,UACA,UACA,SACA,WACA,SACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,WACA,QACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,YACA,SACA,WACA,YACA,OACA,WACA,UACA,QACA,YACA,UACA,SACA,YACA,YACA,SACA,WACA,QACA,YACA,WACA,SACA,SACA,UACA,UACA,WACA,SACA,QACA,QACA,SACA,UACA,WACA,UACA,SACA,SACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,UACA,SACA,OACA,SACA,WACA,UACA,SACA,UACA,UACA,YACA,WACA,UACA,YACA,QACA,SACA,UACA,WACA,YACA,MACA,WACA,UACA,QACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,QACA,OACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,YACA,SACA,YACA,QACA,SACA,WACA,QACA,YACA,SACA,YACA,YACA,QACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,UACA,UACA,WACA,QACA,UACA,QACA,SACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,UACA,WACA,YACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,UACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,YACA,WACA,QACA,WACA,QACA,SACA,YACA,SACA,WACA,YACA,UACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,UACA,WACA,SACA,OACA,YACA,UACA,QACA,MACA,OACA,OACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,QACA,OACA,YACA,UACA,YACA,UACA,SACA,OACA,OACA,UACA,OACA,SACA,SACA,QACA,WACA,WACA,UACA,WACA,YACA,OACA,SACA,WACA,WACA,SACA,YACA,WACA,UACA,SACA,WACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,UACA,WACA,SACA,SACA,UACA,YACA,UACA,UACA,QACA,SACA,WACA,QACA,UACA,OACA,WACA,YACA,UACA,QACA,SACA,MACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,YACA,UACA,SACA,WACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,SACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,UACA,SACA,YACA,YACA,YACA,SACA,UACA,YACA,UACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,UACA,SACA,UACA,UACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,QACA,SACA,YACA,UACA,UACA,SACA,QACA,WACA,QACA,QACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,YACA,WACA,WACA,YACA,QACA,UACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,QACA,QACA,YACA,SACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,UACA,YACA,WACA,SACA,YACA,YACA,WACA,WACA,QACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,QACA,YACA,QACA,UACA,MACA,UACA,SACA,YACA,SACA,SACA,MACA,OACA,YACA,OACA,UACA,QACA,YACA,OACA,SACA,SACA,QACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,SACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,QACA,UACA,WACA,SACA,SACA,UACA,SACA,SACA,WACA,YACA,OACA,QACA,YACA,WACA,UACA,WACA,WACA,YACA,SACA,YACA,UACA,WACA,UACA,SACA,QACA,UACA,OACA,SACA,WACA,UACA,YACA,SACA,QACA,WACA,QACA,WACA,QACA,UACA,YACA,YACA,UACA,UACA,QACA,UACA,UACA,SACA,YACA,YACA,WACA,UACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,QACA,QACA,QACA,UACA,YACA,QACA,OACA,SACA,YACA,WACA,YACA,QACA,QACA,OACA,SACA,SACA,OACA,SACA,QACA,SACA,WACA,YACA,WACA,YACA,WACA,QACA,SACA,SACA,OACA,OACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,OACA,SACA,QACA,SACA,WACA,OACA,SACA,QACA,YACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,SACA,SACA,OACA,UACA,SACA,QACA,SACA,SACA,UACA,YACA,WACA,QACA,YACA,WACA,WACA,UACA,WACA,OACA,YACA,WACA,UACA,YACA,YACA,YACA,WACA,SACA,WACA,WACA,WACA,UACA,YACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,SACA,SACA,YACA,SACA,SACA,SACA,SACA,YACA,YACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,UACA,WACA,WACA,WACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,YACA,UACA,UACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,UACA,SACA,WACA,YACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,UACA,WACA,WACA,QACA,QACA,UACA,UACA,YACA,WACA,WACA,WACA,UACA,QACA,UACA,YACA,UACA,SACA,SACA,SACA,WACA,SACA,YACA,OACA,SACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,QACA,UACA,YACA,SACA,UACA,SACA,YACA,UACA,UACA,UACA,WACA,SACA,WACA,YACA,YACA,WACA,YACA,YACA,UACA,UACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,WACA,UACA,SACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,UACA,SACA,UACA,QACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,YACA,OACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,UACA,WACA,SACA,SACA,WACA,YACA,YACA,SACA,WACA,YACA,SACA,YACA,YACA,UACA,UACA,UACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,SACA,UACA,UACA,WACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,SACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,WACA,SACA,OACA,SACA,UACA,OACA,UACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,UACA,OACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,OACA,SACA,OACA,UACA,UACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,UACA,QACA,UACA,OACA,QACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,OACA,SACA,UACA,UACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,UACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,OACA,SACA,SACA,MACA,SACA,OACA,SACA,WACA,UACA,QACA,YACA,UACA,SACA,UACA,QACA,OACA,SACA,UACA,QACA,OACA,OACA,OACA,MACA,UACA,WACA,YACA,SACA,YACA,SACA,YACA,UACA,WACA,QACA,UACA,SACA,YACA,YACA,SACA,WACA,UACA,OACA,OACA,UACA,QACA,OACA,QACA,OACA,QACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,OACA,WACA,SACA,UACA,YACA,YACA,OACA,SACA,WACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,UACA,SACA,WACA,UACA,UACA,YACA,UACA,YACA,YACA,WACA,QACA,WACA,YACA,OACA,QACA,UACA,YACA,QACA,UACA,YACA,UACA,OACA,YACA,QACA,UACA,WACA,QACA,YACA,YACA,UACA,WACA,WACA,YACA,QACA,QACA,SACA,UACA,QACA,UACA,SACA,QACA,YACA,MACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,WACA,OACA,UACA,UACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,QACA,UACA,YACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,QACA,QACA,WACA,QACA,QACA,UACA,QACA,SACA,YACA,YACA,SACA,YACA,SACA,UACA,QACA,WACA,SACA,YACA,UACA,WACA,WACA,SACA,WACA,WACA,WACA,YACA,YACA,QACA,UACA,UACA,SACA,WACA,SACA,WACA,YACA,SACA,SACA,UACA,YACA,WACA,WACA,UACA,UACA,WACA,QACA,QACA,WACA,YACA,SACA,UACA,WACA,YACA,YACA,SACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,QACA,SACA,WACA,WACA,WACA,SACA,WACA,UACA,UACA,UACA,SACA,WACA,YACA,YACA,WACA,OACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,UACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,WACA,QACA,YACA,SACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,UACA,WACA,QACA,UACA,UACA,SACA,WACA,UACA,UACA,SACA,WACA,QACA,YACA,YACA,UACA,UACA,WACA,SACA,QACA,SACA,UACA,YACA,UACA,SACA,QACA,QACA,WACA,UACA,YACA,UACA,QACA,QACA,UACA,UACA,QACA,UACA,WACA,QACA,SACA,QACA,UACA,QACA,YACA,UACA,UACA,UACA,YACA,QACA,SACA,OACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,SACA,SACA,UACA,WACA,YACA,SACA,UACA,SACA,UACA,QACA,UACA,YACA,UACA,QACA,OACA,QACA,YACA,QACA,QACA,WACA,UACA,WACA,WACA,QACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,SACA,QACA,QACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,QACA,UACA,YACA,YACA,WACA,QACA,SACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,SACA,SACA,UACA,WACA,YACA,SACA,QACA,SACA,WACA,UACA,UACA,YACA,OACA,QACA,OACA,MACA,UACA,WACA,UACA,SACA,SACA,SACA,OACA,UACA,WACA,WACA,SACA,SACA,UACA,OACA,YACA,QACA,OACA,OACA,SACA,YACA,SACA,YACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,MACA,QACA,SACA,SACA,SACA,UACA,WACA,YACA,UACA,UACA,QACA,UACA,WACA,YACA,UACA,UACA,OACA,SACA,SACA,WACA,SACA,UACA,YACA,WACA,WACA,UACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,UACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,SACA,YACA,UACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,QACA,YACA,UACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,OACA,UACA,QACA,WACA,YACA,UACA,WACA,QACA,UACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,YACA,SACA,SACA,UACA,QACA,SACA,YACA,UACA,WACA,YACA,WACA,WACA,QACA,WACA,YACA,SACA,OACA,OACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,OACA,YACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,QACA,UACA,YACA,UACA,WACA,UACA,QACA,WACA,QACA,YACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,YACA,YACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,QACA,UACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,WACA,QACA,QACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,QACA,WACA,YACA,YACA,UACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,QACA,OACA,QACA,UACA,SACA,WACA,QACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,YACA,SACA,QACA,YACA,UACA,WACA,YACA,UACA,WACA,QACA,OACA,SACA,YACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,UACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,YACA,UACA,YACA,WACA,YACA,UACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,UACA,QACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,QACA,WACA,WACA,SACA,SACA,SACA,YACA,UACA,YACA,YACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,QACA,SACA,WACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,QACA,WACA,UACA,YACA,UACA,WACA,SACA,WACA,UACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,QACA,YACA,WACA,WACA,YACA,QACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,OACA,SACA,UACA,OACA,SACA,UACA,YACA,YACA,WACA,YACA,UACA,OACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,QACA,YACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,SACA,UACA,YACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,YACA,YACA,YACA,UACA,QACA,QACA,SACA,QACA,QACA,YACA,YACA,WACA,UACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,QACA,QACA,QACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,QACA,SACA,SACA,SACA,WACA,YACA,QACA,SACA,UACA,SACA,WACA,SACA,SACA,SACA,SACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,WACA,YACA,SACA,YACA,UACA,WACA,QACA,SACA,QACA,UACA,UACA,UACA,WACA,SACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,SACA,UACA,YACA,QACA,QACA,UACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,YACA,UACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,YACA,YACA,YACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,UACA,WACA,SACA,WACA,WACA,UACA,SACA,SACA,YACA,UACA,YACA,OACA,UACA,SACA,SACA,OACA,WACA,YACA,UACA,SACA,YACA,WACA,QACA,UACA,QACA,WACA,WACA,WACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,WACA,YACA,SACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,SACA,WACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,SACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,YACA,WACA,SACA,WACA,UACA,YACA,WACA,QACA,UACA,UACA,WACA,YACA,YACA,OACA,YACA,UACA,YACA,OACA,WACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,WACA,WACA,WACA,UACA,WACA,QACA,QACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,QACA,QACA,WACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,QACA,SACA,UACA,UACA,QACA,WACA,SACA,SACA,YACA,UACA,YACA,UACA,SACA,WACA,QACA,OACA,UACA,WACA,UACA,UACA,WACA,UACA,YACA,MACA,UACA,OACA,SACA,SACA,WACA,OACA,QACA,SACA,WACA,QACA,SACA,OACA,SACA,UACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,OACA,YACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,OACA,SACA,QACA,YACA,UACA,QACA,WACA,SACA,WACA,SACA,QACA,SACA,QACA,OACA,OACA,UACA,YACA,OACA,QACA,QACA,WACA,WACA,UACA,UACA,YACA,QACA,SACA,WACA,UACA,UACA,YACA,WACA,WACA,QACA,UACA,QACA,QACA,SACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,WACA,SACA,YACA,SACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,WACA,WACA,OACA,YACA,UACA,QACA,QACA,QACA,SACA,WACA,UACA,OACA,QACA,UACA,UACA,YACA,YACA,WACA,UACA,OACA,SACA,OACA,OACA,QACA,SACA,UACA,YACA,UACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,OACA,UACA,OACA,SACA,SACA,SACA,UACA,YACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,UACA,QACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,UACA,SACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,WACA,WACA,OACA,YACA,WACA,YACA,UACA,QACA,SACA,OACA,UACA,UACA,YACA,SACA,SACA,QACA,WACA,SACA,QACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,WACA,WACA,UACA,YACA,SACA,WACA,WACA,UACA,QACA,SACA,YACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,YACA,SACA,WACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,YACA,UACA,WACA,WACA,YACA,QACA,MACA,QACA,WACA,UACA,UACA,UACA,MACA,UACA,QACA,SACA,WACA,QACA,SACA,UACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,SACA,OACA,QACA,OACA,MACA,QACA,QACA,QACA,WACA,SACA,YACA,SACA,QACA,QACA,UACA,YACA,OACA,WACA,QACA,QACA,QACA,YACA,UACA,UACA,WACA,SACA,SACA,UACA,SACA,QACA,OACA,QACA,WACA,YACA,QACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,UACA,YACA,WACA,SACA,SACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,UACA,WACA,WACA,YACA,UACA,YACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,YACA,UACA,YACA,WACA,QACA,YACA,UACA,YACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,SACA,YACA,UACA,YACA,WACA,UACA,WACA,UACA,SACA,WACA,SACA,YACA,UACA,WACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,YACA,YACA,YACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,QACA,YACA,YACA,YACA,YACA,YACA,QACA,WACA,YACA,SACA,WACA,OACA,YACA,WACA,WACA,UACA,SACA,YACA,YACA,UACA,UACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,UACA,WACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,SACA,YACA,WACA,UACA,WACA,UACA,YACA,YACA,SACA,SACA,YACA,YACA,YACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,WACA,WACA,SACA,SACA,WACA,UACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,SACA,WACA,YACA,SACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,UACA,UACA,YACA,WACA,UACA,WACA,WACA,SACA,QACA,QACA,UACA,WACA,WACA,YACA,SACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,YACA,UACA,QACA,YACA,SACA,WACA,YACA,SACA,UACA,YACA,YACA,YACA,SACA,YACA,WACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,WACA,YACA,SACA,UACA,UACA,WACA,SACA,SACA,SACA,WACA,YACA,SACA,OACA,QACA,UACA,WACA,UACA,SACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,UACA,SACA,SACA,YACA,UACA,SACA,QACA,UACA,OACA,YACA,OACA,QACA,QACA,UACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,SACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,QACA,SACA,SACA,YACA,QACA,UACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,OACA,QACA,SACA,YACA,SACA,WACA,SACA,WACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,QACA,QACA,YACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,YACA,WACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,YACA,SACA,QACA,OACA,WACA,UACA,QACA,WACA,SACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,UACA,WACA,QACA,OACA,YACA,UACA,WACA,UACA,UACA,SACA,WACA,UACA,QACA,QACA,WACA,WACA,UACA,WACA,YACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,QACA,UACA,OACA,WACA,SACA,UACA,UACA,QACA,SACA,UACA,QACA,QACA,SACA,YACA,MACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,SACA,UACA,SACA,WACA,YACA,YACA,WACA,YACA,UACA,SACA,SACA,YACA,UACA,UACA,WACA,YACA,UACA,OACA,UACA,QACA,QACA,WACA,SACA,OACA,WACA,SACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,WACA,UACA,QACA,WACA,UACA,WACA,SACA,MACA,OACA,SACA,QACA,SACA,QACA,QACA,YACA,UACA,OACA,OACA,YACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,SACA,YACA,UACA,SACA,YACA,OACA,OACA,QACA,UACA,OACA,OACA,UACA,SACA,WACA,SACA,OACA,QACA,WACA,SACA,OACA,SACA,OACA,OACA,WACA,QACA,UACA,SACA,SACA,WACA,SACA,MACA,OACA,YACA,YACA,YACA,YACA,YACA,UACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,UACA,YACA,QACA,YACA,YACA,QACA,QACA,QACA,MACA,UACA,QACA,SACA,WACA,UACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,YACA,UACA,WACA,UACA,YACA,UACA,OAC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","file":"app/main.9fb8ede3f33089c2dc5e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([926,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export abstract class I18nService {\n    locale: string;\n    supportedTranslationLocales: string[];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames: Map<string, string>;\n    t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n    translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { DeviceType } from '../enums/deviceType';\n\nexport abstract class PlatformUtilsService {\n    identityClientId: string;\n    getDevice: () => DeviceType;\n    getDeviceString: () => string;\n    isFirefox: () => boolean;\n    isChrome: () => boolean;\n    isEdge: () => boolean;\n    isOpera: () => boolean;\n    isVivaldi: () => boolean;\n    isSafari: () => boolean;\n    isIE: () => boolean;\n    isMacAppStore: () => boolean;\n    isViewOpen: () => Promise<boolean>;\n    /**\n     * @deprecated This only ever returns null. Pull from your platform's storage using ConstantsService.vaultTimeoutKey\n     */\n    lockTimeout: () => number;\n    launchUri: (uri: string, options?: any) => void;\n    saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n    getApplicationVersion: () => Promise<string>;\n    supportsWebAuthn: (win: Window) => boolean;\n    supportsDuo: () => boolean;\n    showToast: (type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any) => void;\n    showDialog: (body: string, title?: string, confirmText?: string, cancelText?: string,\n        type?: string, bodyIsHtml?: boolean) => Promise<boolean>;\n    showPasswordDialog: (title: string, body: string, passwordValidation: (value: string) => Promise<boolean>) => Promise<boolean>;\n    isDev: () => boolean;\n    isSelfHost: () => boolean;\n    copyToClipboard: (text: string, options?: any) => void | boolean;\n    readFromClipboard: (options?: any) => Promise<string>;\n    supportsBiometric: () => Promise<boolean>;\n    authenticateBiometric: () => Promise<boolean>;\n    getDefaultSystemTheme: () => Promise<'light' | 'dark'>;\n    onDefaultSystemThemeChange: (callback: ((theme: 'light' | 'dark') => unknown)) => unknown;\n    supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from '../enums/policyType';\n\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\n\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EmergencyAccessAcceptRequest } from '../models/request/emergencyAccessAcceptRequest';\nimport { EmergencyAccessConfirmRequest } from '../models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessInviteRequest } from '../models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessPasswordRequest } from '../models/request/emergencyAccessPasswordRequest';\nimport { EmergencyAccessUpdateRequest } from '../models/request/emergencyAccessUpdateRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationImportRequest } from '../models/request/organizationImportRequest';\nimport { OrganizationKeysRequest } from '../models/request/organizationKeysRequest';\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserBulkConfirmRequest } from '../models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from '../models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from '../models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { OrganizationUserResetPasswordRequest } from '../models/request/organizationUserResetPasswordRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PolicyRequest } from '../models/request/policyRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { ProviderAddOrganizationRequest } from '../models/request/provider/providerAddOrganizationRequest';\nimport { ProviderOrganizationCreateRequest } from '../models/request/provider/providerOrganizationCreateRequest';\nimport { ProviderSetupRequest } from '../models/request/provider/providerSetupRequest';\nimport { ProviderUpdateRequest } from '../models/request/provider/providerUpdateRequest';\nimport { ProviderUserAcceptRequest } from '../models/request/provider/providerUserAcceptRequest';\nimport { ProviderUserBulkConfirmRequest } from '../models/request/provider/providerUserBulkConfirmRequest';\nimport { ProviderUserBulkRequest } from '../models/request/provider/providerUserBulkRequest';\nimport { ProviderUserConfirmRequest } from '../models/request/provider/providerUserConfirmRequest';\nimport { ProviderUserInviteRequest } from '../models/request/provider/providerUserInviteRequest';\nimport { ProviderUserUpdateRequest } from '../models/request/provider/providerUserUpdateRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { SendAccessRequest } from '../models/request/sendAccessRequest';\nimport { SendRequest } from '../models/request/sendRequest';\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTempPasswordRequest } from '../models/request/updateTempPasswordRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from '../models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from '../models/request/updateTwoFactorWebAuthnRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { AttachmentResponse } from '../models/response/attachmentResponse';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport {\n    EmergencyAccessGranteeDetailsResponse,\n    EmergencyAccessGrantorDetailsResponse,\n    EmergencyAccessTakeoverResponse,\n    EmergencyAccessViewResponse\n} from '../models/response/emergencyAccessResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityCaptchaResponse } from '../models/response/identityCaptchaResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationKeysResponse } from '../models/response/organizationKeysResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport { OrganizationUserBulkPublicKeyResponse } from '../models/response/organizationUserBulkPublicKeyResponse';\nimport { OrganizationUserBulkResponse } from '../models/response/organizationUserBulkResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserResetPasswordDetailsReponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PlanResponse } from '../models/response/planResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { ProviderOrganizationOrganizationDetailsResponse, ProviderOrganizationResponse } from '../models/response/provider/providerOrganizationResponse';\nimport { ProviderResponse } from '../models/response/provider/providerResponse';\nimport { ProviderUserBulkPublicKeyResponse } from '../models/response/provider/providerUserBulkPublicKeyResponse';\nimport { ProviderUserBulkResponse } from '../models/response/provider/providerUserBulkResponse';\nimport { ProviderUserResponse, ProviderUserUserDetailsResponse } from '../models/response/provider/providerUserResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SendAccessResponse } from '../models/response/sendAccessResponse';\nimport { SendFileDownloadDataResponse } from '../models/response/sendFileDownloadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\nimport { SendResponse } from '../models/response/sendResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\nimport { TaxRateResponse } from '../models/response/taxRateResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport { ChallengeResponse, TwoFactorWebAuthnResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nimport { SendAccessView } from '../models/view/sendAccessView';\n\nexport abstract class ApiService {\n    postIdentityToken: (request: TokenRequest) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n    refreshIdentityToken: () => Promise<any>;\n\n    getProfile: () => Promise<ProfileResponse>;\n    getUserBilling: () => Promise<BillingResponse>;\n    getUserSubscription: () => Promise<SubscriptionResponse>;\n    getTaxInfo: () => Promise<TaxInfoResponse>;\n    putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n    putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n    postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n    postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n    postEmail: (request: EmailRequest) => Promise<any>;\n    postPassword: (request: PasswordRequest) => Promise<any>;\n    setPassword: (request: SetPasswordRequest) => Promise<any>;\n    postSecurityStamp: (request: PasswordVerificationRequest) => Promise<any>;\n    deleteAccount: (request: PasswordVerificationRequest) => Promise<any>;\n    getAccountRevisionDate: () => Promise<number>;\n    postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n    postRegister: (request: RegisterRequest) => Promise<any>;\n    postPremium: (data: FormData) => Promise<PaymentResponse>;\n    postIapCheck: (request: IapCheckRequest) => Promise<any>;\n    postReinstatePremium: () => Promise<any>;\n    postCancelPremium: () => Promise<any>;\n    postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n    postAccountPayment: (request: PaymentRequest) => Promise<any>;\n    postAccountLicense: (data: FormData) => Promise<any>;\n    postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n    postAccountKeys: (request: KeysRequest) => Promise<any>;\n    postAccountVerifyEmail: () => Promise<any>;\n    postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n    postAccountVerifyPassword: (request: PasswordVerificationRequest) => Promise<any>;\n    postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n    postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n    postAccountKdf: (request: KdfRequest) => Promise<any>;\n    getEnterprisePortalSignInToken: () => Promise<string>;\n    postUserApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postUserRotateApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n\n    getFolder: (id: string) => Promise<FolderResponse>;\n    postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n    putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n    deleteFolder: (id: string) => Promise<any>;\n\n    getSend: (id: string) => Promise<SendResponse>;\n    postSendAccess: (id: string, request: SendAccessRequest, apiUrl?: string) => Promise<SendAccessResponse>;\n    getSends: () => Promise<ListResponse<SendResponse>>;\n    postSend: (request: SendRequest) => Promise<SendResponse>;\n    postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n    postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n    putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n    putSendRemovePassword: (id: string) => Promise<SendResponse>;\n    deleteSend: (id: string) => Promise<any>;\n    getSendFileDownloadData: (send: SendAccessView, request: SendAccessRequest, apiUrl?: string) => Promise<SendFileDownloadDataResponse>;\n    renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n    getCipher: (id: string) => Promise<CipherResponse>;\n    getCipherAdmin: (id: string) => Promise<CipherResponse>;\n    getAttachmentData: (cipherId: string, attachmentId: string, emergencyAccessId?: string) => Promise<AttachmentResponse>;\n    getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n    postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n    postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    deleteCipher: (id: string) => Promise<any>;\n    deleteCipherAdmin: (id: string) => Promise<any>;\n    deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n    putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n    putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n    putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    postPurgeCiphers: (request: PasswordVerificationRequest, organizationId?: string) => Promise<any>;\n    postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n    postImportOrganizationCiphers: (organizationId: string, request: ImportOrganizationCiphersRequest) => Promise<any>;\n    putDeleteCipher: (id: string) => Promise<any>;\n    putDeleteCipherAdmin: (id: string) => Promise<any>;\n    putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putRestoreCipher: (id: string) => Promise<CipherResponse>;\n    putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n    putRestoreManyCiphers: (request: CipherBulkRestoreRequest) => Promise<ListResponse<CipherResponse>>;\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n    postCipherAttachment: (id: string, request: AttachmentRequest) => Promise<AttachmentUploadDataResponse>;\n    deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n    deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n    postShareCipherAttachment: (id: string, attachmentId: string, data: FormData,\n        organizationId: string) => Promise<any>;\n    renewAttachmentUploadUrl: (id: string, attachmentId: string) => Promise<AttachmentUploadDataResponse>;\n    postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n    getCollectionDetails: (organizationId: string, id: string) => Promise<CollectionGroupDetailsResponse>;\n    getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n    getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n    getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n    postCollection: (organizationId: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    putCollectionUsers: (organizationId: string, id: string, request: SelectionReadOnlyRequest[]) => Promise<any>;\n    putCollection: (organizationId: string, id: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    deleteCollection: (organizationId: string, id: string) => Promise<any>;\n    deleteCollectionUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n    getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n    getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n    postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n    deleteGroup: (organizationId: string, id: string) => Promise<any>;\n    deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n    getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n    getPoliciesByToken: (organizationId: string, token: string, email: string, organizationUserId: string) =>\n        Promise<ListResponse<PolicyResponse>>;\n    putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<PolicyResponse>;\n\n    getOrganizationUser: (organizationId: string, id: string) => Promise<OrganizationUserDetailsResponse>;\n    getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n    getOrganizationUsers: (organizationId: string) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n    getOrganizationUserResetPasswordDetails: (organizationId: string, id: string)\n        => Promise<OrganizationUserResetPasswordDetailsReponse>;\n    postOrganizationUserInvite: (organizationId: string, request: OrganizationUserInviteRequest) => Promise<any>;\n    postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n    postManyOrganizationUserReinvite: (organizationId: string, request: OrganizationUserBulkRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n    postOrganizationUserAccept: (organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest) => Promise<any>;\n    postOrganizationUserConfirm: (organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest) => Promise<any>;\n    postOrganizationUsersPublicKey: (organizationId: string, request: OrganizationUserBulkRequest) =>\n        Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n    postOrganizationUserBulkConfirm: (organizationId: string, request: OrganizationUserBulkConfirmRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n    putOrganizationUser: (organizationId: string, id: string, request: OrganizationUserUpdateRequest) => Promise<any>;\n    putOrganizationUserGroups: (organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest) => Promise<any>;\n    putOrganizationUserResetPasswordEnrollment: (organizationId: string, userId: string,\n        request: OrganizationUserResetPasswordEnrollmentRequest) => Promise<any>;\n    putOrganizationUserResetPassword: (organizationId: string, id: string,\n        request: OrganizationUserResetPasswordRequest) => Promise<any>;\n    deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n    deleteManyOrganizationUsers: (organizationId: string, request: OrganizationUserBulkRequest) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n    getSync: () => Promise<SyncResponse>;\n    postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n    postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n    getSettingsDomains: () => Promise<DomainsResponse>;\n    putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n    getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorOrganizationProviders: (organizationId: string) => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorAuthenticator: (request: PasswordVerificationRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    getTwoFactorEmail: (request: PasswordVerificationRequest) => Promise<TwoFactorEmailResponse>;\n    getTwoFactorDuo: (request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorOrganizationDuo: (organizationId: string,\n        request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorYubiKey: (request: PasswordVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n    getTwoFactorWebAuthn: (request: PasswordVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n    getTwoFactorWebAuthnChallenge: (request: PasswordVerificationRequest) => Promise<ChallengeResponse>;\n    getTwoFactorRecover: (request: PasswordVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n    putTwoFactorAuthenticator: (\n        request: UpdateTwoFactorAuthenticatorRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n    putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorOrganizationDuo: (organizationId: string,\n        request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorYubiKey: (request: UpdateTwoFactorYubioOtpRequest) => Promise<TwoFactorYubiKeyResponse>;\n    putTwoFactorWebAuthn: (request: UpdateTwoFactorWebAuthnRequest) => Promise<TwoFactorWebAuthnResponse>;\n    deleteTwoFactorWebAuthn: (request: UpdateTwoFactorWebAuthnDeleteRequest) => Promise<TwoFactorWebAuthnResponse>;\n    putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    putTwoFactorOrganizationDisable: (organizationId: string,\n        request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n    postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n    postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n    getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n    getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n    getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n    getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n    putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n    deleteEmergencyAccess: (id: string) => Promise<any>;\n    postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n    postEmergencyAccessReinvite: (id: string) => Promise<any>;\n    postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n    postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n    postEmergencyAccessInitiate: (id: string) => Promise<any>;\n    postEmergencyAccessApprove: (id: string) => Promise<any>;\n    postEmergencyAccessReject: (id: string) => Promise<any>;\n    postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n    postEmergencyAccessPassword: (id: string, request: EmergencyAccessPasswordRequest) => Promise<any>;\n    postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n    getOrganization: (id: string) => Promise<OrganizationResponse>;\n    getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n    getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n    getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n    getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n    postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n    putOrganization: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n    putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n    postLeaveOrganization: (id: string) => Promise<any>;\n    postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n    postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n    postOrganizationApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationRotateApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationUpgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n    postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n    postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n    postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n    postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n    postOrganizationCancel: (id: string) => Promise<any>;\n    postOrganizationReinstate: (id: string) => Promise<any>;\n    deleteOrganization: (id: string, request: PasswordVerificationRequest) => Promise<any>;\n    getPlans: () => Promise<ListResponse<PlanResponse>>;\n    getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n    getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n    postOrganizationKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n\n    postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n    getProvider: (id: string) => Promise<ProviderResponse>;\n    putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n    getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n    getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n    postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n    postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n    postManyProviderUserReinvite: (providerId: string, request: ProviderUserBulkRequest) => Promise<ListResponse<ProviderUserBulkResponse>>;\n    postProviderUserAccept: (providerId: string, id: string, request: ProviderUserAcceptRequest) => Promise<any>;\n    postProviderUserConfirm: (providerId: string, id: string, request: ProviderUserConfirmRequest) => Promise<any>;\n    postProviderUsersPublicKey: (providerId: string, request: ProviderUserBulkRequest) =>\n        Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n    postProviderUserBulkConfirm: (providerId: string, request: ProviderUserBulkConfirmRequest) => Promise<ListResponse<ProviderUserBulkResponse>>;\n    putProviderUser: (providerId: string, id: string, request: ProviderUserUpdateRequest) => Promise<any>;\n    deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n    deleteManyProviderUsers: (providerId: string, request: ProviderUserBulkRequest) => Promise<ListResponse<ProviderUserBulkResponse>>;\n    getProviderClients: (providerId: string) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n    postProviderAddOrganization: (providerId: string, request: ProviderAddOrganizationRequest) => Promise<any>;\n    postProviderCreateOrganization: (providerId: string, request: ProviderOrganizationCreateRequest) => Promise<ProviderOrganizationResponse>;\n    deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n    getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsCipher: (id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganization: (id: string, start: string, end: string,\n        token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganizationUser: (organizationId: string, id: string,\n        start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsProvider: (id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsProviderUser: (providerId: string, id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n    deleteSsoUser: (organizationId: string) => Promise<any>;\n    getSsoUserIdentifier: () => Promise<string>;\n\n    getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n    getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n    postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n    postSetupPayment: () => Promise<string>;\n\n    getActiveBearerToken: () => Promise<string>;\n    fetch: (request: Request) => Promise<Response>;\n    nativeFetch: (request: Request) => Promise<Response>;\n\n    preValidateSso: (identifier: string) => Promise<boolean>;\n}\n","import { OrganizationData } from '../models/data/organizationData';\nimport { ProviderData } from '../models/data/providerData';\nimport { Organization } from '../models/domain/organization';\nimport { Provider } from '../models/domain/provider';\n\nimport { KdfType } from '../enums/kdfType';\n\nexport abstract class UserService {\n    setInformation: (userId: string, email: string, kdf: KdfType, kdfIterations: number) => Promise<any>;\n    setEmailVerified: (emailVerified: boolean) => Promise<any>;\n    setSecurityStamp: (stamp: string) => Promise<any>;\n    setForcePasswordReset: (forcePasswordReset: boolean) => Promise<any>;\n    getUserId: () => Promise<string>;\n    getEmail: () => Promise<string>;\n    getSecurityStamp: () => Promise<string>;\n    getKdf: () => Promise<KdfType>;\n    getKdfIterations: () => Promise<number>;\n    getEmailVerified: () => Promise<boolean>;\n    getForcePasswordReset: () => Promise<boolean>;\n    clear: () => Promise<any>;\n    isAuthenticated: () => Promise<boolean>;\n    canAccessPremium: () => Promise<boolean>;\n    getOrganization: (id: string) => Promise<Organization>;\n    getAllOrganizations: () => Promise<Organization[]>;\n    replaceOrganizations: (organizations: { [id: string]: OrganizationData; }) => Promise<any>;\n    clearOrganizations: (userId: string) => Promise<any>;\n    getProvider: (id: string) => Promise<Provider>;\n    getAllProviders: () => Promise<Provider[]>;\n    replaceProviders: (providers: { [id: string]: ProviderData; }) => Promise<any>;\n    clearProviders: (userId: string) => Promise<any>;\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Pipe({\n    name: 'i18n',\n})\nexport class I18nPipe implements PipeTransform {\n    constructor(private i18nService: I18nService) { }\n\n    transform(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.i18nService.t(id, p1, p2, p3);\n    }\n}\n","import { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\nimport { ProfileProviderOrganizationResponse } from '../models/response/profileProviderOrganizationResponse';\nimport { ProfileProviderResponse } from '../models/response/profileProviderResponse';\n\nimport { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\n\nimport { KeySuffixOptions } from './storage.service';\n\nexport abstract class CryptoService {\n    setKey: (key: SymmetricCryptoKey) => Promise<any>;\n    setKeyHash: (keyHash: string) => Promise<{}>;\n    setEncKey: (encKey: string) => Promise<{}>;\n    setEncPrivateKey: (encPrivateKey: string) => Promise<{}>;\n    setOrgKeys: (orgs: ProfileOrganizationResponse[], providerOrgs: ProfileProviderOrganizationResponse[]) => Promise<{}>;\n    setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<{}>;\n    getKey: (keySuffix?: KeySuffixOptions) => Promise<SymmetricCryptoKey>;\n    getKeyFromStorage: (keySuffix: KeySuffixOptions) => Promise<SymmetricCryptoKey>;\n    getKeyHash: () => Promise<string>;\n    compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n    getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n    getPublicKey: () => Promise<ArrayBuffer>;\n    getPrivateKey: () => Promise<ArrayBuffer>;\n    getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n    getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n    getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n    getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n    hasKey: () => Promise<boolean>;\n    hasKeyInMemory: () => boolean;\n    hasKeyStored: (keySuffix?: KeySuffixOptions) => Promise<boolean>;\n    hasEncKey: () => Promise<boolean>;\n    clearKey: (clearSecretStorage?: boolean) => Promise<any>;\n    clearKeyHash: () => Promise<any>;\n    clearEncKey: (memoryOnly?: boolean) => Promise<any>;\n    clearKeyPair: (memoryOnly?: boolean) => Promise<any>;\n    clearOrgKeys: (memoryOnly?: boolean) => Promise<any>;\n    clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n    clearPinProtectedKey: () => Promise<any>;\n    clearKeys: () => Promise<any>;\n    toggleKey: () => Promise<any>;\n    makeKey: (password: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    makeKeyFromPin: (pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs?: EncString) => Promise<SymmetricCryptoKey>;\n    makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n    makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n    makePinKey: (pin: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n    hashPassword: (password: string, key: SymmetricCryptoKey, hashPurpose?: HashPurpose) => Promise<string>;\n    makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n    remakeEncKey: (key: SymmetricCryptoKey, encKey?: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n    encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n    encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n    rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n    decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n    decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    randomNumber: (min: number, max: number) => Promise<number>;\n    validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","export abstract class MessagingService {\n    send: (subscriber: string, arg?: any) => void;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appA11yTitle]',\n})\nexport class A11yTitleDirective {\n    @Input() set appA11yTitle(title: string) {\n        this.title = title;\n    }\n\n    private title: string;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (!this.el.nativeElement.hasAttribute('title')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'title', this.title);\n        }\n        if (!this.el.nativeElement.hasAttribute('aria-label')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'aria-label', this.title);\n        }\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    OnChanges,\n} from '@angular/core';\nimport { LogService } from 'jslib-common/abstractions/log.service';\n\nimport { ErrorResponse } from 'jslib-common/models/response';\n\nimport { ValidationService } from '../services/validation.service';\n\n@Directive({\n    selector: '[appApiAction]',\n})\nexport class ApiActionDirective implements OnChanges {\n    @Input() appApiAction: Promise<any>;\n\n    constructor(private el: ElementRef, private validationService: ValidationService,\n        private logService: LogService) { }\n\n    ngOnChanges(changes: any) {\n        if (this.appApiAction == null || this.appApiAction.then == null) {\n            return;\n        }\n\n        this.el.nativeElement.loading = true;\n\n        this.appApiAction.then((response: any) => {\n            this.el.nativeElement.loading = false;\n        }, (e: any) => {\n            this.el.nativeElement.loading = false;\n\n            if ((e instanceof ErrorResponse || e.constructor.name === 'ErrorResponse') && (e as ErrorResponse).captchaRequired) {\n                this.logService.error('Captcha required error response: ' + e.getSingleMessage());\n                return;\n            }\n            this.validationService.showError(e);\n        });\n    }\n}\n","import { CipherType } from '../enums/cipherType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Field } from '../models/domain/field';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\n\nexport abstract class CipherService {\n    decryptedCipherCache: CipherView[];\n\n    clearCache: () => void;\n    encrypt: (model: CipherView, key?: SymmetricCryptoKey, originalCipher?: Cipher) => Promise<Cipher>;\n    encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n    encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n    get: (id: string) => Promise<Cipher>;\n    getAll: () => Promise<Cipher[]>;\n    getAllDecrypted: () => Promise<CipherView[]>;\n    getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n    getAllDecryptedForUrl: (url: string, includeOtherTypes?: CipherType[],\n        defaultMatch?: UriMatchType) => Promise<CipherView[]>;\n    getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n    getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n    getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n    getNextCipherForUrl: (url: string) => Promise<CipherView>;\n    updateLastUsedIndexForUrl: (url: string) => void;\n    updateLastUsedDate: (id: string) => Promise<void>;\n    updateLastLaunchedDate: (id: string) => Promise<void>;\n    saveNeverDomain: (domain: string) => Promise<void>;\n    saveWithServer: (cipher: Cipher) => Promise<any>;\n    shareWithServer: (cipher: CipherView, organizationId: string, collectionIds: string[]) => Promise<any>;\n    shareManyWithServer: (ciphers: CipherView[], organizationId: string, collectionIds: string[]) => Promise<any>;\n    saveAttachmentWithServer: (cipher: Cipher, unencryptedFile: any, admin?: boolean) => Promise<Cipher>;\n    saveAttachmentRawWithServer: (cipher: Cipher, filename: string, data: ArrayBuffer,\n        admin?: boolean) => Promise<Cipher>;\n    saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n    upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n    replace: (ciphers: { [id: string]: CipherData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n    deleteManyWithServer: (ids: string[]) => Promise<any>;\n    deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n    deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n    sortCiphersByLastUsed: (a: any, b: any) => number;\n    sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n    getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n    softDelete: (id: string | string[]) => Promise<any>;\n    softDeleteWithServer: (id: string) => Promise<any>;\n    softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n    restore: (cipher: { id: string, revisionDate: string; } | { id: string, revisionDate: string; }[]) => Promise<any>;\n    restoreWithServer: (id: string) => Promise<any>;\n    restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","export abstract class BaseResponse {\n    private response: any;\n\n    constructor(response: any) {\n        this.response = response;\n    }\n\n    protected getResponseProperty(propertyName: string, response: any = null, exactName = false): any {\n        if (propertyName == null || propertyName === '') {\n            throw new Error('propertyName must not be null/empty.');\n        }\n        if (response == null && this.response != null) {\n            response = this.response;\n        }\n        if (response == null) {\n            return null;\n        }\n        if (!exactName && response[propertyName] === undefined) {\n            let otherCasePropertyName: string = null;\n            if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n                otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n            } else {\n                otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n            }\n            if (propertyName.length > 1) {\n                otherCasePropertyName += propertyName.slice(1);\n            }\n\n            propertyName = otherCasePropertyName;\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toLowerCase();\n            }\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toUpperCase();\n            }\n        }\n        return response[propertyName];\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-callout',\n    templateUrl: 'callout.component.html',\n})\nexport class CalloutComponent implements OnInit {\n    @Input() type = 'info';\n    @Input() icon: string;\n    @Input() title: string;\n    @Input() clickable: boolean;\n\n    calloutStyle: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnInit() {\n        this.calloutStyle = this.type;\n\n        if (this.type === 'warning' || this.type === 'danger') {\n            if (this.type === 'danger') {\n                this.calloutStyle = 'danger';\n            }\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('warning');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-warning';\n            }\n        } else if (this.type === 'error') {\n            this.calloutStyle = 'danger';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('error');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-bolt';\n            }\n        } else if (this.type === 'tip') {\n            this.calloutStyle = 'success';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('tip');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-lightbulb-o';\n            }\n        }\n    }\n}\n","<div class=\"callout callout-{{calloutStyle}}\" [ngClass]=\"{'clickable': clickable}\" role=\"alert\"> <h3 class=\"callout-heading\" *ngIf=\"title\"> <i class=\"fa {{icon}}\" *ngIf=\"icon\" aria-hidden=\"true\"></i> {{title}} </h3> <ng-content></ng-content> </div> ","import * as tldjs from 'tldjs';\n\nimport { I18nService } from '../abstractions/i18n.service';\n\n// tslint:disable-next-line\nconst nodeURL = typeof window === 'undefined' ? require('url') : null;\n\nexport class Utils {\n    static inited = false;\n    static isNativeScript = false;\n    static isNode = false;\n    static isBrowser = true;\n    static isMobileBrowser = false;\n    static isAppleMobileBrowser = false;\n    static global: any = null;\n    static tldEndingRegex = /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n    // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n    static regexpEmojiPresentation =  /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n    static init() {\n        if (Utils.inited) {\n            return;\n        }\n\n        Utils.inited = true;\n        Utils.isNode = typeof process !== 'undefined' && (process as any).release != null &&\n            (process as any).release.name === 'node';\n        Utils.isBrowser = typeof window !== 'undefined';\n        Utils.isNativeScript = !Utils.isNode && !Utils.isBrowser;\n        Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n        Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n        Utils.global = Utils.isNativeScript ? global : (Utils.isNode && !Utils.isBrowser ? global : window);\n    }\n\n    static fromB64ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'base64'));\n        } else {\n            const binaryString = window.atob(str);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n            return bytes;\n        }\n    }\n\n    static fromUrlB64ToArray(str: string): Uint8Array {\n        return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n    }\n\n    static fromHexToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'hex'));\n        } else {\n            const bytes = new Uint8Array(str.length / 2);\n            for (let i = 0; i < str.length; i += 2) {\n                bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n            }\n            return bytes;\n        }\n    }\n\n    static fromUtf8ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'utf8'));\n        } else {\n            const strUtf8 = unescape(encodeURIComponent(str));\n            const arr = new Uint8Array(strUtf8.length);\n            for (let i = 0; i < strUtf8.length; i++) {\n                arr[i] = strUtf8.charCodeAt(i);\n            }\n            return arr;\n        }\n    }\n\n    static fromByteStringToArray(str: string): Uint8Array {\n        const arr = new Uint8Array(str.length);\n        for (let i = 0; i < str.length; i++) {\n            arr[i] = str.charCodeAt(i);\n        }\n        return arr;\n    }\n\n    static fromBufferToB64(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('base64');\n        } else {\n            let binary = '';\n            const bytes = new Uint8Array(buffer);\n            for (let i = 0; i < bytes.byteLength; i++) {\n                binary += String.fromCharCode(bytes[i]);\n            }\n            return window.btoa(binary);\n        }\n    }\n\n    static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n        return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n    }\n\n    static fromB64toUrlB64(b64Str: string) {\n        return b64Str.replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/=/g, '');\n    }\n\n    static fromBufferToUtf8(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('utf8');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            const encodedString = String.fromCharCode.apply(null, bytes);\n            return decodeURIComponent(escape(encodedString));\n        }\n    }\n\n    static fromBufferToByteString(buffer: ArrayBuffer): string {\n        return String.fromCharCode.apply(null, new Uint8Array(buffer));\n    }\n\n    // ref: https://stackoverflow.com/a/40031979/1090359\n    static fromBufferToHex(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('hex');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            return Array.prototype.map.call(bytes, (x: number) => ('00' + x.toString(16)).slice(-2)).join('');\n        }\n    }\n\n    static fromUrlB64ToB64(urlB64Str: string): string {\n        let output = urlB64Str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0:\n                break;\n            case 2:\n                output += '==';\n                break;\n            case 3:\n                output += '=';\n                break;\n            default:\n                throw new Error('Illegal base64url string!');\n        }\n\n        return output;\n    }\n\n    static fromUrlB64ToUtf8(urlB64Str: string): string {\n        return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n    }\n\n    static fromUtf8ToB64(utfStr: string): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(utfStr, 'utf8').toString('base64');\n        } else {\n            return decodeURIComponent(escape(window.btoa(utfStr)));\n        }\n    }\n\n    static fromUtf8ToUrlB64(utfStr: string): string {\n        return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n    }\n\n    static fromB64ToUtf8(b64Str: string): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(b64Str, 'base64').toString('utf8');\n        } else {\n            return decodeURIComponent(escape(window.atob(b64Str)));\n        }\n    }\n\n    // ref: http://stackoverflow.com/a/2117523/1090359\n    static newGuid(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n            // tslint:disable-next-line\n            const r = Math.random() * 16 | 0;\n            // tslint:disable-next-line\n            const v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    static isGuid(id: string) {\n        return RegExp(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/, 'i').test(id);\n    }\n\n    static getHostname(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null && url.hostname !== '' ? url.hostname : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getHost(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null && url.host !== '' ? url.host : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getDomain(uriString: string): string {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        if (uriString.startsWith('data:')) {\n            return null;\n        }\n\n        let httpUrl = uriString.startsWith('http://') || uriString.startsWith('https://');\n        if (!httpUrl && uriString.indexOf('://') < 0 && Utils.tldEndingRegex.test(uriString)) {\n            uriString = 'http://' + uriString;\n            httpUrl = true;\n        }\n\n        if (httpUrl) {\n            try {\n                const url = Utils.getUrlObject(uriString);\n                const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n                if (!validHostname) {\n                    return null;\n                }\n\n                if (url.hostname === 'localhost' || Utils.validIpAddress(url.hostname)) {\n                    return url.hostname;\n                }\n\n                const urlDomain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n                return urlDomain != null ? urlDomain : url.hostname;\n            } catch (e) { }\n        }\n\n        try {\n            const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n            if (domain != null) {\n                return domain;\n            }\n        } catch {\n            return null;\n        }\n\n        return null;\n    }\n\n    static getQueryParams(uriString: string): Map<string, string> {\n        const url = Utils.getUrl(uriString);\n        if (url == null || url.search == null || url.search === '') {\n            return null;\n        }\n        const map = new Map<string, string>();\n        const pairs = (url.search[0] === '?' ? url.search.substr(1) : url.search).split('&');\n        pairs.forEach(pair => {\n            const parts = pair.split('=');\n            if (parts.length < 1) {\n                return;\n            }\n            map.set(decodeURIComponent(parts[0]).toLowerCase(), parts[1] == null ? '' : decodeURIComponent(parts[1]));\n        });\n        return map;\n    }\n\n    static getSortFunction(i18nService: I18nService, prop: string) {\n        return (a: any, b: any) => {\n            if (a[prop] == null && b[prop] != null) {\n                return -1;\n            }\n            if (a[prop] != null && b[prop] == null) {\n                return 1;\n            }\n            if (a[prop] == null && b[prop] == null) {\n                return 0;\n            }\n\n            return i18nService.collator ? i18nService.collator.compare(a[prop], b[prop]) :\n                a[prop].localeCompare(b[prop]);\n        };\n    }\n\n    static isNullOrWhitespace(str: string): boolean {\n        return str == null || typeof str !== 'string' || str.trim() === '';\n    }\n\n    static nameOf<T>(name: string & keyof T) {\n        return name;\n    }\n\n    static assign<T>(target: T, source: Partial<T>): T {\n        return Object.assign(target, source);\n    }\n\n    static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n        return (Object.keys(obj).filter(k => Number.isNaN(+k)) as K[]).map(k => obj[k]);\n    }\n\n\n    static getUrl(uriString: string): URL {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        let url = Utils.getUrlObject(uriString);\n        if (url == null) {\n            const hasHttpProtocol = uriString.indexOf('http://') === 0 || uriString.indexOf('https://') === 0;\n            if (!hasHttpProtocol && uriString.indexOf('.') > -1) {\n                url = Utils.getUrlObject('http://' + uriString);\n            }\n        }\n        return url;\n    }\n\n    private static validIpAddress(ipString: string): boolean {\n        // tslint:disable-next-line\n        const ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n        return ipRegex.test(ipString);\n    }\n\n    private static isMobile(win: Window) {\n        let mobile = false;\n        (a => {\n            // tslint:disable-next-line\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n                mobile = true;\n            }\n        })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n        return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static isAppleMobile(win: Window) {\n        return win.navigator.userAgent.match(/iPhone/i) != null || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static getUrlObject(uriString: string): URL {\n        try {\n            if (nodeURL != null) {\n                return nodeURL.URL ? new nodeURL.URL(uriString) : nodeURL.parse(uriString);\n            } else if (typeof URL === 'function') {\n                return new URL(uriString);\n            } else if (window != null) {\n                const hasProtocol = uriString.indexOf('://') > -1;\n                if (!hasProtocol && uriString.indexOf('.') > -1) {\n                    uriString = 'http://' + uriString;\n                } else if (!hasProtocol) {\n                    return null;\n                }\n                const anchor = window.document.createElement('a');\n                anchor.href = uriString;\n                return anchor as any;\n            }\n        } catch (e) { }\n\n        return null;\n    }\n}\n\nUtils.init();\n","import { PolicyData } from '../models/data/policyData';\n\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\nimport { Policy } from '../models/domain/policy';\nimport { ResetPasswordPolicyOptions } from '../models/domain/resetPasswordPolicyOptions';\n\nimport { PolicyType } from '../enums/policyType';\n\nimport { ListResponse } from '../models/response/listResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\n\nexport abstract class PolicyService {\n    policyCache: Policy[];\n\n    clearCache: () => void;\n    getAll: (type?: PolicyType) => Promise<Policy[]>;\n    replace: (policies: { [id: string]: PolicyData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n    evaluateMasterPassword: (passwordStrength: number, newPassword: string,\n        enforcedPolicyOptions?: MasterPasswordPolicyOptions) => boolean;\n    getResetPasswordPolicyOptions: (policies: Policy[], orgId: string) => [ResetPasswordPolicyOptions, boolean];\n    mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n}\n","import * as zxcvbn from 'zxcvbn';\n\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\n\nexport abstract class PasswordGenerationService {\n    generatePassword: (options: any) => Promise<string>;\n    generatePassphrase: (options: any) => Promise<string>;\n    getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n    enforcePasswordGeneratorPoliciesOnOptions: (options: any) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n    getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n    saveOptions: (options: any) => Promise<any>;\n    getHistory: () => Promise<GeneratedPasswordHistory[]>;\n    addHistory: (password: string) => Promise<any>;\n    clear: () => Promise<any>;\n    passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n    normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","import * as papa from 'papaparse';\n\nimport { LogService } from '../abstractions/log.service';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { LoginUriView } from '../models/view/loginUriView';\n\nimport { Utils } from '../misc/utils';\n\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherRepromptType } from '../enums/cipherRepromptType';\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { ConsoleLogService } from '../services/consoleLog.service';\n\nexport abstract class BaseImporter {\n    organizationId: string = null;\n\n    protected logService: LogService = new ConsoleLogService(false);\n\n    protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\n\n    protected passwordFieldNames = [\n        'password', 'pass word', 'passphrase', 'pass phrase',\n        'pass', 'code', 'code word', 'codeword',\n        'secret', 'secret word', 'personpwd',\n        'key', 'keyword', 'key word', 'keyphrase', 'key phrase',\n        'form_pw', 'wppassword', 'pin', 'pwd', 'pw', 'pword', 'passwd',\n        'p', 'serial', 'serial#', 'license key', 'reg #',\n\n        // Non-English names\n        'passwort',\n    ];\n\n    protected usernameFieldNames = [\n        'user', 'name', 'user name', 'username', 'login name',\n        'email', 'e-mail', 'id', 'userid', 'user id',\n        'login', 'form_loginname', 'wpname', 'mail',\n        'loginid', 'login id', 'log', 'personlogin',\n        'first name', 'last name', 'card#', 'account #',\n        'member', 'member #',\n\n        // Non-English names\n        'nom', 'benutzername',\n    ];\n\n    protected notesFieldNames = [\n        'note', 'notes', 'comment', 'comments', 'memo',\n        'description', 'free form', 'freeform',\n        'free text', 'freetext', 'free',\n\n        // Non-English names\n        'kommentar',\n    ];\n\n    protected uriFieldNames: string[] = [\n        'url', 'hyper link', 'hyperlink', 'link',\n        'host', 'hostname', 'host name', 'server', 'address',\n        'hyper ref', 'href', 'web', 'website', 'web site', 'site',\n        'web-site', 'uri',\n\n        // Non-English names\n        'ort', 'adresse',\n    ];\n\n    protected parseCsvOptions = {\n        encoding: 'UTF-8',\n        skipEmptyLines: false,\n    };\n\n    protected get organization() {\n        return this.organizationId != null;\n    }\n\n    protected parseXml(data: string): Document {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(data, 'application/xml');\n        return doc != null && doc.querySelector('parsererror') == null ? doc : null;\n    }\n\n    protected parseCsv(data: string, header: boolean, options: any = {}): any[] {\n        const parseOptions = Object.assign({ header: header }, this.parseCsvOptions, options);\n        data = this.splitNewLine(data).join('\\n').trim();\n        const result = papa.parse(data, parseOptions);\n        if (result.errors != null && result.errors.length > 0) {\n            result.errors.forEach(e => {\n                if (e.row != null) {\n                    // tslint:disable-next-line\n                    this.logService.warning('Error parsing row ' + e.row + ': ' + e.message);\n                }\n            });\n        }\n        return result.data && result.data.length > 0 ? result.data : null;\n    }\n\n    protected parseSingleRowCsv(rowData: string) {\n        if (this.isNullOrWhitespace(rowData)) {\n            return null;\n        }\n        const parsedRow = this.parseCsv(rowData, false);\n        if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\n            return parsedRow[0];\n        }\n        return null;\n    }\n\n    protected makeUriArray(uri: string | string[]): LoginUriView[] {\n        if (uri == null) {\n            return null;\n        }\n\n        if (typeof uri === 'string') {\n            const loginUri = new LoginUriView();\n            loginUri.uri = this.fixUri(uri);\n            if (this.isNullOrWhitespace(loginUri.uri)) {\n                return null;\n            }\n            loginUri.match = null;\n            return [loginUri];\n        }\n\n        if (uri.length > 0) {\n            const returnArr: LoginUriView[] = [];\n            uri.forEach(u => {\n                const loginUri = new LoginUriView();\n                loginUri.uri = this.fixUri(u);\n                if (this.isNullOrWhitespace(loginUri.uri)) {\n                    return;\n                }\n                loginUri.match = null;\n                returnArr.push(loginUri);\n            });\n            return returnArr.length === 0 ? null : returnArr;\n        }\n\n        return null;\n    }\n\n    protected fixUri(uri: string) {\n        if (uri == null) {\n            return null;\n        }\n        uri = uri.trim();\n        if (uri.indexOf('://') === -1 && uri.indexOf('.') >= 0) {\n            uri = 'http://' + uri;\n        }\n        if (uri.length > 1000) {\n            return uri.substring(0, 1000);\n        }\n        return uri;\n    }\n\n    protected nameFromUrl(url: string) {\n        const hostname = Utils.getHostname(url);\n        if (this.isNullOrWhitespace(hostname)) {\n            return null;\n        }\n        return hostname.startsWith('www.') ? hostname.replace('www.', '') : hostname;\n    }\n\n    protected isNullOrWhitespace(str: string): boolean {\n        return Utils.isNullOrWhitespace(str);\n    }\n\n    protected getValueOrDefault(str: string, defaultValue: string = null): string {\n        if (this.isNullOrWhitespace(str)) {\n            return defaultValue;\n        }\n        return str;\n    }\n\n    protected splitNewLine(str: string): string[] {\n        return str.split(this.newLineRegex);\n    }\n\n    // ref https://stackoverflow.com/a/5911300\n    protected getCardBrand(cardNum: string) {\n        if (this.isNullOrWhitespace(cardNum)) {\n            return null;\n        }\n\n        // Visa\n        let re = new RegExp('^4');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        // Mastercard\n        // Updated for Mastercard 2017 BINs expansion\n        if (/^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/\n            .test(cardNum)) {\n            return 'Mastercard';\n        }\n\n        // AMEX\n        re = new RegExp('^3[47]');\n        if (cardNum.match(re) != null) {\n            return 'Amex';\n        }\n\n        // Discover\n        re = new RegExp('^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)');\n        if (cardNum.match(re) != null) {\n            return 'Discover';\n        }\n\n        // Diners\n        re = new RegExp('^36');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // Diners - Carte Blanche\n        re = new RegExp('^30[0-5]');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // JCB\n        re = new RegExp('^35(2[89]|[3-8][0-9])');\n        if (cardNum.match(re) != null) {\n            return 'JCB';\n        }\n\n        // Visa Electron\n        re = new RegExp('^(4026|417500|4508|4844|491(3|7))');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        return null;\n    }\n\n    protected setCardExpiration(cipher: CipherView, expiration: string): boolean {\n        if (!this.isNullOrWhitespace(expiration)) {\n            expiration = expiration.replace(/\\s/g, '');\n            const parts = expiration.split('/');\n            if (parts.length === 2) {\n                let month: string = null;\n                let year: string = null;\n                if (parts[0].length === 1 || parts[0].length === 2) {\n                    month = parts[0];\n                    if (month.length === 2 && month[0] === '0') {\n                        month = month.substr(1, 1);\n                    }\n                }\n                if (parts[1].length === 2 || parts[1].length === 4) {\n                    year = month.length === 2 ? '20' + parts[1] : parts[1];\n                }\n                if (month != null && year != null) {\n                    cipher.card.expMonth = month;\n                    cipher.card.expYear = year;\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    protected moveFoldersToCollections(result: ImportResult) {\n        result.folderRelationships.forEach(r => result.collectionRelationships.push(r));\n        result.collections = result.folders.map(f => {\n            const collection = new CollectionView();\n            collection.name = f.name;\n            return collection;\n        });\n        result.folderRelationships = [];\n        result.folders = [];\n    }\n\n    protected querySelectorDirectChild(parentEl: Element, query: string) {\n        const els = this.querySelectorAllDirectChild(parentEl, query);\n        return els.length === 0 ? null : els[0];\n    }\n\n    protected querySelectorAllDirectChild(parentEl: Element, query: string) {\n        return Array.from(parentEl.querySelectorAll(query)).filter(el => el.parentNode === parentEl);\n    }\n\n    protected initLoginCipher() {\n        const cipher = new CipherView();\n        cipher.favorite = false;\n        cipher.notes = '';\n        cipher.fields = [];\n        cipher.login = new LoginView();\n        cipher.type = CipherType.Login;\n        return cipher;\n    }\n\n    protected cleanupCipher(cipher: CipherView) {\n        if (cipher == null) {\n            return;\n        }\n        if (cipher.type !== CipherType.Login) {\n            cipher.login = null;\n        }\n        if (this.isNullOrWhitespace(cipher.name)) {\n            cipher.name = '--';\n        }\n        if (this.isNullOrWhitespace(cipher.notes)) {\n            cipher.notes = null;\n        } else {\n            cipher.notes = cipher.notes.trim();\n        }\n        if (cipher.fields != null && cipher.fields.length === 0) {\n            cipher.fields = null;\n        }\n    }\n\n    protected processKvp(cipher: CipherView, key: string, value: string, type: FieldType = FieldType.Text) {\n        if (this.isNullOrWhitespace(value)) {\n            return;\n        }\n        if (this.isNullOrWhitespace(key)) {\n            key = '';\n        }\n        if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\n            if (cipher.notes == null) {\n                cipher.notes = '';\n            }\n            cipher.notes += (key + ': ' + this.splitNewLine(value).join('\\n') + '\\n');\n        } else {\n            if (cipher.fields == null) {\n                cipher.fields = [];\n            }\n            const field = new FieldView();\n            field.type = type;\n            field.name = key;\n            field.value = value;\n            cipher.fields.push(field);\n        }\n    }\n\n    protected processFolder(result: ImportResult, folderName: string) {\n        let folderIndex = result.folders.length;\n        const hasFolder = !this.isNullOrWhitespace(folderName);\n        let addFolder = hasFolder;\n\n        if (hasFolder) {\n            for (let i = 0; i < result.folders.length; i++) {\n                if (result.folders[i].name === folderName) {\n                    addFolder = false;\n                    folderIndex = i;\n                    break;\n                }\n            }\n        }\n\n        if (addFolder) {\n            const f = new FolderView();\n            f.name = folderName;\n            result.folders.push(f);\n        }\n        if (hasFolder) {\n            result.folderRelationships.push([result.ciphers.length, folderIndex]);\n        }\n    }\n\n    protected convertToNoteIfNeeded(cipher: CipherView) {\n        if (cipher.type === CipherType.Login && this.isNullOrWhitespace(cipher.login.username) &&\n            this.isNullOrWhitespace(cipher.login.password) &&\n            (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        }\n    }\n}\n","import { CipherView } from '../view/cipherView';\nimport { CollectionView } from '../view/collectionView';\nimport { FolderView } from '../view/folderView';\n\nexport class ImportResult {\n    success = false;\n    errorMessage: string;\n    ciphers: CipherView[] = [];\n    folders: FolderView[] = [];\n    folderRelationships: [number, number][] = [];\n    collections: CollectionView[] = [];\n    collectionRelationships: [number, number][] = [];\n}\n","export abstract class StateService {\n    get: <T>(key: string) => Promise<T>;\n    save: (key: string, obj: any) => Promise<any>;\n    remove: (key: string) => Promise<any>;\n    purge: () => Promise<any>;\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopClick]',\n})\nexport class StopClickDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.preventDefault();\n    }\n}\n","export abstract class StorageService {\n    get: <T>(key: string, options?: StorageServiceOptions) => Promise<T>;\n    has: (key: string, options?: StorageServiceOptions) => Promise<boolean>;\n    save: (key: string, obj: any, options?: StorageServiceOptions) => Promise<any>;\n    remove: (key: string, options?: StorageServiceOptions) => Promise<any>;\n}\n\nexport interface StorageServiceOptions {\n    keySuffix: KeySuffixOptions;\n}\n\nexport type KeySuffixOptions = 'auto' | 'biometric';\n","export enum CipherType {\n    Login = 1,\n    SecureNote = 2,\n    Card = 3,\n    Identity = 4,\n}\n","import { Observable } from 'rxjs';\n\nexport type Urls = {\n    base?: string;\n    webVault?: string;\n    api?: string;\n    identity?: string;\n    icons?: string;\n    notifications?: string;\n    events?: string;\n    enterprise?: string;\n};\n\nexport abstract class EnvironmentService {\n    urls: Observable<Urls>;\n\n    hasBaseUrl: () => boolean;\n    getNotificationsUrl: () => string;\n    getEnterpriseUrl: () => string;\n    getWebVaultUrl: () => string;\n    getSendUrl: () => string;\n    getIconsUrl: () => string;\n    getApiUrl: () => string;\n    getIdentityUrl: () => string;\n    getEventsUrl: () => string;\n    setUrlsFromStorage: () => Promise<void>;\n    setUrls: (urls: any, saveSettings?: boolean) => Promise<Urls>;\n    getUrls: () => Urls;\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport abstract class CollectionService {\n    decryptedCollectionCache: CollectionView[];\n\n    clearCache: () => void;\n    encrypt: (model: CollectionView) => Promise<Collection>;\n    decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n    get: (id: string) => Promise<Collection>;\n    getAll: () => Promise<Collection[]>;\n    getAllDecrypted: () => Promise<CollectionView[]>;\n    getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n    getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n    upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n    replace: (collections: { [id: string]: CollectionData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n}\n","import {\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\n\nexport abstract class SyncService {\n    syncInProgress: boolean;\n\n    getLastSync: () => Promise<Date>;\n    setLastSync: (date: Date) => Promise<any>;\n    fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n    syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n    syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n    syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appInputVerbatim]',\n})\nexport class InputVerbatimDirective {\n    @Input() set appInputVerbatim(condition: boolean | string) {\n        this.disableComplete = condition === '' || condition === true;\n    }\n\n    private disableComplete: boolean;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (this.disableComplete && !this.el.nativeElement.hasAttribute('autocomplete')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocomplete', 'off');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocapitalize')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocapitalize', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocorrect')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocorrect', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('spellcheck')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'spellcheck', 'false');\n        }\n        if (!this.el.nativeElement.hasAttribute('inputmode')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'inputmode', 'verbatim');\n        }\n    }\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopProp]',\n})\nexport class StopPropDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.stopPropagation();\n    }\n}\n","import { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class AuthService {\n    email: string;\n    masterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    ssoRedirectUrl: string;\n    clientId: string;\n    clientSecret: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType;\n\n    logIn: (email: string, masterPassword: string, captchaToken?: string) => Promise<AuthResult>;\n    logInSso: (code: string, codeVerifier: string, redirectUrl: string) => Promise<AuthResult>;\n    logInApiKey: (clientId: string, clientSecret: string) => Promise<AuthResult>;\n    logInTwoFactor: (twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean) => Promise<AuthResult>;\n    logInComplete: (email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean, captchaToken?: string) => Promise<AuthResult>;\n    logInSsoComplete: (code: string, codeVerifier: string, redirectUrl: string,\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logInApiKeyComplete: (clientId: string, clientSecret: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logOut: (callback: Function) => void;\n    getSupportedTwoFactorProviders: (win: Window) => any[];\n    getDefaultTwoFactorProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n    makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n    authingWithApiKey: () => boolean;\n    authingWithSso: () => boolean;\n    authingWithPassword: () => boolean;\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport abstract class FolderService {\n    decryptedFolderCache: FolderView[];\n\n    clearCache: () => void;\n    encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n    get: (id: string) => Promise<Folder>;\n    getAll: () => Promise<Folder[]>;\n    getAllDecrypted: () => Promise<FolderView[]>;\n    getAllNested: () => Promise<TreeNode<FolderView>[]>;\n    getNested: (id: string) => Promise<TreeNode<FolderView>>;\n    saveWithServer: (folder: Folder) => Promise<any>;\n    upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n    replace: (folders: { [id: string]: FolderData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n}\n","import { CipherView } from '../models/view/cipherView';\nimport { SendView } from '../models/view/sendView';\n\nexport abstract class SearchService {\n    indexedEntityId?: string = null;\n    clearIndex: () => void;\n    isSearchable: (query: string) => boolean;\n    indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n    searchCiphers: (query: string,\n        filter?: ((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[]),\n        ciphers?: CipherView[]) => Promise<CipherView[]>;\n    searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n    searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n} from '@angular/core';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive({\n    selector: '[appAutofocus]',\n})\nexport class AutofocusDirective {\n    @Input() set appAutofocus(condition: boolean | string) {\n        this.autofocus = condition === '' || condition === true;\n    }\n\n    private autofocus: boolean;\n\n    constructor(private el: ElementRef) { }\n\n    ngOnInit() {\n        if (!Utils.isMobileBrowser && this.autofocus) {\n            this.el.nativeElement.focus();\n        }\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\ninterface User {\n    name?: string;\n    email: string;\n}\n\n@Pipe({\n    name: 'userName',\n})\nexport class UserNamePipe implements PipeTransform {\n    transform(user?: User): string {\n        if (user == null) {\n            return null;\n        }\n\n        return user.name == null || user.name.trim() === '' ? user.email : user.name;\n    }\n}\n","export class ConstantsService {\n    static readonly environmentUrlsKey: string = 'environmentUrls';\n    static readonly disableGaKey: string = 'disableGa';\n    static readonly disableAddLoginNotificationKey: string = 'disableAddLoginNotification';\n    static readonly disableChangedPasswordNotificationKey: string = 'disableChangedPasswordNotification';\n    static readonly disableContextMenuItemKey: string = 'disableContextMenuItem';\n    static readonly disableFaviconKey: string = 'disableFavicon';\n    static readonly disableBadgeCounterKey: string = 'disableBadgeCounter';\n    static readonly disableAutoTotpCopyKey: string = 'disableAutoTotpCopy';\n    static readonly enableAutoFillOnPageLoadKey: string = 'enableAutoFillOnPageLoad';\n    static readonly autoFillOnPageLoadDefaultKey: string = 'autoFillOnPageLoadDefault';\n    static readonly vaultTimeoutKey: string = 'lockOption';\n    static readonly vaultTimeoutActionKey: string = 'vaultTimeoutAction';\n    static readonly lastActiveKey: string = 'lastActive';\n    static readonly neverDomainsKey: string = 'neverDomains';\n    static readonly installedVersionKey: string = 'installedVersion';\n    static readonly localeKey: string = 'locale';\n    static readonly themeKey: string = 'theme';\n    static readonly collapsedGroupingsKey: string = 'collapsedGroupings';\n    static readonly autoConfirmFingerprints: string = 'autoConfirmFingerprints';\n    static readonly dontShowCardsCurrentTab: string = 'dontShowCardsCurrentTab';\n    static readonly dontShowIdentitiesCurrentTab: string = 'dontShowIdentitiesCurrentTab';\n    static readonly defaultUriMatch: string = 'defaultUriMatch';\n    static readonly pinProtectedKey: string = 'pinProtectedKey';\n    static readonly protectedPin: string = 'protectedPin';\n    static readonly clearClipboardKey: string = 'clearClipboardKey';\n    static readonly eventCollectionKey: string = 'eventCollection';\n    static readonly ssoCodeVerifierKey: string = 'ssoCodeVerifier';\n    static readonly ssoStateKey: string = 'ssoState';\n    static readonly biometricUnlockKey: string = 'biometric';\n    static readonly biometricText: string = 'biometricText';\n    static readonly biometricAwaitingAcceptance: string = 'biometricAwaitingAcceptance';\n    static readonly biometricFingerprintValidated: string = 'biometricFingerprintValidated';\n\n    readonly environmentUrlsKey: string = ConstantsService.environmentUrlsKey;\n    readonly disableGaKey: string = ConstantsService.disableGaKey;\n    readonly disableAddLoginNotificationKey: string = ConstantsService.disableAddLoginNotificationKey;\n    readonly disableContextMenuItemKey: string = ConstantsService.disableContextMenuItemKey;\n    readonly disableFaviconKey: string = ConstantsService.disableFaviconKey;\n    readonly disableBadgeCounterKey: string = ConstantsService.disableBadgeCounterKey;\n    readonly disableAutoTotpCopyKey: string = ConstantsService.disableAutoTotpCopyKey;\n    readonly enableAutoFillOnPageLoadKey: string = ConstantsService.enableAutoFillOnPageLoadKey;\n    readonly autoFillOnPageLoadDefaultKey: string = ConstantsService.autoFillOnPageLoadDefaultKey;\n    readonly vaultTimeoutKey: string = ConstantsService.vaultTimeoutKey;\n    readonly vaultTimeoutActionKey: string = ConstantsService.vaultTimeoutActionKey;\n    readonly lastActiveKey: string = ConstantsService.lastActiveKey;\n    readonly neverDomainsKey: string = ConstantsService.neverDomainsKey;\n    readonly installedVersionKey: string = ConstantsService.installedVersionKey;\n    readonly localeKey: string = ConstantsService.localeKey;\n    readonly themeKey: string = ConstantsService.themeKey;\n    readonly collapsedGroupingsKey: string = ConstantsService.collapsedGroupingsKey;\n    readonly autoConfirmFingerprints: string = ConstantsService.autoConfirmFingerprints;\n    readonly dontShowCardsCurrentTab: string = ConstantsService.dontShowCardsCurrentTab;\n    readonly dontShowIdentitiesCurrentTab: string = ConstantsService.dontShowIdentitiesCurrentTab;\n    readonly defaultUriMatch: string = ConstantsService.defaultUriMatch;\n    readonly pinProtectedKey: string = ConstantsService.pinProtectedKey;\n    readonly protectedPin: string = ConstantsService.protectedPin;\n    readonly clearClipboardKey: string = ConstantsService.clearClipboardKey;\n    readonly eventCollectionKey: string = ConstantsService.eventCollectionKey;\n    readonly ssoCodeVerifierKey: string = ConstantsService.ssoCodeVerifierKey;\n    readonly ssoStateKey: string = ConstantsService.ssoStateKey;\n    readonly biometricUnlockKey: string = ConstantsService.biometricUnlockKey;\n    readonly biometricText: string = ConstantsService.biometricText;\n    readonly biometricAwaitingAcceptance: string = ConstantsService.biometricAwaitingAcceptance;\n    readonly biometricFingerprintValidated: string = ConstantsService.biometricFingerprintValidated;\n}\n","import { EventType } from '../enums/eventType';\n\nexport abstract class EventService {\n    collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n    uploadEvents: () => Promise<any>;\n    clearEvents: () => Promise<any>;\n}\n","<img [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" [ngClass]=\"{'rounded-circle': circle}\">","import * as jq from 'jquery';\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ModalComponent as BaseModalComponent } from 'jslib-angular/components/modal.component';\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\n@Component({\n    selector: 'app-modal',\n    template: `<ng-template #container></ng-template>`,\n})\nexport class ModalComponent extends BaseModalComponent {\n    el: any = null;\n\n    constructor(componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService) {\n        super(componentFactoryResolver, messagingService);\n    }\n\n    ngOnDestroy() { /* Nothing */ }\n\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true,\n        setComponentParameters: (component: T) => void = null): T {\n        this.parentContainer = parentContainer;\n        this.fade = fade;\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\n        const componentRef = this.container.createComponent<T>(factory);\n        if (setComponentParameters != null) {\n            setComponentParameters(componentRef.instance);\n        }\n\n        const modals = Array.from(document.querySelectorAll('.modal'));\n        if (modals.length > 0) {\n            this.el = jq(modals[0]);\n            this.el.modal('show');\n\n            this.el.on('show.bs.modal', () => {\n                this.onShow.emit();\n                this.messagingService.send('modalShow');\n            });\n            this.el.on('shown.bs.modal', () => {\n                this.onShown.emit();\n                this.messagingService.send('modalShown');\n                if (!Utils.isMobileBrowser) {\n                    this.el.find('*[appAutoFocus]').focus();\n                }\n            });\n            this.el.on('hide.bs.modal', () => {\n                this.onClose.emit();\n                this.messagingService.send('modalClose');\n            });\n            this.el.on('hidden.bs.modal', () => {\n                this.onClosed.emit();\n                this.messagingService.send('modalClosed');\n                if (this.parentContainer != null) {\n                    this.parentContainer.clear();\n                }\n            });\n        }\n\n        return componentRef.instance;\n    }\n\n    close() {\n        if (this.el != null) {\n            this.el.modal('hide');\n        }\n    }\n}\n","export class PasswordVerificationRequest {\n    masterPasswordHash: string;\n}\n","import { EncString } from './encString';\n\nimport { View } from '../view/view';\n\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport default class Domain {\n    protected buildDomainModel<D extends Domain>(domain: D, dataObj: any, map: any,\n        alreadyEncrypted: boolean, notEncList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = dataObj[(map[prop] || prop)];\n            if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n                (domain as any)[prop] = objProp ? objProp : null;\n            } else {\n                (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n            }\n        }\n    }\n    protected buildDataModel<D extends Domain>(domain: D, dataObj: any, map: any, notEncStringList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = (domain as any)[(map[prop] || prop)];\n            if (notEncStringList.indexOf(prop) > -1) {\n                (dataObj as any)[prop] = objProp != null ? objProp : null;\n            } else {\n                (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n            }\n        }\n    }\n\n    protected async decryptObj<T extends View>(viewModel: T, map: any, orgId: string,\n        key: SymmetricCryptoKey = null): Promise<T> {\n        const promises = [];\n        const self: any = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp) {\n                const p = Promise.resolve().then(() => {\n                    const mapProp = map[theProp] || theProp;\n                    if (self[mapProp]) {\n                        return self[mapProp].decrypt(orgId, key);\n                    }\n                    return null;\n                }).then((val: any) => {\n                    (viewModel as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop);\n        }\n\n        await Promise.all(promises);\n        return viewModel;\n    }\n}\n","import { LogLevelType } from '../enums/logLevelType';\n\nexport abstract class LogService {\n    debug: (message: string) => void;\n    info: (message: string) => void;\n    warning: (message: string) => void;\n    error: (message: string) => void;\n    write: (level: LogLevelType, message: string) => void;\n    time: (label: string) => void;\n    timeEnd: (label: string) => [number, number];\n}\n","import { EncString } from '../models/domain/encString';\n\nexport abstract class VaultTimeoutService {\n    biometricLocked: boolean;\n    everBeenUnlocked: boolean;\n    pinProtectedKey: EncString;\n    isLocked: () => Promise<boolean>;\n    checkVaultTimeout: () => Promise<void>;\n    lock: (allowSoftLock?: boolean) => Promise<void>;\n    logOut: () => Promise<void>;\n    setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n    isPinLockSet: () => Promise<[boolean, boolean]>;\n    isBiometricLockSet: () => Promise<boolean>;\n    clear: () => Promise<any>;\n}\n","import { BreachAccountResponse } from '../models/response/breachAccountResponse';\n\nexport abstract class AuditService {\n    passwordLeaked: (password: string) => Promise<number>;\n    breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class EncString {\n    encryptedString?: string;\n    encryptionType?: EncryptionType;\n    decryptedValue?: string;\n    data?: string;\n    iv?: string;\n    mac?: string;\n\n    constructor(encryptedStringOrType: string | EncryptionType, data?: string, iv?: string, mac?: string) {\n        if (data != null) {\n            // data and header\n            const encType = encryptedStringOrType as EncryptionType;\n\n            if (iv != null) {\n                this.encryptedString = encType + '.' + iv + '|' + data;\n            } else {\n                this.encryptedString = encType + '.' + data;\n            }\n\n            // mac\n            if (mac != null) {\n                this.encryptedString += ('|' + mac);\n            }\n\n            this.encryptionType = encType;\n            this.data = data;\n            this.iv = iv;\n            this.mac = mac;\n\n            return;\n        }\n\n        this.encryptedString = encryptedStringOrType as string;\n        if (!this.encryptedString) {\n            return;\n        }\n\n        const headerPieces = this.encryptedString.split('.');\n        let encPieces: string[] = null;\n\n        if (headerPieces.length === 2) {\n            try {\n                this.encryptionType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) {\n                return;\n            }\n        } else {\n            encPieces = this.encryptedString.split('|');\n            this.encryptionType = encPieces.length === 3 ? EncryptionType.AesCbc128_HmacSha256_B64 :\n                EncryptionType.AesCbc256_B64;\n        }\n\n        switch (this.encryptionType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encPieces.length !== 3) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                this.mac = encPieces[2];\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encPieces.length !== 2) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                break;\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n                if (encPieces.length !== 1) {\n                    return;\n                }\n\n                this.data = encPieces[0];\n                break;\n            default:\n                return;\n        }\n    }\n\n    async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n        if (this.decryptedValue != null) {\n            return this.decryptedValue;\n        }\n\n        let cryptoService: CryptoService;\n        const containerService = (Utils.global as any).bitwardenContainerService;\n        if (containerService) {\n            cryptoService = containerService.getCryptoService();\n        } else {\n            throw new Error('global bitwardenContainerService not initialized.');\n        }\n\n        try {\n            if (key == null) {\n                key = await cryptoService.getOrgKey(orgId);\n            }\n            this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n        } catch (e) {\n            this.decryptedValue = '[error: cannot decrypt]';\n        }\n        return this.decryptedValue;\n    }\n}\n","import { View } from './view';\n\nimport { Card } from '../domain/card';\n\nexport class CardView implements View {\n    cardholderName: string = null;\n    expMonth: string = null;\n    expYear: string = null;\n    code: string = null;\n\n    // tslint:disable\n    private _brand: string = null;\n    private _number: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(c?: Card) {\n        // ctor\n    }\n\n    get maskedCode(): string {\n        return this.code != null ? '•'.repeat(this.code.length) : null;\n    }\n\n    get maskedNumber(): string {\n        return this.number != null ? '•'.repeat(this.number.length) : null;\n    }\n\n    get brand(): string {\n        return this._brand;\n    }\n    set brand(value: string) {\n        this._brand = value;\n        this._subTitle = null;\n    }\n\n    get number(): string {\n        return this._number;\n    }\n    set number(value: string) {\n        this._number = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null) {\n            this._subTitle = this.brand;\n            if (this.number != null && this.number.length >= 4) {\n                if (this._subTitle != null && this._subTitle !== '') {\n                    this._subTitle += ', ';\n                } else {\n                    this._subTitle = '';\n                }\n\n                // Show last 5 on amex, last 4 for all others\n                const count = this.number.length >= 5 && this.number.match(new RegExp('^3[47]')) != null ? 5 : 4;\n                this._subTitle += ('*' + this.number.substr(this.number.length - count));\n            }\n        }\n        return this._subTitle;\n    }\n\n    get expiration(): string {\n        if (!this.expMonth && !this.expYear) {\n            return null;\n        }\n\n        let exp = this.expMonth != null ? ('0' + this.expMonth).slice(-2) : '__';\n        exp += (' / ' + (this.expYear != null ? this.formatYear(this.expYear) : '____'));\n        return exp;\n    }\n\n    private formatYear(year: string): string {\n        return year.length === 2 ? '20' + year : year;\n    }\n}\n","import { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class CryptoFunctionService {\n    pbkdf2: (password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number) => Promise<ArrayBuffer>;\n    hkdf: (ikm: ArrayBuffer, salt: string | ArrayBuffer, info: string | ArrayBuffer,\n        outputByteSize: number, algorithm: 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    hkdfExpand: (prk: ArrayBuffer, info: string | ArrayBuffer, outputByteSize: number,\n        algorithm: 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    hash: (value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5') => Promise<ArrayBuffer>;\n    hmac: (value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n    hmacFast: (value: ArrayBuffer | string, key: ArrayBuffer | string, algorithm: 'sha1' | 'sha256' | 'sha512') =>\n        Promise<ArrayBuffer | string>;\n    compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n    aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    aesDecryptFastParameters: (data: string, iv: string, mac: string, key: SymmetricCryptoKey) =>\n        DecryptParameters<ArrayBuffer | string>;\n    aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n    aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaDecrypt: (data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n    randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\n@Injectable()\nexport class ValidationService {\n    constructor(private i18nService: I18nService, private platformUtilsService: PlatformUtilsService) { }\n\n    showError(data: any): string[] {\n        const defaultErrorMessage = this.i18nService.t('unexpectedError');\n        let errors: string[] = [];\n\n        if (data != null && typeof data === 'string') {\n            errors.push(data);\n        } else if (data == null || typeof data !== 'object') {\n            errors.push(defaultErrorMessage);\n        } else if (data.validationErrors != null) {\n            errors = errors.concat((data as ErrorResponse).getAllMessages());\n        } else {\n            errors.push(data.message ? data.message : defaultErrorMessage);\n        }\n\n        if (errors.length === 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors[0]);\n        } else if (errors.length > 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors, {\n                timeout: 5000 * errors.length,\n            });\n        }\n\n        return errors;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { View } from './view';\n\nimport { SecureNote } from '../domain/secureNote';\n\nexport class SecureNoteView implements View {\n    type: SecureNoteType = null;\n\n    constructor(n?: SecureNote) {\n        if (!n) {\n            return;\n        }\n\n        this.type = n.type;\n    }\n\n    get subTitle(): string {\n        return null;\n    }\n}\n","export enum SecureNoteType {\n    Generic = 0,\n}\n","export abstract class TokenService {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n    setTokens: (accessToken: string, refreshToken: string, clientIdClientSecret: [string, string]) => Promise<any>;\n    setToken: (token: string) => Promise<any>;\n    getToken: () => Promise<string>;\n    setRefreshToken: (refreshToken: string) => Promise<any>;\n    getRefreshToken: () => Promise<string>;\n    setClientId: (clientId: string) => Promise<any>;\n    getClientId: () => Promise<string>;\n    setClientSecret: (clientSecret: string) => Promise<any>;\n    getClientSecret: () => Promise<string>;\n    toggleTokens: () => Promise<any>;\n    setTwoFactorToken: (token: string, email: string) => Promise<any>;\n    getTwoFactorToken: (email: string) => Promise<string>;\n    clearTwoFactorToken: (email: string) => Promise<any>;\n    clearToken: () => Promise<any>;\n    decodeToken: () => any;\n    getTokenExpirationDate: () => Date;\n    tokenSecondsRemaining: (offsetSeconds?: number) => number;\n    tokenNeedsRefresh: (minutes?: number) => boolean;\n    getUserId: () => string;\n    getEmail: () => string;\n    getEmailVerified: () => boolean;\n    getName: () => string;\n    getPremium: () => boolean;\n    getIssuer: () => string;\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nconst IconMap: any = {\n    'fa-globe': String.fromCharCode(0xf0ac),\n    'fa-sticky-note-o': String.fromCharCode(0xf24a),\n    'fa-id-card-o': String.fromCharCode(0xf2c3),\n    'fa-credit-card': String.fromCharCode(0xf09d),\n    'fa-android': String.fromCharCode(0xf17b),\n    'fa-apple': String.fromCharCode(0xf179),\n};\n\n@Component({\n    selector: 'app-vault-icon',\n    templateUrl: 'icon.component.html',\n})\nexport class IconComponent implements OnChanges {\n    @Input() cipher: CipherView;\n    icon: string;\n    image: string;\n    fallbackImage: string;\n    imageEnabled: boolean;\n\n    private iconsUrl: string;\n\n    constructor(environmentService: EnvironmentService, protected stateService: StateService) {\n        this.iconsUrl = environmentService.getIconsUrl();\n    }\n\n    async ngOnChanges() {\n        this.imageEnabled = !(await this.stateService.get<boolean>(ConstantsService.disableFaviconKey));\n        this.load();\n    }\n\n    get iconCode(): string {\n        return IconMap[this.icon];\n    }\n\n    protected load() {\n        switch (this.cipher.type) {\n            case CipherType.Login:\n                this.icon = 'fa-globe';\n                this.setLoginIcon();\n                break;\n            case CipherType.SecureNote:\n                this.icon = 'fa-sticky-note-o';\n                break;\n            case CipherType.Card:\n                this.icon = 'fa-credit-card';\n                break;\n            case CipherType.Identity:\n                this.icon = 'fa-id-card-o';\n                break;\n            default:\n                break;\n        }\n    }\n\n    private setLoginIcon() {\n        if (this.cipher.login.uri) {\n            let hostnameUri = this.cipher.login.uri;\n            let isWebsite = false;\n\n            if (hostnameUri.indexOf('androidapp://') === 0) {\n                this.icon = 'fa-android';\n                this.image = null;\n            } else if (hostnameUri.indexOf('iosapp://') === 0) {\n                this.icon = 'fa-apple';\n                this.image = null;\n            } else if (this.imageEnabled && hostnameUri.indexOf('://') === -1 && hostnameUri.indexOf('.') > -1) {\n                hostnameUri = 'http://' + hostnameUri;\n                isWebsite = true;\n            } else if (this.imageEnabled) {\n                isWebsite = hostnameUri.indexOf('http') === 0 && hostnameUri.indexOf('.') > -1;\n            }\n\n            if (this.imageEnabled && isWebsite) {\n                try {\n                    this.image = this.iconsUrl + '/' + Utils.getHostname(hostnameUri) + '/icon.png';\n                    this.fallbackImage = 'images/fa-globe.png';\n                } catch (e) { }\n            }\n        } else {\n            this.image = null;\n        }\n    }\n}\n","<div class=\"icon\" aria-hidden=\"true\"> <img [src]=\"image\" appFallbackSrc=\"{{fallbackImage}}\" *ngIf=\"imageEnabled && image\" alt=\"\"/> <i class=\"fa fa-fw fa-lg {{icon}}\" *ngIf=\"!imageEnabled || !image\"></i> </div> ","import { EventView } from '../models/view/eventView';\n\nexport abstract class ExportService {\n    getExport: (format?: 'csv' | 'json' | 'encrypted_json') => Promise<string>;\n    getOrganizationExport: (organizationId: string, format?: 'csv' | 'json' | 'encrypted_json') => Promise<string>;\n    getEventExport: (events: EventView[]) => Promise<string>;\n    getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { Injectable } from '@angular/core';\n\nimport { BroadcasterService as BaseBroadcasterService } from 'jslib-common/services/broadcaster.service';\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {\n}\n","export enum TwoFactorProviderType {\n    Authenticator = 0,\n    Email = 1,\n    Duo = 2,\n    Yubikey = 3,\n    U2f = 4,\n    Remember = 5,\n    OrganizationDuo = 6,\n    WebAuthn = 7,\n}\n","export enum PolicyType {\n    TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n    MasterPassword = 1, // Sets minimum requirements for master password complexity\n    PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n    SingleOrg = 3, // Allows users to only be apart of one organization\n    RequireSso = 4, // Requires users to authenticate with SSO\n    PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n    DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n    SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n    ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n}\n","export abstract class TotpService {\n    getCode: (key: string) => Promise<string>;\n    getTimeInterval: (key: string) => number;\n    isAutoCopyEnabled: () => Promise<boolean>;\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\n@Pipe({\n    name: 'search',\n})\nexport class SearchPipe implements PipeTransform {\n    transform(items: any[], searchText: string, prop1?: string, prop2?: string, prop3?: string): any[] {\n        if (items == null || items.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return items;\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return items.filter(i => {\n            if (prop1 != null && i[prop1] != null && i[prop1].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop2 != null && i[prop2] != null && i[prop2].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop3 != null && i[prop3] != null && i[prop3].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { WebConstants } from '../../services/webConstants';\n\nconst StripeElementStyle = {\n    base: {\n        color: '#333333',\n        fontFamily: '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n            '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: '14px',\n        fontSmoothing: 'antialiased',\n    },\n    invalid: {\n        color: '#333333',\n    },\n};\n\nconst StripeElementClasses = {\n    focus: 'is-focused',\n    empty: 'is-empty',\n    invalid: 'is-invalid',\n};\n\n@Component({\n    selector: 'app-payment',\n    templateUrl: 'payment.component.html',\n})\nexport class PaymentComponent implements OnInit {\n    @Input() showMethods = true;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.Card;\n    @Input() hideBank = false;\n    @Input() hidePaypal = false;\n    @Input() hideCredit = false;\n\n    bank: any = {\n        routing_number: null,\n        account_number: null,\n        account_holder_name: null,\n        account_holder_type: '',\n        currency: 'USD',\n        country: 'US',\n    };\n\n    paymentMethodType = PaymentMethodType;\n\n    private btScript: HTMLScriptElement;\n    private btInstance: any = null;\n    private stripeScript: HTMLScriptElement;\n    private stripe: any = null;\n    private stripeElements: any = null;\n    private stripeCardNumberElement: any = null;\n    private stripeCardExpiryElement: any = null;\n    private stripeCardCvcElement: any = null;\n\n    constructor(private platformUtilsService: PlatformUtilsService, private apiService: ApiService) {\n        this.stripeScript = window.document.createElement('script');\n        this.stripeScript.src = 'https://js.stripe.com/v3/';\n        this.stripeScript.async = true;\n        this.stripeScript.onload = () => {\n            this.stripe = (window as any).Stripe(process.env.ENV === 'production' && !platformUtilsService.isDev()  ?\n                WebConstants.stripeLiveKey : WebConstants.stripeTestKey);\n            this.stripeElements = this.stripe.elements();\n            this.setStripeElement();\n        };\n        this.btScript = window.document.createElement('script');\n        this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n        this.btScript.async = true;\n    }\n\n    ngOnInit() {\n        if (!this.showOptions) {\n            this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n            this.hideBank = this.method !== PaymentMethodType.BankAccount;\n            this.hideCredit = this.method !== PaymentMethodType.Credit;\n        }\n        window.document.head.appendChild(this.stripeScript);\n        if (!this.hidePaypal) {\n            window.document.head.appendChild(this.btScript);\n        }\n    }\n\n    ngOnDestroy() {\n        window.document.head.removeChild(this.stripeScript);\n        window.setTimeout(() => {\n            Array.from(window.document.querySelectorAll('iframe')).forEach(el => {\n                if (el.src != null && el.src.indexOf('stripe') > -1) {\n                    try {\n                        window.document.body.removeChild(el);\n                    } catch { }\n                }\n            });\n        }, 500);\n        if (!this.hidePaypal) {\n            window.document.head.removeChild(this.btScript);\n            window.setTimeout(() => {\n                Array.from(window.document.head.querySelectorAll('script')).forEach(el => {\n                    if (el.src != null && el.src.indexOf('paypal') > -1) {\n                        try {\n                            window.document.head.removeChild(el);\n                        } catch { }\n                    }\n                });\n                const btStylesheet = window.document.head.querySelector('#braintree-dropin-stylesheet');\n                if (btStylesheet != null) {\n                    try {\n                        window.document.head.removeChild(btStylesheet);\n                    } catch { }\n                }\n            }, 500);\n        }\n    }\n\n    changeMethod() {\n        this.btInstance = null;\n\n        if (this.method === PaymentMethodType.PayPal) {\n            window.setTimeout(() => {\n                (window as any).braintree.dropin.create({\n                    authorization: process.env.ENV === 'production' ?\n                        WebConstants.btProductionKey : WebConstants.btSandboxKey,\n                    container: '#bt-dropin-container',\n                    paymentOptionPriority: ['paypal'],\n                    paypal: {\n                        flow: 'vault',\n                        buttonStyle: {\n                            label: 'pay',\n                            size: 'medium',\n                            shape: 'pill',\n                            color: 'blue',\n                        },\n                    },\n                }, (createErr: any, instance: any) => {\n                    if (createErr != null) {\n                        // tslint:disable-next-line\n                        console.error(createErr);\n                        return;\n                    }\n                    this.btInstance = instance;\n                });\n            }, 250);\n        } else {\n            this.setStripeElement();\n        }\n    }\n\n    createPaymentToken(): Promise<[string, PaymentMethodType]> {\n        return new Promise((resolve, reject) => {\n            if (this.method === PaymentMethodType.Credit) {\n                resolve([null, this.method]);\n            } else if (this.method === PaymentMethodType.PayPal) {\n                this.btInstance.requestPaymentMethod().then((payload: any) => {\n                    resolve([payload.nonce, this.method]);\n                }).catch((err: any) => {\n                    reject(err.message);\n                });\n            } else if (this.method === PaymentMethodType.Card || this.method === PaymentMethodType.BankAccount) {\n                if (this.method === PaymentMethodType.Card) {\n                    this.apiService.postSetupPayment().then(clientSecret =>\n                        this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement))\n                        .then((result: any) => {\n                            if (result.error) {\n                                reject(result.error.message);\n                            } else if (result.setupIntent && result.setupIntent.status === 'succeeded') {\n                                resolve([result.setupIntent.payment_method, this.method]);\n                            } else {\n                                reject();\n                            }\n                        });\n                } else {\n                    this.stripe.createToken('bank_account', this.bank).then((result: any) => {\n                        if (result.error) {\n                            reject(result.error.message);\n                        } else if (result.token && result.token.id != null) {\n                            resolve([result.token.id, this.method]);\n                        } else {\n                            reject();\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n        return new Promise<void>((resolve, reject) => {\n            if (this.showMethods && this.stripeCardNumberElement == null) {\n                reject();\n                return;\n            }\n            const handleCardPayment = () => this.showMethods ?\n                this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement) :\n                this.stripe.handleCardSetup(clientSecret);\n            return handleCardPayment().then(async (result: any) => {\n                if (result.error) {\n                    reject(result.error.message);\n                } else if (result.paymentIntent && result.paymentIntent.status === 'succeeded') {\n                    if (successCallback != null) {\n                        await successCallback();\n                    }\n                    resolve();\n                } else {\n                    reject();\n                }\n            });\n        });\n    }\n\n    private setStripeElement() {\n        window.setTimeout(() => {\n            if (this.showMethods && this.method === PaymentMethodType.Card) {\n                if (this.stripeCardNumberElement == null) {\n                    this.stripeCardNumberElement = this.stripeElements.create('cardNumber', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                if (this.stripeCardExpiryElement == null) {\n                    this.stripeCardExpiryElement = this.stripeElements.create('cardExpiry', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                    });\n                }\n                if (this.stripeCardCvcElement == null) {\n                    this.stripeCardCvcElement = this.stripeElements.create('cardCvc', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                this.stripeCardNumberElement.mount('#stripe-card-number-element');\n                this.stripeCardExpiryElement.mount('#stripe-card-expiry-element');\n                this.stripeCardCvcElement.mount('#stripe-card-cvc-element');\n            }\n        }, 50);\n    }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\"> <div class=\"form-check form-check-inline mr-4\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-card\" [value]=\"paymentMethodType.Card\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-card\"> <i class=\"fa fa-fw fa-credit-card\" aria-hidden=\"true\"></i> {{'creditCard' | i18n}}</label> </div> <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-bank\" [value]=\"paymentMethodType.BankAccount\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-bank\"> <i class=\"fa fa-fw fa-university\" aria-hidden=\"true\"></i> {{'bankAccount' | i18n}}</label> </div> <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-paypal\" [value]=\"paymentMethodType.PayPal\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-paypal\"> <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label> </div> <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-credit\" [value]=\"paymentMethodType.Credit\" [(ngModel)]=\"method\" (change)=\"changeMethod()\"> <label class=\"form-check-label\" for=\"method-credit\"> <i class=\"fa fa-fw fa-dollar\" aria-hidden=\"true\"></i> {{'accountCredit' | i18n}}</label> </div> </div> <ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"stripe-card-number-element\">{{'number' | i18n}}</label> <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div> </div> <div class=\"form-group col-8 d-flex align-items-end\"> <img src=\"images/cards.png\" alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\" width=\"323\" height=\"32\"> </div> <div class=\"form-group col-4\"> <label for=\"stripe-card-expiry-element\">{{'expiration' | i18n}}</label> <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div> </div> <div class=\"form-group col-4\"> <div class=\"d-flex\"> <label for=\"stripe-card-cvc-element\"> {{'securityCode' | i18n}} </label> <a href=\"https://www.cvvnumber.com/cvv.html\" tabindex=\"-1\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"ml-auto\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div> </div> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\"> <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\"> {{'verifyBankAccountInitialDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}} </app-callout> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"routing_number\">{{'routingNumber' | i18n}}</label> <input id=\"routing_number\" class=\"form-control\" type=\"text\" name=\"routing_number\" [(ngModel)]=\"bank.routing_number\" required appInputVerbatim> </div> <div class=\"form-group col-6\"> <label for=\"account_number\">{{'accountNumber' | i18n}}</label> <input id=\"account_number\" class=\"form-control\" type=\"text\" name=\"account_number\" [(ngModel)]=\"bank.account_number\" required appInputVerbatim> </div> <div class=\"form-group col-6\"> <label for=\"account_holder_name\">{{'accountHolderName' | i18n}}</label> <input id=\"account_holder_name\" class=\"form-control\" type=\"text\" name=\"account_holder_name\" [(ngModel)]=\"bank.account_holder_name\" required> </div> <div class=\"form-group col-6\"> <label for=\"account_holder_type\">{{'bankAccountType' | i18n}}</label> <select id=\"account_holder_type\" class=\"form-control\" name=\"account_holder_type\" [(ngModel)]=\"bank.account_holder_type\" required> <option value=\"\">-- {{'select' | i18n}} --</option> <option value=\"company\">{{'bankAccountTypeCompany' | i18n}}</option> <option value=\"individual\">{{'bankAccountTypeIndividual' | i18n}}</option> </select> </div> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\"> <div class=\"mb-3\"> <div id=\"bt-dropin-container\" class=\"mb-1\"></div> <small class=\"text-muted\">{{'paypalClickSubmit' | i18n}}</small> </div> </ng-container> <ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\"> <app-callout type=\"note\"> {{'makeSureEnoughCredit' | i18n}} </app-callout> </ng-container> ","export enum FieldType {\n    Text = 0,\n    Hidden = 1,\n    Boolean = 2,\n}\n","import { SendData } from '../models/data/sendData';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { Send } from '../models/domain/send';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { SendView } from '../models/view/sendView';\n\nexport abstract class SendService {\n    decryptedSendCache: SendView[];\n\n    clearCache: () => void;\n    encrypt: (model: SendView, file: File | ArrayBuffer, password: string, key?: SymmetricCryptoKey) => Promise<[Send, EncArrayBuffer]>;\n    get: (id: string) => Promise<Send>;\n    getAll: () => Promise<Send[]>;\n    getAllDecrypted: () => Promise<SendView[]>;\n    saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n    upsert: (send: SendData | SendData[]) => Promise<any>;\n    replace: (sends: { [id: string]: SendData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n    removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { AttachmentView } from './attachmentView';\nimport { CardView } from './cardView';\nimport { FieldView } from './fieldView';\nimport { IdentityView } from './identityView';\nimport { LoginView } from './loginView';\nimport { PasswordHistoryView } from './passwordHistoryView';\nimport { SecureNoteView } from './secureNoteView';\nimport { View } from './view';\n\nexport class CipherView implements View {\n    id: string = null;\n    organizationId: string = null;\n    folderId: string = null;\n    name: string = null;\n    notes: string = null;\n    type: CipherType = null;\n    favorite = false;\n    organizationUseTotp = false;\n    edit = false;\n    viewPassword = true;\n    localData: any;\n    login = new LoginView();\n    identity = new IdentityView();\n    card = new CardView();\n    secureNote = new SecureNoteView();\n    attachments: AttachmentView[] = null;\n    fields: FieldView[] = null;\n    passwordHistory: PasswordHistoryView[] = null;\n    collectionIds: string[] = null;\n    revisionDate: Date = null;\n    deletedDate: Date = null;\n    reprompt: CipherRepromptType = CipherRepromptType.None;\n\n    constructor(c?: Cipher) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.folderId = c.folderId;\n        this.favorite = c.favorite;\n        this.organizationUseTotp = c.organizationUseTotp;\n        this.edit = c.edit;\n        this.viewPassword = c.viewPassword;\n        this.type = c.type;\n        this.localData = c.localData;\n        this.collectionIds = c.collectionIds;\n        this.revisionDate = c.revisionDate;\n        this.deletedDate = c.deletedDate;\n        // Old locally stored ciphers might have reprompt == null. If so set it to None.\n        this.reprompt = c.reprompt ?? CipherRepromptType.None;\n    }\n\n    get subTitle(): string {\n        switch (this.type) {\n            case CipherType.Login:\n                return this.login.subTitle;\n            case CipherType.SecureNote:\n                return this.secureNote.subTitle;\n            case CipherType.Card:\n                return this.card.subTitle;\n            case CipherType.Identity:\n                return this.identity.subTitle;\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    get hasPasswordHistory(): boolean {\n        return this.passwordHistory && this.passwordHistory.length > 0;\n    }\n\n    get hasAttachments(): boolean {\n        return this.attachments && this.attachments.length > 0;\n    }\n\n    get hasOldAttachments(): boolean {\n        if (this.hasAttachments) {\n            for (let i = 0; i < this.attachments.length; i++) {\n                if (this.attachments[i].key == null) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    get hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    get passwordRevisionDisplayDate(): Date {\n        if (this.type !== CipherType.Login || this.login == null) {\n            return null;\n        } else if (this.login.password == null || this.login.password === '') {\n            return null;\n        }\n        return this.login.passwordRevisionDate;\n    }\n\n    get isDeleted(): boolean {\n        return this.deletedDate != null;\n    }\n}\n","import { View } from './view';\n\nimport { Folder } from '../domain/folder';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nexport class FolderView implements View, ITreeNodeObject {\n    id: string = null;\n    name: string = null;\n    revisionDate: Date = null;\n\n    constructor(f?: Folder) {\n        if (!f) {\n            return;\n        }\n\n        this.id = f.id;\n        this.revisionDate = f.revisionDate;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { OrganizationTaxInfoUpdateRequest } from 'jslib-common/models/request/organizationTaxInfoUpdateRequest';\nimport { TaxInfoUpdateRequest } from 'jslib-common/models/request/taxInfoUpdateRequest';\nimport { TaxRateResponse } from 'jslib-common/models/response/taxRateResponse';\n\n@Component({\n    selector: 'app-tax-info',\n    templateUrl: 'tax-info.component.html',\n})\nexport class TaxInfoComponent {\n    @Output() onCountryChanged = new EventEmitter();\n\n    loading: boolean = true;\n    organizationId: string;\n    taxInfo: any = {\n        taxId: null,\n        line1: null,\n        line2: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: 'US',\n        includeTaxId: false,\n    };\n\n    taxRates: TaxRateResponse[];\n\n    private pristine: any = {\n        taxId: null,\n        line1: null,\n        line2: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: 'US',\n        includeTaxId: false,\n    };\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            if (this.organizationId) {\n                try {\n                    const taxInfo = await this.apiService.getOrganizationTaxInfo(this.organizationId);\n                    if (taxInfo) {\n                        this.taxInfo.taxId = taxInfo.taxId;\n                        this.taxInfo.state = taxInfo.state;\n                        this.taxInfo.line1 = taxInfo.line1;\n                        this.taxInfo.line2 = taxInfo.line2;\n                        this.taxInfo.city = taxInfo.city;\n                        this.taxInfo.state = taxInfo.state;\n                        this.taxInfo.postalCode = taxInfo.postalCode;\n                        this.taxInfo.country = taxInfo.country || 'US';\n                        this.taxInfo.includeTaxId = this.taxInfo.country !== 'US' && (\n                            !!taxInfo.taxId\n                            || !!taxInfo.line1\n                            || !!taxInfo.line2\n                            || !!taxInfo.city\n                            || !!taxInfo.state);\n                    }\n                } catch { }\n            } else {\n                const taxInfo = await this.apiService.getTaxInfo();\n                if (taxInfo) {\n                    this.taxInfo.postalCode = taxInfo.postalCode;\n                    this.taxInfo.country = taxInfo.country || 'US';\n                }\n            }\n            this.pristine = Object.assign({}, this.taxInfo);\n            // If not the default (US) then trigger onCountryChanged\n            if (this.taxInfo.country !== 'US') {\n                this.onCountryChanged.emit();\n            }\n        });\n\n        const taxRates = await this.apiService.getTaxRates();\n        this.taxRates = taxRates.data;\n        this.loading = false;\n    }\n\n    get taxRate() {\n        if (this.taxRates != null) {\n            const localTaxRate = this.taxRates.find(x =>\n                x.country === this.taxInfo.country &&\n                x.postalCode === this.taxInfo.postalCode\n            );\n            return localTaxRate?.rate ?? null;\n        }\n    }\n\n    getTaxInfoRequest(): TaxInfoUpdateRequest {\n        if (this.organizationId) {\n            const request = new OrganizationTaxInfoUpdateRequest();\n            request.taxId = this.taxInfo.taxId;\n            request.state = this.taxInfo.state;\n            request.line1 = this.taxInfo.line1;\n            request.line2 = this.taxInfo.line2;\n            request.city = this.taxInfo.city;\n            request.state = this.taxInfo.state;\n            request.postalCode = this.taxInfo.postalCode;\n            request.country = this.taxInfo.country;\n            return request;\n        } else {\n            const request = new TaxInfoUpdateRequest();\n            request.postalCode = this.taxInfo.postalCode;\n            request.country = this.taxInfo.country;\n            return request;\n        }\n    }\n\n    submitTaxInfo(): Promise<any> {\n        if (!this.hasChanged()) {\n            return new Promise<void>(resolve => { resolve(); });\n        }\n        const request = this.getTaxInfoRequest();\n        return this.organizationId ? this.apiService.putOrganizationTaxInfo(this.organizationId,\n            request as OrganizationTaxInfoUpdateRequest) : this.apiService.putTaxInfo(request);\n    }\n\n    changeCountry() {\n        if (this.taxInfo.country === 'US') {\n            this.taxInfo.includeTaxId = false;\n            this.taxInfo.taxId = null;\n            this.taxInfo.line1 = null;\n            this.taxInfo.line2 = null;\n            this.taxInfo.city = null;\n            this.taxInfo.state = null;\n        }\n        this.onCountryChanged.emit();\n    }\n\n    private hasChanged(): boolean {\n        for (const key in this.taxInfo) {\n            if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressCountry\">{{'country' | i18n}}</label> <select id=\"addressCountry\" class=\"form-control\" [(ngModel)]=\"taxInfo.country\" required name=\"addressCountry\" autocomplete=\"country\" (change)=\"changeCountry()\"> <option value=\"\">-- Select --</option> <option value=\"US\">United States</option> <option value=\"CN\">China</option> <option value=\"FR\">France</option> <option value=\"DE\">Germany</option> <option value=\"CA\">Canada</option> <option value=\"GB\">United Kingdom</option> <option value=\"AU\">Australia</option> <option value=\"IN\">India</option> <option value=\"-\" disabled=\"disabled\"></option> <option value=\"AF\">Afghanistan</option> <option value=\"AX\">Åland Islands</option> <option value=\"AL\">Albania</option> <option value=\"DZ\">Algeria</option> <option value=\"AS\">American Samoa</option> <option value=\"AD\">Andorra</option> <option value=\"AO\">Angola</option> <option value=\"AI\">Anguilla</option> <option value=\"AQ\">Antarctica</option> <option value=\"AG\">Antigua and Barbuda</option> <option value=\"AR\">Argentina</option> <option value=\"AM\">Armenia</option> <option value=\"AW\">Aruba</option> <option value=\"AT\">Austria</option> <option value=\"AZ\">Azerbaijan</option> <option value=\"BS\">Bahamas</option> <option value=\"BH\">Bahrain</option> <option value=\"BD\">Bangladesh</option> <option value=\"BB\">Barbados</option> <option value=\"BY\">Belarus</option> <option value=\"BE\">Belgium</option> <option value=\"BZ\">Belize</option> <option value=\"BJ\">Benin</option> <option value=\"BM\">Bermuda</option> <option value=\"BT\">Bhutan</option> <option value=\"BO\">Bolivia, Plurinational State of</option> <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option> <option value=\"BA\">Bosnia and Herzegovina</option> <option value=\"BW\">Botswana</option> <option value=\"BV\">Bouvet Island</option> <option value=\"BR\">Brazil</option> <option value=\"IO\">British Indian Ocean Territory</option> <option value=\"BN\">Brunei Darussalam</option> <option value=\"BG\">Bulgaria</option> <option value=\"BF\">Burkina Faso</option> <option value=\"BI\">Burundi</option> <option value=\"KH\">Cambodia</option> <option value=\"CM\">Cameroon</option> <option value=\"CV\">Cape Verde</option> <option value=\"KY\">Cayman Islands</option> <option value=\"CF\">Central African Republic</option> <option value=\"TD\">Chad</option> <option value=\"CL\">Chile</option> <option value=\"CX\">Christmas Island</option> <option value=\"CC\">Cocos (Keeling) Islands</option> <option value=\"CO\">Colombia</option> <option value=\"KM\">Comoros</option> <option value=\"CG\">Congo</option> <option value=\"CD\">Congo, the Democratic Republic of the</option> <option value=\"CK\">Cook Islands</option> <option value=\"CR\">Costa Rica</option> <option value=\"CI\">Côte d'Ivoire</option> <option value=\"HR\">Croatia</option> <option value=\"CU\">Cuba</option> <option value=\"CW\">Curaçao</option> <option value=\"CY\">Cyprus</option> <option value=\"CZ\">Czech Republic</option> <option value=\"DK\">Denmark</option> <option value=\"DJ\">Djibouti</option> <option value=\"DM\">Dominica</option> <option value=\"DO\">Dominican Republic</option> <option value=\"EC\">Ecuador</option> <option value=\"EG\">Egypt</option> <option value=\"SV\">El Salvador</option> <option value=\"GQ\">Equatorial Guinea</option> <option value=\"ER\">Eritrea</option> <option value=\"EE\">Estonia</option> <option value=\"ET\">Ethiopia</option> <option value=\"FK\">Falkland Islands (Malvinas)</option> <option value=\"FO\">Faroe Islands</option> <option value=\"FJ\">Fiji</option> <option value=\"FI\">Finland</option> <option value=\"GF\">French Guiana</option> <option value=\"PF\">French Polynesia</option> <option value=\"TF\">French Southern Territories</option> <option value=\"GA\">Gabon</option> <option value=\"GM\">Gambia</option> <option value=\"GE\">Georgia</option> <option value=\"GH\">Ghana</option> <option value=\"GI\">Gibraltar</option> <option value=\"GR\">Greece</option> <option value=\"GL\">Greenland</option> <option value=\"GD\">Grenada</option> <option value=\"GP\">Guadeloupe</option> <option value=\"GU\">Guam</option> <option value=\"GT\">Guatemala</option> <option value=\"GG\">Guernsey</option> <option value=\"GN\">Guinea</option> <option value=\"GW\">Guinea-Bissau</option> <option value=\"GY\">Guyana</option> <option value=\"HT\">Haiti</option> <option value=\"HM\">Heard Island and McDonald Islands</option> <option value=\"VA\">Holy See (Vatican City State)</option> <option value=\"HN\">Honduras</option> <option value=\"HK\">Hong Kong</option> <option value=\"HU\">Hungary</option> <option value=\"IS\">Iceland</option> <option value=\"ID\">Indonesia</option> <option value=\"IR\">Iran, Islamic Republic of</option> <option value=\"IQ\">Iraq</option> <option value=\"IE\">Ireland</option> <option value=\"IM\">Isle of Man</option> <option value=\"IL\">Israel</option> <option value=\"IT\">Italy</option> <option value=\"JM\">Jamaica</option> <option value=\"JP\">Japan</option> <option value=\"JE\">Jersey</option> <option value=\"JO\">Jordan</option> <option value=\"KZ\">Kazakhstan</option> <option value=\"KE\">Kenya</option> <option value=\"KI\">Kiribati</option> <option value=\"KP\">Korea, Democratic People's Republic of</option> <option value=\"KR\">Korea, Republic of</option> <option value=\"KW\">Kuwait</option> <option value=\"KG\">Kyrgyzstan</option> <option value=\"LA\">Lao People's Democratic Republic</option> <option value=\"LV\">Latvia</option> <option value=\"LB\">Lebanon</option> <option value=\"LS\">Lesotho</option> <option value=\"LR\">Liberia</option> <option value=\"LY\">Libya</option> <option value=\"LI\">Liechtenstein</option> <option value=\"LT\">Lithuania</option> <option value=\"LU\">Luxembourg</option> <option value=\"MO\">Macao</option> <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option> <option value=\"MG\">Madagascar</option> <option value=\"MW\">Malawi</option> <option value=\"MY\">Malaysia</option> <option value=\"MV\">Maldives</option> <option value=\"ML\">Mali</option> <option value=\"MT\">Malta</option> <option value=\"MH\">Marshall Islands</option> <option value=\"MQ\">Martinique</option> <option value=\"MR\">Mauritania</option> <option value=\"MU\">Mauritius</option> <option value=\"YT\">Mayotte</option> <option value=\"MX\">Mexico</option> <option value=\"FM\">Micronesia, Federated States of</option> <option value=\"MD\">Moldova, Republic of</option> <option value=\"MC\">Monaco</option> <option value=\"MN\">Mongolia</option> <option value=\"ME\">Montenegro</option> <option value=\"MS\">Montserrat</option> <option value=\"MA\">Morocco</option> <option value=\"MZ\">Mozambique</option> <option value=\"MM\">Myanmar</option> <option value=\"NA\">Namibia</option> <option value=\"NR\">Nauru</option> <option value=\"NP\">Nepal</option> <option value=\"NL\">Netherlands</option> <option value=\"NC\">New Caledonia</option> <option value=\"NZ\">New Zealand</option> <option value=\"NI\">Nicaragua</option> <option value=\"NE\">Niger</option> <option value=\"NG\">Nigeria</option> <option value=\"NU\">Niue</option> <option value=\"NF\">Norfolk Island</option> <option value=\"MP\">Northern Mariana Islands</option> <option value=\"NO\">Norway</option> <option value=\"OM\">Oman</option> <option value=\"PK\">Pakistan</option> <option value=\"PW\">Palau</option> <option value=\"PS\">Palestinian Territory, Occupied</option> <option value=\"PA\">Panama</option> <option value=\"PG\">Papua New Guinea</option> <option value=\"PY\">Paraguay</option> <option value=\"PE\">Peru</option> <option value=\"PH\">Philippines</option> <option value=\"PN\">Pitcairn</option> <option value=\"PL\">Poland</option> <option value=\"PT\">Portugal</option> <option value=\"PR\">Puerto Rico</option> <option value=\"QA\">Qatar</option> <option value=\"RE\">Réunion</option> <option value=\"RO\">Romania</option> <option value=\"RU\">Russian Federation</option> <option value=\"RW\">Rwanda</option> <option value=\"BL\">Saint Barthélemy</option> <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option> <option value=\"KN\">Saint Kitts and Nevis</option> <option value=\"LC\">Saint Lucia</option> <option value=\"MF\">Saint Martin (French part)</option> <option value=\"PM\">Saint Pierre and Miquelon</option> <option value=\"VC\">Saint Vincent and the Grenadines</option> <option value=\"WS\">Samoa</option> <option value=\"SM\">San Marino</option> <option value=\"ST\">Sao Tome and Principe</option> <option value=\"SA\">Saudi Arabia</option> <option value=\"SN\">Senegal</option> <option value=\"RS\">Serbia</option> <option value=\"SC\">Seychelles</option> <option value=\"SL\">Sierra Leone</option> <option value=\"SG\">Singapore</option> <option value=\"SX\">Sint Maarten (Dutch part)</option> <option value=\"SK\">Slovakia</option> <option value=\"SI\">Slovenia</option> <option value=\"SB\">Solomon Islands</option> <option value=\"SO\">Somalia</option> <option value=\"ZA\">South Africa</option> <option value=\"GS\">South Georgia and the South Sandwich Islands</option> <option value=\"SS\">South Sudan</option> <option value=\"ES\">Spain</option> <option value=\"LK\">Sri Lanka</option> <option value=\"SD\">Sudan</option> <option value=\"SR\">Suriname</option> <option value=\"SJ\">Svalbard and Jan Mayen</option> <option value=\"SZ\">Swaziland</option> <option value=\"SE\">Sweden</option> <option value=\"CH\">Switzerland</option> <option value=\"SY\">Syrian Arab Republic</option> <option value=\"TW\">Taiwan</option> <option value=\"TJ\">Tajikistan</option> <option value=\"TZ\">Tanzania, United Republic of</option> <option value=\"TH\">Thailand</option> <option value=\"TL\">Timor-Leste</option> <option value=\"TG\">Togo</option> <option value=\"TK\">Tokelau</option> <option value=\"TO\">Tonga</option> <option value=\"TT\">Trinidad and Tobago</option> <option value=\"TN\">Tunisia</option> <option value=\"TR\">Turkey</option> <option value=\"TM\">Turkmenistan</option> <option value=\"TC\">Turks and Caicos Islands</option> <option value=\"TV\">Tuvalu</option> <option value=\"UG\">Uganda</option> <option value=\"UA\">Ukraine</option> <option value=\"AE\">United Arab Emirates</option> <option value=\"UM\">United States Minor Outlying Islands</option> <option value=\"UY\">Uruguay</option> <option value=\"UZ\">Uzbekistan</option> <option value=\"VU\">Vanuatu</option> <option value=\"VE\">Venezuela, Bolivarian Republic of</option> <option value=\"VN\">Viet Nam</option> <option value=\"VG\">Virgin Islands, British</option> <option value=\"VI\">Virgin Islands, U.S.</option> <option value=\"WF\">Wallis and Futuna</option> <option value=\"EH\">Western Sahara</option> <option value=\"YE\">Yemen</option> <option value=\"ZM\">Zambia</option> <option value=\"ZW\">Zimbabwe</option> </select> </div> </div> <div class=\"col-3\"> <div class=\"form-group\"> <label for=\"addressPostalCode\">{{'zipPostalCode' | i18n}}</label> <input id=\"addressPostalCode\" class=\"form-control\" type=\"text\" name=\"addressPostalCode\" [(ngModel)]=\"taxInfo.postalCode\" [required]=\"taxInfo.country === 'US'\" autocomplete=\"postal-code\"> </div> </div> <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\"> <div class=\"form-group form-check\"> <input class=\"form-check-input\" id=\"addressIncludeTaxId\" name=\"addressIncludeTaxId\" type=\"checkbox\" [(ngModel)]=\"taxInfo.includeTaxId\"> <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{'includeVAT' | i18n}}</label> </div> </div> </div> <div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"taxId\">{{'taxIdNumber' | i18n}}</label> <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\"> </div> </div> </div> <div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressLine1\">{{'address1' | i18n}}</label> <input id=\"addressLine1\" class=\"form-control\" type=\"text\" name=\"addressLine1\" [(ngModel)]=\"taxInfo.line1\" autocomplete=\"address-line1\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressLine2\">{{'address2' | i18n}}</label> <input id=\"addressLine2\" class=\"form-control\" type=\"text\" name=\"addressLine2\" [(ngModel)]=\"taxInfo.line2\" autocomplete=\"address-line2\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressCity\">{{'cityTown' | i18n}}</label> <input id=\"addressCity\" class=\"form-control\" type=\"text\" name=\"addressCity\" [(ngModel)]=\"taxInfo.city\" autocomplete=\"address-level2\"> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"addressState\">{{'stateProvince' | i18n}}</label> <input id=\"addressState\" class=\"form-control\" type=\"text\" name=\"addressState\" [(ngModel)]=\"taxInfo.state\" autocomplete=\"address-level1\"> </div> </div> </div> ","export enum OrganizationUserStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n}\n","import { Injectable } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { DeviceType } from 'jslib-common/enums/deviceType';\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\n\n\n@Injectable()\nexport class EventService {\n    constructor(private i18nService: I18nService, private policyService: PolicyService) { }\n\n    getDefaultDateFilters() {\n        const d = new Date();\n        const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n        d.setDate(d.getDate() - 30);\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n        return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n    }\n\n    formatDateFilters(filterStart: string, filterEnd: string) {\n        const start: Date = new Date(filterStart);\n        const end: Date = new Date(filterEnd + ':59.999');\n        if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n            throw new Error('Invalid date range.');\n        }\n        return [start.toISOString(), end.toISOString()];\n    }\n\n    async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n        const appInfo = this.getAppInfo(ev.deviceType);\n        const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n        return {\n            message: message,\n            humanReadableMessage: humanReadableMessage,\n            appIcon: appInfo[0],\n            appName: appInfo[1],\n        };\n    }\n\n    private async getEventMessage(ev: EventResponse, options: EventOptions) {\n        let msg = '';\n        let humanReadableMsg = '';\n        switch (ev.type) {\n            // User\n            case EventType.User_LoggedIn:\n                msg = humanReadableMsg = this.i18nService.t('loggedIn');\n                break;\n            case EventType.User_ChangedPassword:\n                msg = humanReadableMsg = this.i18nService.t('changedPassword');\n                break;\n            case EventType.User_Updated2fa:\n                msg = humanReadableMsg = this.i18nService.t('enabledUpdated2fa');\n                break;\n            case EventType.User_Disabled2fa:\n                msg = humanReadableMsg = this.i18nService.t('disabled2fa');\n                break;\n            case EventType.User_Recovered2fa:\n                msg = humanReadableMsg = this.i18nService.t('recovered2fa');\n                break;\n            case EventType.User_FailedLogIn:\n                msg = humanReadableMsg = this.i18nService.t('failedLogin');\n                break;\n            case EventType.User_FailedLogIn2fa:\n                msg = humanReadableMsg = this.i18nService.t('failedLogin2fa');\n                break;\n            case EventType.User_ClientExportedVault:\n                msg = humanReadableMsg = this.i18nService.t('exportedVault');\n                break;\n            case EventType.User_UpdatedTempPassword:\n                msg = humanReadableMsg = this.i18nService.t('updatedMasterPassword');\n                break;\n            // Cipher\n            case EventType.Cipher_Created:\n                msg = this.i18nService.t('createdItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('createdItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Updated:\n                msg = this.i18nService.t('editedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('editedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Deleted:\n                msg = this.i18nService.t('permanentlyDeletedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('permanentlyDeletedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_SoftDeleted:\n                msg = this.i18nService.t('deletedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('deletedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Restored:\n                msg = this.i18nService.t('restoredItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('restoredItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_AttachmentCreated:\n                msg = this.i18nService.t('createdAttachmentForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('createdAttachmentForItem', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_AttachmentDeleted:\n                msg = this.i18nService.t('deletedAttachmentForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('deletedAttachmentForItem', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_Shared:\n                msg = this.i18nService.t('movedItemIdToOrg', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('movedItemIdToOrg', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientViewed:\n                msg = this.i18nService.t('viewedItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledPasswordVisible:\n                msg = this.i18nService.t('viewedPasswordItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedPasswordItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledHiddenFieldVisible:\n                msg = this.i18nService.t('viewedHiddenFieldItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedHiddenFieldItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientToggledCardCodeVisible:\n                msg = this.i18nService.t('viewedSecurityCodeItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('viewedSecurityCodeItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedHiddenField:\n                msg = this.i18nService.t('copiedHiddenFieldItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedHiddenFieldItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedPassword:\n                msg = this.i18nService.t('copiedPasswordItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedPasswordItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientCopiedCardCode:\n                msg = this.i18nService.t('copiedSecurityCodeItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('copiedSecurityCodeItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_ClientAutofilled:\n                msg = this.i18nService.t('autofilledItemId', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('autofilledItemId', this.getShortId(ev.cipherId));\n                break;\n            case EventType.Cipher_UpdatedCollections:\n                msg = this.i18nService.t('editedCollectionsForItem', this.formatCipherId(ev, options));\n                humanReadableMsg = this.i18nService.t('editedCollectionsForItem', this.getShortId(ev.cipherId));\n                break;\n            // Collection\n            case EventType.Collection_Created:\n                msg = this.i18nService.t('createdCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('createdCollectionId', this.getShortId(ev.collectionId));\n                break;\n            case EventType.Collection_Updated:\n                msg = this.i18nService.t('editedCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('editedCollectionId', this.getShortId(ev.collectionId));\n                break;\n            case EventType.Collection_Deleted:\n                msg = this.i18nService.t('deletedCollectionId', this.formatCollectionId(ev));\n                humanReadableMsg = this.i18nService.t('deletedCollectionId', this.getShortId(ev.collectionId));\n                break;\n            // Group\n            case EventType.Group_Created:\n                msg = this.i18nService.t('createdGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('createdGroupId', this.getShortId(ev.groupId));\n                break;\n            case EventType.Group_Updated:\n                msg = this.i18nService.t('editedGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('editedGroupId', this.getShortId(ev.groupId));\n                break;\n            case EventType.Group_Deleted:\n                msg = this.i18nService.t('deletedGroupId', this.formatGroupId(ev));\n                humanReadableMsg = this.i18nService.t('deletedGroupId', this.getShortId(ev.groupId));\n                break;\n            // Org user\n            case EventType.OrganizationUser_Invited:\n                msg = this.i18nService.t('invitedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('invitedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Confirmed:\n                msg = this.i18nService.t('confirmedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('confirmedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Updated:\n                msg = this.i18nService.t('editedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('editedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_Removed:\n                msg = this.i18nService.t('removedUserId', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('removedUserId', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_UpdatedGroups:\n                msg = this.i18nService.t('editedGroupsForUser', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('editedGroupsForUser', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_UnlinkedSso:\n                msg = this.i18nService.t('unlinkedSsoUser', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('unlinkedSsoUser', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_ResetPassword_Enroll:\n                msg = this.i18nService.t('eventEnrollPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventEnrollPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_ResetPassword_Withdraw:\n                msg = this.i18nService.t('eventWithdrawPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventWithdrawPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            case EventType.OrganizationUser_AdminResetPassword:\n                msg = this.i18nService.t('eventAdminPasswordReset', this.formatOrgUserId(ev));\n                humanReadableMsg = this.i18nService.t('eventAdminPasswordReset', this.getShortId(ev.organizationUserId));\n                break;\n            // Org\n            case EventType.Organization_Updated:\n                msg = humanReadableMsg = this.i18nService.t('editedOrgSettings');\n                break;\n            case EventType.Organization_PurgedVault:\n                msg = humanReadableMsg = this.i18nService.t('purgedOrganizationVault');\n                break;\n            /*\n            case EventType.Organization_ClientExportedVault:\n                msg = this.i18nService.t('exportedOrganizationVault');\n                break;\n            */\n            case EventType.Organization_VaultAccessed:\n                msg = humanReadableMsg = this.i18nService.t('vaultAccessedByProvider');\n                break;\n            // Policies\n            case EventType.Policy_Updated:\n                msg = this.i18nService.t('modifiedPolicyId', this.formatPolicyId(ev));\n\n                const policies = await this.policyService.getAll();\n                const policy = policies.filter(p => p.id === ev.policyId)[0];\n                let p1 = this.getShortId(ev.policyId);\n                if (policy != null) {\n                    p1 = PolicyType[policy.type];\n                }\n\n                humanReadableMsg = this.i18nService.t('modifiedPolicyId', p1);\n                break;\n            // Provider users:\n            case EventType.ProviderUser_Invited:\n                msg = this.i18nService.t('invitedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('invitedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderUser_Confirmed:\n                msg = this.i18nService.t('confirmedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('confirmedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderUser_Updated:\n                msg = this.i18nService.t('editedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('editedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderUser_Removed:\n                msg = this.i18nService.t('removedUserId', this.formatProviderUserId(ev));\n                humanReadableMsg = this.i18nService.t('removedUserId', this.getShortId(ev.providerUserId));\n                break;\n            case EventType.ProviderOrganization_Created:\n                msg = this.i18nService.t('createdOrganizationId', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('createdOrganizationId', this.getShortId(ev.providerOrganizationId));\n                break;\n            case EventType.ProviderOrganization_Added:\n                msg = this.i18nService.t('addedOrganizationId', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('addedOrganizationId', this.getShortId(ev.providerOrganizationId));\n                break;\n            case EventType.ProviderOrganization_Removed:\n                msg = this.i18nService.t('removedOrganizationId', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('removedOrganizationId', this.getShortId(ev.providerOrganizationId));\n                break;\n            case EventType.ProviderOrganization_VaultAccessed:\n                msg = this.i18nService.t('accessedClientVault', this.formatProviderOrganizationId(ev));\n                humanReadableMsg = this.i18nService.t('accessedClientVault', this.getShortId(ev.providerOrganizationId));\n                break;\n            default:\n                break;\n        }\n        return {\n            message: msg === '' ? null : msg,\n            humanReadableMessage: humanReadableMsg === '' ? null : humanReadableMsg,\n        };\n    }\n\n    private getAppInfo(deviceType: DeviceType): [string, string] {\n        switch (deviceType) {\n            case DeviceType.Android:\n                return ['fa-android', this.i18nService.t('mobile') + ' - Android'];\n            case DeviceType.iOS:\n                return ['fa-apple', this.i18nService.t('mobile') + ' - iOS'];\n            case DeviceType.UWP:\n                return ['fa-windows', this.i18nService.t('mobile') + ' - Windows'];\n            case DeviceType.ChromeExtension:\n                return ['fa-chrome', this.i18nService.t('extension') + ' - Chrome'];\n            case DeviceType.FirefoxExtension:\n                return ['fa-firefox', this.i18nService.t('extension') + ' - Firefox'];\n            case DeviceType.OperaExtension:\n                return ['fa-opera', this.i18nService.t('extension') + ' - Opera'];\n            case DeviceType.EdgeExtension:\n                return ['fa-edge', this.i18nService.t('extension') + ' - Edge'];\n            case DeviceType.VivaldiExtension:\n                return ['fa-puzzle-piece', this.i18nService.t('extension') + ' - Vivaldi'];\n            case DeviceType.SafariExtension:\n                return ['fa-safari', this.i18nService.t('extension') + ' - Safari'];\n            case DeviceType.WindowsDesktop:\n                return ['fa-windows', this.i18nService.t('desktop') + ' - Windows'];\n            case DeviceType.MacOsDesktop:\n                return ['fa-apple', this.i18nService.t('desktop') + ' - macOS'];\n            case DeviceType.LinuxDesktop:\n                return ['fa-linux', this.i18nService.t('desktop') + ' - Linux'];\n            case DeviceType.ChromeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Chrome'];\n            case DeviceType.FirefoxBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Firefox'];\n            case DeviceType.OperaBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Opera'];\n            case DeviceType.SafariBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Safari'];\n            case DeviceType.VivaldiBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Vivaldi'];\n            case DeviceType.EdgeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Edge'];\n            case DeviceType.IEBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - IE'];\n            case DeviceType.UnknownBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - ' + this.i18nService.t('unknown')];\n            default:\n                return ['fa-globe', this.i18nService.t('unknown')];\n        }\n    }\n\n    private formatCipherId(ev: EventResponse, options: EventOptions) {\n        const shortId = this.getShortId(ev.cipherId);\n        if (ev.organizationId == null || !options.cipherInfo) {\n            return '<code>' + shortId + '</code>';\n        }\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/vault?search=' + shortId +\n            '&viewEvents=' + ev.cipherId);\n        return a.outerHTML;\n    }\n\n    private formatGroupId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.groupId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/groups?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatCollectionId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.collectionId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/collections?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatOrgUserId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.organizationUserId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/people?search=' + shortId +\n            '&viewEvents=' + ev.organizationUserId);\n        return a.outerHTML;\n    }\n\n    private formatProviderUserId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.providerUserId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/providers/' + ev.providerId + '/manage/people?search=' + shortId +\n            '&viewEvents=' + ev.providerUserId);\n        return a.outerHTML;\n    }\n\n    private formatProviderOrganizationId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.providerOrganizationId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/providers/' + ev.providerId + '/clients?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatPolicyId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.policyId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/policies?policyId=' + ev.policyId);\n        return a.outerHTML;\n    }\n\n    private makeAnchor(shortId: string) {\n        const a = document.createElement('a');\n        a.title = this.i18nService.t('view');\n        a.innerHTML = '<code>' + shortId + '</code>';\n        return a;\n    }\n\n    private getShortId(id: string) {\n        return id?.substring(0, 8);\n    }\n\n    private toDateTimeLocalString(date: Date) {\n        return date.getFullYear() +\n            '-' + this.pad(date.getMonth() + 1) +\n            '-' + this.pad(date.getDate()) +\n            'T' + this.pad(date.getHours()) +\n            ':' + this.pad(date.getMinutes());\n    }\n\n    private pad(num: number) {\n        const norm = Math.floor(Math.abs(num));\n        return (norm < 10 ? '0' : '') + norm;\n    }\n}\n\nexport class EventInfo {\n    message: string;\n    humanReadableMessage: string;\n    appIcon: string;\n    appName: string;\n}\n\nexport class EventOptions {\n    cipherInfo = true;\n}\n","import { CollectionData } from '../data/collectionData';\n\nimport { CollectionView } from '../view/collectionView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nexport class Collection extends Domain {\n    id: string;\n    organizationId: string;\n    name: EncString;\n    externalId: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(obj?: CollectionData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            organizationId: null,\n            name: null,\n            externalId: null,\n            readOnly: null,\n            hidePasswords: null,\n        }, alreadyEncrypted, ['id', 'organizationId', 'externalId', 'readOnly', 'hidePasswords']);\n    }\n\n    decrypt(): Promise<CollectionView> {\n        return this.decryptObj(new CollectionView(this), {\n            name: null,\n        }, this.organizationId);\n    }\n}\n","import { View } from './view';\n\nimport { Identity } from '../domain/identity';\n\nimport { Utils } from '../../misc/utils';\n\nexport class IdentityView implements View {\n    title: string = null;\n    middleName: string = null;\n    address1: string = null;\n    address2: string = null;\n    address3: string = null;\n    city: string = null;\n    state: string = null;\n    postalCode: string = null;\n    country: string = null;\n    company: string = null;\n    email: string = null;\n    phone: string = null;\n    ssn: string = null;\n    username: string = null;\n    passportNumber: string = null;\n    licenseNumber: string = null;\n\n    // tslint:disable\n    private _firstName: string = null;\n    private _lastName: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(i?: Identity) {\n        // ctor\n    }\n\n    get firstName(): string {\n        return this._firstName;\n    }\n    set firstName(value: string) {\n        this._firstName = value;\n        this._subTitle = null;\n    }\n\n    get lastName(): string {\n        return this._lastName;\n    }\n    set lastName(value: string) {\n        this._lastName = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n            this._subTitle = '';\n            if (this.firstName != null) {\n                this._subTitle = this.firstName;\n            }\n            if (this.lastName != null) {\n                if (this._subTitle !== '') {\n                    this._subTitle += ' ';\n                }\n                this._subTitle += this.lastName;\n            }\n        }\n\n        return this._subTitle;\n    }\n\n    get fullName(): string {\n        if (this.title != null || this.firstName != null || this.middleName != null || this.lastName != null) {\n            let name = '';\n            if (this.title != null) {\n                name += (this.title + ' ');\n            }\n            if (this.firstName != null) {\n                name += (this.firstName + ' ');\n            }\n            if (this.middleName != null) {\n                name += (this.middleName + ' ');\n            }\n            if (this.lastName != null) {\n                name += this.lastName;\n            }\n            return name.trim();\n        }\n\n        return null;\n    }\n\n    get fullAddress(): string {\n        let address = this.address1;\n        if (!Utils.isNullOrWhitespace(this.address2)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address2;\n        }\n        if (!Utils.isNullOrWhitespace(this.address3)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address3;\n        }\n        return address;\n    }\n\n    get fullAddressPart2(): string {\n        if (this.city == null && this.state == null && this.postalCode == null) {\n            return null;\n        }\n        const city = this.city || '-';\n        const state = this.state;\n        const postalCode = this.postalCode || '-';\n        let addressPart2 = city;\n        if (!Utils.isNullOrWhitespace(state)) {\n            addressPart2 += ', ' + state;\n        }\n        addressPart2 += ', ' + postalCode;\n        return addressPart2;\n    }\n}\n","import { LoginUriView } from './loginUriView';\nimport { View } from './view';\n\nimport { Utils } from '../../misc/utils';\nimport { Login } from '../domain/login';\n\nexport class LoginView implements View {\n    username: string = null;\n    password: string = null;\n    passwordRevisionDate?: Date = null;\n    totp: string = null;\n    uris: LoginUriView[] = null;\n    autofillOnPageLoad: boolean = null;\n\n    constructor(l?: Login) {\n        if (!l) {\n            return;\n        }\n\n        this.passwordRevisionDate = l.passwordRevisionDate;\n        this.autofillOnPageLoad = l.autofillOnPageLoad;\n    }\n\n    get uri(): string {\n        return this.hasUris ? this.uris[0].uri : null;\n    }\n\n    get maskedPassword(): string {\n        return this.password != null ? '••••••••' : null;\n    }\n\n    get subTitle(): string {\n        return this.username;\n    }\n\n    get canLaunch(): boolean {\n        return this.hasUris && this.uris.some(u => u.canLaunch);\n    }\n\n    get hasTotp(): boolean {\n        return !Utils.isNullOrWhitespace(this.totp);\n    }\n\n    get launchUri(): string {\n        if (this.hasUris) {\n            const uri = this.uris.find(u => u.canLaunch);\n            if (uri != null) {\n                return uri.launchUri;\n            }\n        }\n        return null;\n    }\n\n    get hasUris(): boolean {\n        return this.uris != null && this.uris.length > 0;\n    }\n}\n","import { CollectionDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionData {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n    readOnly: boolean;\n\n    constructor(response: CollectionDetailsResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.name = response.name;\n        this.externalId = response.externalId;\n        this.readOnly = response.readOnly;\n    }\n}\n","import { View } from './view';\n\nimport { Collection } from '../domain/collection';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nimport { CollectionGroupDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionView implements View, ITreeNodeObject {\n    id: string = null;\n    organizationId: string = null;\n    name: string = null;\n    externalId: string = null;\n    readOnly: boolean = null;\n    hidePasswords: boolean = null;\n\n    constructor(c?: Collection | CollectionGroupDetailsResponse) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.externalId = c.externalId;\n        if (c instanceof Collection) {\n            this.readOnly = c.readOnly;\n            this.hidePasswords = c.hidePasswords;\n        }\n    }\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { AttachmentData } from './attachmentData';\nimport { CardData } from './cardData';\nimport { FieldData } from './fieldData';\nimport { IdentityData } from './identityData';\nimport { LoginData } from './loginData';\nimport { PasswordHistoryData } from './passwordHistoryData';\nimport { SecureNoteData } from './secureNoteData';\n\nimport { CipherResponse } from '../response/cipherResponse';\n\nexport class CipherData {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    userId: string;\n    edit: boolean;\n    viewPassword: boolean;\n    organizationUseTotp: boolean;\n    favorite: boolean;\n    revisionDate: string;\n    type: CipherType;\n    sizeName: string;\n    name: string;\n    notes: string;\n    login?: LoginData;\n    secureNote?: SecureNoteData;\n    card?: CardData;\n    identity?: IdentityData;\n    fields?: FieldData[];\n    attachments?: AttachmentData[];\n    passwordHistory?: PasswordHistoryData[];\n    collectionIds?: string[];\n    deletedDate: string;\n    reprompt: CipherRepromptType;\n\n    constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n        if (response == null) {\n            return;\n        }\n\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.folderId = response.folderId;\n        this.userId = userId;\n        this.edit = response.edit;\n        this.viewPassword = response.viewPassword;\n        this.organizationUseTotp = response.organizationUseTotp;\n        this.favorite = response.favorite;\n        this.revisionDate = response.revisionDate;\n        this.type = response.type;\n        this.name = response.name;\n        this.notes = response.notes;\n        this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n        this.deletedDate = response.deletedDate;\n        this.reprompt = response.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginData(response.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteData(response.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new CardData(response.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityData(response.identity);\n                break;\n            default:\n                break;\n        }\n\n        if (response.fields != null) {\n            this.fields = response.fields.map(f => new FieldData(f));\n        }\n        if (response.attachments != null) {\n            this.attachments = response.attachments.map(a => new AttachmentData(a));\n        }\n        if (response.passwordHistory != null) {\n            this.passwordHistory = response.passwordHistory.map(ph => new PasswordHistoryData(ph));\n        }\n    }\n}\n","export enum SendType {\n    Text = 0,\n    File = 1,\n}\n","export enum CipherRepromptType {\n    None = 0,\n    Password = 1,\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class PermissionsApi extends BaseResponse {\n    accessBusinessPortal: boolean;\n    accessEventLogs: boolean;\n    accessImportExport: boolean;\n    accessReports: boolean;\n    manageAllCollections: boolean;\n    manageAssignedCollections: boolean;\n    manageCiphers: boolean;\n    manageGroups: boolean;\n    manageSso: boolean;\n    managePolicies: boolean;\n    manageUsers: boolean;\n    manageResetPassword: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return this;\n        }\n        this.accessBusinessPortal = this.getResponseProperty('AccessBusinessPortal');\n        this.accessEventLogs = this.getResponseProperty('AccessEventLogs');\n        this.accessImportExport = this.getResponseProperty('AccessImportExport');\n        this.accessReports = this.getResponseProperty('AccessReports');\n        this.manageAllCollections = this.getResponseProperty('ManageAllCollections');\n        this.manageAssignedCollections = this.getResponseProperty('ManageAssignedCollections');\n        this.manageCiphers = this.getResponseProperty('ManageCiphers');\n        this.manageGroups = this.getResponseProperty('ManageGroups');\n        this.manageSso = this.getResponseProperty('ManageSso');\n        this.managePolicies = this.getResponseProperty('ManagePolicies');\n        this.manageUsers = this.getResponseProperty('ManageUsers');\n        this.manageResetPassword = this.getResponseProperty('ManageResetPassword');\n    }\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-password-strength',\n    templateUrl: 'password-strength.component.html',\n})\nexport class PasswordStrengthComponent implements OnChanges {\n    @Input() score?: number;\n    @Input() showText = false;\n\n    scoreWidth = 0;\n    color = 'bg-danger';\n    text: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnChanges(): void {\n        this.scoreWidth = this.score == null ? 0 : (this.score + 1) * 20;\n        switch (this.score) {\n            case 4:\n                this.color = 'bg-success';\n                this.text = this.i18nService.t('strong');\n                break;\n            case 3:\n                this.color = 'bg-primary';\n                this.text = this.i18nService.t('good');\n                break;\n            case 2:\n                this.color = 'bg-warning';\n                this.text = this.i18nService.t('weak');\n                break;\n            default:\n                this.color = 'bg-danger';\n                this.text = this.score != null ? this.i18nService.t('weak') : null;\n                break;\n        }\n    }\n}\n","<div class=\"progress\"> <div class=\"progress-bar {{color}}\" role=\"progressbar\" [ngStyle]=\"{width: (scoreWidth + '%')}\" attr.aria-valuenow=\"{{scoreWidth}}\" aria-valuemin=\"0\" aria-valuemax=\"100\"> <ng-container *ngIf=\"showText && text\"> {{text}} </ng-container> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-two-factor-verify',\n    templateUrl: 'two-factor-verify.component.html',\n})\nexport class TwoFactorVerifyComponent {\n    @Input() type: TwoFactorProviderType;\n    @Input() organizationId: string;\n    @Output() onAuthed = new EventEmitter<any>();\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    private masterPasswordHash: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = this.masterPasswordHash =\n            await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        try {\n            switch (this.type) {\n                case -1:\n                    this.formPromise = this.apiService.getTwoFactorRecover(request);\n                    break;\n                case TwoFactorProviderType.Duo:\n                case TwoFactorProviderType.OrganizationDuo:\n                    if (this.organizationId != null) {\n                        this.formPromise = this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n                    } else {\n                        this.formPromise = this.apiService.getTwoFactorDuo(request);\n                    }\n                    break;\n                case TwoFactorProviderType.Email:\n                    this.formPromise = this.apiService.getTwoFactorEmail(request);\n                    break;\n                case TwoFactorProviderType.WebAuthn:\n                    this.formPromise = this.apiService.getTwoFactorWebAuthn(request);\n                    break;\n                case TwoFactorProviderType.Authenticator:\n                    this.formPromise = this.apiService.getTwoFactorAuthenticator(request);\n                    break;\n                case TwoFactorProviderType.Yubikey:\n                    this.formPromise = this.apiService.getTwoFactorYubiKey(request);\n                    break;\n            }\n\n            const response = await this.formPromise;\n            this.onAuthed.emit({\n                response: response,\n                masterPasswordHash: this.masterPasswordHash,\n            });\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-body\"> <p>{{'twoStepLoginAuthDesc' | i18n}}</p> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'continue' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> ","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CipherData } from '../data/cipherData';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Attachment } from './attachment';\nimport { Card } from './card';\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { Password } from './password';\nimport { SecureNote } from './secureNote';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Cipher extends Domain {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    name: EncString;\n    notes: EncString;\n    type: CipherType;\n    favorite: boolean;\n    organizationUseTotp: boolean;\n    edit: boolean;\n    viewPassword: boolean;\n    revisionDate: Date;\n    localData: any;\n    login: Login;\n    identity: Identity;\n    card: Card;\n    secureNote: SecureNote;\n    attachments: Attachment[];\n    fields: Field[];\n    passwordHistory: Password[];\n    collectionIds: string[];\n    deletedDate: Date;\n    reprompt: CipherRepromptType;\n\n    constructor(obj?: CipherData, alreadyEncrypted: boolean = false, localData: any = null) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            userId: null,\n            organizationId: null,\n            folderId: null,\n            name: null,\n            notes: null,\n        }, alreadyEncrypted, ['id', 'userId', 'organizationId', 'folderId']);\n\n        this.type = obj.type;\n        this.favorite = obj.favorite;\n        this.organizationUseTotp = obj.organizationUseTotp;\n        this.edit = obj.edit;\n        if (obj.viewPassword != null) {\n            this.viewPassword = obj.viewPassword;\n        } else {\n            this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n        }\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n        this.collectionIds = obj.collectionIds;\n        this.localData = localData;\n        this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n        this.reprompt = obj.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new Login(obj.login, alreadyEncrypted);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(obj.secureNote, alreadyEncrypted);\n                break;\n            case CipherType.Card:\n                this.card = new Card(obj.card, alreadyEncrypted);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(obj.identity, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n\n        if (obj.attachments != null) {\n            this.attachments = obj.attachments.map(a => new Attachment(a, alreadyEncrypted));\n        } else {\n            this.attachments = null;\n        }\n\n        if (obj.fields != null) {\n            this.fields = obj.fields.map(f => new Field(f, alreadyEncrypted));\n        } else {\n            this.fields = null;\n        }\n\n        if (obj.passwordHistory != null) {\n            this.passwordHistory = obj.passwordHistory.map(ph => new Password(ph, alreadyEncrypted));\n        } else {\n            this.passwordHistory = null;\n        }\n    }\n\n    async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n        const model = new CipherView(this);\n\n        await this.decryptObj(model, {\n            name: null,\n            notes: null,\n        }, this.organizationId, encKey);\n\n        switch (this.type) {\n            case CipherType.Login:\n                model.login = await this.login.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.SecureNote:\n                model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.Card:\n                model.card = await this.card.decrypt(this.organizationId, encKey);\n                break;\n            case CipherType.Identity:\n                model.identity = await this.identity.decrypt(this.organizationId, encKey);\n                break;\n            default:\n                break;\n        }\n\n        const orgId = this.organizationId;\n\n        if (this.attachments != null && this.attachments.length > 0) {\n            const attachments: any[] = [];\n            await this.attachments.reduce((promise, attachment) => {\n                return promise.then(() => {\n                    return attachment.decrypt(orgId, encKey);\n                }).then(decAttachment => {\n                    attachments.push(decAttachment);\n                });\n            }, Promise.resolve());\n            model.attachments = attachments;\n        }\n\n        if (this.fields != null && this.fields.length > 0) {\n            const fields: any[] = [];\n            await this.fields.reduce((promise, field) => {\n                return promise.then(() => {\n                    return field.decrypt(orgId, encKey);\n                }).then(decField => {\n                    fields.push(decField);\n                });\n            }, Promise.resolve());\n            model.fields = fields;\n        }\n\n        if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n            const passwordHistory: any[] = [];\n            await this.passwordHistory.reduce((promise, ph) => {\n                return promise.then(() => {\n                    return ph.decrypt(orgId, encKey);\n                }).then(decPh => {\n                    passwordHistory.push(decPh);\n                });\n            }, Promise.resolve());\n            model.passwordHistory = passwordHistory;\n        }\n\n        return model;\n    }\n\n    toCipherData(userId: string): CipherData {\n        const c = new CipherData();\n        c.id = this.id;\n        c.organizationId = this.organizationId;\n        c.folderId = this.folderId;\n        c.userId = this.organizationId != null ? userId : null;\n        c.edit = this.edit;\n        c.viewPassword = this.viewPassword;\n        c.organizationUseTotp = this.organizationUseTotp;\n        c.favorite = this.favorite;\n        c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n        c.type = this.type;\n        c.collectionIds = this.collectionIds;\n        c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n        c.reprompt = this.reprompt;\n\n        this.buildDataModel(this, c, {\n            name: null,\n            notes: null,\n        });\n\n        switch (c.type) {\n            case CipherType.Login:\n                c.login = this.login.toLoginData();\n                break;\n            case CipherType.SecureNote:\n                c.secureNote = this.secureNote.toSecureNoteData();\n                break;\n            case CipherType.Card:\n                c.card = this.card.toCardData();\n                break;\n            case CipherType.Identity:\n                c.identity = this.identity.toIdentityData();\n                break;\n            default:\n                break;\n        }\n\n        if (this.fields != null) {\n            c.fields = this.fields.map(f => f.toFieldData());\n        }\n        if (this.attachments != null) {\n            c.attachments = this.attachments.map(a => a.toAttachmentData());\n        }\n        if (this.passwordHistory != null) {\n            c.passwordHistory = this.passwordHistory.map(ph => ph.toPasswordHistoryData());\n        }\n        return c;\n    }\n}\n","export abstract class PasswordRepromptService {\n    protectedFields: () => string[];\n    showPasswordPrompt: () => Promise<boolean>;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\n@Component({\n    selector: 'app-navbar',\n    templateUrl: 'navbar.component.html',\n})\nexport class NavbarComponent implements OnInit {\n    selfHosted = false;\n    name: string;\n    email: string;\n    providers: Provider[] = [];\n\n    constructor(private messagingService: MessagingService, private platformUtilsService: PlatformUtilsService,\n        private tokenService: TokenService, private userService: UserService, private syncService: SyncService) {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.name = await this.tokenService.getName();\n        this.email = await this.tokenService.getEmail();\n        if (this.name == null || this.name.trim() === '') {\n            this.name = this.email;\n        }\n\n        // Ensure provides are loaded\n        if (await this.syncService.getLastSync() == null) {\n            await this.syncService.fullSync(false);\n        }\n        this.providers = await this.userService.getAllProviders();\n    }\n\n    lock() {\n        this.messagingService.send('lockVault');\n    }\n\n    logOut() {\n        this.messagingService.send('logout');\n    }\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-primary\" [ngClass]=\"{'bg-secondary-alt': selfHosted}\"> <div class=\"container\"> <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{'pageTitle' | i18n : 'Bitwarden'}}\"> <i class=\"fa fa-shield\" aria-hidden=\"true\"></i> </a> <div class=\"collapse navbar-collapse\"> <ul class=\"navbar-nav\"> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/vault\">{{'myVault' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/sends\">{{'send' | i18n}}</a> </li> <ng-container *ngIf=\"providers.length >= 1\"> <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\"> <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{'provider' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\"> <a class=\"nav-link\" routerLink=\"/providers\">{{'provider' | i18n}}</a> </li> </ng-container> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/tools\">{{'tools' | i18n}}</a> </li> <li class=\"nav-item\" routerLinkActive=\"active\"> <a class=\"nav-link\" routerLink=\"/settings\">{{'settings' | i18n}}</a> </li> </ul> </div> <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\"> <li class=\"nav-item dropdown\"> <a class=\"nav-item nav-link dropdown-toggle\" href=\"#\" id=\"nav-profile\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"fa fa-user-circle fa-lg\" aria-hidden=\"true\"></i> </a> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"nav-profile\"> <div class=\"dropdown-item-text d-flex align-items-center\" *ngIf=\"name\" appStopProp> <app-avatar [data]=\"name\" [email]=\"email\" size=\"25\" fontSize=\"14\" [circle]=\"true\"></app-avatar> <div class=\"ml-2 overflow-hidden\"> <span>{{'loggedInAs' | i18n}}</span> <small class=\"text-muted\">{{name}}</small> </div> </div> <div class=\"dropdown-divider\"></div> <a class=\"dropdown-item\" href=\"#\" routerLink=\"/settings/account\"> <i class=\"fa fa-fw fa-user\" aria-hidden=\"true\"></i> {{'myAccount' | i18n}} </a> <a class=\"dropdown-item\" href=\"https://help.bitwarden.com\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-fw fa-question-circle\" aria-hidden=\"true\"></i> {{'getHelp' | i18n}} </a> <a class=\"dropdown-item\" href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-fw fa-download\" aria-hidden=\"true\"></i> {{'getApps' | i18n}} </a> <div class=\"dropdown-divider\"></div> <button type=\"button\" class=\"dropdown-item\" (click)=\"lock()\"> <i class=\"fa fa-fw fa-lock\" aria-hidden=\"true\"></i> {{'lockNow' | i18n}} </button> <button type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\"> <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i> {{'logOut' | i18n}} </button> </div> </li> </ul> </div> </nav> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: 'footer.component.html',\n})\nexport class FooterComponent implements OnInit {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = await this.platformUtilsService.getApplicationVersion();\n    }\n}\n","<div class=\"container footer text-muted\"> <div class=\"row\"> <div class=\"col\"> &copy; {{year}}, Bitwarden Inc. </div> <div class=\"col text-center\"></div> <div class=\"col text-right\"> {{'versionNumber' | i18n : version}} </div> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\nimport { OrganizationCreateRequest } from 'jslib-common/models/request/organizationCreateRequest';\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUpgradeRequest } from 'jslib-common/models/request/organizationUpgradeRequest';\nimport { ProviderOrganizationCreateRequest } from 'jslib-common/models/request/provider/providerOrganizationCreateRequest';\n\nimport { PlanResponse } from 'jslib-common/models/response/planResponse';\n\n@Component({\n    selector: 'app-organization-plans',\n    templateUrl: 'organization-plans.component.html',\n})\nexport class OrganizationPlansComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n    @Input() organizationId: string;\n    @Input() showFree = true;\n    @Input() showCancel = false;\n    @Input() product: ProductType = ProductType.Free;\n    @Input() plan: PlanType = PlanType.Free;\n    @Input() providerId: string;\n    @Output() onSuccess = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    loading: boolean = true;\n    selfHosted: boolean = false;\n    ownedBusiness: boolean = false;\n    premiumAccessAddon: boolean = false;\n    additionalStorage: number = 0;\n    additionalSeats: number = 0;\n    name: string;\n    billingEmail: string;\n    clientOwnerEmail: string;\n    businessName: string;\n    productTypes = ProductType;\n    formPromise: Promise<any>;\n    singleOrgPolicyBlock: boolean = false;\n    freeTrial: boolean = false;\n\n    plans: PlanResponse[];\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService, private router: Router, private syncService: SyncService,\n        private policyService: PolicyService, private userService: UserService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        if (!this.selfHosted) {\n            const plans = await this.apiService.getPlans();\n            this.plans = plans.data;\n            if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n                this.ownedBusiness = true;\n            }\n        }\n\n        if (this.providerId) {\n            this.ownedBusiness = true;\n            this.changedOwnedBusiness();\n        }\n\n        this.loading = false;\n    }\n\n    get createOrganization() {\n        return this.organizationId == null;\n    }\n\n    get selectedPlan() {\n        return this.plans.find(plan => plan.type === this.plan);\n    }\n\n    get selectedPlanInterval() {\n        return this.selectedPlan.isAnnual\n            ? 'year'\n            : 'month';\n    }\n\n    get selectableProducts() {\n        let validPlans = this.plans.filter(plan => plan.type !== PlanType.Custom);\n\n        if (this.ownedBusiness) {\n            validPlans = validPlans.filter(plan => plan.canBeUsedByBusiness);\n        }\n\n        if (!this.showFree) {\n            validPlans = validPlans.filter(plan => plan.product !== ProductType.Free);\n        }\n\n        validPlans = validPlans\n            .filter(plan => !plan.legacyYear\n                && !plan.disabled\n                && (plan.isAnnual || plan.product === this.productTypes.Free));\n\n        return validPlans;\n    }\n\n    get selectablePlans() {\n        return this.plans.filter(plan => !plan.legacyYear && !plan.disabled && plan.product === this.product);\n    }\n\n    additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n        if (!selectedPlan.isAnnual) {\n            return selectedPlan.additionalStoragePricePerGb;\n        }\n        return selectedPlan.additionalStoragePricePerGb / 12;\n    }\n\n    seatPriceMonthly(selectedPlan: PlanResponse) {\n        if (!selectedPlan.isAnnual) {\n            return selectedPlan.seatPrice;\n        }\n        return selectedPlan.seatPrice / 12;\n    }\n\n    additionalStorageTotal(plan: PlanResponse): number {\n        if (!plan.hasAdditionalStorageOption) {\n            return 0;\n        }\n\n        return plan.additionalStoragePricePerGb * Math.abs(this.additionalStorage || 0);\n    }\n\n    seatTotal(plan: PlanResponse): number {\n        if (!plan.hasAdditionalSeatsOption) {\n            return 0;\n        }\n\n        return plan.seatPrice * Math.abs(this.additionalSeats || 0);\n    }\n\n    get subtotal() {\n        let subTotal = this.selectedPlan.basePrice;\n        if (this.selectedPlan.hasAdditionalSeatsOption && this.additionalSeats) {\n            subTotal += this.seatTotal(this.selectedPlan);\n        }\n        if (this.selectedPlan.hasAdditionalStorageOption && this.additionalStorage) {\n            subTotal += this.additionalStorageTotal(this.selectedPlan);\n        }\n        if (this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon) {\n            subTotal += this.selectedPlan.premiumAccessOptionPrice;\n        }\n        return subTotal;\n    }\n\n    get taxCharges() {\n        return this.taxComponent != null && this.taxComponent.taxRate != null ?\n            (this.taxComponent.taxRate / 100) * this.subtotal :\n            0;\n    }\n\n    get total() {\n        return (this.subtotal + this.taxCharges) || 0;\n    }\n\n    changedProduct() {\n        this.plan = this.selectablePlans[0].type;\n        if (!this.selectedPlan.hasPremiumAccessOption) {\n            this.premiumAccessAddon = false;\n        }\n        if (!this.selectedPlan.hasAdditionalStorageOption) {\n            this.additionalStorage = 0;\n        }\n        if (!this.selectedPlan.hasAdditionalSeatsOption) {\n            this.additionalSeats = 0;\n        } else if (!this.additionalSeats && !this.selectedPlan.baseSeats &&\n            this.selectedPlan.hasAdditionalSeatsOption) {\n            this.additionalSeats = 1;\n        }\n        this.freeTrial = this.selectedPlan.trialPeriodDays != null;\n    }\n\n    changedOwnedBusiness() {\n        if (!this.ownedBusiness || this.selectedPlan.canBeUsedByBusiness) {\n            return;\n        }\n        this.product = ProductType.Teams;\n        this.plan = PlanType.TeamsAnnually;\n    }\n\n    changedCountry() {\n        this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== 'US';\n        // Bank Account payments are only available for US customers\n        if (this.paymentComponent.hideBank &&\n            this.paymentComponent.method === PaymentMethodType.BankAccount) {\n            this.paymentComponent.method = PaymentMethodType.Card;\n            this.paymentComponent.changeMethod();\n        }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    async submit() {\n        this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n        if (this.singleOrgPolicyBlock) {\n            return;\n        }\n\n        try {\n            const doSubmit = async () => {\n                let orgId: string = null;\n                if (this.createOrganization) {\n                    const shareKey = await this.cryptoService.makeShareKey();\n                    const key = shareKey[0].encryptedString;\n                    const collection = await this.cryptoService.encrypt(\n                        this.i18nService.t('defaultCollection'), shareKey[1]);\n                    const collectionCt = collection.encryptedString;\n                    const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n                    if (this.selfHosted) {\n                        orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n                    } else {\n                        orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n                    }\n\n                    this.toasterService.popAsync('success', this.i18nService.t('organizationCreated'), this.i18nService.t('organizationReadyToGo'));\n                } else {\n                    orgId = await this.updateOrganization(orgId);\n                    this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpgraded'));\n                }\n\n                await this.apiService.refreshIdentityToken();\n                await this.syncService.fullSync(true);\n                this.router.navigate(['/organizations/' + orgId]);\n            };\n\n            this.formPromise = doSubmit();\n            await this.formPromise;\n            this.onSuccess.emit();\n        } catch { }\n    }\n\n    private async userHasBlockingSingleOrgPolicy() {\n        const policies = await this.policyService.getAll(PolicyType.SingleOrg);\n        const orgs = await this.userService.getAllOrganizations();\n\n        const orgsWithSingleOrgPolicy = policies\n            .filter(p => p.enabled && p.type === PolicyType.SingleOrg)\n            .map(p => p.organizationId);\n\n        return orgs.some(org => org.type !== OrganizationUserType.Owner &&\n            org.type !== OrganizationUserType.Admin &&\n            org.status !== OrganizationUserStatusType.Invited &&\n            orgsWithSingleOrgPolicy.includes(org.id));\n    }\n\n    private async updateOrganization(orgId: string) {\n        const request = new OrganizationUpgradeRequest();\n        request.businessName = this.ownedBusiness ? this.businessName : null;\n        request.additionalSeats = this.additionalSeats;\n        request.additionalStorageGb = this.additionalStorage;\n        request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon;\n        request.planType = this.selectedPlan.type;\n        request.billingAddressCountry = this.taxComponent.taxInfo.country;\n        request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n        // Retrieve org info to backfill pub/priv key if necessary\n        const org = await this.userService.getOrganization(this.organizationId);\n        if (!org.hasPublicAndPrivateKeys) {\n            const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n            const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n            request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        }\n\n        const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\n        if (!result.success && result.paymentIntentClientSecret != null) {\n            await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n        }\n        return this.organizationId;\n    }\n\n    private async createCloudHosted(key: string, collectionCt: string, orgKeys: [string, EncString], orgKey: SymmetricCryptoKey) {\n        const request = new OrganizationCreateRequest();\n        request.key = key;\n        request.collectionName = collectionCt;\n        request.name = this.name;\n        request.billingEmail = this.billingEmail;\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n        if (this.selectedPlan.type === PlanType.Free) {\n            request.planType = PlanType.Free;\n        } else {\n            const tokenResult = await this.paymentComponent.createPaymentToken();\n\n            request.paymentToken = tokenResult[0];\n            request.paymentMethodType = tokenResult[1];\n            request.businessName = this.ownedBusiness ? this.businessName : null;\n            request.additionalSeats = this.additionalSeats;\n            request.additionalStorageGb = this.additionalStorage;\n            request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption &&\n                this.premiumAccessAddon;\n            request.planType = this.selectedPlan.type;\n            request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n            request.billingAddressCountry = this.taxComponent.taxInfo.country;\n            if (this.taxComponent.taxInfo.includeTaxId) {\n                request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n                request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n                request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n                request.billingAddressCity = this.taxComponent.taxInfo.city;\n                request.billingAddressState = this.taxComponent.taxInfo.state;\n            }\n        }\n\n        if (this.providerId) {\n            const providerRequest = new ProviderOrganizationCreateRequest(this.clientOwnerEmail, request);\n            const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n            providerRequest.organizationCreateRequest.key = (await this.cryptoService.encrypt(orgKey.key, providerKey)).encryptedString;\n            const orgId = (await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)).organizationId;\n\n            return orgId;\n        } else {\n            return (await this.apiService.postOrganization(request)).id;\n        }\n    }\n\n    private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            throw new Error(this.i18nService.t('selectFile'));\n        }\n\n        const fd = new FormData();\n        fd.append('license', files[0]);\n        fd.append('key', key);\n        fd.append('collectionName', collectionCt);\n        const response = await this.apiService.postOrganizationLicense(fd);\n        const orgId = response.id;\n\n        // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        await this.apiService.postOrganizationKeys(orgId, request);\n\n        return orgId;\n    }\n}\n","<ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"createOrganization && selfHosted\"> <p>{{'uploadLicenseFileOrg' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_organization_license.json'}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> </ng-container> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!loading && !selfHosted && this.plans\"> <h2 class=\"mt-5\">{{'generalInformation' | i18n}}</h2> <div class=\"row\" *ngIf=\"createOrganization\"> <div class=\"form-group col-6\"> <label for=\"name\">{{'organizationName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required> </div> <div class=\"form-group col-6\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"billingEmail\" required> </div> <div class=\"form-group col-6\" *ngIf=\"!!providerId\"> <label for=\"email\">{{'clientOwnerEmail' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"clientOwnerEmail\" required> <small class=\"text-muted\">{{'clientOwnerDesc' | i18n : '20'}}</small> </div> </div> <div *ngIf=\"!providerId\"> <div class=\"form-group form-check\"> <input id=\"ownedBusiness\" class=\"form-check-input\" type=\"checkbox\" name=\"OwnedBusiness\" [(ngModel)]=\"ownedBusiness\" (change)=\"changedOwnedBusiness()\"> <label for=\"ownedBusiness\" class=\"form-check-label\">{{'accountOwnedBusiness' | i18n}}</label> </div> <div class=\"row\" *ngIf=\"ownedBusiness\"> <div class=\"form-group col-6\"> <label for=\"businessName\">{{'businessName' | i18n}}</label> <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\" [(ngModel)]=\"businessName\"> </div> </div> </div> <h2 class=\"mt-5\">{{'chooseYourPlan' | i18n}}</h2> <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"product\" id=\"product{{selectableProduct.product}}\" [value]=\"selectableProduct.product\" [(ngModel)]=\"product\" (change)=\"changedProduct()\"> <label class=\"form-check-label\" for=\"product{{selectableProduct.product}}\"> {{ selectableProduct.nameLocalizationKey | i18n}} <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n : '1'}}</small> <ng-container *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"> <small>• {{'includeAllTeamsFeatures' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSso\">• {{'includeSsoAuthentication' | i18n}}</small> <small *ngIf=\"selectableProduct.hasPolicies\">• {{'includeEnterprisePolicies' | i18n}}</small> <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\">• {{'xDayFreeTrial' | i18n : selectableProduct.trialPeriodDays }} </small> </ng-container> <ng-template #fullFeatureList> <small *ngIf=\"selectableProduct.product == productTypes.Free\">• {{'limitedUsers' | i18n : selectableProduct.maxUsers }}</small> <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\">• {{'addShareLimitedUsers' | i18n : selectableProduct.maxUsers}}</small> <small *ngIf=\"!selectableProduct.maxUsers\">• {{'addShareUnlimitedUsers' | i18n}}</small> <small *ngIf=\"selectableProduct.maxCollections\">• {{'limitedCollections' | i18n : selectableProduct.maxCollections }}</small> <small *ngIf=\"selectableProduct.maxAdditionalSeats\">• {{'addShareLimitedUsers' | i18n : selectableProduct.maxAdditionalSeats }}</small> <small *ngIf=\"!selectableProduct.maxCollections\">• {{'createUnlimitedCollections' | i18n}}</small> <small *ngIf=\"selectableProduct.baseStorageGb\">• {{'gbEncryptedFileStorage' | i18n : selectableProduct.baseStorageGb + 'GB'}}</small> <small *ngIf=\"selectableProduct.hasGroups\">• {{'controlAccessWithGroups' | i18n}}</small> <small *ngIf=\"selectableProduct.hasApi\">• {{'trackAuditLogs' | i18n}}</small> <small *ngIf=\"selectableProduct.hasDirectory\">• {{'syncUsersFromDirectory' | i18n}}</small> <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small> <small *ngIf=\"selectableProduct.usersGetPremium\">• {{'usersGetPremium' | i18n}}</small> <small *ngIf=\"selectableProduct.product != productTypes.Free\">• {{'priorityCustomerSupport' | i18n}}</small> <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\">• {{'xDayFreeTrial' | i18n : selectableProduct.trialPeriodDays }} </small> </ng-template> <span *ngIf=\"selectableProduct.product != productTypes.Free\"> <ng-container *ngIf=\"selectableProduct.basePrice\"> {{selectableProduct.basePrice / 12 | currency:'$'}} /{{'month' | i18n}}, {{'includesXUsers' | i18n : selectableProduct.baseSeats}} <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\"> {{('additionalUsers' | i18n).toLowerCase()}} {{selectableProduct.seatPrice / 12 | currency:'$'}} /{{'month' | i18n}} </ng-container> </ng-container> </span> <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\"> {{'costPerUser' | i18n : (selectableProduct.seatPrice / 12 | currency:'$')}} /{{'month' | i18n}} </span> <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{'freeForever' | i18n}}</span> </label> </div> <div *ngIf=\"product !== productTypes.Free\"> <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\"> <h2 class=\"mt-5\">{{'users' | i18n}}</h2> <div class=\"row\"> <div class=\"col-6\"> <label for=\"additionalSeats\">{{'userSeats' | i18n}}</label> <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\" [(ngModel)]=\"additionalSeats\" min=\"1\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\" required> <small class=\"text-muted form-text\">{{'userSeatsHowManyDesc' | i18n}}</small> </div> </div> </ng-container> <h2 class=\"mt-5\">{{'addons' | i18n}}</h2> <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\"> <div class=\"form-group col-6\"> <label for=\"additionalSeats\">{{'additionalUserSeats' | i18n}}</label> <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\" [(ngModel)]=\"additionalSeats\" min=\"0\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'userSeatsAdditionalDesc' | i18n : selectedPlan.baseSeats : (seatPriceMonthly(selectedPlan) | currency:'$')}}</small> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label> <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\" [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\" placeholder=\"{{'additionalStorageGbDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (additionalStoragePriceMonthly(selectedPlan) | currency:'$') : ('month' | i18n)}}</small> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\"> <div class=\"form-check\"> <input id=\"premiumAccess\" class=\"form-check-input\" type=\"checkbox\" name=\"PremiumAccessAddon\" [(ngModel)]=\"premiumAccessAddon\"> <label for=\"premiumAccess\" class=\"form-check-label bold\">{{'premiumAccess' | i18n}}</label> </div> <small class=\"text-muted form-text\">{{'premiumAccessDesc' | i18n : (3.33 | currency:'$') : ('month' | i18n)}}</small> </div> </div> <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2> <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\"> <input class=\"form-check-input\" type=\"radio\" name=\"BillingInterval\" id=\"interval{{selectablePlan.type}}\" [value]=\"selectablePlan.type\" [(ngModel)]=\"plan\"> <label class=\"form-check-label\" for=\"interval{{selectablePlan.type}}\"> <ng-container *ngIf=\"selectablePlan.isAnnual\"> {{'annually' | i18n}} <small *ngIf=\"selectablePlan.basePrice\"> {{'basePrice' | i18n}}: {{ selectablePlan.basePrice / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{selectablePlan.basePrice | currency:'$'}} /{{'year' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\"> <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span> <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span> {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan) | currency:'$'}} /{{'year' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\"> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times; {{selectablePlan.additionalStoragePricePerGb / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}} /{{'year' | i18n}} </small> <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\"> {{'premiumAccess' | i18n}}: {{selectablePlan.premiumAccessOptionCost / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}} = {{40 | currency:'$'}} /{{'year' | i18n}} </small> </ng-container> <ng-container *ngIf=\"!selectablePlan.isAnnual\"> {{'monthly' | i18n}} <small *ngIf=\"selectablePlan.basePrice\"> {{'basePrice' | i18n}}: {{selectablePlan.basePrice | currency:'$'}} {{'monthAbbr' | i18n}} = {{selectablePlan.basePrice | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\"> <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span> <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span> {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice | currency:'$'}} {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan) | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\"> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times; {{selectablePlan.additionalStoragePricePerGb | currency:'$'}} {{'monthAbbr' | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}} /{{'month' | i18n}} </small> <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\"> {{'premiumAccess' | i18n}}: {{selectablePlan.premiumAccessOptionCost | currency:'$'}} {{'monthAbbr' | i18n}} = {{40 | currency:'$'}} /{{'month' | i18n}} </small> </ng-container> </label> </div> <hr class=\"my-3\"> <h2 class=\"spaced-header mb-4\">{{ (createOrganization ? 'paymentInformation' : 'billingInformation') | i18n}} </h2> <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment> <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info> <div id=\"price\" class=\"my-4\"> <div class=\"text-muted text-sm\"> {{ 'planPrice' | i18n }}: {{ subtotal | currency: 'USD $' }} <br/> <ng-container> {{ 'estimatedTax' | i18n }}: {{ taxCharges | currency: 'USD $' }} </ng-container> </div> <hr class=\"my-1 col-3 ml-0\"> <p class=\"text-lg\"><strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}}/{{selectedPlanInterval | i18n}}</p> </div> <small class=\"text-muted font-italic\" *ngIf=\"freeTrial && createOrganization; else paymentChargedImmediately\"> {{'paymentChargedWithTrial' | i18n : (selectedPlanInterval | i18n) }} </small> <ng-template #paymentChargedImmediately> <small class=\"text-muted font-italic mt-2 d-block\"> {{'paymentCharged' | i18n : (selectedPlanInterval | i18n) }} </small> </ng-template> <ng-container *ngIf=\"!createOrganization\"> <app-payment [showMethods]=\"false\"></app-payment> </ng-container> </div> <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\"> <app-callout [type]=\"'error'\">{{'singleOrgBlockCreateMessage' | i18n}}</app-callout> </div> <div class=\"mt-4\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\"> {{'cancel' | i18n}} </button> </div> </form> ","import { Utils } from '../../misc/utils';\n\nimport { BaseResponse } from './baseResponse';\n\nexport class ErrorResponse extends BaseResponse {\n    message: string;\n    validationErrors: { [key: string]: string[]; };\n    statusCode: number;\n    captchaRequired: boolean;\n    captchaSiteKey: string;\n\n    constructor(response: any, status: number, identityResponse?: boolean) {\n        super(response);\n        let errorModel = null;\n        if (response != null) {\n            const responseErrorModel = this.getResponseProperty('ErrorModel');\n            if (responseErrorModel && identityResponse) {\n                errorModel = responseErrorModel;\n            } else {\n                errorModel = response;\n            }\n        }\n\n        if (errorModel) {\n            this.message = this.getResponseProperty('Message', errorModel);\n            this.validationErrors = this.getResponseProperty('ValidationErrors', errorModel);\n            this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n            this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n        } else {\n            if (status === 429) {\n                this.message = 'Rate limit exceeded. Try again later.';\n            }\n        }\n        this.statusCode = status;\n    }\n\n    getSingleMessage(): string {\n        if (this.validationErrors == null) {\n            return this.message;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            if (this.validationErrors[key].length) {\n                return this.validationErrors[key][0];\n            }\n        }\n        return this.message;\n    }\n\n    getAllMessages(): string[] {\n        const messages: string[] = [];\n        if (this.validationErrors == null) {\n            return messages;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            this.validationErrors[key].forEach((item: string) => {\n                let prefix = '';\n                if (key.indexOf('[') > -1 && key.indexOf(']') > -1) {\n                    const lastSep = key.lastIndexOf('.');\n                    prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + ': ';\n                }\n                messages.push(prefix + item);\n            });\n        }\n        return messages;\n    }\n}\n","export enum EventType {\n    User_LoggedIn = 1000,\n    User_ChangedPassword = 1001,\n    User_Updated2fa = 1002,\n    User_Disabled2fa = 1003,\n    User_Recovered2fa = 1004,\n    User_FailedLogIn = 1005,\n    User_FailedLogIn2fa = 1006,\n    User_ClientExportedVault = 1007,\n    User_UpdatedTempPassword = 1008,\n\n    Cipher_Created = 1100,\n    Cipher_Updated = 1101,\n    Cipher_Deleted = 1102,\n    Cipher_AttachmentCreated = 1103,\n    Cipher_AttachmentDeleted = 1104,\n    Cipher_Shared = 1105,\n    Cipher_UpdatedCollections = 1106,\n    Cipher_ClientViewed = 1107,\n    Cipher_ClientToggledPasswordVisible = 1108,\n    Cipher_ClientToggledHiddenFieldVisible = 1109,\n    Cipher_ClientToggledCardCodeVisible = 1110,\n    Cipher_ClientCopiedPassword = 1111,\n    Cipher_ClientCopiedHiddenField = 1112,\n    Cipher_ClientCopiedCardCode = 1113,\n    Cipher_ClientAutofilled = 1114,\n    Cipher_SoftDeleted = 1115,\n    Cipher_Restored = 1116,\n    Cipher_ClientToggledCardNumberVisible = 1117,\n\n    Collection_Created = 1300,\n    Collection_Updated = 1301,\n    Collection_Deleted = 1302,\n\n    Group_Created = 1400,\n    Group_Updated = 1401,\n    Group_Deleted = 1402,\n\n    OrganizationUser_Invited = 1500,\n    OrganizationUser_Confirmed = 1501,\n    OrganizationUser_Updated = 1502,\n    OrganizationUser_Removed = 1503,\n    OrganizationUser_UpdatedGroups = 1504,\n    OrganizationUser_UnlinkedSso = 1505,\n    OrganizationUser_ResetPassword_Enroll = 1506,\n    OrganizationUser_ResetPassword_Withdraw = 1507,\n    OrganizationUser_AdminResetPassword = 1508,\n\n    Organization_Updated = 1600,\n    Organization_PurgedVault = 1601,\n    // Organization_ClientExportedVault = 1602,\n    Organization_VaultAccessed = 1603,\n\n    Policy_Updated = 1700,\n\n    ProviderUser_Invited = 1800,\n    ProviderUser_Confirmed = 1801,\n    ProviderUser_Updated = 1802,\n    ProviderUser_Removed = 1803,\n\n    ProviderOrganization_Created = 1900,\n    ProviderOrganization_Added = 1901,\n    ProviderOrganization_Removed = 1902,\n    ProviderOrganization_VaultAccessed = 1903,\n}\n","// Using index.ts is deprecated, please do not extend\nexport { ApiService } from './api.service';\nexport { AppIdService } from './appId.service';\nexport { AuditService } from './audit.service';\nexport { AuthService } from './auth.service';\nexport { CipherService } from './cipher.service';\nexport { CollectionService } from './collection.service';\nexport { CryptoService } from './crypto.service';\nexport { EnvironmentService } from './environment.service';\nexport { FolderService } from './folder.service';\nexport { I18nService } from './i18n.service';\nexport { LogService } from './log.service';\nexport { MessagingService } from './messaging.service';\nexport { PasswordGenerationService } from './passwordGeneration.service';\nexport { PlatformUtilsService } from './platformUtils.service';\nexport { SearchService } from './search.service';\nexport { SettingsService } from './settings.service';\nexport { StorageService } from './storage.service';\nexport { StateService } from './state.service';\nexport { SyncService } from './sync.service';\nexport { TokenService } from './token.service';\nexport { TotpService } from './totp.service';\nexport { UserService } from './user.service';\nexport { VaultTimeoutService } from './vaultTimeout.service';\n","import { FieldType } from '../../enums/fieldType';\n\nimport { View } from './view';\n\nimport { Field } from '../domain/field';\n\nexport class FieldView implements View {\n    name: string = null;\n    value: string = null;\n    type: FieldType = null;\n    newField: boolean = false; // Marks if the field is new and hasn't been saved\n    showValue: boolean = false;\n\n    constructor(f?: Field) {\n        if (!f) {\n            return;\n        }\n\n        this.type = f.type;\n    }\n\n    get maskedValue(): string {\n        return this.value != null ? '••••••••' : null;\n    }\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { LoginUriApi } from '../api/loginUriApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nimport { AttachmentRequest } from './attachmentRequest';\nimport { PasswordHistoryRequest } from './passwordHistoryRequest';\n\nexport class CipherRequest {\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    name: string;\n    notes: string;\n    favorite: boolean;\n    login: LoginApi;\n    secureNote: SecureNoteApi;\n    card: CardApi;\n    identity: IdentityApi;\n    fields: FieldApi[];\n    passwordHistory: PasswordHistoryRequest[];\n    // Deprecated, remove at some point and rename attachments2 to attachments\n    attachments: { [id: string]: string; };\n    attachments2: { [id: string]: AttachmentRequest; };\n    lastKnownRevisionDate: Date;\n    reprompt: CipherRepromptType;\n\n    constructor(cipher: Cipher) {\n        this.type = cipher.type;\n        this.folderId = cipher.folderId;\n        this.organizationId = cipher.organizationId;\n        this.name = cipher.name ? cipher.name.encryptedString : null;\n        this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n        this.favorite = cipher.favorite;\n        this.lastKnownRevisionDate = cipher.revisionDate;\n        this.reprompt = cipher.reprompt;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginApi();\n                this.login.uris = null;\n                this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n                this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n                this.login.passwordRevisionDate = cipher.login.passwordRevisionDate != null ?\n                    cipher.login.passwordRevisionDate.toISOString() : null;\n                this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n                this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n                if (cipher.login.uris != null) {\n                    this.login.uris = cipher.login.uris.map(u => {\n                        const uri = new LoginUriApi();\n                        uri.uri = u.uri != null ? u.uri.encryptedString : null;\n                        uri.match = u.match != null ? u.match : null;\n                        return uri;\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteApi();\n                this.secureNote.type = cipher.secureNote.type;\n                break;\n            case CipherType.Card:\n                this.card = new CardApi();\n                this.card.cardholderName = cipher.card.cardholderName != null ?\n                    cipher.card.cardholderName.encryptedString : null;\n                this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n                this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n                this.card.expMonth = cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n                this.card.expYear = cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n                this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityApi();\n                this.identity.title = cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n                this.identity.firstName = cipher.identity.firstName != null ?\n                    cipher.identity.firstName.encryptedString : null;\n                this.identity.middleName = cipher.identity.middleName != null ?\n                    cipher.identity.middleName.encryptedString : null;\n                this.identity.lastName = cipher.identity.lastName != null ?\n                    cipher.identity.lastName.encryptedString : null;\n                this.identity.address1 = cipher.identity.address1 != null ?\n                    cipher.identity.address1.encryptedString : null;\n                this.identity.address2 = cipher.identity.address2 != null ?\n                    cipher.identity.address2.encryptedString : null;\n                this.identity.address3 = cipher.identity.address3 != null ?\n                    cipher.identity.address3.encryptedString : null;\n                this.identity.city = cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n                this.identity.state = cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n                this.identity.postalCode = cipher.identity.postalCode != null ?\n                    cipher.identity.postalCode.encryptedString : null;\n                this.identity.country = cipher.identity.country != null ?\n                    cipher.identity.country.encryptedString : null;\n                this.identity.company = cipher.identity.company != null ?\n                    cipher.identity.company.encryptedString : null;\n                this.identity.email = cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n                this.identity.phone = cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n                this.identity.ssn = cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n                this.identity.username = cipher.identity.username != null ?\n                    cipher.identity.username.encryptedString : null;\n                this.identity.passportNumber = cipher.identity.passportNumber != null ?\n                    cipher.identity.passportNumber.encryptedString : null;\n                this.identity.licenseNumber = cipher.identity.licenseNumber != null ?\n                    cipher.identity.licenseNumber.encryptedString : null;\n                break;\n            default:\n                break;\n        }\n\n        if (cipher.fields != null) {\n            this.fields = cipher.fields.map(f => {\n                const field = new FieldApi();\n                field.type = f.type;\n                field.name = f.name ? f.name.encryptedString : null;\n                field.value = f.value ? f.value.encryptedString : null;\n                return field;\n            });\n        }\n\n        if (cipher.passwordHistory != null) {\n            this.passwordHistory = [];\n            cipher.passwordHistory.forEach(ph => {\n                this.passwordHistory.push({\n                    lastUsedDate: ph.lastUsedDate,\n                    password: ph.password ? ph.password.encryptedString : null,\n                });\n            });\n        }\n\n        if (cipher.attachments != null) {\n            this.attachments = {};\n            this.attachments2 = {};\n            cipher.attachments.forEach(attachment => {\n                const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n                this.attachments[attachment.id] = fileName;\n                const attachmentRequest = new AttachmentRequest();\n                attachmentRequest.fileName = fileName;\n                if (attachment.key != null) {\n                    attachmentRequest.key = attachment.key.encryptedString;\n                }\n                this.attachments2[attachment.id] = attachmentRequest;\n            });\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { ProviderAddOrganizationRequest } from 'jslib-common/models/request/provider/providerAddOrganizationRequest';\n\n@Injectable()\nexport class ProviderService {\n    constructor(private cryptoService: CryptoService, private syncService: SyncService, private apiService: ApiService) {}\n\n    async addOrganizationToProvider(providerId: string, organizationId: string) {\n        const orgKey = await this.cryptoService.getOrgKey(organizationId);\n        const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n        const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n        const request = new ProviderAddOrganizationRequest();\n        request.organizationId = organizationId;\n        request.key = encryptedOrgKey.encryptedString;\n\n        const response = await this.apiService.postProviderAddOrganization(providerId, request);\n        await this.syncService.fullSync(true);\n        return response;\n    }\n\n    async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n        await this.apiService.deleteProviderOrganization(providerId, organizationId);\n        await this.syncService.fullSync(true);\n    }\n}\n","export enum PlanType {\n    Free = 0,\n    FamiliesAnnually2019 = 1,\n    TeamsMonthly2019 = 2,\n    TeamsAnnually2019 = 3,\n    EnterpriseMonthly2019 = 4,\n    EnterpriseAnnually2019 = 5,\n    Custom = 6,\n    FamiliesAnnually = 7,\n    TeamsMonthly = 8,\n    TeamsAnnually = 9,\n    EnterpriseMonthly = 10,\n    EnterpriseAnnually = 11,\n}\n","export enum ProviderUserType {\n    ProviderAdmin = 0,\n    ServiceUser = 1,\n}\n","export enum PaymentMethodType {\n    Card = 0,\n    BankAccount = 1,\n    PayPal = 2,\n    BitPay = 3,\n    Credit = 4,\n    WireTransfer = 5,\n    AppleInApp = 6,\n    GoogleInApp = 7,\n    Check = 8,\n}\n","export enum OrganizationUserType {\n    Owner = 0,\n    Admin = 1,\n    User = 2,\n    Manager = 3,\n    Custom = 4,\n}\n","import { AttachmentResponse } from './attachmentResponse';\nimport { BaseResponse } from './baseResponse';\nimport { PasswordHistoryResponse } from './passwordHistoryResponse';\n\nimport { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class CipherResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    type: number;\n    name: string;\n    notes: string;\n    fields: FieldApi[];\n    login: LoginApi;\n    card: CardApi;\n    identity: IdentityApi;\n    secureNote: SecureNoteApi;\n    favorite: boolean;\n    edit: boolean;\n    viewPassword: boolean;\n    organizationUseTotp: boolean;\n    revisionDate: string;\n    attachments: AttachmentResponse[];\n    passwordHistory: PasswordHistoryResponse[];\n    collectionIds: string[];\n    deletedDate: string;\n    reprompt: CipherRepromptType;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.folderId = this.getResponseProperty('FolderId') || null;\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.notes = this.getResponseProperty('Notes');\n        this.favorite = this.getResponseProperty('Favorite') || false;\n        this.edit = !!this.getResponseProperty('Edit');\n        if (this.getResponseProperty('ViewPassword') == null) {\n            this.viewPassword = true;\n        } else {\n            this.viewPassword = this.getResponseProperty('ViewPassword');\n        }\n        this.organizationUseTotp = this.getResponseProperty('OrganizationUseTotp');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n        this.deletedDate = this.getResponseProperty('DeletedDate');\n\n        const login = this.getResponseProperty('Login');\n        if (login != null) {\n            this.login = new LoginApi(login);\n        }\n\n        const card = this.getResponseProperty('Card');\n        if (card != null) {\n            this.card = new CardApi(card);\n        }\n\n        const identity = this.getResponseProperty('Identity');\n        if (identity != null) {\n            this.identity = new IdentityApi(identity);\n        }\n\n        const secureNote = this.getResponseProperty('SecureNote');\n        if (secureNote != null) {\n            this.secureNote = new SecureNoteApi(secureNote);\n        }\n\n        const fields = this.getResponseProperty('Fields');\n        if (fields != null) {\n            this.fields = fields.map((f: any) => new FieldApi(f));\n        }\n\n        const attachments = this.getResponseProperty('Attachments');\n        if (attachments != null) {\n            this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n        }\n\n        const passwordHistory = this.getResponseProperty('PasswordHistory');\n        if (passwordHistory != null) {\n            this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n        }\n\n        this.reprompt = this.getResponseProperty('Reprompt') || CipherRepromptType.None;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n    ActivatedRoute,\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Injectable()\nexport class RouterService {\n    private previousUrl: string = undefined;\n    private currentUrl: string = undefined;\n\n    constructor(private router: Router, private activatedRoute: ActivatedRoute,\n        private titleService: Title, i18nService: I18nService) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n\n                let title = i18nService.t('pageTitle', 'Bitwarden');\n                let titleId: string = null;\n                let rawTitle: string = null;\n                let child = this.activatedRoute.firstChild;\n                while (child != null) {\n                    if (child.firstChild != null) {\n                        child = child.firstChild;\n                    } else if (child.snapshot.data != null && child.snapshot.data.title != null) {\n                        rawTitle = child.snapshot.data.title;\n                        break;\n                    } else if (child.snapshot.data != null && child.snapshot.data.titleId != null) {\n                        titleId = child.snapshot.data.titleId;\n                        break;\n                    } else {\n                        titleId = null;\n                        rawTitle = null;\n                        break;\n                    }\n                }\n\n                if (titleId != null || rawTitle != null) {\n                    const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n                    if (newTitle != null && newTitle !== '') {\n                        title = (newTitle + ' | ' + title);\n                    }\n                }\n                this.titleService.setTitle(title);\n            }\n        });\n    }\n\n    getPreviousUrl() {\n        return this.previousUrl;\n    }\n\n    setPreviousUrl(url: string) {\n        this.previousUrl = url;\n    }\n}\n","export enum KdfType {\n    PBKDF2_SHA256 = 0,\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { Utils } from '../../misc/utils';\n\nexport class SymmetricCryptoKey {\n    key: ArrayBuffer;\n    encKey?: ArrayBuffer;\n    macKey?: ArrayBuffer;\n    encType: EncryptionType;\n\n    keyB64: string;\n    encKeyB64: string;\n    macKeyB64: string;\n\n    meta: any;\n\n    constructor(key: ArrayBuffer, encType?: EncryptionType) {\n        if (key == null) {\n            throw new Error('Must provide key');\n        }\n\n        if (encType == null) {\n            if (key.byteLength === 32) {\n                encType = EncryptionType.AesCbc256_B64;\n            } else if (key.byteLength === 64) {\n                encType = EncryptionType.AesCbc256_HmacSha256_B64;\n            } else {\n                throw new Error('Unable to determine encType.');\n            }\n        }\n\n        this.key = key;\n        this.encType = encType;\n\n        if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n            this.encKey = key;\n            this.macKey = null;\n        } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n            this.encKey = key.slice(0, 16);\n            this.macKey = key.slice(16, 32);\n        } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n            this.encKey = key.slice(0, 32);\n            this.macKey = key.slice(32, 64);\n        } else {\n            throw new Error('Unsupported encType/key length.');\n        }\n\n        if (this.key != null) {\n            this.keyB64 = Utils.fromBufferToB64(this.key);\n        }\n        if (this.encKey != null) {\n            this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n        }\n        if (this.macKey != null) {\n            this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n        }\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { TwoFactorProviderRequest } from 'jslib-common/models/request/twoFactorProviderRequest';\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n    @Output() onUpdated = new EventEmitter<boolean>();\n\n    type: TwoFactorProviderType;\n    organizationId: string;\n    twoFactorProviderType = TwoFactorProviderType;\n    enabled = false;\n    authed = false;\n\n    protected masterPasswordHash: string;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, protected platformUtilsService: PlatformUtilsService) { }\n\n    protected auth(authResponse: any) {\n        this.masterPasswordHash = authResponse.masterPasswordHash;\n        this.authed = true;\n    }\n\n    protected async enable(enableFunction: () => Promise<void>) {\n        try {\n            await enableFunction();\n            this.onUpdated.emit(true);\n        } catch { }\n    }\n\n    protected async disable(promise: Promise<any>) {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('twoStepDisableDesc'),\n            this.i18nService.t('disable'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorProviderRequest();\n            request.masterPasswordHash = this.masterPasswordHash;\n            request.type = this.type;\n            if (this.organizationId != null) {\n                promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n            } else {\n                promise = this.apiService.putTwoFactorDisable(request);\n            }\n            await promise;\n            this.enabled = false;\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepDisabled'));\n            this.onUpdated.emit(false);\n        } catch { }\n    }\n}\n","import {\n    ComponentFactoryResolver,\n    Directive,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { ModalComponent } from '../modal.component';\nimport { AddEditComponent as OrgAddEditComponent } from '../organizations/vault/add-edit.component';\nimport { AddEditComponent } from '../vault/add-edit.component';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Directive()\nexport class CipherReportComponent {\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n\n    loading = false;\n    hasLoaded = false;\n    ciphers: CipherView[] = [];\n    organization: Organization;\n\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, protected userService: UserService,\n        protected messagingService: MessagingService, public requiresPaid: boolean) { }\n\n    async load() {\n        this.loading = true;\n        await this.setCiphers();\n        this.loading = false;\n        this.hasLoaded = true;\n    }\n\n    selectCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        let childComponent: OrgAddEditComponent | AddEditComponent;\n        if (this.organization != null) {\n            childComponent = this.modal.show<OrgAddEditComponent>(OrgAddEditComponent, this.cipherAddEditModalRef);\n            (childComponent as OrgAddEditComponent).organization = this.organization;\n        } else {\n            childComponent = this.modal.show<AddEditComponent>(AddEditComponent, this.cipherAddEditModalRef);\n        }\n\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        if (this.organization != null) {\n            childComponent.organizationId = this.organization.id;\n        }\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.load();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.load();\n        });\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.load();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    protected async checkAccess(): Promise<boolean> {\n        if (this.organization != null) {\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            if (this.requiresPaid && !this.organization.useTotp) {\n                this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n                return false;\n            }\n        } else {\n            const accessPremium = await this.userService.canAccessPremium();\n            if (this.requiresPaid && !accessPremium) {\n                this.messagingService.send('premiumRequired');\n                this.loading = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    protected async setCiphers() {\n        this.ciphers = [];\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { View } from './view';\n\nimport { LoginUri } from '../domain/loginUri';\n\nimport { Utils } from '../../misc/utils';\n\nconst CanLaunchWhitelist = [\n    'https://',\n    'http://',\n    'ssh://',\n    'ftp://',\n    'sftp://',\n    'irc://',\n    'vnc://',\n    // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n    'rdp://', // Legacy RDP URI scheme\n    'ms-rd:', // Preferred RDP URI scheme\n    'chrome://',\n    'iosapp://',\n    'androidapp://',\n];\n\nexport class LoginUriView implements View {\n    match: UriMatchType = null;\n\n    // tslint:disable\n    private _uri: string = null;\n    private _domain: string = null;\n    private _hostname: string = null;\n    private _host: string = null;\n    private _canLaunch: boolean = null;\n    // tslint:enable\n\n    constructor(u?: LoginUri) {\n        if (!u) {\n            return;\n        }\n\n        this.match = u.match;\n    }\n\n    get uri(): string {\n        return this._uri;\n    }\n    set uri(value: string) {\n        this._uri = value;\n        this._domain = null;\n        this._canLaunch = null;\n    }\n\n    get domain(): string {\n        if (this._domain == null && this.uri != null) {\n            this._domain = Utils.getDomain(this.uri);\n            if (this._domain === '') {\n                this._domain = null;\n            }\n        }\n\n        return this._domain;\n    }\n\n    get hostname(): string {\n        if (this.match === UriMatchType.RegularExpression) {\n            return null;\n        }\n        if (this._hostname == null && this.uri != null) {\n            this._hostname = Utils.getHostname(this.uri);\n            if (this._hostname === '') {\n                this._hostname = null;\n            }\n        }\n\n        return this._hostname;\n    }\n\n    get host(): string {\n        if (this.match === UriMatchType.RegularExpression) {\n            return null;\n        }\n        if (this._host == null && this.uri != null) {\n            this._host = Utils.getHost(this.uri);\n            if (this._host === '') {\n                this._host = null;\n            }\n        }\n\n        return this._host;\n    }\n\n    get hostnameOrUri(): string {\n        return this.hostname != null ? this.hostname : this.uri;\n    }\n\n    get hostOrUri(): string {\n        return this.host != null ? this.host : this.uri;\n    }\n\n    get isWebsite(): boolean {\n        return this.uri != null && (this.uri.indexOf('http://') === 0 || this.uri.indexOf('https://') === 0 ||\n            (this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri)));\n    }\n\n    get canLaunch(): boolean {\n        if (this._canLaunch != null) {\n            return this._canLaunch;\n        }\n        if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n            const uri = this.launchUri;\n            for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n                if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n                    this._canLaunch = true;\n                    return this._canLaunch;\n                }\n            }\n        }\n        this._canLaunch = false;\n        return this._canLaunch;\n    }\n\n    get launchUri(): string {\n        return this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri) ? ('http://' + this.uri) : this.uri;\n    }\n}\n","export enum UriMatchType {\n    Domain = 0,\n    Host = 1,\n    StartsWith = 2,\n    Exact = 3,\n    RegularExpression = 4,\n    Never = 5,\n}\n","import { Component } from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib-angular/components/add-edit.component';\nimport { LoginUriView } from 'jslib-common/models/view/loginUriView';\n\n@Component({\n    selector: 'app-vault-add-edit',\n    templateUrl: 'add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    canAccessPremium: boolean;\n    totpCode: string;\n    totpCodeFormatted: string;\n    totpDash: number;\n    totpSec: number;\n    totpLow: boolean;\n    showRevisionDate = false;\n    hasPasswordHistory = false;\n    viewingPasswordHistory = false;\n    viewOnly = false;\n\n    protected totpInterval: number;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        protected totpService: TotpService, protected passwordGenerationService: PasswordGenerationService,\n        protected messagingService: MessagingService, eventService: EventService,\n        protected policyService: PolicyService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, messagingService, eventService, policyService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        await this.load();\n        this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n        this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n        this.cleanUp();\n\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        if (this.cipher.type === CipherType.Login && this.cipher.login.totp &&\n            (this.cipher.organizationUseTotp || this.canAccessPremium)) {\n            await this.totpUpdateCode();\n            const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n            await this.totpTick(interval);\n\n            this.totpInterval = window.setInterval(async () => {\n                await this.totpTick(interval);\n            }, 1000);\n        }\n    }\n\n    toggleFavorite() {\n        this.cipher.favorite = !this.cipher.favorite;\n    }\n\n    launch(uri: LoginUriView) {\n        if (!uri.canLaunch) {\n            return;\n        }\n\n        this.platformUtilsService.launchUri(uri.launchUri);\n    }\n\n    copy(value: string, typeI18nKey: string, aType: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (this.editMode) {\n            if (typeI18nKey === 'password') {\n                this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n            } else if (typeI18nKey === 'securityCode') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n            } else if (aType === 'H_Field') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n            }\n        }\n    }\n\n    async generatePassword(): Promise<boolean> {\n        const confirmed = await super.generatePassword();\n        if (confirmed) {\n            const options = (await this.passwordGenerationService.getOptions())[0];\n            this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n        }\n        return confirmed;\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.cipher.organizationId });\n    }\n\n    viewHistory() {\n        this.viewingPasswordHistory = !this.viewingPasswordHistory;\n    }\n\n    protected cleanUp() {\n        if (this.totpInterval) {\n            window.clearInterval(this.totpInterval);\n        }\n    }\n\n    protected async totpUpdateCode() {\n        if (this.cipher == null || this.cipher.type !== CipherType.Login || this.cipher.login.totp == null) {\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n            return;\n        }\n\n        this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n        if (this.totpCode != null) {\n            if (this.totpCode.length > 4) {\n                const half = Math.floor(this.totpCode.length / 2);\n                this.totpCodeFormatted = this.totpCode.substring(0, half) + ' ' + this.totpCode.substring(half);\n            } else {\n                this.totpCodeFormatted = this.totpCode;\n            }\n        } else {\n            this.totpCodeFormatted = null;\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n        }\n    }\n\n    protected allowOwnershipAssignment() {\n        return (!this.editMode || this.cloneMode) && this.ownershipOptions != null\n            && (this.ownershipOptions.length > 1 || !this.allowPersonal);\n    }\n\n    private async totpTick(intervalSeconds: number) {\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const mod = epoch % intervalSeconds;\n\n        this.totpSec = intervalSeconds - mod;\n        this.totpDash = +(Math.round((((78.6 / intervalSeconds) * mod) + 'e+2') as any) + 'e-2');\n        this.totpLow = this.totpSec <= 7;\n        if (mod === 0) {\n            await this.totpUpdateCode();\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"cipher\"> <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\"> {{'personalOwnershipPolicyInEffect' | i18n}} </app-callout> <div class=\"row\" *ngIf=\"!editMode && !viewOnly\"> <div class=\"col-6 form-group\"> <label for=\"type\">{{'whatTypeOfItem' | i18n}}</label> <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\" class=\"form-control\" [disabled]=\"cipher.isDeleted\" appAutofocus> <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" required [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\" *ngIf=\"!organization\"> <label for=\"folder\">{{'folder' | i18n}}</label> <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\" class=\"form-control\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option> </select> </div> </div> <ng-container *ngIf=\"cipher.type === cipherType.Login\"> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"loginUsername\">{{'username' | i18n}}</label> <div class=\"input-group\"> <input id=\"loginUsername\" class=\"form-control\" type=\"text\" name=\"Login.Username\" [(ngModel)]=\"cipher.login.username\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyUsername' | i18n}}\" (click)=\"copy(cipher.login.username, 'username', 'Username')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col-6 form-group\"> <div class=\"d-flex\"> <label for=\"loginPassword\">{{'password' | i18n}}</label> <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <a href=\"#\" class=\"d-block mr-2 fa-icon-above-input\" appStopClick appA11yTitle=\"{{'generatePassword' | i18n}}\" (click)=\"generatePassword()\" *ngIf=\"cipher.viewPassword\"> <i class=\"fa fa-lg fa-fw fa-refresh\" aria-hidden=\"true\"></i> </a> <a href=\"#\" class=\"d-block fa-icon-above-input\" #checkPasswordBtn appStopClick appA11yTitle=\"{{'checkPassword' | i18n}}\" (click)=\"checkPassword()\" [appApiAction]=\"checkPasswordPromise\"> <i class=\"fa fa-lg fa-fw fa-check-circle\" [hidden]=\"checkPasswordBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-lg fa-fw fa-spinner fa-spin\" aria-hidden=\"true\" [hidden]=\"!checkPasswordBtn.loading\" title=\"{{'loading' | i18n}}\"></i> </a> </div> </div> <div class=\"input-group\"> <input id=\"loginPassword\" class=\"form-control text-monospace\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"Login.Password\" [(ngModel)]=\"cipher.login.password\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\" [disabled]=\"!cipher.viewPassword\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(cipher.login.password, 'password', 'Password')\" [disabled]=\"!cipher.viewPassword\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"loginTotp\">{{'authenticatorKeyTotp' | i18n}}</label> <input id=\"loginTotp\" type=\"{{cipher.viewPassword ? 'text' : 'password'}}\" name=\"Login.Totp\" class=\"form-control text-monospace\" [(ngModel)]=\"cipher.login.totp\" appInputVerbatim [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"> </div> <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{'low': totpLow}\"> <div *ngIf=\"!cipher.login.totp || !totpCode\"> <img src=\"images/totp-countdown.png\" title=\"{{'verificationCodeTotp' | i18n}}\" class=\"ml-2\"> <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\" (click)=\"premiumRequired()\" *ngIf=\"!organization && !cipher.organizationId && !canAccessPremium\"> {{'premium' | i18n}} </a> <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\" (click)=\"upgradeOrganization()\" *ngIf=\"(organization && !organization.useTotp) || (!organization && !canAccessPremium && cipher.organizationId && !cipher.organizationUseTotp)\"> {{'upgrade' | i18n}} </a> </div> <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\"> <span class=\"totp-countdown mr-3 ml-2\"> <span class=\"totp-sec\">{{totpSec}}</span> <svg> <g> <circle class=\"totp-circle inner\" r=\"12.6\" cy=\"16\" cx=\"16\" [ngStyle]=\"{'stroke-dashoffset.px': totpDash}\"></circle> <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle> </g> </svg> </span> <span class=\"totp-code mr-2\" title=\"{{'verificationCodeTotp' | i18n}}\">{{totpCodeFormatted}}</span> <button type=\"button\" class=\"btn btn-link\" appA11yTitle=\"{{'copyVerificationCode' | i18n}}\" (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"> <i class=\"fa fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <ng-container *ngIf=\"cipher.login.hasUris\"> <div class=\"row\" *ngFor=\"let u of cipher.login.uris; let i = index; trackBy:trackByFunction\"> <div class=\"col-7 form-group\"> <label for=\"loginUri{{i}}\">{{'uriPosition' | i18n : (i + 1)}}</label> <div class=\"input-group\"> <input class=\"form-control\" id=\"loginUri{{i}}\" type=\"text\" name=\"Login.Uris[{{i}}].Uri\" [(ngModel)]=\"u.uri\" [disabled]=\"cipher.isDeleted || viewOnly\" placeholder=\"{{'ex' | i18n}} https://google.com\" appInputVerbatim> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'launch' | i18n}}\" (click)=\"launch(u)\" [disabled]=\"!u.canLaunch\"> <i class=\"fa fa-lg fa-share\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyUri' | i18n}}\" (click)=\"copy(u.uri, 'uri', 'URI')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col-5 form-group\"> <div class=\"d-flex\"> <label for=\"loginUriMatch{{i}}\"> {{'matchDetection' | i18n}} </label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/uri-match-detection/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"d-flex\"> <select class=\"form-control overflow-hidden\" id=\"loginUriMatch{{i}}\" name=\"Login.Uris[{{i}}].Match\" [(ngModel)]=\"u.match\" (change)=\"loginUriMatchChanged(u)\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeUri(u)\" appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </ng-container> <a href=\"#\" appStopClick (click)=\"addUri()\" class=\"d-inline-block mb-3\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newUri' | i18n}} </a> </ng-container> <ng-container *ngIf=\"cipher.type === cipherType.Card\"> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardCardholderName\">{{'cardholderName' | i18n}}</label> <input id=\"cardCardholderName\" class=\"form-control\" type=\"text\" name=\"Card.CardCardholderName\" [(ngModel)]=\"cipher.card.cardholderName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"cardBrand\">{{'brand' | i18n}}</label> <select id=\"cardBrand\" class=\"form-control\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardNumber\">{{'number' | i18n}}</label> <div class=\"input-group\"> <input id=\"cardNumber\" class=\"form-control text-monospace\" type=\"{{showCardNumber ? 'text' : 'password'}}\" name=\"Card.Number\" [(ngModel)]=\"cipher.card.number\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleCardNumber()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showCardNumber, 'fa-eye-slash': showCardNumber}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyNumber' | i18n}}\" (click)=\"copy(cipher.card.number, 'number', 'Number')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <div class=\"col form-group\"> <label for=\"cardExpMonth\">{{'expirationMonth' | i18n}}</label> <select id=\"cardExpMonth\" class=\"form-control\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> <div class=\"col form-group\"> <label for=\"cardExpYear\">{{'expirationYear' | i18n}}</label> <input id=\"cardExpYear\" class=\"form-control\" type=\"text\" name=\"Card.ExpYear\" [(ngModel)]=\"cipher.card.expYear\" placeholder=\"{{'ex' | i18n}} 2019\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"cardCode\">{{'securityCode' | i18n}}</label> <div class=\"input-group\"> <input id=\"cardCode\" class=\"form-control text-monospace\" type=\"{{showCardCode ? 'text' : 'password'}}\" name=\"Card.Code\" [(ngModel)]=\"cipher.card.code\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleCardCode()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showCardCode, 'fa-eye-slash': showCardCode}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'securityCode' | i18n}}\" (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> </ng-container> <ng-container *ngIf=\"cipher.type === cipherType.Identity\"> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idTitle\">{{'title' | i18n}}</label> <select id=\"idTitle\" class=\"form-control\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idFirstName\">{{'firstName' | i18n}}</label> <input id=\"idFirstName\" class=\"form-control\" type=\"text\" name=\"Identity.FirstName\" [(ngModel)]=\"cipher.identity.firstName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idMiddleName\">{{'middleName' | i18n}}</label> <input id=\"idMiddleName\" class=\"form-control\" type=\"text\" name=\"Identity.MiddleName\" [(ngModel)]=\"cipher.identity.middleName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idLastName\">{{'lastName' | i18n}}</label> <input id=\"idLastName\" class=\"form-control\" type=\"text\" name=\"Identity.LastName\" [(ngModel)]=\"cipher.identity.lastName\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idUsername\">{{'username' | i18n}}</label> <input id=\"idUsername\" class=\"form-control\" type=\"text\" name=\"Identity.Username\" [(ngModel)]=\"cipher.identity.username\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idCompany\">{{'company' | i18n}}</label> <input id=\"idCompany\" class=\"form-control\" type=\"text\" name=\"Identity.Company\" [(ngModel)]=\"cipher.identity.company\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-4 form-group\"> <label for=\"idSsn\">{{'ssn' | i18n}}</label> <input id=\"idSsn\" class=\"form-control\" type=\"text\" name=\"Identity.SSN\" [(ngModel)]=\"cipher.identity.ssn\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idPassportNumber\">{{'passportNumber' | i18n}}</label> <input id=\"idPassportNumber\" class=\"form-control\" type=\"text\" name=\"Identity.PassportNumber\" [(ngModel)]=\"cipher.identity.passportNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-4 form-group\"> <label for=\"idLicenseNumber\">{{'licenseNumber' | i18n}}</label> <input id=\"idLicenseNumber\" class=\"form-control\" type=\"text\" name=\"Identity.LicenseNumber\" [(ngModel)]=\"cipher.identity.licenseNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idEmail\">{{'email' | i18n}}</label> <input id=\"idEmail\" class=\"form-control\" type=\"text\" name=\"Identity.Email\" [(ngModel)]=\"cipher.identity.email\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idPhone\">{{'phone' | i18n}}</label> <input id=\"idPhone\" class=\"form-control\" type=\"text\" name=\"Identity.Phone\" [(ngModel)]=\"cipher.identity.phone\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idAddress1\">{{'address1' | i18n}}</label> <input id=\"idAddress1\" class=\"form-control\" type=\"text\" name=\"Identity.Address1\" [(ngModel)]=\"cipher.identity.address1\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idAddress2\">{{'address2' | i18n}}</label> <input id=\"idAddress2\" class=\"form-control\" type=\"text\" name=\"Identity.Address2\" [(ngModel)]=\"cipher.identity.address2\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idAddress3\">{{'address3' | i18n}}</label> <input id=\"idAddress3\" class=\"form-control\" type=\"text\" name=\"Identity.Address3\" [(ngModel)]=\"cipher.identity.address3\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idCity\">{{'cityTown' | i18n}}</label> <input id=\"idCity\" class=\"form-control\" type=\"text\" name=\"Identity.City\" [(ngModel)]=\"cipher.identity.city\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idState\">{{'stateProvince' | i18n}}</label> <input id=\"idState\" class=\"form-control\" type=\"text\" name=\"Identity.State\" [(ngModel)]=\"cipher.identity.state\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-6 form-group\"> <label for=\"idPostalCode\">{{'zipPostalCode' | i18n}}</label> <input id=\"idPostalCode\" class=\"form-control\" type=\"text\" name=\"Identity.PostalCode\" [(ngModel)]=\"cipher.identity.postalCode\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"idCountry\">{{'country' | i18n}}</label> <input id=\"idCountry\" class=\"form-control\" type=\"text\" name=\"Identity.Country\" [(ngModel)]=\"cipher.identity.country\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> </div> </ng-container> <div class=\"form-group\"> <label for=\"notes\">{{'notes' | i18n}}</label> <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\" [disabled]=\"cipher.isDeleted || viewOnly\" class=\"form-control\"></textarea> </div> <h3 class=\"mt-4\">{{'customFields' | i18n}}</h3> <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\"> <div class=\"row\" cdkDrag *ngFor=\"let f of cipher.fields; let i = index; trackBy:trackByFunction\"> <div class=\"col-5 form-group\"> <div class=\"d-flex\"> <label for=\"fieldName{{i}}\">{{'name' | i18n}}</label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/custom-fields/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <input id=\"fieldName{{i}}\" type=\"text\" name=\"Field.Name{{i}}\" [(ngModel)]=\"f.name\" class=\"form-control\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <div class=\"col-7 form-group\"> <label for=\"fieldValue{{i}}\">{{'value' | i18n}}</label> <div class=\"d-flex align-items-center\"> <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\"> <input id=\"fieldValue{{i}}\" class=\"form-control\" type=\"text\" name=\"Field.Value{{i}}\" [(ngModel)]=\"f.value\" appInputVerbatim [disabled]=\"cipher.isDeleted || viewOnly\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(f.value, 'value', 'Field')\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\"> <input id=\"fieldValue{{i}}\" type=\"{{f.showValue ? 'text' : 'password'}}\" name=\"Field.Value{{i}}\" [(ngModel)]=\"f.value\" class=\"form-control text-monospace\" appInputVerbatim autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleFieldValue(f)\" [disabled]=\"!cipher.viewPassword && !f.newField\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !f.showValue, 'fa-eye-slash': f.showValue}\"> </i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyValue' | i18n}}\" (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\" [disabled]=\"!cipher.viewPassword && !f.newField\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"flex-fill\"> <input id=\"fieldValue{{i}}\" name=\"Field.Value{{i}}\" type=\"checkbox\" [(ngModel)]=\"f.value\" *ngIf=\"f.type === fieldType.Boolean\" appTrueFalseValue trueValue=\"true\" falseValue=\"false\" [disabled]=\"cipher.isDeleted || viewOnly\"> </div> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeField(f)\" appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-link text-muted cursor-move\" appA11yTitle=\"{{'dragToSort' | i18n}}\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-bars fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> <a href=\"#\" appStopClick (click)=\"addField()\" class=\"d-inline-block mb-2\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newCustomField' | i18n}} </a> <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\"> <div class=\"col-5\"> <label for=\"addFieldType\" class=\"sr-only\">{{'type' | i18n}}</label> <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\"> <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <ng-container *ngIf=\"allowOwnershipAssignment()\"> <h3 class=\"mt-4\">{{'ownership' | i18n}}</h3> <div class=\"row\"> <div class=\"col-5\"> <label for=\"organizationId\">{{'whoOwnsThisItem' | i18n}}</label> <select id=\"organizationId\" class=\"form-control\" name=\"OrganizationId\" [(ngModel)]=\"cipher.organizationId\" (change)=\"organizationChanged()\" [disabled]=\"cipher.isDeleted || viewOnly\"> <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> </ng-container> <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\"> <h3 class=\"mt-4\">{{'collections' | i18n}}</h3> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <ng-container *ngIf=\"collections && collections.length\"> <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"c.checked\" id=\"collection-{{i}}\" name=\"Collection[{{i}}].Checked\" [disabled]=\"cipher.isDeleted || viewOnly\"> <label class=\"form-check-label\" for=\"collection-{{i}}\">{{c.name}}</label> </div> </ng-container> </ng-container> <ng-container *ngIf=\"editMode\"> <div class=\"small text-muted mt-4\"> <div> <b class=\"font-weight-semibold\">{{'dateUpdated' | i18n}}:</b> {{cipher.revisionDate | date:'medium'}} </div> <div *ngIf=\"showRevisionDate\"> <b class=\"font-weight-semibold\">{{'datePasswordUpdated' | i18n}}:</b> {{cipher.passwordRevisionDisplayDate | date:'medium'}} </div> <div *ngIf=\"hasPasswordHistory\"> <b class=\"font-weight-semibold\">{{'passwordHistory' | i18n}}:</b> <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{'view' | i18n}}\"> {{cipher.passwordHistory.length}} </a> </div> <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\"> <div *ngFor=\"let ph of cipher.passwordHistory\"> {{ph.lastUsedDate | date:'short'}} - <span class=\"password-wrapper text-monospace ml-2\">{{ph.password}}</span> </div> </div> </div> </ng-container> <ng-container> <h3 class=\"mt-4\">{{'options' | i18n}}</h3> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [ngModel]=\"reprompt\" (change)=\"repromptChanged()\" id=\"passwordPrompt\" name=\"passwordPrompt\" [disabled]=\"cipher.isDeleted || viewOnly\"> <label class=\"form-check-label\" for=\"passwordPrompt\">{{'passwordPrompt' | i18n}}</label> <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/managing-items/#protect-individual-items\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!viewOnly\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(cipher?.isDeleted ? 'restore' : 'save') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{(viewOnly ? 'close' : 'cancel') | i18n}} </button> <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\"> <button *ngIf=\"!organization && !cipher.isDeleted\" type=\"button\" (click)=\"toggleFavorite()\" class=\"btn btn-link\" appA11yTitle=\"{{(cipher.favorite ? 'unfavorite' : 'favorite') | i18n}}\"> <i class=\"fa fa-lg\" [ngClass]=\"{'fa-star': cipher.favorite, 'fa-star-o': !cipher.favorite}\" aria-hidden=\"true\"></i> </button> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{(cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}}\" *ngIf=\"editMode && !cloneMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { Importer } from '../importers/importer';\n\nexport interface ImportOption {\n    id: string;\n    name: string;\n}\nexport abstract class ImportService {\n    featuredImportOptions: ImportOption[];\n    regularImportOptions: ImportOption[];\n    getImportOptions: () => ImportOption[];\n    import: (importer: Importer, fileContents: string, organizationId?: string) => Promise<Error>;\n    getImporter: (format: string, organizationId: string) => Importer;\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CiphersComponent as BaseCiphersComponent } from 'jslib-angular/components/ciphers.component';\n\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nconst MaxCheckedCount = 500;\n\n@Component({\n    selector: 'app-vault-ciphers',\n    templateUrl: 'ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n    @Input() showAddNew = true;\n    @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n    @Output() onShareClicked = new EventEmitter<CipherView>();\n    @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n    @Output() onCloneClicked = new EventEmitter<CipherView>();\n\n    pagedCiphers: CipherView[] = [];\n    pageSize = 200;\n    cipherType = CipherType;\n    actionPromise: Promise<any>;\n    userHasPremiumAccess = false;\n\n    private didScroll = false;\n    private pagedCiphersCount = 0;\n    private refreshing = false;\n\n    constructor(searchService: SearchService, protected toasterService: ToasterService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected cipherService: CipherService, protected eventService: EventService,\n        protected totpService: TotpService, protected userService: UserService,\n        protected passwordRepromptService: PasswordRepromptService) {\n        super(searchService);\n    }\n\n    async ngOnInit() {\n        this.userHasPremiumAccess = await this.userService.canAccessPremium();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    loadMore() {\n        if (this.ciphers.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedCiphers.length;\n        let pagedSize = this.pageSize;\n        if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n            pagedSize = this.pagedCiphersCount;\n        }\n        if (this.ciphers.length > pagedLength) {\n            this.pagedCiphers = this.pagedCiphers.concat(this.ciphers.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedCiphersCount = this.pagedCiphers.length;\n        this.didScroll = this.pagedCiphers.length > this.pageSize;\n    }\n\n    async refresh() {\n        try {\n            this.refreshing = true;\n            await this.reload(this.filter, this.deleted);\n        } finally {\n            this.refreshing = false;\n        }\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.ciphers.length > this.pageSize;\n    }\n\n    async resetPaging() {\n        this.pagedCiphers = [];\n        this.loadMore();\n    }\n\n    async doSearch(indexedCiphers?: CipherView[]) {\n        this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, this.deletedFilter], indexedCiphers);\n        this.resetPaging();\n    }\n\n    launch(uri: string) {\n        this.platformUtilsService.launchUri(uri);\n    }\n\n    async attachments(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onAttachmentsClicked.emit(c);\n    }\n\n    async share(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onShareClicked.emit(c);\n    }\n\n    collections(c: CipherView) {\n        this.onCollectionsClicked.emit(c);\n    }\n\n    async clone(c: CipherView) {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        this.onCloneClicked.emit(c);\n    }\n\n    async delete(c: CipherView): Promise<boolean> {\n        if (!await this.repromptCipher(c)) {\n            return;\n        }\n        if (this.actionPromise != null) {\n            return;\n        }\n        const permanent = c.isDeleted;\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t(permanent ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\n            this.i18nService.t(permanent ? 'permanentlyDeleteItem' : 'deleteItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.deleteCipher(c.id, permanent);\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t(permanent ? 'permanentlyDeletedItem'\n                : 'deletedItem'));\n            this.refresh();\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    async restore(c: CipherView): Promise<boolean> {\n        if (this.actionPromise != null || !c.isDeleted) {\n            return;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('restoreItemConfirmation'),\n            this.i18nService.t('restoreItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.cipherService.restoreWithServer(c.id);\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('restoredItem'));\n            this.refresh();\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n        if (this.passwordRepromptService.protectedFields().includes(aType) && !await this.repromptCipher(cipher)) {\n            return;\n        }\n\n        if (value == null || aType === 'TOTP' && !this.displayTotpCopyButton(cipher)) {\n            return;\n        } else if (value === cipher.login.totp) {\n            value = await this.totpService.getCode(value);\n        }\n\n        if (!cipher.viewPassword) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.toasterService.popAsync('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (typeI18nKey === 'password' || typeI18nKey === 'verificationCodeTotp') {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n        } else if (typeI18nKey === 'securityCode') {\n            this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n        }\n    }\n\n    selectAll(select: boolean) {\n        if (select) {\n            this.selectAll(false);\n        }\n        const selectCount = select && this.ciphers.length > MaxCheckedCount\n            ? MaxCheckedCount\n            : this.ciphers.length;\n        for (let i = 0; i < selectCount; i++) {\n            this.checkCipher(this.ciphers[i], select);\n        }\n    }\n\n    checkCipher(c: CipherView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    getSelected(): CipherView[] {\n        if (this.ciphers == null) {\n            return [];\n        }\n        return this.ciphers.filter(c => !!(c as any).checked);\n    }\n\n    getSelectedIds(): string[] {\n        return this.getSelected().map(c => c.id);\n    }\n\n    displayTotpCopyButton(cipher: CipherView) {\n        return (cipher?.login?.hasTotp ?? false) &&\n            (cipher.organizationUseTotp || this.userHasPremiumAccess);\n    }\n\n    async selectCipher(cipher: CipherView) {\n        if (await this.repromptCipher(cipher)) {\n            super.selectCipher(cipher);\n        }\n    }\n\n    protected deleteCipher(id: string, permanent: boolean) {\n        return permanent ? this.cipherService.deleteWithServer(id) : this.cipherService.softDeleteWithServer(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return c.hasOldAttachments && c.organizationId == null;\n    }\n\n    protected async repromptCipher(c: CipherView) {\n        return c.reprompt === CipherRepromptType.None || await this.passwordRepromptService.showPasswordPrompt();\n    }\n}\n","<ng-container *ngIf=\"(isPaging() ? pagedCiphers : ciphers) as filteredCiphers\"> <table class=\"table table-hover table-list table-ciphers\" *ngIf=\"filteredCiphers.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let c of filteredCiphers\"> <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp> </td> <td (click)=\"checkCipher(c)\" class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick appStopProp (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> <ng-container *ngIf=\"showFixOldAttachments(c)\"> <i class=\"fa fa-exclamation-triangle text-warning\" appStopProp title=\"{{'attachmentsNeedFix' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachmentsNeedFix' | i18n}}</span> </ng-container> </ng-container> <br> <small appStopProp>{{c.subTitle}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.username, 'username', 'Username')\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyUsername' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.password, 'password', 'Password')\" *ngIf=\"c.viewPassword\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyPassword' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\" *ngIf=\"displayTotpCopyButton(c)\"> <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i> {{'copyVerificationCode' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\"> <i class=\"fa fa-fw fa-share-square-o\" aria-hidden=\"true\"></i> {{'launch' | i18n}} </a> </ng-container> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"attachments(c)\"> <i class=\"fa fa-fw fa-paperclip\" aria-hidden=\"true\"></i> {{'attachments' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\" (click)=\"clone(c)\"> <i class=\"fa fa-fw fa-files-o\" aria-hidden=\"true\"></i> {{'clone' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"!organization && !c.organizationId && !c.isDeleted\" (click)=\"share(c)\"> <i class=\"fa fa-fw fa-arrow-circle-o-right\" aria-hidden=\"true\"></i> {{'moveToOrganization' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\"> <i class=\"fa fa-fw fa-cubes\" aria-hidden=\"true\"></i> {{'collections' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\"> <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i> {{'eventLogs' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"restore(c)\" *ngIf=\"c.isDeleted\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'restore' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{(c.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\"> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p>{{'noItemsInList' | i18n}}</p> <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\"> <i class=\"fa fa-plus fa-fw\"></i>{{'addItem' | i18n}}</button> </ng-container> </div> </ng-container> ","export enum Permissions {\n    AccessBusinessPortal,\n    AccessEventLogs,\n    AccessImportExport,\n    AccessReports,\n    ManageAllCollections,\n    ManageAssignedCollections,\n    ManageGroups,\n    ManageOrganization,\n    ManagePolicies,\n    ManageProvider,\n    ManageUsers,\n    ManageUsersPassword,\n}\n","export class KeysRequest {\n    publicKey: string;\n    encryptedPrivateKey: string;\n\n    constructor(publicKey: string, encryptedPrivateKey: string) {\n        this.publicKey = publicKey;\n        this.encryptedPrivateKey = encryptedPrivateKey;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n    id: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.readOnly = this.getResponseProperty('ReadOnly');\n        this.hidePasswords = this.getResponseProperty('HidePasswords');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileOrganizationResponse } from './profileOrganizationResponse';\nimport { ProfileProviderOrganizationResponse } from './profileProviderOrganizationResponse';\nimport { ProfileProviderResponse } from './profileProviderResponse';\n\nexport class ProfileResponse extends BaseResponse {\n    id: string;\n    name: string;\n    email: string;\n    emailVerified: boolean;\n    masterPasswordHint: string;\n    premium: boolean;\n    culture: string;\n    twoFactorEnabled: boolean;\n    key: string;\n    privateKey: string;\n    securityStamp: string;\n    forcePasswordReset: boolean;\n    organizations: ProfileOrganizationResponse[] = [];\n    providers: ProfileProviderResponse[] = [];\n    providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.emailVerified = this.getResponseProperty('EmailVerified');\n        this.masterPasswordHint = this.getResponseProperty('MasterPasswordHint');\n        this.premium = this.getResponseProperty('Premium');\n        this.culture = this.getResponseProperty('Culture');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n        this.key = this.getResponseProperty('Key');\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.securityStamp = this.getResponseProperty('SecurityStamp');\n        this.forcePasswordReset = this.getResponseProperty('ForcePasswordReset');\n\n        const organizations = this.getResponseProperty('Organizations');\n        if (organizations != null) {\n            this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n        }\n        const providers = this.getResponseProperty('Providers');\n        if (providers != null) {\n            this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n        }\n        const providerOrganizations = this.getResponseProperty('ProviderOrganizations');\n        if (providerOrganizations != null) {\n            this.providerOrganizations = providerOrganizations.map((o: any) => new ProfileProviderOrganizationResponse(o));\n        }\n    }\n}\n","import {\n    Directive,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n    loading = true;\n    authed = false;\n    email: string;\n    actionPromise: Promise<any>;\n\n    protected requiredParameters: string[] = [];\n    protected failedShortMessage = 'inviteAcceptFailedShort';\n    protected failedMessage = 'inviteAcceptFailed';\n\n    constructor(protected router: Router, protected toasterService: ToasterService,\n        protected i18nService: I18nService, protected route: ActivatedRoute,\n        protected userService: UserService, protected stateService: StateService) { }\n\n    abstract authedHandler(qParams: any): Promise<void>;\n    abstract unauthedHandler(qParams: any): Promise<void>;\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async qParams => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            await this.stateService.remove('loginRedirect');\n\n            let error = this.requiredParameters.some(e => qParams?.[e] == null || qParams[e] === '');\n            let errorMessage: string = null;\n            if (!error) {\n                this.authed = await this.userService.isAuthenticated();\n\n                if (this.authed) {\n                    try {\n                        await this.authedHandler(qParams);\n                    } catch (e) {\n                        error = true;\n                        errorMessage = e.message;\n                    }\n                } else {\n                    await this.stateService.save('loginRedirect', {\n                        route: this.getRedirectRoute(),\n                        qParams: qParams,\n                    });\n\n                    this.email = qParams.email;\n                    await this.unauthedHandler(qParams);\n                }\n            }\n\n            if (error) {\n                const toast: Toast = {\n                    type: 'error',\n                    title: null,\n                    body: errorMessage != null ? this.i18nService.t(this.failedShortMessage, errorMessage) :\n                        this.i18nService.t(this.failedMessage),\n                    timeout: 10000,\n                };\n                this.toasterService.popAsync(toast);\n                this.router.navigate(['/']);\n            }\n\n            this.loading = false;\n        });\n    }\n\n    getRedirectRoute() {\n        const urlTree = this.router.parseUrl(this.router.url);\n        urlTree.queryParams = {};\n        return urlTree.toString();\n    }\n}\n","export enum DeviceType {\n    Android = 0,\n    iOS = 1,\n    ChromeExtension = 2,\n    FirefoxExtension = 3,\n    OperaExtension = 4,\n    EdgeExtension = 5,\n    WindowsDesktop = 6,\n    MacOsDesktop = 7,\n    LinuxDesktop = 8,\n    ChromeBrowser = 9,\n    FirefoxBrowser = 10,\n    OperaBrowser = 11,\n    EdgeBrowser = 12,\n    IEBrowser = 13,\n    UnknownBrowser = 14,\n    AndroidAmazon = 15,\n    UWP = 16,\n    SafariBrowser = 17,\n    VivaldiBrowser = 18,\n    VivaldiExtension = 19,\n    SafariExtension = 20,\n}\n","export abstract class SettingsService {\n    clearCache: () => void;\n    getEquivalentDomains: () => Promise<any>;\n    setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n    clear: (userId: string) => Promise<void>;\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { EventService } from '../../services/event.service';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\n\n@Component({\n    selector: 'app-entity-events',\n    templateUrl: 'entity-events.component.html',\n})\nexport class EntityEventsComponent implements OnInit {\n    @Input() name: string;\n    @Input() entity: 'user' | 'cipher';\n    @Input() entityId: string;\n    @Input() organizationId: string;\n    @Input() providerId: string;\n    @Input() showUser = false;\n\n    loading = true;\n    loaded = false;\n    events: any[];\n    start: string;\n    end: string;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n    private orgUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private eventService: EventService, private toasterService: ToasterService,\n        private userNamePipe: UserNamePipe) { }\n\n    async ngOnInit() {\n        const defaultDates = this.eventService.getDefaultDateFilters();\n        this.start = defaultDates[0];\n        this.end = defaultDates[1];\n        await this.load();\n    }\n\n    async load() {\n        if (this.showUser) {\n            const response = await this.apiService.getOrganizationUsers(this.organizationId);\n            response.data.forEach(u => {\n                const name = this.userNamePipe.transform(u);\n                this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n                this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n            });\n        }\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.refreshPromise != null || this.morePromise != null) {\n            return;\n        }\n\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return;\n        }\n\n        this.loading = true;\n        let response: ListResponse<EventResponse>;\n        try {\n            let promise: Promise<any>;\n            if (this.entity === 'user' && this.providerId) {\n                promise = this.apiService.getEventsProviderUser(this.providerId, this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            } else if (this.entity === 'user') {\n                promise = this.apiService.getEventsOrganizationUser(this.organizationId, this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            } else {\n                promise = this.apiService.getEventsCipher(this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            }\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            response = await promise;\n        } catch { }\n\n        this.continuationToken = response.continuationToken;\n        const events = await Promise.all(response.data.map(async r => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = await this.eventService.getEventInfo(r);\n            const user = this.showUser && userId != null && this.orgUsersUserIdMap.has(userId) ?\n                this.orgUsersUserIdMap.get(userId) : null;\n            return {\n                message: eventInfo.message,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.showUser ? this.i18nService.t('unknown') : null,\n                userEmail: user != null ? user.email : this.showUser ? '' : null,\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            };\n        }));\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"eventLogsTitle\"> {{'eventLogs' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"loaded\"> <div class=\"d-flex\"> <div class=\"form-inline\"> <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\" placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\"> <span class=\"mx-2\">-</span> <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\" placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\"> </div> <button #refreshBtn [appApiAction]=\"refreshPromise\" type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshBtn.loading\"> <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loaded && refreshBtn.loading}\" aria-hidden=\"true\"></i> {{'refresh' | i18n}} </button> </div> <hr> <div *ngIf=\"!events || !events.length\"> {{'noEventsInList' | i18n}} </div> <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\"> <thead> <tr> <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th> <th class=\"border-top-0\" width=\"40\"> <span class=\"sr-only\">{{'device' | i18n}}</span> </th> <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{'user' | i18n}}</th> <th class=\"border-top-0\">{{'event' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let e of events\"> <td>{{e.date | date:'medium'}}</td> <td> <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span> </td> <td *ngIf=\"showUser\"> <span appA11yTitle=\"{{e.userEmail}}\">{{e.userName}}</span> </td> <td [innerHTML]=\"e.message\"></td> </tr> </tbody> </table> <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\" (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'loadMore' | i18n}}</span> </button> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","export enum EncryptionType {\n    AesCbc256_B64 = 0,\n    AesCbc128_HmacSha256_B64 = 1,\n    AesCbc256_HmacSha256_B64 = 2,\n    Rsa2048_OaepSha256_B64 = 3,\n    Rsa2048_OaepSha1_B64 = 4,\n    Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n    Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum HashPurpose {\n    ServerAuthorization = 1,\n    LocalAuthorization = 2,\n}\n","import { PolicyResponse } from '../response/policyResponse';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class PolicyData {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(response: PolicyResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.type = response.type;\n        this.data = response.data;\n        this.enabled = response.enabled;\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n    masterPassword: string;\n    masterPasswordRetype: string;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n    protected email: string;\n    protected kdf: KdfType;\n    protected kdfIterations: number;\n\n    private masterPasswordStrengthTimeout: any;\n\n    constructor(protected i18nService: I18nService, protected cryptoService: CryptoService,\n        protected messagingService: MessagingService, protected userService: UserService,\n        protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected policyService: PolicyService) { }\n\n    async ngOnInit() {\n        this.email = await this.userService.getEmail();\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    }\n\n    getPasswordScoreAlertDisplay() {\n        if (this.enforcedPolicyOptions == null) {\n            return '';\n        }\n\n        let str: string;\n        switch (this.enforcedPolicyOptions.minComplexity) {\n            case 4:\n                str = this.i18nService.t('strong');\n                break;\n            case 3:\n                str = this.i18nService.t('good');\n                break;\n            default:\n                str = this.i18nService.t('weak');\n                break;\n        }\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\n    }\n\n    async submit() {\n        if (!await this.strongPassword()) {\n            return;\n        }\n\n        if (!await this.setupSubmitActions()) {\n            return;\n        }\n\n        const email = await this.userService.getEmail();\n        if (this.kdf == null) {\n            this.kdf = await this.userService.getKdf();\n        }\n        if (this.kdfIterations == null) {\n            this.kdfIterations = await this.userService.getKdfIterations();\n        }\n        const key = await this.cryptoService.makeKey(this.masterPassword, email.trim().toLowerCase(),\n            this.kdf, this.kdfIterations);\n        const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n        let encKey: [SymmetricCryptoKey, EncString] = null;\n        const existingEncKey = await this.cryptoService.getEncKey();\n        if (existingEncKey == null) {\n            encKey = await this.cryptoService.makeEncKey(key);\n        } else {\n            encKey = await this.cryptoService.remakeEncKey(key);\n        }\n\n        await this.performSubmitActions(masterPasswordHash, key, encKey);\n    }\n\n    async setupSubmitActions(): Promise<boolean> {\n        // Override in sub-class\n        // Can be used for additional validation and/or other processes the should occur before changing passwords\n        return true;\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, EncString]) {\n        // Override in sub-class\n    }\n\n    async strongPassword(): Promise<boolean> {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n        if (this.masterPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return false;\n        }\n        if (this.masterPassword !== this.masterPasswordRetype) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return false;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n            this.getPasswordStrengthUserInput());\n\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(\n                strengthResult.score,\n                this.masterPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return false;\n        }\n\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        return userInput;\n    }\n}\n","import { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\nimport { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { DeviceRequest } from '../models/request/deviceRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\n\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { AuthService as AuthServiceAbstraction } from '../abstractions/auth.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { LogService } from '../abstractions/log.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\n\nexport const TwoFactorProviders = {\n    [TwoFactorProviderType.Authenticator]: {\n        type: TwoFactorProviderType.Authenticator,\n        name: null as string,\n        description: null as string,\n        priority: 1,\n        sort: 1,\n        premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n        type: TwoFactorProviderType.Yubikey,\n        name: null as string,\n        description: null as string,\n        priority: 3,\n        sort: 2,\n        premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n        type: TwoFactorProviderType.Duo,\n        name: 'Duo',\n        description: null as string,\n        priority: 2,\n        sort: 3,\n        premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n        type: TwoFactorProviderType.OrganizationDuo,\n        name: 'Duo (Organization)',\n        description: null as string,\n        priority: 10,\n        sort: 4,\n        premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n        type: TwoFactorProviderType.Email,\n        name: null as string,\n        description: null as string,\n        priority: 0,\n        sort: 6,\n        premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n        type: TwoFactorProviderType.WebAuthn,\n        name: null as string,\n        description: null as string,\n        priority: 4,\n        sort: 5,\n        premium: true,\n    },\n};\n\nexport class AuthService implements AuthServiceAbstraction {\n    email: string;\n    masterPasswordHash: string;\n    localMasterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    ssoRedirectUrl: string;\n    clientId: string;\n    clientSecret: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType = null;\n    captchaToken: string;\n\n    private key: SymmetricCryptoKey;\n\n    constructor(private cryptoService: CryptoService, protected apiService: ApiService,\n        private userService: UserService, protected tokenService: TokenService,\n        protected appIdService: AppIdService, private i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, private messagingService: MessagingService,\n        private vaultTimeoutService: VaultTimeoutService, private logService: LogService,\n        private setCryptoKeys = true) {\n    }\n\n    init() {\n        TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t('emailTitle');\n        TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t('emailDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].name = this.i18nService.t('authenticatorAppTitle');\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n            this.i18nService.t('authenticatorAppDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t('duoDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n            'Duo (' + this.i18nService.t('organization') + ')';\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n            this.i18nService.t('duoOrganizationDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t('webAuthnTitle');\n        TwoFactorProviders[TwoFactorProviderType.WebAuthn].description = this.i18nService.t('webAuthnDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t('yubiKeyTitle');\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].description = this.i18nService.t('yubiKeyDesc');\n    }\n\n    async logIn(email: string, masterPassword: string, captchaToken?: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        const localHashedPassword = await this.cryptoService.hashPassword(masterPassword, key,\n            HashPurpose.LocalAuthorization);\n        return await this.logInHelper(email, hashedPassword, localHashedPassword, null, null, null, null, null,\n            key, null, null, null, captchaToken);\n    }\n\n    async logInSso(code: string, codeVerifier: string, redirectUrl: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, code, codeVerifier, redirectUrl, null, null,\n            null, null, null, null);\n    }\n\n    async logInApiKey(clientId: string, clientSecret: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, null, null, null, clientId, clientSecret,\n            null, null, null, null);\n    }\n\n    async logInTwoFactor(twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean): Promise<AuthResult> {\n        return await this.logInHelper(this.email, this.masterPasswordHash, this.localMasterPasswordHash, this.code,\n            this.codeVerifier, this.ssoRedirectUrl, this.clientId, this.clientSecret, this.key, twoFactorProvider,\n            twoFactorToken, remember, this.captchaToken);\n    }\n\n    async logInComplete(email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean, captchaToken?: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        const localHashedPassword = await this.cryptoService.hashPassword(masterPassword, key,\n            HashPurpose.LocalAuthorization);\n        return await this.logInHelper(email, hashedPassword, localHashedPassword, null, null, null, null, null, key,\n            twoFactorProvider, twoFactorToken, remember, captchaToken);\n    }\n\n    async logInSsoComplete(code: string, codeVerifier: string, redirectUrl: string,\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, code, codeVerifier, redirectUrl, null,\n            null, null, twoFactorProvider, twoFactorToken, remember);\n    }\n\n    async logInApiKeyComplete(clientId: string, clientSecret: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, null, null, null, null, clientId, clientSecret, null,\n            twoFactorProvider, twoFactorToken, remember);\n    }\n\n    logOut(callback: Function) {\n        callback();\n        this.messagingService.send('loggedOut');\n    }\n\n    getSupportedTwoFactorProviders(win: Window): any[] {\n        const providers: any[] = [];\n        if (this.twoFactorProvidersData == null) {\n            return providers;\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n            this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) && this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) && this.platformUtilsService.supportsWebAuthn(win)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n        }\n\n        return providers;\n    }\n\n    getDefaultTwoFactorProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n        if (this.twoFactorProvidersData == null) {\n            return null;\n        }\n\n        if (this.selectedTwoFactorProviderType != null &&\n            this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)) {\n            return this.selectedTwoFactorProviderType;\n        }\n\n        let providerType: TwoFactorProviderType = null;\n        let providerPriority = -1;\n        this.twoFactorProvidersData.forEach((value, type) => {\n            const provider = (TwoFactorProviders as any)[type];\n            if (provider != null && provider.priority > providerPriority) {\n                if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n                    return;\n                }\n\n                providerType = type;\n                providerPriority = provider.priority;\n            }\n        });\n\n        return providerType;\n    }\n\n    async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n        email = email.trim().toLowerCase();\n        let kdf: KdfType = null;\n        let kdfIterations: number = null;\n        try {\n            const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n            if (preloginResponse != null) {\n                kdf = preloginResponse.kdf;\n                kdfIterations = preloginResponse.kdfIterations;\n            }\n        } catch (e) {\n            if (e == null || e.statusCode !== 404) {\n                throw e;\n            }\n        }\n        return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    }\n\n    authingWithApiKey(): boolean {\n        return this.clientId != null && this.clientSecret != null;\n    }\n\n    authingWithSso(): boolean {\n        return this.code != null && this.codeVerifier != null && this.ssoRedirectUrl != null;\n    }\n\n    authingWithPassword(): boolean {\n        return this.email != null && this.masterPasswordHash != null;\n    }\n\n    private async logInHelper(email: string, hashedPassword: string, localHashedPassword: string, code: string,\n        codeVerifier: string, redirectUrl: string, clientId: string, clientSecret: string, key: SymmetricCryptoKey,\n        twoFactorProvider?: TwoFactorProviderType, twoFactorToken?: string, remember?: boolean, captchaToken?: string): Promise<AuthResult> {\n        const storedTwoFactorToken = await this.tokenService.getTwoFactorToken(email);\n        const appId = await this.appIdService.getAppId();\n        const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n        let emailPassword: string[] = [];\n        let codeCodeVerifier: string[] = [];\n        let clientIdClientSecret: [string, string] = [null, null];\n\n        if (email != null && hashedPassword != null) {\n            emailPassword = [email, hashedPassword];\n        } else {\n            emailPassword = null;\n        }\n        if (code != null && codeVerifier != null && redirectUrl != null) {\n            codeCodeVerifier = [code, codeVerifier, redirectUrl];\n        } else {\n            codeCodeVerifier = null;\n        }\n        if (clientId != null && clientSecret != null) {\n            clientIdClientSecret = [clientId, clientSecret];\n        } else {\n            clientIdClientSecret = null;\n        }\n\n        let request: TokenRequest;\n        if (twoFactorToken != null && twoFactorProvider != null) {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, twoFactorProvider,\n                twoFactorToken, remember, captchaToken, deviceRequest);\n        } else if (storedTwoFactorToken != null) {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret,\n                TwoFactorProviderType.Remember, storedTwoFactorToken, false, captchaToken, deviceRequest);\n        } else {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, null,\n                null, false, captchaToken, deviceRequest);\n        }\n\n        const response = await this.apiService.postIdentityToken(request);\n\n        this.clearState();\n        const result = new AuthResult();\n        result.captchaSiteKey = (response as any).siteKey;\n        if (!!result.captchaSiteKey) {\n            return result;\n        }\n        result.twoFactor = !!(response as any).twoFactorProviders2;\n\n        if (result.twoFactor) {\n            // two factor required\n            this.email = email;\n            this.masterPasswordHash = hashedPassword;\n            this.localMasterPasswordHash = localHashedPassword;\n            this.code = code;\n            this.codeVerifier = codeVerifier;\n            this.ssoRedirectUrl = redirectUrl;\n            this.clientId = clientId;\n            this.clientSecret = clientSecret;\n            this.key = this.setCryptoKeys ? key : null;\n            const twoFactorResponse = response as IdentityTwoFactorResponse;\n            this.twoFactorProvidersData = twoFactorResponse.twoFactorProviders2;\n            result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\n            this.captchaToken = twoFactorResponse.captchaToken;\n            return result;\n        }\n\n        const tokenResponse = response as IdentityTokenResponse;\n        result.resetMasterPassword = tokenResponse.resetMasterPassword;\n        if (tokenResponse.twoFactorToken != null) {\n            await this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);\n        }\n\n        await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken, clientIdClientSecret);\n        await this.userService.setInformation(this.tokenService.getUserId(), this.tokenService.getEmail(),\n            tokenResponse.kdf, tokenResponse.kdfIterations);\n        if (this.setCryptoKeys) {\n            if (key != null) {\n                await this.cryptoService.setKey(key);\n            }\n            if (localHashedPassword != null) {\n                await this.cryptoService.setKeyHash(localHashedPassword);\n            }\n\n            // Skip this step during SSO new user flow. No key is returned from server.\n            if (code == null || tokenResponse.key != null) {\n                await this.cryptoService.setEncKey(tokenResponse.key);\n\n                // User doesn't have a key pair yet (old account), let's generate one for them\n                if (tokenResponse.privateKey == null) {\n                    try {\n                        const keyPair = await this.cryptoService.makeKeyPair();\n                        await this.apiService.postAccountKeys(new KeysRequest(keyPair[0], keyPair[1].encryptedString));\n                        tokenResponse.privateKey = keyPair[1].encryptedString;\n                    } catch (e) {\n                        // tslint:disable-next-line\n                        this.logService.error(e);\n                    }\n                }\n\n                await this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);\n            }\n        }\n\n        if (this.vaultTimeoutService != null) {\n            this.vaultTimeoutService.biometricLocked = false;\n        }\n        this.messagingService.send('loggedIn');\n        return result;\n    }\n\n    private clearState(): void {\n        this.key = null;\n        this.email = null;\n        this.masterPasswordHash = null;\n        this.localMasterPasswordHash = null;\n        this.code = null;\n        this.codeVerifier = null;\n        this.ssoRedirectUrl = null;\n        this.clientId = null;\n        this.clientSecret = null;\n        this.twoFactorProvidersData = null;\n        this.selectedTwoFactorProviderType = null;\n    }\n}\n","export class SelectionReadOnlyRequest {\n    id: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n        this.id = id;\n        this.readOnly = readOnly;\n        this.hidePasswords = hidePasswords;\n    }\n}\n","import { CardData } from '../data/cardData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { CardView } from '../view/cardView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Card extends Domain {\n    cardholderName: EncString;\n    brand: EncString;\n    number: EncString;\n    expMonth: EncString;\n    expYear: EncString;\n    code: EncString;\n\n    constructor(obj?: CardData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n        return this.decryptObj(new CardView(this), {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, orgId, encKey);\n    }\n\n    toCardData(): CardData {\n        const c = new CardData();\n        this.buildDataModel(this, c, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        });\n        return c;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldData } from '../data/fieldData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { FieldView } from '../view/fieldView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Field extends Domain {\n    name: EncString;\n    value: EncString;\n    type: FieldType;\n\n    constructor(obj?: FieldData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n        this.buildDomainModel(this, obj, {\n            name: null,\n            value: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n        return this.decryptObj(new FieldView(this), {\n            name: null,\n            value: null,\n        }, orgId, encKey);\n    }\n\n    toFieldData(): FieldData {\n        const f = new FieldData();\n        this.buildDataModel(this, f, {\n            name: null,\n            value: null,\n            type: null,\n        }, ['type']);\n        return f;\n    }\n}\n","import { IdentityData } from '../data/identityData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { IdentityView } from '../view/identityView';\n\nexport class Identity extends Domain {\n    title: EncString;\n    firstName: EncString;\n    middleName: EncString;\n    lastName: EncString;\n    address1: EncString;\n    address2: EncString;\n    address3: EncString;\n    city: EncString;\n    state: EncString;\n    postalCode: EncString;\n    country: EncString;\n    company: EncString;\n    email: EncString;\n    phone: EncString;\n    ssn: EncString;\n    username: EncString;\n    passportNumber: EncString;\n    licenseNumber: EncString;\n\n    constructor(obj?: IdentityData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n        return this.decryptObj(new IdentityView(this), {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, orgId, encKey);\n    }\n\n    toIdentityData(): IdentityData {\n        const i = new IdentityData();\n        this.buildDataModel(this, i, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        });\n        return i;\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginData } from '../data/loginData';\n\nimport { LoginView } from '../view/loginView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Login extends Domain {\n    uris: LoginUri[];\n    username: EncString;\n    password: EncString;\n    passwordRevisionDate?: Date;\n    totp: EncString;\n    autofillOnPageLoad: boolean;\n\n    constructor(obj?: LoginData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.passwordRevisionDate = obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n        this.autofillOnPageLoad = obj.autofillOnPageLoad;\n        this.buildDomainModel(this, obj, {\n            username: null,\n            password: null,\n            totp: null,\n        }, alreadyEncrypted, []);\n\n        if (obj.uris) {\n            this.uris = [];\n            obj.uris.forEach(u => {\n                this.uris.push(new LoginUri(u, alreadyEncrypted));\n            });\n        }\n    }\n\n    async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n        const view = await this.decryptObj(new LoginView(this), {\n            username: null,\n            password: null,\n            totp: null,\n        }, orgId, encKey);\n\n        if (this.uris != null) {\n            view.uris = [];\n            for (let i = 0; i < this.uris.length; i++) {\n                const uri = await this.uris[i].decrypt(orgId, encKey);\n                view.uris.push(uri);\n            }\n        }\n\n        return view;\n    }\n\n    toLoginData(): LoginData {\n        const l = new LoginData();\n        l.passwordRevisionDate = this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n        l.autofillOnPageLoad = this.autofillOnPageLoad;\n        this.buildDataModel(this, l, {\n            username: null,\n            password: null,\n            totp: null,\n        });\n\n        if (this.uris != null && this.uris.length > 0) {\n            l.uris = [];\n            this.uris.forEach(u => {\n                l.uris.push(u.toLoginUriData());\n            });\n        }\n\n        return l;\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriData } from '../data/loginUriData';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class LoginUri extends Domain {\n    uri: EncString;\n    match: UriMatchType;\n\n    constructor(obj?: LoginUriData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.match = obj.match;\n        this.buildDomainModel(this, obj, {\n            uri: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n        return this.decryptObj(new LoginUriView(this), {\n            uri: null,\n        }, orgId, encKey);\n    }\n\n    toLoginUriData(): LoginUriData {\n        const u = new LoginUriData();\n        this.buildDataModel(this, u, {\n            uri: null,\n        }, ['match']);\n        return u;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteData } from '../data/secureNoteData';\n\nimport Domain from './domainBase';\n\nimport { SecureNoteView } from '../view/secureNoteView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class SecureNote extends Domain {\n    type: SecureNoteType;\n\n    constructor(obj?: SecureNoteData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n        return Promise.resolve(new SecureNoteView(this));\n    }\n\n    toSecureNoteData(): SecureNoteData {\n        const n = new SecureNoteData();\n        n.type = this.type;\n        return n;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    Renderer2,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NgControl,\n    NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n    selector: 'input[type=checkbox][appTrueFalseValue]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TrueFalseValueDirective),\n            multi: true,\n        },\n    ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n    @Input() trueValue = true;\n    @Input() falseValue = false;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\n\n    @HostListener('change', ['$event'])\n    onHostChange(ev: any) {\n        this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n    }\n\n    writeValue(obj: any): void {\n        if (obj === this.trueValue) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', true);\n        } else {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', false);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void { /* nothing */ }\n\n    setDisabledState?(isDisabled: boolean): void { /* nothing */ }\n\n    private propagateChange = (_: any) => { /* nothing */ };\n}\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from 'jslib-angular/components/groupings.component';\n\n@Component({\n    selector: 'app-vault-groupings',\n    templateUrl: 'groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    @Output() onSearchTextChanged = new EventEmitter<string>();\n\n    searchText: string = '';\n    searchPlaceholder: string = null;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    searchTextChanged() {\n        this.onSearchTextChanged.emit(this.searchText);\n    }\n}\n","<div class=\"card vault-filters\"> <div class=\"card-header d-flex\"> {{'filters' | i18n}} <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/searching-vault/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"card-body\"> <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchVault' | i18n)}}\" id=\"search\" class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" autocomplete=\"off\" appAutofocus> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedAll}\"> <a href=\"#\" appStopClick (click)=\"selectAll()\"> <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allItems' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedFavorites}\" *ngIf=\"showFavorites\"> <a href=\"#\" appStopClick (click)=\"selectFavorites()\"> <i class=\"fa-li fa fa-fw fa-star\"></i>{{'favorites' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedTrash}\" *ngIf=\"showTrash\"> <a href=\"#\" appStopClick (click)=\"selectTrash()\"> <i class=\"fa-li fa fa-fw fa-trash-o\"></i>{{'trash' | i18n}} </a> </li> </ul> <h3>{{'types' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedType === cipherType.Login}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Login)\"> <i class=\"fa-li fa fa-fw fa-globe\"></i>{{'typeLogin' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.Card}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Card)\"> <i class=\"fa-li fa fa-fw fa-credit-card\"></i>{{'typeCard' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.Identity}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Identity)\"> <i class=\"fa-li fa fa-fw fa-id-card-o\"></i>{{'typeIdentity' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === cipherType.SecureNote}\"> <a href=\"#\" appStopClick (click)=\"selectType(cipherType.SecureNote)\"> <i class=\"fa-li fa fa-fw fa-sticky-note-o\"></i>{{'typeSecureNote' | i18n}} </a> </li> </ul> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <ng-container *ngIf=\"showFolders\"> <h3 class=\"d-flex\"> {{'folders' | i18n}} <a href=\"#\" class=\"text-muted ml-auto\" appStopClick (click)=\"addFolder()\" appA11yTitle=\"{{'addFolder' | i18n}}\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> </a> </h3> <ul class=\"fa-ul card-ul\"> <ng-template #recursiveFolders let-folders> <li *ngFor=\"let f of folders\" [ngClass]=\"{active: selectedFolder && f.node.id === selectedFolderId}\"> <div class=\"d-flex\"> <i *ngIf=\"f.children.length\" class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\" [ngClass]=\"{'fa-caret-right': isCollapsed(f.node), 'fa-caret-down': !isCollapsed(f.node)}\" (click)=\"collapse(f.node)\"></i> <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectFolder(f.node)\"> <i *ngIf=\"f.children.length === 0\" class=\"fa-li fa fa-folder-o\" aria-hidden=\"true\"></i>{{f.node.name}} </a> <a href=\"#\" class=\"text-muted ml-auto show-active\" appStopClick (click)=\"editFolder(f.node)\" appA11yTitle=\"{{'editFolder' | i18n}}\" *ngIf=\"f.node.id\"> <i class=\"fa fa-pencil fa-fw\" aria-hidden=\"true\"></i> </a> </div> <ul class=\"fa-ul card-ul carets\" *ngIf=\"f.children.length && !isCollapsed(f.node)\"> <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: f.children }\"> </ng-container> </ul> </li> </ng-template> <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: nestedFolders }\"> </ng-container> </ul> </ng-container> <ng-container *ngIf=\"showCollections && collections && collections.length\"> <h3>{{'collections' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <ng-template #recursiveCollections let-collections> <li *ngFor=\"let c of collections\" [ngClass]=\"{active: c.node.id === selectedCollectionId}\"> <i *ngIf=\"c.children.length\" class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\" [ngClass]=\"{'fa-caret-right': isCollapsed(c.node), 'fa-caret-down': !isCollapsed(c.node)}\" (click)=\"collapse(c.node)\"></i> <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectCollection(c.node)\"> <i *ngIf=\"c.children.length === 0\" class=\"fa-li fa fa-cube\" aria-hidden=\"true\"></i>{{c.node.name}} </a> <ul class=\"fa-ul card-ul carets\" *ngIf=\"c.children.length && !isCollapsed(c.node)\"> <ng-container *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: c.children }\"> </ng-container> </ul> </li> </ng-template> <ng-container *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: nestedCollections }\"> </ng-container> </ul> </ng-container> </ng-container> </div> </div> ","import { OrganizationData } from '../data/organizationData';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\n\nexport class Organization {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useBusinessPortal: boolean;\n    useSso: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    hasPublicAndPrivateKeys: boolean;\n    providerId: string;\n    providerName: string;\n    isProviderUser: boolean;\n\n    constructor(obj?: OrganizationData) {\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.name = obj.name;\n        this.status = obj.status;\n        this.type = obj.type;\n        this.enabled = obj.enabled;\n        this.usePolicies = obj.usePolicies;\n        this.useGroups = obj.useGroups;\n        this.useDirectory = obj.useDirectory;\n        this.useEvents = obj.useEvents;\n        this.useTotp = obj.useTotp;\n        this.use2fa = obj.use2fa;\n        this.useApi = obj.useApi;\n        this.useBusinessPortal = obj.useBusinessPortal;\n        this.useSso = obj.useSso;\n        this.useResetPassword = obj.useResetPassword;\n        this.selfHost = obj.selfHost;\n        this.usersGetPremium = obj.usersGetPremium;\n        this.seats = obj.seats;\n        this.maxCollections = obj.maxCollections;\n        this.maxStorageGb = obj.maxStorageGb;\n        this.ssoBound = obj.ssoBound;\n        this.identifier = obj.identifier;\n        this.permissions = obj.permissions;\n        this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n        this.userId = obj.userId;\n        this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n        this.providerId = obj.providerId;\n        this.providerName = obj.providerName;\n        this.isProviderUser = obj.isProviderUser;\n    }\n\n    get canAccess() {\n        if (this.type === OrganizationUserType.Owner) {\n            return true;\n        }\n        return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n    }\n\n    get isManager() {\n        return this.type === OrganizationUserType.Manager || this.type === OrganizationUserType.Owner ||\n            this.type === OrganizationUserType.Admin;\n    }\n\n    get isAdmin() {\n        return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n    }\n\n    get isOwner() {\n        return this.type === OrganizationUserType.Owner;\n    }\n\n    get canAccessBusinessPortal() {\n        return this.isAdmin || this.permissions.accessBusinessPortal;\n    }\n\n    get canAccessEventLogs() {\n        return this.isAdmin || this.permissions.accessEventLogs;\n    }\n\n    get canAccessImportExport() {\n        return this.isAdmin || this.permissions.accessImportExport;\n    }\n\n    get canAccessReports() {\n        return this.isAdmin || this.permissions.accessReports;\n    }\n\n    get canManageAllCollections() {\n        return this.isAdmin || this.permissions.manageAllCollections;\n    }\n\n    get canManageAssignedCollections() {\n        return this.isManager || this.permissions.manageAssignedCollections;\n    }\n\n    get canManageGroups() {\n        return this.isAdmin || this.permissions.manageGroups;\n    }\n\n    get canManageSso() {\n        return this.isAdmin || this.permissions.manageSso;\n    }\n\n    get canManagePolicies() {\n        return this.isAdmin || this.permissions.managePolicies;\n    }\n\n    get canManageUsers() {\n        return this.isAdmin || this.permissions.manageUsers;\n    }\n\n    get canManageUsersPassword() {\n        return this.isAdmin || this.permissions.manageResetPassword;\n    }\n}\n","import { View } from './view';\n\nimport { SendFile } from '../domain/sendFile';\n\nexport class SendFileView implements View {\n    id: string = null;\n    size: string = null;\n    sizeName: string = null;\n    fileName: string = null;\n\n    constructor(f?: SendFile) {\n        if (!f) {\n            return;\n        }\n\n        this.id = f.id;\n        this.size = f.size;\n        this.sizeName = f.sizeName;\n    }\n\n    get fileSize(): number {\n        try {\n            if (this.size != null) {\n                return parseInt(this.size, null);\n            }\n        } catch { }\n        return 0;\n    }\n}\n","import { View } from './view';\n\nimport { SendText } from '../domain/sendText';\n\nexport class SendTextView implements View {\n    text: string = null;\n    hidden: boolean;\n\n    constructor(t?: SendText) {\n        if (!t) {\n            return;\n        }\n\n        this.hidden = t.hidden;\n    }\n\n    get maskedText(): string {\n        return this.text != null ? '••••••••' : null;\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { Policy } from 'jslib-common/models/domain/policy';\n\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\n@Component({\n    selector: 'app-organizations',\n    templateUrl: 'organizations.component.html',\n})\nexport class OrganizationsComponent implements OnInit {\n    @Input() vault = false;\n\n    organizations: Organization[];\n    policies: Policy[];\n    loaded: boolean = false;\n    actionPromise: Promise<any>;\n\n    constructor(private userService: UserService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private apiService: ApiService,\n        private toasterService: ToasterService, private syncService: SyncService,\n        private cryptoService: CryptoService, private policyService: PolicyService) { }\n\n    async ngOnInit() {\n        if (!this.vault) {\n            await this.syncService.fullSync(true);\n            await this.load();\n        }\n    }\n\n    async load() {\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.organizations = orgs;\n        this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n        this.loaded = true;\n    }\n\n    allowEnrollmentChanges(org: Organization): boolean {\n        if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n            const policy = this.policies.find(p => p.organizationId === org.id);\n            if (policy != null && policy.enabled) {\n                return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n            }\n        }\n\n        return false;\n    }\n\n    showEnrolledStatus(org: Organization): boolean {\n        return org.useResetPassword && org.resetPasswordEnrolled && this.policies.some(p => p.organizationId === org.id && p.enabled);\n    }\n\n    async unlinkSso(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            'Are you sure you want to unlink SSO for this organization?', org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, 'Unlinked SSO');\n            await this.load();\n        } catch { }\n    }\n\n    async leave(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('leaveOrganizationConfirmation'), org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('leftOrganization'));\n            await this.load();\n        } catch { }\n    }\n\n    async toggleResetPasswordEnrollment(org: Organization) {\n        // Set variables\n        let keyString: string = null;\n        let toastStringRef = 'withdrawPasswordResetSuccess';\n\n        // Enrolling\n        if (!org.resetPasswordEnrolled) {\n            // Alert user about enrollment\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('resetPasswordEnrollmentWarning'), null,\n                this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n            if (!confirmed) {\n                return;\n            }\n\n            // Retrieve Public Key\n            this.actionPromise = this.apiService.getOrganizationKeys(org.id)\n                .then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                    }\n\n                    const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n                    // RSA Encrypt user's encKey.key with organization public key\n                    const encKey = await this.cryptoService.getEncKey();\n                    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n                    keyString = encryptedKey.encryptedString;\n                    toastStringRef = 'enrollPasswordResetSuccess';\n\n                    // Create request and execute enrollment\n                    const request = new OrganizationUserResetPasswordEnrollmentRequest();\n                    request.resetPasswordKey = keyString;\n                    return this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n                })\n                .then(() => {\n                    return this.syncService.fullSync(true);\n                });\n        } else {\n            // Withdrawal\n            const request = new OrganizationUserResetPasswordEnrollmentRequest();\n            request.resetPasswordKey = keyString;\n            this.actionPromise = this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request)\n                .then(() => {\n                    return this.syncService.fullSync(true);\n                });\n        }\n\n        try {\n            await this.actionPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t(toastStringRef));\n            await this.load();\n        } catch { }\n    }\n}\n","<ng-container *ngIf=\"vault\"> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <ul class=\"fa-ul card-ul carets\" *ngIf=\"organizations && organizations.length\"> <li *ngFor=\"let o of organizations\"> <a [routerLink]=\"['/organizations', o.id]\" class=\"text-body\"> <i class=\"fa-li fa fa-caret-right\" aria-hidden=\"true\"></i> {{o.name}} <ng-container *ngIf=\"!o.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'organizationIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span> </ng-container> </a> </li> </ul> <p *ngIf=\"!organizations || !organizations.length\">{{'noOrganizationsList' | i18n}}</p> </ng-container> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-block btn-outline-primary\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </ng-container> <ng-container *ngIf=\"!vault\"> <div class=\"page-header d-flex\"> <h1> {{'organizations' | i18n}} <small [appApiAction]=\"actionPromise\" #action> <ng-container *ngIf=\"action.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-sm btn-outline-primary ml-auto\" *ngIf=\"!loaded || (organizations && organizations.length)\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </div> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <ng-container *ngIf=\"!organizations || !organizations.length\"> <p>{{'noOrganizationsList' | i18n}}</p> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-outline-primary\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newOrganization' | i18n}} </a> </ng-container> <table class=\"table table-hover table-list\" *ngIf=\"organizations && organizations.length\"> <tbody> <tr *ngFor=\"let o of organizations\"> <td width=\"30\"> <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" [routerLink]=\"['/organizations', o.id]\">{{o.name}}</a> <ng-container *ngIf=\"!o.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'organizationIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span> </ng-container> <ng-container *ngIf=\"showEnrolledStatus(o)\"> <i class=\"fa fa-key\" appStopProp title=\"{{'enrolledPasswordReset' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enrolledPasswordReset' | i18n}}</span> </ng-container> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a *ngIf=\"allowEnrollmentChanges(o) && !o.resetPasswordEnrolled\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleResetPasswordEnrollment(o)\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'enrollPasswordReset' | i18n}} </a> <a *ngIf=\"allowEnrollmentChanges(o) && o.resetPasswordEnrolled\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleResetPasswordEnrollment(o)\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'withdrawPasswordReset' | i18n}} </a> <ng-container *ngIf=\"o.useSso && o.identifier\"> <a *ngIf=\"o.ssoBound; else linkSso\" class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"unlinkSso(o)\"> <i class=\"fa fa-fw fa-chain-broken\" aria-hidden=\"true\"></i> {{'unlinkSso' | i18n}} </a> <ng-template #linkSso> <app-link-sso [organization]=\"o\"> </app-link-sso> </ng-template> </ng-container> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"leave(o)\"> <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i> {{'leave' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> ","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router, private messagingService: MessagingService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (!isAuthed) {\n            this.messagingService.send('authBlocked');\n            return false;\n        }\n\n        const locked = await this.vaultTimeoutService.isLocked();\n        if (locked) {\n            if (routerState != null) {\n                this.messagingService.send('lockedUrl', { url: routerState.url });\n            }\n            this.router.navigate(['lock'], { queryParams: { promptBiometric: true }});\n            return false;\n        }\n\n        return true;\n    }\n}\n","export enum ProductType {\n    Free = 0,\n    Families = 1,\n    Teams = 2,\n    Enterprise = 3,\n}\n","import { KeysRequest } from './keysRequest';\n\nexport class OrganizationKeysRequest extends KeysRequest {\n    constructor(publicKey: string, encryptedPrivateKey: string) {\n        super(publicKey, encryptedPrivateKey);\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class AttachmentResponse extends BaseResponse {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.url = this.getResponseProperty('Url');\n        this.fileName = this.getResponseProperty('FileName');\n        this.key = this.getResponseProperty('Key');\n        this.size = this.getResponseProperty('Size');\n        this.sizeName = this.getResponseProperty('SizeName');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class CollectionResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n    readOnly: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.readOnly = this.getResponseProperty('ReadOnly') || false;\n    }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n    groups: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const groups = this.getResponseProperty('Groups');\n        if (groups != null) {\n            this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { GlobalDomainResponse } from './globalDomainResponse';\n\nexport class DomainsResponse extends BaseResponse {\n    equivalentDomains: string[][];\n    globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.equivalentDomains = this.getResponseProperty('EquivalentDomains');\n        const globalEquivalentDomains = this.getResponseProperty('GlobalEquivalentDomains');\n        if (globalEquivalentDomains != null) {\n            this.globalEquivalentDomains = globalEquivalentDomains.map((d: any) => new GlobalDomainResponse(d));\n        } else {\n            this.globalEquivalentDomains = [];\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class FolderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nexport class SendResponse extends BaseResponse {\n    id: string;\n    accessId: string;\n    type: SendType;\n    name: string;\n    notes: string;\n    file: SendFileApi;\n    text: SendTextApi;\n    key: string;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: string;\n    expirationDate: string;\n    deletionDate: string;\n    password: string;\n    disable: boolean;\n    hideEmail: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.accessId = this.getResponseProperty('AccessId');\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.notes = this.getResponseProperty('Notes');\n        this.key = this.getResponseProperty('Key');\n        this.maxAccessCount = this.getResponseProperty('MaxAccessCount');\n        this.accessCount = this.getResponseProperty('AccessCount');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n        this.expirationDate = this.getResponseProperty('ExpirationDate');\n        this.deletionDate = this.getResponseProperty('DeletionDate');\n        this.password = this.getResponseProperty('Password');\n        this.disable = this.getResponseProperty('Disabled') || false;\n        this.hideEmail = this.getResponseProperty('HideEmail') || false;\n\n        const text = this.getResponseProperty('Text');\n        if (text != null) {\n            this.text = new SendTextApi(text);\n        }\n\n        const file = this.getResponseProperty('File');\n        if (file != null) {\n            this.file = new SendFileApi(file);\n        }\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class SendFileApi extends BaseResponse {\n    id: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.id = this.getResponseProperty('Id');\n        this.fileName = this.getResponseProperty('FileName');\n        this.key = this.getResponseProperty('Key');\n        this.size = this.getResponseProperty('Size');\n        this.sizeName = this.getResponseProperty('SizeName');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class SendTextApi extends BaseResponse {\n    text: string;\n    hidden: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.text = this.getResponseProperty('Text');\n        this.hidden = this.getResponseProperty('Hidden') || false;\n    }\n}\n","export enum ProviderUserStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n}\n","export class ProviderUserBulkRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import { Component } from '@angular/core';\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\n\nexport interface BulkUserDetails {\n    id: string;\n    name: string;\n    email: string;\n    status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n    user: BulkUserDetails,\n    error: boolean,\n    message: string,\n};\n\n@Component({\n    selector: 'app-bulk-status',\n    templateUrl: 'bulk-status.component.html',\n})\nexport class BulkStatusComponent {\n\n    users: BulkStatusEntry[];\n    loading: boolean = false;\n\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'bulkConfirmStatus' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <table class=\"table table-hover table-list\" *ngIf=\"!loading\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let item of users\"> <td width=\"30\"> <app-avatar [data]=\"item.user | userName\" [email]=\"item.user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{item.user.email}} <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{item.user.name}}</small> </td> <td class=\"text-danger\" *ngIf=\"item.error\"> {{item.message}} </td> <td *ngIf=\"!item.error\"> {{item.message}} </td> </tr> </table> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { OrganizationUserBulkConfirmRequest } from 'jslib-common/models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\n\nimport { Utils } from 'jslib-common/misc/utils';\nimport { BulkUserDetails } from './bulk-status.component';\n\n@Component({\n    selector: 'app-bulk-confirm',\n    templateUrl: 'bulk-confirm.component.html',\n})\nexport class BulkConfirmComponent implements OnInit {\n\n    @Input() organizationId: string;\n    @Input() users: BulkUserDetails[];\n\n    excludedUsers: BulkUserDetails[];\n    filteredUsers: BulkUserDetails[];\n    publicKeys: Map<string, Uint8Array> = new Map();\n    fingerprints: Map<string, string> = new Map();\n    statuses: Map<string, string> = new Map();\n\n    loading: boolean = true;\n    done: boolean = false;\n    error: string;\n\n    constructor(protected cryptoService: CryptoService, protected apiService: ApiService,\n      private i18nService: I18nService) { }\n\n    async ngOnInit() {\n        this.excludedUsers = this.users.filter(u => !this.isAccepted(u));\n        this.filteredUsers = this.users.filter(u => this.isAccepted(u));\n\n        if (this.filteredUsers.length <= 0) {\n            this.done = true;\n        }\n\n        const response = await this.getPublicKeys();\n\n        for (const entry of response.data) {\n            const publicKey = Utils.fromB64ToArray(entry.key);\n            const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n            if (fingerprint != null) {\n                this.publicKeys.set(entry.id, publicKey);\n                this.fingerprints.set(entry.id, fingerprint.join('-'));\n            }\n        }\n\n        this.loading = false;\n    }\n\n    async submit() {\n        this.loading = true;\n        try {\n            const key = await this.getCryptoKey();\n            const userIdsWithKeys: any[] = [];\n            for (const user of this.filteredUsers) {\n                const publicKey = this.publicKeys.get(user.id);\n                if (publicKey == null) {\n                    continue;\n                }\n                const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n                userIdsWithKeys.push({\n                    id: user.id,\n                    key: encryptedKey.encryptedString,\n                });\n            }\n            const response = await this.postConfirmRequest(userIdsWithKeys);\n\n            response.data.forEach(entry => {\n                const error = entry.error !== '' ? entry.error : this.i18nService.t('bulkConfirmMessage');\n                this.statuses.set(entry.id, error);\n            });\n\n            this.done = true;\n        } catch (e) {\n            this.error = e.message;\n        }\n        this.loading = false;\n    }\n\n    protected isAccepted(user: BulkUserDetails) {\n        return user.status === OrganizationUserStatusType.Accepted;\n    }\n\n    protected async getPublicKeys() {\n        const request = new OrganizationUserBulkRequest(this.filteredUsers.map(user => user.id));\n        return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n    }\n\n    protected getCryptoKey() {\n        return this.cryptoService.getOrgKey(this.organizationId);\n    }\n\n    protected async postConfirmRequest(userIdsWithKeys: any[]) {\n        const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n        return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'confirmUsers' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\"> {{'noSelectedUsersApplicable' | i18n}} </app-callout> <app-callout type=\"error\" *ngIf=\"error\"> {{error}} </app-callout> <ng-container *ngIf=\"!loading && !done\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'fingerprint' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of filteredUsers\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td> {{fingerprints.get(user.id)}} </td> </tr> <tr *ngFor=\"let user of excludedUsers\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> <ng-container *ngIf=\"!loading && done\"> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of filteredUsers\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td *ngIf=\"statuses.has(user.id)\"> {{statuses.get(user.id)}} </td> <td *ngIf=\"!statuses.has(user.id)\"> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" *ngIf=\"!done\" [disabled]=\"loading\" (click)=\"submit()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","export class OrganizationUserBulkRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\n\nimport { BulkUserDetails } from './bulk-status.component';\n\n@Component({\n    selector: 'app-bulk-remove',\n    templateUrl: 'bulk-remove.component.html',\n})\nexport class BulkRemoveComponent {\n\n    @Input() organizationId: string;\n    @Input() users: BulkUserDetails[];\n\n    statuses: Map<string, string> = new Map();\n\n    loading: boolean = false;\n    done: boolean = false;\n    error: string;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService) { }\n\n    async submit() {\n        this.loading = true;\n        try {\n            const response = await this.deleteUsers();\n\n            response.data.forEach(entry => {\n                const error = entry.error !== '' ? entry.error : this.i18nService.t('bulkRemovedMessage');\n                this.statuses.set(entry.id, error);\n            });\n            this.done = true;\n        } catch (e) {\n            this.error = e.message;\n        }\n\n        this.loading = false;\n    }\n\n    protected async deleteUsers() {\n        const request = new OrganizationUserBulkRequest(this.users.map(user => user.id));\n        return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"bulkTitle\"> {{'removeUsers' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <app-callout type=\"danger\" *ngIf=\"users.length <= 0\"> {{'noSelectedUsersApplicable' | i18n}} </app-callout> <app-callout type=\"error\" *ngIf=\"error\"> {{error}} </app-callout> <ng-container *ngIf=\"!done\"> <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\"> {{'removeUsersWarning' | i18n}} </app-callout> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of users\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> </tr> </table> </ng-container> <ng-container *ngIf=\"done\"> <table class=\"table table-hover table-list\"> <thead> <tr> <th colspan=\"2\">{{'user' | i18n}}</th> <th>{{'status' | i18n}}</th> </tr> </thead> <tr *ngFor=\"let user of users\"> <td width=\"30\"> <app-avatar [data]=\"user | userName\" [email]=\"user.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{user.email}} <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{user.name}}</small> </td> <td *ngIf=\"statuses.has(user.id)\"> {{statuses.get(user.id)}} </td> <td *ngIf=\"!statuses.has(user.id)\"> {{'bulkFilteredMessage' | i18n}} </td> </tr> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" *ngIf=\"!done && users.length > 0\" [disabled]=\"loading\" (click)=\"submit()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'removeUsers' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-frontend-layout',\n    templateUrl: 'frontend-layout.component.html',\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = await this.platformUtilsService.getApplicationVersion();\n        document.body.classList.add('layout_frontend');\n    }\n\n    ngOnDestroy() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","<router-outlet></router-outlet> <div class=\"container my-5 text-muted text-center\"> &copy; {{year}}, Bitwarden Inc. <br> {{'versionNumber' | i18n : version}} </div> ","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-providers',\n    templateUrl: 'providers.component.html',\n})\nexport class ProvidersComponent implements OnInit {\n    @Input() vault = false;\n\n    providers: Provider[];\n    loaded: boolean = false;\n    actionPromise: Promise<any>;\n\n    constructor(private userService: UserService, private i18nService: I18nService) { }\n\n    async ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        await this.load();\n    }\n\n    async load() {\n        const providers = await this.userService.getAllProviders();\n        providers.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.providers = providers;\n        this.loaded = true;\n    }\n}\n","<ng-container *ngIf=\"vault\"> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <ul class=\"fa-ul card-ul carets\" *ngIf=\"providers && providers.length\"> <li *ngFor=\"let p of providers\"> <a [routerLink]=\"['/providers', p.id]\" class=\"text-body\"> <i class=\"fa-li fa fa-caret-right\" aria-hidden=\"true\"></i> {{p.name}} <ng-container *ngIf=\"!p.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'providerIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'providerIsDisabled' | i18n}}</span> </ng-container> </a> </li> </ul> </ng-container> </ng-container> <ng-container *ngIf=\"!vault\"> <app-navbar></app-navbar> <div class=\"container page-content\"> <div class=\"page-header d-flex\"> <h1>{{'providers' | i18n}}</h1> </div> <p *ngIf=\"!loaded\" class=\"text-muted\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"loaded\"> <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\"> <tbody> <tr *ngFor=\"let p of providers\"> <td width=\"30\"> <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{p.name}}</a> <ng-container *ngIf=\"!p.enabled\"> <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'providerIsDisabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'providerIsDisabled' | i18n}}</span> </ng-container> </td> </tr> </tbody> </table> </ng-container> </div> <app-footer></app-footer> </ng-container> ","export abstract class NotificationsService {\n    init: () => Promise<void>;\n    updateConnection: (sync?: boolean) => Promise<void>;\n    reconnectFromActivity: () => Promise<void>;\n    disconnectFromInactivity: () => Promise<void>;\n}\n","export class OrganizationUserResetPasswordEnrollmentRequest {\n    resetPasswordKey: string;\n}\n","import { PolicyData } from '../data/policyData';\n\nimport Domain from './domainBase';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class Policy extends Domain {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(obj?: PolicyData) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.organizationId = obj.organizationId;\n        this.type = obj.type;\n        this.data = obj.data;\n        this.enabled = obj.enabled;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-entity-users',\n    templateUrl: 'entity-users.component.html',\n})\nexport class EntityUsersComponent implements OnInit {\n    @Input() entity: 'group' | 'collection';\n    @Input() entityId: string;\n    @Input() entityName: string;\n    @Input() organizationId: string;\n    @Output() onEditedUsers = new EventEmitter();\n\n    organizationUserType = OrganizationUserType;\n    organizationUserStatusType = OrganizationUserStatusType;\n\n    showSelected = false;\n    loading = true;\n    formPromise: Promise<any>;\n    selectedCount = 0;\n    searchText: string;\n\n    private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        await this.loadUsers();\n        this.loading = false;\n    }\n\n    get users() {\n        if (this.showSelected) {\n            return this.allUsers.filter(u => (u as any).checked);\n        } else {\n            return this.allUsers;\n        }\n    }\n\n    async loadUsers() {\n        const users = await this.apiService.getOrganizationUsers(this.organizationId);\n        this.allUsers = users.data.map(r => r).sort(Utils.getSortFunction(this.i18nService, 'email'));\n        if (this.entity === 'group') {\n            const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach(s => {\n                    const user = users.data.filter(u => u.id === s);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                    }\n                });\n            }\n        } else if (this.entity === 'collection') {\n            const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach(s => {\n                    const user = users.data.filter(u => !u.accessAll && u.id === s.id);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                        (user[0] as any).readOnly = s.readOnly;\n                        (user[0] as any).hidePasswords = s.hidePasswords;\n                    }\n                });\n            }\n        }\n\n        this.allUsers.forEach(u => {\n            if (this.entity === 'collection' && u.accessAll) {\n                (u as any).checked = true;\n            }\n            if ((u as any).checked) {\n                this.selectedCount++;\n            }\n        });\n    }\n\n    check(u: OrganizationUserUserDetailsResponse) {\n        if (this.entity === 'collection' && u.accessAll) {\n            return;\n        }\n        (u as any).checked = !(u as any).checked;\n        this.selectedChanged(u);\n    }\n\n    selectedChanged(u: OrganizationUserUserDetailsResponse) {\n        if ((u as any).checked) {\n            this.selectedCount++;\n        } else {\n            if (this.entity === 'collection') {\n                (u as any).readOnly = false;\n                (u as any).hidePasswords = false;\n            }\n            this.selectedCount--;\n        }\n    }\n\n    filterSelected(showSelected: boolean) {\n        this.showSelected = showSelected;\n    }\n\n    async submit() {\n        try {\n            if (this.entity === 'group') {\n                const selections = this.users.filter(u => (u as any).checked).map(u => u.id);\n                this.formPromise = this.apiService.putGroupUsers(this.organizationId, this.entityId, selections);\n            } else {\n                const selections = this.users.filter(u => (u as any).checked && !u.accessAll)\n                    .map(u => new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords));\n                this.formPromise = this.apiService.putCollectionUsers(this.organizationId, this.entityId, selections);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedUsers'));\n            this.onEditedUsers.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAccessTitle\"> {{'userAccess' | i18n}} <small>{{entityName}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading || !users\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading && users && (users | search:searchText:'name':'email':'id') as searchedUsers\"> <div class=\"d-flex\"> <div class=\"mr-3\"> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" name=\"SearchText\" [(ngModel)]=\"searchText\"> </div> <div class=\"btn-group btn-group-sm\" role=\"group\"> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: !showSelected}\" (click)=\"filterSelected(false)\"> {{'all' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: showSelected}\" (click)=\"filterSelected(true)\"> {{'selected' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"selectedCount\">{{selectedCount}}</span> </button> </div> </div> <ng-container *ngIf=\"!searchedUsers.length\"> <hr> {{'noUsersInList' | i18n}} </ng-container> <ng-container *ngIf=\"searchedUsers.length\"> <table class=\"table table-hover table-list mb-0\"> <thead> <tr> <th>&nbsp;</th> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th *ngIf=\"entity === 'collection'\">&nbsp;</th> <th>{{'userType' | i18n}}</th> <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let u of searchedUsers\"> <td class=\"table-list-checkbox\" (click)=\"check(u)\"> <input type=\"checkbox\" [(ngModel)]=\"u.checked\" name=\"{{u.id.substr(0,8)}}_Checked\" [disabled]=\"entity === 'collection' && u.accessAll\" (change)=\"selectedChanged(u)\" appStopProp> </td> <td width=\"30\" (click)=\"check(u)\"> <app-avatar [data]=\"u | userName\" [email]=\"u.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{u.email}} <span class=\"badge badge-secondary\" *ngIf=\"u.status === organizationUserStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"u.status === organizationUserStatusType.Accepted\">{{'accepted' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small> </td> <td *ngIf=\"entity === 'collection'\"> <ng-container *ngIf=\"u.accessAll\"> <i class=\"fa fa-th\" title=\"{{'userAccessAllItems' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'userAccessAllItems' | i18n}}</span> </ng-container> </td> <td> <span *ngIf=\"u.type === organizationUserType.Owner\">{{'owner' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Admin\">{{'admin' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Manager\">{{'manager' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.User\">{{'user' | i18n}}</span> <span *ngIf=\"u.type === organizationUserType.Custom\">{{'custom' | i18n}}</span> </td> <td class=\"text-center\" *ngIf=\"entity === 'collection'\"> <input type=\"checkbox\" [(ngModel)]=\"u.hidePasswords\" name=\"{{u.id.substr(0,8)}}_HidePasswords\" [disabled]=\"u.accessAll || !u.checked\"> </td> <td class=\"text-center\" *ngIf=\"entity === 'collection'\"> <input type=\"checkbox\" [(ngModel)]=\"u.readOnly\" name=\"{{u.id.substr(0,8)}}_ReadOnly\" [disabled]=\"u.accessAll || !u.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\nimport { ApiKeyResponse } from 'jslib-common/models/response/apiKeyResponse';\n\n@Component({\n    selector: 'app-api-key',\n    templateUrl: 'api-key.component.html',\n})\nexport class ApiKeyComponent {\n    keyType: string;\n    isRotation: boolean;\n    postKey: (entityId: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    entityId: string;\n    scope: string;\n    grantType: string;\n    apiKeyTitle: string;\n    apiKeyWarning: string;\n    apiKeyDescription: string;\n\n    masterPassword: string;\n    formPromise: Promise<ApiKeyResponse>;\n    clientId: string;\n    clientSecret: string;\n\n    constructor(private i18nService: I18nService, private toasterService: ToasterService,\n        private cryptoService: CryptoService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.postKey(this.entityId, request);\n            const response = await this.formPromise;\n            this.clientSecret = response.apiKey;\n            this.clientId = `${this.keyType}.${this.entityId}`;\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{apiKeyTitle | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{apiKeyDescription | i18n}}</p> <ng-container *ngIf=\"!clientSecret\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </ng-container> <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{apiKeyWarning | i18n}}</app-callout> <app-callout type=\"info\" title=\"{{'oauth2ClientCredentials' | i18n}}\" icon=\"fa-key\" *ngIf=\"clientSecret\"> <p class=\"mb-1\"> <strong>client_id:</strong><br> <code>{{clientId}}</code> </p> <p class=\"mb-1\"> <strong>client_secret:</strong><br> <code>{{clientSecret}}</code> </p> <p class=\"mb-1\"> <strong>scope:</strong><br> <code>{{scope}}</code> </p> <p class=\"mb-0\"> <strong>grant_type:</strong><br> <code>{{grantType}}</code> </p> </app-callout> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!clientSecret\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(isRotation ? 'rotateApiKey' : 'viewApiKey') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-purge-vault',\n    templateUrl: 'purge-vault.component.html',\n})\nexport class PurgeVaultComponent {\n    @Input() organizationId?: string = null;\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postPurgeCiphers(request, this.organizationId);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('vaultPurged'));\n            if (this.organizationId != null) {\n                this.router.navigate(['organizations', this.organizationId, 'vault']);\n            } else {\n                this.router.navigate(['vault']);\n            }\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{'purgeVault' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{(organizationId ? 'purgeOrgVaultDesc' : 'purgeVaultDesc') | i18n}}</p> <app-callout type=\"warning\">{{'purgeVaultWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'purgeVault' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { BillingResponse } from 'jslib-common/models/response/billingResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\nimport { TransactionType } from 'jslib-common/enums/transactionType';\nimport { VerifyBankRequest } from 'jslib-common/models/request/verifyBankRequest';\n\n@Component({\n    selector: 'app-user-billing',\n    templateUrl: 'user-billing.component.html',\n})\nexport class UserBillingComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    showAdjustPayment = false;\n    showAddCredit = false;\n    billing: BillingResponse;\n    paymentMethodType = PaymentMethodType;\n    transactionType = TransactionType;\n    organizationId: string;\n    verifyAmount1: number;\n    verifyAmount2: number;\n\n    verifyBankPromise: Promise<any>;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, protected platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n        this.loading = true;\n        if (this.organizationId != null) {\n            this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n        } else {\n            this.billing = await this.apiService.getUserBilling();\n        }\n        this.loading = false;\n    }\n\n    async verifyBank() {\n        if (this.loading) {\n            return;\n        }\n\n        try {\n            const request = new VerifyBankRequest();\n            request.amount1 = this.verifyAmount1;\n            request.amount2 = this.verifyAmount2;\n            this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(this.organizationId, request);\n            await this.verifyBankPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('verifiedBankAccount'));\n            this.load();\n        } catch { }\n    }\n\n    addCredit() {\n        if (this.paymentSourceInApp) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t('addCredit'), null, null, 'warning');\n            return;\n        }\n        this.showAddCredit = true;\n    }\n\n    closeAddCredit(load: boolean) {\n        this.showAddCredit = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    changePayment() {\n        if (this.paymentSourceInApp) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t('changePaymentMethod'), null, null, 'warning');\n            return;\n        }\n        this.showAdjustPayment = true;\n    }\n\n    closePayment(load: boolean) {\n        this.showAdjustPayment = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get isCreditBalance() {\n        return this.billing == null || this.billing.balance <= 0;\n    }\n\n    get creditOrBalance() {\n        return Math.abs(this.billing != null ? this.billing.balance : 0);\n    }\n\n    get paymentSource() {\n        return this.billing != null ? this.billing.paymentSource : null;\n    }\n\n    get paymentSourceInApp() {\n        return this.paymentSource != null &&\n            (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n                this.paymentSource.type === PaymentMethodType.GoogleInApp);\n    }\n\n    get invoices() {\n        return this.billing != null ? this.billing.invoices : null;\n    }\n\n    get transactions() {\n        return this.billing != null ? this.billing.transactions : null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1> {{'billing' | i18n}} </h1> <button (click)=\"load()\" class=\"btn btn-sm btn-outline-primary ml-auto\" *ngIf=\"firstLoaded\" [disabled]=\"loading\"> <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loading}\" aria-hidden=\"true\"></i> {{'refresh' | i18n}} </button> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"billing\"> <h2>{{(isCreditBalance ? 'accountCredit' : 'accountBalance') | i18n}}</h2> <p class=\"text-lg\"><strong>{{creditOrBalance | currency:'$'}}</strong></p> <p>{{'creditAppliedDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\"> {{'addCredit' | i18n}} </button> <app-add-credit [organizationId]=\"organizationId\" (onAdded)=\"closeAddCredit(true)\" (onCanceled)=\"closeAddCredit(false)\" *ngIf=\"showAddCredit\"> </app-add-credit> <h2 class=\"spaced-header\">{{'paymentMethod' | i18n}}</h2> <p *ngIf=\"!paymentSource\">{{'noPaymentMethod' | i18n}}</p> <ng-container *ngIf=\"paymentSource\"> <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\" *ngIf=\"paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\"> <p>{{'verifyBankAccountDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}</p> <form #verifyForm class=\"form-inline\" (ngSubmit)=\"verifyBank()\" [appApiAction]=\"verifyBankPromise\" ngNativeValidate> <label class=\"sr-only\" for=\"verifyAmount1\">{{'amount' | i18n : '1'}}</label> <div class=\"input-group mr-2\"> <div class=\"input-group-prepend\"> <div class=\"input-group-text\">$0.</div> </div> <input type=\"number\" class=\"form-control\" id=\"verifyAmount1\" placeholder=\"xx\" name=\"Amount1\" [(ngModel)]=\"verifyAmount1\" min=\"1\" max=\"99\" step=\"1\" required> </div> <label class=\"sr-only\" for=\"verifyAmount2\">{{'amount' | i18n : '2'}}</label> <div class=\"input-group mr-2\"> <div class=\"input-group-prepend\"> <div class=\"input-group-text\">$0.</div> </div> <input type=\"number\" class=\"form-control\" id=\"verifyAmount2\" placeholder=\"xx\" name=\"Amount2\" [(ngModel)]=\"verifyAmount2\" min=\"1\" max=\"99\" step=\"1\" required> </div> <button type=\"submit\" class=\"btn btn-outline-primary btn-submit\" [disabled]=\"verifyForm.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'verifyBankAccount' | i18n}}</span> </button> </form> </app-callout> <p> <i class=\"fa fa-fw\" [ngClass]=\"{'fa-credit-card': paymentSource.type === paymentMethodType.Card,\n                    'fa-university': paymentSource.type === paymentMethodType.BankAccount,\n                    'fa-money': paymentSource.type === paymentMethodType.Check,\n                    'fa-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n                    'fa-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n                    'fa-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp}\"></i> <span *ngIf=\"paymentSourceInApp\">{{'inAppPurchase' | i18n}}</span> {{paymentSource.description}} </p> </ng-container> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\"> {{(paymentSource ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}} </button> <app-adjust-payment [currentType]=\"paymentSource != null ? paymentSource.type : null\" [organizationId]=\"organizationId\" (onAdjusted)=\"closePayment(true)\" (onCanceled)=\"closePayment(false)\" *ngIf=\"showAdjustPayment\"> </app-adjust-payment> <h2 class=\"spaced-header\">{{'invoices' | i18n}}</h2> <p *ngIf=\"!invoices || !invoices.length\">{{'noInvoices' | i18n}}</p> <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\"> <tbody> <tr *ngFor=\"let i of invoices\"> <td>{{i.date | date:'mediumDate'}}</td> <td> <a href=\"{{i.pdfUrl}}\" target=\"_blank\" rel=\"noopener\" class=\"mr-2\" appA11yTitle=\"{{'downloadInvoice' | i18n}}\"> <i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i></a> <a href=\"{{i.url}}\" target=\"_blank\" rel=\"noopener\" title=\"{{'viewInvoice' | i18n}}\"> {{'invoiceNumber' | i18n : i.number}}</a> </td> <td>{{i.amount | currency:'$'}}</td> <td> <span *ngIf=\"i.paid\"> <i class=\"fa fa-check text-success\" aria-hidden=\"true\"></i> {{'paid' | i18n}} </span> <span *ngIf=\"!i.paid\"> <i class=\"fa fa-exclamation-circle text-muted\" aria-hidden=\"true\"></i> {{'unpaid' | i18n}} </span> </td> </tr> </tbody> </table> <h2 class=\"spaced-header\">{{'transactions' | i18n}}</h2> <p *ngIf=\"!transactions || !transactions.length\">{{'noTransactions' | i18n}}</p> <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\"> <tbody> <tr *ngFor=\"let t of transactions\"> <td>{{t.createdDate | date:'mediumDate'}}</td> <td> <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\"> {{'chargeNoun' | i18n}} </span> <span *ngIf=\"t.type === transactionType.Refund\">{{'refundNoun' | i18n}}</span> </td> <td> <i class=\"fa fa-fw\" *ngIf=\"t.paymentMethodType\" aria-hidden=\"true\" [ngClass]=\"{\n                            'fa-credit-card': t.paymentMethodType === paymentMethodType.Card,\n                            'fa-university': t.paymentMethodType === paymentMethodType.BankAccount ||\n                                t.paymentMethodType === paymentMethodType.WireTransfer,\n                            'fa-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n                            'fa-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n                        }\"></i> {{t.details}} </td> <td [ngClass]=\"{'text-strike': t.refunded}\" title=\"{{(t.refunded ? 'refunded' : '') | i18n}}\"> {{t.amount | currency:'$'}}</td> </tr> </tbody> </table> <small class=\"text-muted\">* {{'chargesStatement' | i18n : 'BITWARDEN'}}</small> </ng-container> ","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { BitPayInvoiceRequest } from 'jslib-common/models/request/bitPayInvoiceRequest';\n\nimport { WebConstants } from '../../services/webConstants';\n\n@Component({\n    selector: 'app-add-credit',\n    templateUrl: 'add-credit.component.html',\n})\nexport class AddCreditComponent implements OnInit {\n    @Input() creditAmount: string;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.PayPal;\n    @Input() organizationId: string;\n    @Output() onAdded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild('ppButtonForm', { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n    paymentMethodType = PaymentMethodType;\n    ppButtonFormAction = WebConstants.paypal.buttonActionProduction;\n    ppButtonBusinessId = WebConstants.paypal.businessIdProduction;\n    ppButtonCustomField: string;\n    ppLoading = false;\n    subject: string;\n    returnUrl: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private name: string;\n    private email: string;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService) {\n        if (process.env.ENV !== 'production' || platformUtilsService.isDev()) {\n            this.ppButtonFormAction = WebConstants.paypal.buttonActionSandbox;\n            this.ppButtonBusinessId = WebConstants.paypal.businessIdSandbox;\n        }\n    }\n\n    async ngOnInit() {\n        if (this.organizationId != null) {\n            if (this.creditAmount == null) {\n                this.creditAmount = '20.00';\n            }\n            this.ppButtonCustomField = 'organization_id:' + this.organizationId;\n            const org = await this.userService.getOrganization(this.organizationId);\n            if (org != null) {\n                this.subject = org.name;\n                this.name = org.name;\n            }\n        } else {\n            if (this.creditAmount == null) {\n                this.creditAmount = '10.00';\n            }\n            this.userId = await this.userService.getUserId();\n            this.subject = await this.userService.getEmail();\n            this.email = this.subject;\n            this.ppButtonCustomField = 'user_id:' + this.userId;\n        }\n        this.ppButtonCustomField += ',account_credit:1';\n        this.returnUrl = window.location.href;\n    }\n\n    async submit() {\n        if (this.creditAmount == null || this.creditAmount === '') {\n            return;\n        }\n\n        if (this.method === PaymentMethodType.PayPal) {\n            this.ppButtonFormRef.nativeElement.submit();\n            this.ppLoading = true;\n            return;\n        }\n        if (this.method === PaymentMethodType.BitPay) {\n            try {\n                const req = new BitPayInvoiceRequest();\n                req.email = this.email;\n                req.name = this.name;\n                req.credit = true;\n                req.amount = this.creditAmountNumber;\n                req.organizationId = this.organizationId;\n                req.userId = this.userId;\n                req.returnUrl = this.returnUrl;\n                this.formPromise = this.apiService.postBitPayInvoice(req);\n                const bitPayUrl: string = await this.formPromise;\n                this.platformUtilsService.launchUri(bitPayUrl);\n            } catch { }\n            return;\n        }\n        try {\n            this.onAdded.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    formatAmount() {\n        try {\n            if (this.creditAmount != null && this.creditAmount !== '') {\n                const floatAmount = Math.abs(parseFloat(this.creditAmount));\n                if (floatAmount > 0) {\n                    this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n                        .toFixed(2).toString();\n                    return;\n                }\n            }\n        } catch { }\n        this.creditAmount = '';\n    }\n\n    get creditAmountNumber(): number {\n        if (this.creditAmount != null && this.creditAmount !== '') {\n            try {\n                return parseFloat(this.creditAmount);\n            } catch { }\n        }\n        return null;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'addCredit' | i18n}}</h3> <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\"> <div class=\"form-check form-check-inline\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-paypal\" [value]=\"paymentMethodType.PayPal\" [(ngModel)]=\"method\"> <label class=\"form-check-label\" for=\"credit-method-paypal\"> <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label> </div> <div class=\"form-check form-check-inline\"> <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-bitcoin\" [value]=\"paymentMethodType.BitPay\" [(ngModel)]=\"method\"> <label class=\"form-check-label\" for=\"credit-method-bitcoin\"> <i class=\"fa fa-fw fa-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label> </div> </div> <div class=\"form-group\"> <div class=\"row\"> <div class=\"col-4\"> <label for=\"creditAmount\">{{'amount' | i18n}}</label> <div class=\"input-group\"> <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div> <input id=\"creditAmount\" class=\"form-control\" type=\"text\" name=\"CreditAmount\" [(ngModel)]=\"creditAmount\" (blur)=\"formatAmount()\" required> </div> </div> </div> <small class=\"form-text text-muted\">{{'creditDelayed' | i18n}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> <form #ppButtonForm action=\"{{ppButtonFormAction}}\" method=\"post\" target=\"_top\"> <input type=\"hidden\" name=\"cmd\" value=\"_xclick\"> <input type=\"hidden\" name=\"business\" value=\"{{ppButtonBusinessId}}\"> <input type=\"hidden\" name=\"button_subtype\" value=\"services\"> <input type=\"hidden\" name=\"no_note\" value=\"1\"> <input type=\"hidden\" name=\"no_shipping\" value=\"1\"> <input type=\"hidden\" name=\"rm\" value=\"1\"> <input type=\"hidden\" name=\"return\" value=\"{{returnUrl}}\"> <input type=\"hidden\" name=\"cancel_return\" value=\"{{returnUrl}}\"> <input type=\"hidden\" name=\"currency_code\" value=\"USD\"> <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\"> <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\"> <input type=\"hidden\" name=\"amount\" value=\"{{creditAmount}}\"> <input type=\"hidden\" name=\"custom\" value=\"{{ppButtonCustomField}}\"> <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\"> <input type=\"hidden\" name=\"item_number\" value=\"{{subject}}\"> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PaymentRequest } from 'jslib-common/models/request/paymentRequest';\n\nimport { PaymentMethodType } from 'jslib-common/enums/paymentMethodType';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\n@Component({\n    selector: 'app-adjust-payment',\n    templateUrl: 'adjust-payment.component.html',\n})\nexport class AdjustPaymentComponent {\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n    @Input() currentType?: PaymentMethodType;\n    @Input() organizationId: string;\n    @Output() onAdjusted = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    paymentMethodType = PaymentMethodType;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async submit() {\n        try {\n            const request = new PaymentRequest();\n            this.formPromise = this.paymentComponent.createPaymentToken().then(result => {\n                request.paymentToken = result[0];\n                request.paymentMethodType = result[1];\n                request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n                request.country = this.taxInfoComponent.taxInfo.country;\n                if (this.organizationId == null) {\n                    return this.apiService.postAccountPayment(request);\n                } else {\n                    request.taxId = this.taxInfoComponent.taxInfo.taxId;\n                    request.state = this.taxInfoComponent.taxInfo.state;\n                    request.line1 = this.taxInfoComponent.taxInfo.line1;\n                    request.line2 = this.taxInfoComponent.taxInfo.line2;\n                    request.city = this.taxInfoComponent.taxInfo.city;\n                    request.state = this.taxInfoComponent.taxInfo.state;\n                    return this.apiService.postOrganizationPayment(this.organizationId, request);\n                }\n            });\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedPaymentMethod'));\n            this.onAdjusted.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    changeCountry() {\n        if (this.taxInfoComponent.taxInfo.country === 'US') {\n            this.paymentComponent.hideBank = !this.organizationId;\n        } else {\n            this.paymentComponent.hideBank = true;\n            if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n                this.paymentComponent.method = PaymentMethodType.Card;\n                this.paymentComponent.changeMethod();\n            }\n        }\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{(currentType != null ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}</h3> <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment> <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-update-license',\n    templateUrl: 'update-license.component.html',\n})\nexport class UpdateLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onUpdated = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async submit() {\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        try {\n            const fd = new FormData();\n            fd.append('license', files[0]);\n\n            let updatePromise: Promise<any> = null;\n            if (this.organizationId == null) {\n                updatePromise = this.apiService.postAccountLicense(fd);\n            } else {\n                updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n            }\n\n            this.formPromise = updatePromise.then(() => {\n                return this.apiService.refreshIdentityToken();\n            });\n\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedLicense'));\n            this.onUpdated.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\" class=\"sr-only\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : (!organizationId ? 'bitwarden_premium_license.json' : 'bitwarden_organization_license.json')}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { StorageRequest } from 'jslib-common/models/request/storageRequest';\n\nimport { PaymentResponse } from 'jslib-common/models/response/paymentResponse';\n\nimport { PaymentComponent } from './payment.component';\n\n@Component({\n    selector: 'app-adjust-storage',\n    templateUrl: 'adjust-storage.component.html',\n})\nexport class AdjustStorageComponent {\n    @Input() storageGbPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n    storageAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private router: Router,\n        private activatedRoute: ActivatedRoute) { }\n\n    async submit() {\n        try {\n            const request = new StorageRequest();\n            request.storageGbAdjustment = this.storageAdjustment;\n            if (!this.add) {\n                request.storageGbAdjustment *= -1;\n            }\n\n            let paymentFailed = false;\n            const action = async () => {\n                let response: Promise<PaymentResponse>;\n                if (this.organizationId == null) {\n                    response = this.formPromise = this.apiService.postAccountStorage(request);\n                } else {\n                    response = this.formPromise = this.apiService.postOrganizationStorage(this.organizationId, request);\n                }\n                const result = await response;\n                if (result != null && result.paymentIntentClientSecret != null) {\n                    try {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    } catch {\n                        paymentFailed = true;\n                    }\n                }\n            };\n            this.formPromise = action();\n            await this.formPromise;\n            this.onAdjusted.emit(this.storageAdjustment);\n            if (paymentFailed) {\n                this.toasterService.popAsync({\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\n                    type: 'warning',\n                    timeout: 10000,\n                });\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\n            } else {\n                this.toasterService.popAsync('success', null,\n                    this.i18nService.t('adjustedStorage', request.storageGbAdjustment.toString()));\n            }\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedStorageTotal(): number {\n        return this.storageGbPrice * this.storageAdjustment;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{(add ? 'addStorage' : 'removeStorage') | i18n}}</h3> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"storageAdjustment\">{{(add ? 'gbStorageAdd' : 'gbStorageRemove') | i18n}}</label> <input id=\"storageAdjustment\" class=\"form-control\" type=\"number\" name=\"StroageGbAdjustment\" [(ngModel)]=\"storageAdjustment\" min=\"0\" max=\"99\" step=\"1\" required> </div> </div> <div *ngIf=\"add\" class=\"mb-3\"> <strong>{{'total' | i18n}}:</strong> {{storageAdjustment || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{adjustedStorageTotal | currency:'$'}} /{{interval | i18n}} </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> <small class=\"d-block text-muted mt-3\"> {{(add ? 'storageAddNote' : 'storageRemoveNote') | i18n}} </small> </div> </form> <app-payment [showMethods]=\"false\"></app-payment> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { UpdateTwoFactorDuoRequest } from 'jslib-common/models/request/updateTwoFactorDuoRequest';\nimport { TwoFactorDuoResponse } from 'jslib-common/models/response/twoFactorDuoResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-duo',\n    templateUrl: 'two-factor-duo.component.html',\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Duo;\n    ikey: string;\n    skey: string;\n    host: string;\n    formPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorDuoRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.integrationKey = this.ikey;\n        request.secretKey = this.skey;\n        request.host = this.host;\n\n        return super.enable(async () => {\n            if (this.organizationId != null) {\n                this.formPromise = this.apiService.putTwoFactorOrganizationDuo(this.organizationId, request);\n            } else {\n                this.formPromise = this.apiService.putTwoFactorDuo(request);\n            }\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private processResponse(response: TwoFactorDuoResponse) {\n        this.ikey = response.integrationKey;\n        this.skey = response.secretKey;\n        this.host = response.host;\n        this.enabled = response.enabled;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" title=\"2faDuoTitle\"> {{'twoStepLogin' | i18n}} <small>Duo</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\" autocomplete=\"off\"> <div class=\"modal-body\"> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <img src=\"images/2.png\" class=\"float-right ml-3\" alt=\"\"> <strong>{{'twoFactorDuoIntegrationKey' | i18n}}:</strong> {{ikey}} <br> <strong>{{'twoFactorDuoSecretKey' | i18n}}:</strong> {{skey}} <br> <strong>{{'twoFactorDuoApiHostname' | i18n}}:</strong> {{host}} </ng-container> <ng-container *ngIf=\"!enabled\"> <img src=\"images/2.png\" class=\"float-right ml-3\" alt=\"\"> <p>{{'twoFactorDuoDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"ikey\">{{'twoFactorDuoIntegrationKey' | i18n}}</label> <input id=\"ikey\" type=\"text\" name=\"IntegrationKey\" class=\"form-control\" [(ngModel)]=\"ikey\" required appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"skey\">{{'twoFactorDuoSecretKey' | i18n}}</label> <input id=\"skey\" type=\"password\" name=\"SecretKey\" class=\"form-control\" [(ngModel)]=\"skey\" required appInputVerbatim autocomplete=\"new-password\"> </div> <div class=\"form-group\"> <label for=\"host\">{{'twoFactorDuoApiHostname' | i18n}}</label> <input id=\"host\" type=\"text\" name=\"Host\" class=\"form-control\" [(ngModel)]=\"host\" placeholder=\"{{'ex' | i18n}} api-xxxxxxxx.duosecurity.com\" required appInputVerbatim> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { TwoFactorProviders } from 'jslib-common/services/auth.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { TwoFactorAuthenticatorComponent } from './two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './two-factor-recovery.component';\nimport { TwoFactorWebAuthnComponent } from './two-factor-webauthn.component';\nimport { TwoFactorYubiKeyComponent } from './two-factor-yubikey.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: 'two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent implements OnInit {\n    @ViewChild('recoveryTemplate', { read: ViewContainerRef, static: true }) recoveryModalRef: ViewContainerRef;\n    @ViewChild('authenticatorTemplate', { read: ViewContainerRef, static: true }) authenticatorModalRef: ViewContainerRef;\n    @ViewChild('yubikeyTemplate', { read: ViewContainerRef, static: true }) yubikeyModalRef: ViewContainerRef;\n    @ViewChild('duoTemplate', { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n    @ViewChild('emailTemplate', { read: ViewContainerRef, static: true }) emailModalRef: ViewContainerRef;\n    @ViewChild('webAuthnTemplate', { read: ViewContainerRef, static: true }) webAuthnModalRef: ViewContainerRef;\n\n    organizationId: string;\n    providers: any[] = [];\n    canAccessPremium: boolean;\n    showPolicyWarning = false;\n    loading = true;\n\n    private modal: ModalComponent = null;\n\n    constructor(protected apiService: ApiService, protected userService: UserService,\n        protected componentFactoryResolver: ComponentFactoryResolver, protected messagingService: MessagingService,\n        protected policyService: PolicyService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n\n        for (const key in TwoFactorProviders) {\n            if (!TwoFactorProviders.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const p = (TwoFactorProviders as any)[key];\n            if (this.filterProvider(p.type)) {\n                continue;\n            }\n\n            this.providers.push({\n                type: p.type,\n                name: p.name,\n                description: p.description,\n                enabled: false,\n                premium: p.premium,\n                sort: p.sort,\n            });\n        }\n\n        this.providers.sort((a: any, b: any) => a.sort - b.sort);\n        await this.load();\n    }\n\n    async load() {\n        this.loading = true;\n        const providerList = await this.getTwoFactorProviders();\n        providerList.data.forEach(p => {\n            this.providers.forEach(p2 => {\n                if (p.type === p2.type) {\n                    p2.enabled = p.enabled;\n                }\n            });\n        });\n        this.evaluatePolicies();\n        this.loading = false;\n    }\n\n    manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.Authenticator:\n                const authComp = this.openModal(this.authenticatorModalRef, TwoFactorAuthenticatorComponent);\n                authComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n                });\n                break;\n            case TwoFactorProviderType.Yubikey:\n                const yubiComp = this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n                yubiComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n                });\n                break;\n            case TwoFactorProviderType.Duo:\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Duo);\n                });\n                break;\n            case TwoFactorProviderType.Email:\n                const emailComp = this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n                emailComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Email);\n                });\n                break;\n            case TwoFactorProviderType.WebAuthn:\n                const webAuthnComp = this.openModal(this.webAuthnModalRef, TwoFactorWebAuthnComponent);\n                webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    recoveryCode() {\n        this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n    }\n\n    async premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorProviders();\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type === TwoFactorProviderType.OrganizationDuo;\n    }\n\n    protected openModal<T>(ref: ViewContainerRef, type: Type<T>): T {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = ref.createComponent(factory).instance;\n        const childComponent = this.modal.show<T>(type, ref);\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n        return childComponent;\n    }\n\n    protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n        if (!enabled && this.modal != null) {\n            this.modal.close();\n        }\n        this.providers.forEach(p => {\n            if (p.type === type) {\n                p.enabled = enabled;\n            }\n        });\n        this.evaluatePolicies();\n    }\n\n    private async evaluatePolicies() {\n        if (this.organizationId == null && this.providers.filter(p => p.enabled).length === 1) {\n            const policies = await this.policyService.getAll(PolicyType.TwoFactorAuthentication);\n            this.showPolicyWarning = policies != null && policies.some(p => p.enabled);\n        } else {\n            this.showPolicyWarning = false;\n        }\n    }\n}\n","<div class=\"page-header\"> <h1>{{'twoStepLogin' | i18n}}</h1> </div> <p *ngIf=\"!organizationId\">{{'twoStepLoginDesc' | i18n}}</p> <p *ngIf=\"organizationId\">{{'twoStepLoginOrganizationDesc' | i18n}}</p> <app-callout type=\"warning\" *ngIf=\"!organizationId\"> <p>{{'twoStepLoginRecoveryWarning' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"recoveryCode()\">{{'viewRecoveryCode' | i18n}}</button> </app-callout> <h2 [ngClass]=\"{'mt-5':!organizationId}\"> {{'providers' | i18n}} <small *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin fa-fw text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h2> <app-callout type=\"warning\" *ngIf=\"showPolicyWarning\"> {{'twoStepLoginPolicyUserWarning' | i18n}} </app-callout> <ul class=\"list-group list-group-2fa\"> <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\"> <div class=\"logo-2fa d-flex justify-content-center\"> <img [src]=\"'images/two-factor/' + p.type + '.png'\" alt=\"\"> </div> <div class=\"mx-4\"> <h3 class=\"mb-0\"> {{p.name}} <ng-container *ngIf=\"p.enabled\"> <i class=\"fa fa-check text-success fa-fw\" title=\"{{'enabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enabled' | i18n}}</span> </ng-container> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium && p.premium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </h3> {{p.description}} </div> <div class=\"ml-auto\"> <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" [disabled]=\"!canAccessPremium && p.premium\" (click)=\"manage(p.type)\"> {{'manage' | i18n}} </button> </div> </li> </ul> <ng-template #authenticatorTemplate></ng-template> <ng-template #recoveryTemplate></ng-template> <ng-template #duoTemplate></ng-template> <ng-template #emailTemplate></ng-template> <ng-template #yubikeyTemplate></ng-template> <ng-template #webAuthnTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ExportComponent as BaseExportComponent } from 'jslib-angular/components/export.component';\n\n@Component({\n    selector: 'app-export',\n    templateUrl: 'export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    organizationId: string;\n\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService, window);\n    }\n\n    protected saved() {\n        super.saved();\n        this.masterPassword = null;\n        this.platformUtilsService.showToast('success', null, this.i18nService.t('exportSuccess'));\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" ngNativeValidate [appApiAction]=\"formPromise\"> <div class=\"page-header\"> <h1>{{'exportVault' | i18n}}</h1> </div> <p>{{'exportMasterPassword' | i18n}}</p> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"format\">{{'fileFormat' | i18n}}</label> <select class=\"form-control\" id=\"format\" name=\"Format\" [(ngModel)]=\"format\"> <option value=\"json\">.json</option> <option value=\"csv\">.csv</option> <option value=\"encrypted_json\">.json (Encrypted)</option> </select> </div> </div> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'exportVault' | i18n}}</span> </button> </form> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: 'exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    exposedPasswordMap = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected auditService: AuditService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    ngOnInit() {\n        this.checkAccess();\n    }\n\n    async load() {\n        if (await this.checkAccess()) {\n            super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const exposedPasswordCiphers: CipherView[] = [];\n        const promises: Promise<void>[] = [];\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            const promise = this.auditService.passwordLeaked(c.login.password).then(exposedCount => {\n                if (exposedCount > 0) {\n                    exposedPasswordCiphers.push(c);\n                    this.exposedPasswordMap.set(c.id, exposedCount);\n                }\n            });\n            promises.push(promise);\n        });\n        await Promise.all(promises);\n        this.ciphers = exposedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from the org view;\n        return true;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'exposedPasswordsReport' | i18n}}</h1> </div> <p>{{'exposedPasswordsReportDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading\" (click)=\"load()\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'checkExposedPasswords' | i18n}}</span> </button> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noExposedPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'exposedPasswordsFound' | i18n}}\"> {{'exposedPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-warning\"> {{'exposedXTimes' | i18n : (exposedPasswordMap.get(c.id) | number)}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherCreateRequest } from 'jslib-common/models/request/cipherCreateRequest';\nimport { CipherRequest } from 'jslib-common/models/request/cipherRequest';\n\nimport { AddEditComponent as BaseAddEditComponent } from '../../vault/add-edit.component';\n\n@Component({\n    selector: 'app-org-vault-add-edit',\n    templateUrl: '../../vault/add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    organization: Organization;\n    originalCipher: Cipher = null;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        totpService: TotpService, passwordGenerationService: PasswordGenerationService,\n        private apiService: ApiService, messagingService: MessagingService,\n        eventService: EventService, policyService: PolicyService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, totpService, passwordGenerationService, messagingService,\n            eventService, policyService);\n    }\n\n    protected allowOwnershipAssignment() {\n        if (this.ownershipOptions != null && (this.ownershipOptions.length > 1 || !this.allowPersonal)) {\n            if (this.organization != null) {\n                return this.cloneMode && this.organization.canManageAllCollections;\n            } else {\n                return !this.editMode || this.cloneMode;\n            }\n        }\n        return false;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.canManageAllCollections) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canManageAllCollections) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        const data = new CipherData(response);\n        this.originalCipher = new Cipher(data);\n        return new Cipher(data);\n    }\n\n    protected encryptCipher() {\n        if (!this.organization.canManageAllCollections) {\n            return super.encryptCipher();\n        }\n        return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n    }\n\n    protected async saveCipher(cipher: Cipher) {\n        if (!this.organization.canManageAllCollections || cipher.organizationId == null) {\n            return super.saveCipher(cipher);\n        }\n        if (this.editMode && !this.cloneMode) {\n            const request = new CipherRequest(cipher);\n            return this.apiService.putCipherAdmin(this.cipherId, request);\n        } else {\n            const request = new CipherCreateRequest(cipher);\n            return this.apiService.postCipherAdmin(request);\n        }\n    }\n\n    protected async deleteCipher() {\n        if (!this.organization.canManageAllCollections) {\n            return super.deleteCipher();\n        }\n        return this.cipher.isDeleted ? this.apiService.deleteCipherAdmin(this.cipherId)\n            : this.apiService.putDeleteCipherAdmin(this.cipherId);\n    }\n}\n","import { AttachmentResponse } from '../response/attachmentResponse';\n\nexport class AttachmentData {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response?: AttachmentResponse) {\n        if (response == null) {\n            return;\n        }\n        this.id = response.id;\n        this.url = response.url;\n        this.fileName = response.fileName;\n        this.key = response.key;\n        this.size = response.size;\n        this.sizeName = response.sizeName;\n    }\n}\n","import { CardApi } from '../api/cardApi';\n\nexport class CardData {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data?: CardApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.cardholderName = data.cardholderName;\n        this.brand = data.brand;\n        this.number = data.number;\n        this.expMonth = data.expMonth;\n        this.expYear = data.expYear;\n        this.code = data.code;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldApi } from '../api/fieldApi';\n\nexport class FieldData {\n    type: FieldType;\n    name: string;\n    value: string;\n\n    constructor(response?: FieldApi) {\n        if (response == null) {\n            return;\n        }\n        this.type = response.type;\n        this.name = response.name;\n        this.value = response.value;\n    }\n}\n","import { IdentityApi } from '../api/identityApi';\n\nexport class IdentityData {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data?: IdentityApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.title = data.title;\n        this.firstName = data.firstName;\n        this.middleName = data.middleName;\n        this.lastName = data.lastName;\n        this.address1 = data.address1;\n        this.address2 = data.address2;\n        this.address3 = data.address3;\n        this.city = data.city;\n        this.state = data.state;\n        this.postalCode = data.postalCode;\n        this.country = data.country;\n        this.company = data.company;\n        this.email = data.email;\n        this.phone = data.phone;\n        this.ssn = data.ssn;\n        this.username = data.username;\n        this.passportNumber = data.passportNumber;\n        this.licenseNumber = data.licenseNumber;\n    }\n}\n","import { LoginApi } from '../api/loginApi';\n\nimport { LoginUriData } from './loginUriData';\n\nexport class LoginData {\n    uris: LoginUriData[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n    autofillOnPageLoad: boolean;\n\n    constructor(data?: LoginApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.username = data.username;\n        this.password = data.password;\n        this.passwordRevisionDate = data.passwordRevisionDate;\n        this.totp = data.totp;\n        this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n        if (data.uris) {\n            this.uris = data.uris.map(u => new LoginUriData(u));\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriApi } from '../api/loginUriApi';\n\nexport class LoginUriData {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data?: LoginUriApi) {\n        if (data == null) {\n            return;\n        }\n        this.uri = data.uri;\n        this.match = data.match;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class SecureNoteData {\n    type: SecureNoteType;\n\n    constructor(data?: SecureNoteApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.type = data.type;\n    }\n}\n","import { AttachmentData } from '../data/attachmentData';\n\nimport { AttachmentView } from '../view/attachmentView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nexport class Attachment extends Domain {\n    id: string;\n    url: string;\n    size: string;\n    sizeName: string;\n    key: EncString;\n    fileName: EncString;\n\n    constructor(obj?: AttachmentData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.size = obj.size;\n        this.buildDomainModel(this, obj, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, alreadyEncrypted, ['id', 'url', 'sizeName']);\n    }\n\n    async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n        const view = await this.decryptObj(new AttachmentView(this), {\n            fileName: null,\n        }, orgId, encKey);\n\n        if (this.key != null) {\n            let cryptoService: CryptoService;\n            const containerService = (Utils.global as any).bitwardenContainerService;\n            if (containerService) {\n                cryptoService = containerService.getCryptoService();\n            } else {\n                throw new Error('global bitwardenContainerService not initialized.');\n            }\n\n            try {\n                const orgKey = await cryptoService.getOrgKey(orgId);\n                const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n                view.key = new SymmetricCryptoKey(decValue);\n            } catch (e) {\n                // TODO: error?\n            }\n        }\n\n        return view;\n    }\n\n    toAttachmentData(): AttachmentData {\n        const a = new AttachmentData();\n        a.size = this.size;\n        this.buildDataModel(this, a, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, ['id', 'url', 'sizeName']);\n        return a;\n    }\n}\n","import { View } from './view';\n\nimport { Password } from '../domain/password';\n\nexport class PasswordHistoryView implements View {\n    password: string = null;\n    lastUsedDate: Date = null;\n\n    constructor(ph?: Password) {\n        if (!ph) {\n            return;\n        }\n\n        this.lastUsedDate = ph.lastUsedDate;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { ImportOption, ImportService } from 'jslib-common/abstractions/import.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport Swal, { SweetAlertIcon } from 'sweetalert2';\n\n@Component({\n    selector: 'app-import',\n    templateUrl: 'import.component.html',\n})\nexport class ImportComponent implements OnInit {\n    featuredImportOptions: ImportOption[];\n    importOptions: ImportOption[];\n    format: string = null;\n    fileContents: string;\n    formPromise: Promise<Error>;\n    loading: boolean = false;\n\n    protected organizationId: string = null;\n    protected successNavigate: any[] = ['vault'];\n\n    constructor(protected i18nService: I18nService, protected toasterService: ToasterService,\n        protected importService: ImportService, protected router: Router,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.setImportOptions();\n        this.importOptions.sort((a, b) => {\n            if (a.name == null && b.name != null) {\n                return -1;\n            }\n            if (a.name != null && b.name == null) {\n                return 1;\n            }\n            if (a.name == null && b.name == null) {\n                return 0;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(a.name, b.name) :\n                a.name.localeCompare(b.name);\n        });\n    }\n\n    async submit() {\n        this.loading = true;\n\n        const importer = this.importService.getImporter(this.format, this.organizationId);\n        if (importer === null) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFormat'));\n            this.loading = false;\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if ((files == null || files.length === 0) && (this.fileContents == null || this.fileContents === '')) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            this.loading = false;\n            return;\n        }\n\n        let fileContents = this.fileContents;\n        if (files != null && files.length > 0) {\n            try {\n                const content = await this.getFileContents(files[0]);\n                if (content != null) {\n                    fileContents = content;\n                }\n            } catch { }\n        }\n\n        if (fileContents == null || fileContents === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            this.loading = false;\n            return;\n        }\n\n        try {\n            this.formPromise = this.importService.import(importer, fileContents, this.organizationId);\n            const error = await this.formPromise;\n            if (error != null) {\n                this.error(error);\n                this.loading = false;\n                return;\n            }\n            this.toasterService.popAsync('success', null, this.i18nService.t('importSuccess'));\n            this.router.navigate(this.successNavigate);\n        } catch { }\n\n        this.loading = false;\n    }\n\n    getFormatInstructionTitle() {\n        if (this.format == null) {\n            return null;\n        }\n\n        const results = this.featuredImportOptions.concat(this.importOptions).filter(o => o.id === this.format);\n        if (results.length > 0) {\n            return this.i18nService.t('instructionsFor', results[0].name);\n        }\n        return null;\n    }\n\n    protected setImportOptions() {\n        this.featuredImportOptions = [{\n            id: null,\n            name: '-- ' + this.i18nService.t('select') + ' --',\n        }, ...this.importService.featuredImportOptions];\n        this.importOptions = this.importService.regularImportOptions;\n    }\n\n    private async error(error: Error) {\n        await Swal.fire({\n            heightAuto: false,\n            buttonsStyling: false,\n            icon: 'error' as SweetAlertIcon,\n            iconHtml: `<i class=\"swal-custom-icon fa fa-bolt text-danger\"></i>`,\n            input: 'textarea',\n            inputValue: error.message,\n            inputAttributes: {\n                'readonly': 'true',\n            },\n            titleText: this.i18nService.t('importError'),\n            text: this.i18nService.t('importErrorDesc'),\n            showConfirmButton: true,\n            confirmButtonText: this.i18nService.t('ok'),\n            onOpen: popupEl => {\n                popupEl.querySelector('.swal2-textarea').scrollTo(0, 0);\n             },\n        });\n    }\n\n    private getFileContents(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsText(file, 'utf-8');\n            reader.onload = evt => {\n                if (this.format === 'lastpasscsv' && file.type === 'text/html') {\n                    const parser = new DOMParser();\n                    const doc = parser.parseFromString((evt.target as any).result, 'text/html');\n                    const pre = doc.querySelector('pre');\n                    if (pre != null) {\n                        resolve(pre.textContent);\n                        return;\n                    }\n                    reject();\n                    return;\n                }\n\n                resolve((evt.target as any).result);\n            };\n            reader.onerror = () => {\n                reject();\n            };\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'importData' | i18n}}</h1> </div> <form #form (ngSubmit)=\"submit()\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"type\">1. {{'selectFormat' | i18n}}</label> <select id=\"type\" name=\"Format\" [(ngModel)]=\"format\" class=\"form-control\" required> <option *ngFor=\"let o of featuredImportOptions\" [ngValue]=\"o.id\">{{o.name}}</option> <ng-container *ngIf=\"importOptions && importOptions.length\"> <option value=\"-\" disabled=\"disabled\"></option> <option *ngFor=\"let o of importOptions\" [ngValue]=\"o.id\">{{o.name}}</option> </ng-container> </select> </div> </div> </div> <app-callout type=\"info\" title=\"{{getFormatInstructionTitle()}}\" *ngIf=\"format\"> <ng-container *ngIf=\"format === 'bitwardencsv' || format === 'bitwardenjson'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/export-your-data/\"> https://help.bitwarden.com/article/export-your-data/</a> </ng-container> <ng-container *ngIf=\"format === 'lastpasscsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-lastpass/\"> https://help.bitwarden.com/article/import-from-lastpass/</a> </ng-container> <ng-container *ngIf=\"format === 'keepassxcsv'\"> Using the KeePassX desktop application, navigate to \"Database\" &rarr; \"Export to CSV file\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'aviracsv'\"> In the Avira web vault, go to \"Settings\" &rarr; \"My Data\" &rarr; \"Export data\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'blurcsv'\"> In the Blur web vault, click your username at the top and go to \"Settings\" &rarr; \"Export Data\", then click \"Export CSV\" for your \"Accounts\". </ng-container> <ng-container *ngIf=\"format === 'safeincloudxml'\"> Using the SaveInCloud desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As XML\" and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'padlockcsv'\"> Using the Padlock desktop application, click the hamburger icon in the top left corner and navigate to \"Settings\" &rarr; \"Export\" button and save the file \"As CSV\". </ng-container> <ng-container *ngIf=\"format === 'keepass2xml'\"> Using the KeePass 2 desktop application, navigate to \"File\" &rarr; \"Export\" and select the \"KeePass XML (2.x)\" option. </ng-container> <ng-container *ngIf=\"format === 'upmcsv'\"> Using the Universal Password Manager desktop application, navigate to \"Database\" &rarr; \"Export\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'saferpasscsv'\"> Using the SaferPass browser extension, click the hamburger icon in the top left corner and navigate to \"Settings\". Click the \"Export accounts\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'meldiumcsv'\"> Using the Meldium web vault, navigate to \"Settings\". Locate the \"Export data\" function and click \"Show me my data\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'keepercsv'\"> Log into the Keeper web vault (keepersecurity.com/vault). Navigate to \"Backup\" (top right) and find the \"Export to .csv File\" option. Click \"Export Now\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'chromecsv' || format === 'operacsv' || format === 'vivaldicsv'\"> <span *ngIf=\"format !== 'chromecsv'\"> The process is exactly the same as importing from Google Chrome. </span> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-chrome/\"> https://help.bitwarden.com/article/import-from-chrome/</a> </ng-container> <ng-container *ngIf=\"format === 'firefoxcsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/article/import-from-firefox/\"> https://bitwarden.com/help/article/import-from-firefox/</a>. </ng-container> <ng-container *ngIf=\"format === '1password1pif' || format === '1passwordwincsv' || format === '1passwordmaccsv'\"> See detailed instructions on our help site at <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-1password/\"> https://help.bitwarden.com/article/import-from-1password/</a>. </ng-container> <ng-container *ngIf=\"format === 'passworddragonxml'\"> Using the Password Dragon desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"To XML\". In the dialog that pops up select \"All Rows\" and check all fields. Click the \"Export\" button and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'enpasscsv'\"> Using the Enpass desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As CSV\". Select \"OK\" to the warning alert and save the CSV file. Note that the importer only supports files exported while Enpass is set to the English language, so adjust your settings accordingly. </ng-container> <ng-container *ngIf=\"format === 'enpassjson'\"> Using the Enpass 6 desktop application, click the menu button and navigate to \"File\" &rarr; \"Export\". Select the \".json\" file format option and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'pwsafexml'\"> Using the Password Safe desktop application, navigate to \"File\" &rarr; \"Export To\" &rarr; \"XML format...\" and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'dashlanejson'\"> Using the Dashlane desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"Unsecured archive (readable) in JSON format\" and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'msecurecsv'\"> Using the mSecure desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"CSV File...\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'stickypasswordxml'\"> Using the Sticky Password desktop application, navigate to \"Menu\" (top right) &rarr; \"Export\" &rarr; \"Export all\". Select the unencrypted format XML option and save the XML file. </ng-container> <ng-container *ngIf=\"format === 'truekeycsv'\"> Using the True Key desktop application, click the gear icon (top right) and then navigate to \"App Settings\". Click the \"Export\" button, enter your password and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'clipperzhtml'\"> Log into the Clipperz web application (clipperz.is/app). Click the hamburger menu icon in the top right to expand the navigation bar. Navigate to \"Data\" &rarr; \"Export\". Click the \"download HTML+JSON\" button to save the HTML file. </ng-container> <ng-container *ngIf=\"format === 'roboformcsv'\"> Using the RoboForm Editor desktop application, navigate to \"RoboForm\" (top left) &rarr; \"Options\" &rarr; \"Account &amp; Data\" and click the \"Export\" button. Select all of your data, change the \"Format\" to \"CSV file\" and then click the \"Export\" button to save the CSV file. Note: RoboForm only allows you to export Logins. Other items will not be exported. </ng-container> <ng-container *ngIf=\"format === 'passboltcsv'\"> Log into the Passbolt web vault and navigate to the \"Passwords\" listing. Select all of the passwords you would like to export and click the \"Export\" button at the top of the listing. Choose the \"csv (lastpass)\" export format and click the \"Export\" button. </ng-container> <ng-container *ngIf=\"format === 'ascendocsv'\"> Using the Ascendo DataVault desktop application, navigate to \"Tools\" &rarr; \"Export\". In the dialog that pops up, select the \"All Items (DVX, CSV)\" option. Click the \"Ok\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passwordbossjson'\"> Using the Password Boss desktop application, navigate to \"File\" &rarr; \"Export data\" &rarr; \"Password Boss JSON - not encrypted\" and save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'zohovaultcsv'\"> Log into the Zoho web vault (vault.zoho.com). Navigate to \"Tools\" &rarr; \"Export Secrets\". Select \"All Secrets\" and click the \"Zoho Vault Format CSV\" button. Highlight and copy the data from the textarea. Open a text editor like Notepad and paste the data. Save the data from the text editor as <code>zoho_export.csv</code>. </ng-container> <ng-container *ngIf=\"format === 'splashidcsv'\"> Using the SplashID Safe desktop application, click on the SplashID blue lock logo in the top right corner. Navigate to \"Export\" &rarr; \"Export as CSV\" and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passkeepcsv'\"> Using the PassKeep mobile app, navigate to \"Backup/Restore\". Locate the \"CSV Backup/Restore\" section and click \"Backup to CSV\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'gnomejson'\"> Make sure you have python-keyring and python-gnomekeyring installed. Save the <a target=\"_blank\" rel=\"noopener\" href=\"https://bit.ly/2GpOMTg\">GNOME Keyring Import/Export</a> python script to your desktop as <code>pw_helper.py</code>. Open terminal and run <code>chmod +rx Desktop/pw_helper.py</code> and then <code>python Desktop/pw_helper.py export Desktop/my_passwords.json</code>. Then upload the resulting <code>my_passwords.json</code> file here to Bitwarden. </ng-container> <ng-container *ngIf=\"format === 'passwordagentcsv'\"> Using the Password Agent desktop application navigate to \"File\" &rarr; \"Export\", select the \"Fields to export\" button and check all of the fields, change the \"Output format\" to \"CSV\", and then click the \"Start\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passpackcsv'\"> Log into the Passpack website vault and navigate to \"Settings\" &rarr; \"Export\", then click the \"Download\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passmanjson'\"> Open your Passman vault and click on \"Settings\" in the bottom left corner. In the \"Settings\" window switch to the \"Export credentials\" tab and choose \"JSON\" as the export type. Enter your vault's passphrase and click the \"Export\" button to save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'avastcsv'\"> Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select the \"Export\" button for the \"Export to CSV file\" option to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'avastjson'\"> Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select the \"Export\" button for the \"Export to JSON file\" option to save the JSON file. </ng-container> <ng-container *ngIf=\"format === 'fsecurefsk'\"> Open the F-Secure KEY desktop application and navigate to \"Settings\" &rarr; \"Export Passwords\". Select the \"Export\" button, enter your master password, and save the FSK file. </ng-container> <ng-container *ngIf=\"format === 'kasperskytxt'\"> Open the Kaspersky Password Manager desktop application and navigate to \"Settings\" &rarr; \"Import/Export\". Locate the \"Export to text file\" section and select the \"Export\" button to save the TXT file. </ng-container> <ng-container *ngIf=\"format === 'remembearcsv'\"> Open the RememBear desktop application and navigate to \"Settings\" &rarr; \"Account\" &rarr; \"Export\". Enter your master password and select the \"Export Anyway\" button to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'passwordwallettxt'\"> Open the PasswordWallet desktop application and navigate to \"File\" &rarr; \"Export\" &rarr; \"Visible entries to text file\". Enter your password and select the \"Ok\" button to save the TXT file. </ng-container> <ng-container *ngIf=\"format === 'mykicsv'\"> Open the Myki desktop browser extension and navigate to \"Advanced\" &rarr; \"Export Accounts\" and then scan the QR code with your mobile device. Various CSV files will then be saved to your computer's downloads folder. </ng-container> <ng-container *ngIf=\"format === 'securesafecsv'\"> Export your SecureSafe password safe to a CSV file with a comma delimiter. </ng-container> <ng-container *ngIf=\"format === 'logmeoncecsv'\"> Open the LogMeOnce browser extension, then navigate to \"Open Menu\" &rarr; \"Export To\" and select \"CSV File\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'blackberrycsv'\"> Open the BlackBerry Password Keeper application, then navigate to \"Settings\" &rarr; \"Import/Export\". Select \"Export Passwords\" and follow the instructions on screen to save the unencrypted CSV file. </ng-container> <ng-container *ngIf=\"format === 'buttercupcsv'\"> Open the Buttercup desktop application and unlock your vault. Right click on your vault's icon and select \"Export\" to save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'codebookcsv'\"> Open the Codebook desktop application and log in. Navigate to \"File\" &rarr; \"Export all\", then click \"Yes\" on the dialog and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'encryptrcsv'\"> Open the newest version of the Encryptr desktop application and allow all of your data to sync. Once syncing of your data is complete, the download icon in the top right corner will turn pink. Click the download icon and save the CSV file. </ng-container> <ng-container *ngIf=\"format === 'yoticsv'\"> From the Yoti browser extension, click on \"Settings\", then \"Export Saved Logins\" and save the CSV file. </ng-container> </app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"file\">2. {{'selectImportFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\"> </div> </div> </div> <div class=\"form-group\"> <label for=\"fileContents\">{{'orCopyPasteFileContents' | i18n}}</label> <textarea id=\"fileContents\" class=\"form-control\" name=\"FileContents\" [(ngModel)]=\"fileContents\"></textarea> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'importData' | i18n}}</span> </button> </form> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: 'inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n    services = new Map<string, string>();\n    cipherDocs = new Map<string, string>();\n\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        try {\n            await this.load2fa();\n        } catch { }\n        if (this.services.size > 0) {\n            const allCiphers = await this.getAllCiphers();\n            const inactive2faCiphers: CipherView[] = [];\n            const promises: Promise<void>[] = [];\n            const docs = new Map<string, string>();\n            allCiphers.forEach(c => {\n                if (c.type !== CipherType.Login || (c.login.totp != null && c.login.totp !== '') || !c.login.hasUris ||\n                    c.isDeleted) {\n                    return;\n                }\n                for (let i = 0; i < c.login.uris.length; i++) {\n                    const u = c.login.uris[i];\n                    if (u.uri != null && u.uri !== '') {\n                        const hostname = Utils.getHostname(u.uri);\n                        if (hostname != null && this.services.has(hostname)) {\n                            if (this.services.get(hostname) != null) {\n                                docs.set(c.id, this.services.get(hostname));\n                            }\n                            inactive2faCiphers.push(c);\n                            break;\n                        }\n                    }\n                }\n            });\n            await Promise.all(promises);\n            this.ciphers = inactive2faCiphers;\n            this.cipherDocs = docs;\n        }\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    private async load2fa() {\n        if (this.services.size > 0) {\n            return;\n        }\n        const response = await fetch(new Request('https://2fa.directory/api/v2/totp.json'));\n        if (response.status !== 200) {\n            throw new Error();\n        }\n        const responseJson = await response.json();\n        for (const categoryName in responseJson) {\n            if (responseJson.hasOwnProperty(categoryName)) {\n                const category = responseJson[categoryName];\n                for (const serviceName in category) {\n                    if (category.hasOwnProperty(serviceName)) {\n                        const service = category[serviceName];\n                        if (service.url != null) {\n                            const hostname = Utils.getHostname(service.url);\n                            if (hostname != null) {\n                                this.services.set(hostname, service.doc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","<div class=\"page-header\"> <h1> {{'inactive2faReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'inactive2faReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noInactive2fa' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'inactive2faFound' | i18n}}\"> {{'inactive2faFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <a class=\"badge badge-primary\" href=\"{{cipherDocs.get(c.id)}}\" target=\"_blank\" rel=\"noopener\" *ngIf=\"cipherDocs.has(c.id)\"> {{'instructions' | i18n}}</a> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: 'reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    passwordUseMap: Map<string, number>;\n\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const ciphersWithPasswords: CipherView[] = [];\n        this.passwordUseMap = new Map<string, number>();\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            ciphersWithPasswords.push(c);\n            if (this.passwordUseMap.has(c.login.password)) {\n                this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n            } else {\n                this.passwordUseMap.set(c.login.password, 1);\n            }\n        });\n        const reusedPasswordCiphers = ciphersWithPasswords.filter(c =>\n            this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1);\n        this.ciphers = reusedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from an organization view\n        return true;\n    }\n}\n","<div class=\"page-header\"> <h1> {{'reusedPasswordsReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'reusedPasswordsReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noReusedPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'reusedPasswordsFound' | i18n}}\"> {{'reusedPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-warning\"> {{'reusedXTimes' | i18n : passwordUseMap.get(c.login.password)}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: 'unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const unsecuredCiphers = allCiphers.filter(c => {\n            if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n                return false;\n            }\n            return c.login.uris.some(u => u.uri != null && u.uri.indexOf('http://') === 0);\n        });\n        this.ciphers = unsecuredCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n}\n","<div class=\"page-header\"> <h1> {{'unsecuredWebsitesReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'unsecuredWebsitesReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noUnsecuredWebsites' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'unsecuredWebsitesFound' | i18n}}\"> {{'unsecuredWebsitesFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: 'weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n\n    passwordStrengthMap = new Map<string, [string, string]>();\n\n    private passwordStrengthCache = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected passwordGenerationService: PasswordGenerationService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const weakPasswordCiphers: CipherView[] = [];\n        const isUserNameNotEmpty = (c: CipherView): boolean => {\n            return c.login.username != null && c.login.username.trim() !== '';\n        };\n        const getCacheKey = (c: CipherView): string => {\n            return c.login.password + '_____' + (isUserNameNotEmpty(c) ? c.login.username : '');\n        };\n\n        allCiphers.forEach(c => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\n                return;\n            }\n            const hasUserName = isUserNameNotEmpty(c);\n            const cacheKey = getCacheKey(c);\n            if (!this.passwordStrengthCache.has(cacheKey)) {\n                let userInput: string[] = [];\n                if (hasUserName) {\n                    const atPosition = c.login.username.indexOf('@');\n                    if (atPosition > -1) {\n                        userInput = userInput.concat(\n                            c.login.username.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/))\n                            .filter(i => i.length >= 3);\n                    } else {\n                        userInput = c.login.username.trim().toLowerCase().split(/[^A-Za-z0-9]/)\n                            .filter(i => i.length >= 3);\n                    }\n                }\n                const result = this.passwordGenerationService.passwordStrength(c.login.password,\n                    userInput.length > 0 ? userInput : null);\n                this.passwordStrengthCache.set(cacheKey, result.score);\n            }\n            const score = this.passwordStrengthCache.get(cacheKey);\n            if (score != null && score <= 2) {\n                this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n                weakPasswordCiphers.push(c);\n            }\n        });\n        weakPasswordCiphers.sort((a, b) => {\n            return this.passwordStrengthCache.get(getCacheKey(a)) -\n                this.passwordStrengthCache.get(getCacheKey(b));\n        });\n        this.ciphers = weakPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    protected canManageCipher(c: CipherView): boolean {\n        // this will only ever be false from the org view;\n        return true;\n    }\n\n    private scoreKey(score: number): [string, string] {\n        switch (score) {\n            case 4:\n                return ['strong', 'success'];\n            case 3:\n                return ['good', 'primary'];\n            case 2:\n                return ['weak', 'warning'];\n            default:\n                return ['veryWeak', 'danger'];\n        }\n    }\n}\n","<div class=\"page-header\"> <h1> {{'weakPasswordsReport' | i18n}} <small *ngIf=\"hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <p>{{'weakPasswordsReportDesc' | i18n}}</p> <div *ngIf=\"!hasLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"mt-4\" *ngIf=\"hasLoaded\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\"> {{'noWeakPasswords' | i18n}} </app-callout> <ng-container *ngIf=\"ciphers.length\"> <app-callout type=\"danger\" title=\"{{'weakPasswordsFound' | i18n}}\"> {{'weakPasswordsFoundDesc' | i18n : (ciphers.length | number)}} </app-callout> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <ng-container *ngIf=\"!organization || canManageCipher(c) ; else cantManage\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> </ng-container> <ng-template #cantManage> <span>{{c.name}}</span> </ng-template> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"text-right\"> <span class=\"badge badge-{{passwordStrengthMap.get(c.id)[1]}}\"> {{passwordStrengthMap.get(c.id)[0] | i18n}} </span> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib-angular/components/attachments.component';\n\n@Component({\n    selector: 'app-vault-attachments',\n    templateUrl: 'attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = false;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService, window);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.showFixOldAttachments(attachment)) {\n            await this.reuploadCipherAttachment(attachment, false);\n        }\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.cipher.organizationId == null;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"attachmentsTitle\"> {{'attachments' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\"> <tbody> <tr *ngFor=\"let a of cipher.attachments\"> <td class=\"table-list-icon\"> <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-lg fa-fw fa-spin\" *ngIf=\"a.downloading\" aria-hidden=\"true\"></i> </td> <td class=\"wrap\"> <div class=\"d-flex\"> <a href=\"#\" appStopClick (click)=\"download(a)\">{{a.fileName}}</a> <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\"> <a href=\"https://help.bitwarden.com/article/attachments/#fixing-old-attachments\" target=\"_blank\" rel=\"noopener\"> <i class=\"fa fa-exclamation-triangle text-warning\" title=\"{{'attachmentFixDesc' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachmentFixDesc' | i18n}}</span></a> <button type=\"button\" class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\" (click)=\"reupload(a)\" #reuploadBtn [appApiAction]=\"reuploadPromises[a.id]\" [disabled]=\"reuploadBtn.loading\">{{'fix' | i18n}}</button> </div> </div> <small>{{a.sizeName}}</small> </td> <td class=\"table-list-options\" *ngIf=\"!viewOnly\"> <button class=\"btn btn-outline-danger\" type=\"button\" appStopClick appA11yTitle=\"{{'delete' | i18n}}\" (click)=\"delete(a)\" #deleteBtn [appApiAction]=\"deletePromises[a.id]\" [disabled]=\"deleteBtn.loading\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </td> </tr> </tbody> </table> <div *ngIf=\"!viewOnly\"> <h3>{{'newAttachment' | i18n}}</h3> <label for=\"file\" class=\"sr-only\">{{'file' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'maxFileSize' | i18n}}</small> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\" *ngIf=\"!viewOnly\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CiphersComponent as BaseCiphersComponent } from '../../vault/ciphers.component';\n\n@Component({\n    selector: 'app-org-vault-ciphers',\n    templateUrl: '../../vault/ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n    @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n    organization: Organization;\n    accessEvents = false;\n\n    protected allCiphers: CipherView[] = [];\n\n    constructor(searchService: SearchService, toasterService: ToasterService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, cipherService: CipherService,\n        private apiService: ApiService, eventService: EventService, totpService: TotpService,\n        userService: UserService, passwordRepromptService: PasswordRepromptService) {\n        super(searchService, toasterService, i18nService, platformUtilsService, cipherService,\n            eventService, totpService, userService, passwordRepromptService);\n    }\n\n    async load(filter: (cipher: CipherView) => boolean = null) {\n        if (this.organization.canManageAllCollections) {\n            this.accessEvents = this.organization.useEvents;\n            this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n        } else {\n            this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(c => c.organizationId === this.organization.id);\n        }\n        await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n        await this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        if (this.organization.canManageAllCollections) {\n            await super.applyFilter(filter);\n        } else {\n            const f = (c: CipherView) => c.organizationId === this.organization.id && (filter == null || filter(c));\n            await super.applyFilter(f);\n        }\n    }\n\n    async search(timeout: number = null) {\n        await super.search(timeout, this.allCiphers);\n    }\n    events(c: CipherView) {\n        this.onEventsClicked.emit(c);\n    }\n\n    protected deleteCipher(id: string) {\n        if (!this.organization.canManageAllCollections) {\n            return super.deleteCipher(id, this.deleted);\n        }\n        return this.deleted ? this.apiService.deleteCipherAdmin(id) : this.apiService.putDeleteCipherAdmin(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return this.organization.canManageAllCollections && c.hasOldAttachments;\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from 'jslib-angular/components/collections.component';\n\n@Component({\n    selector: 'app-vault-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"collectionsTitle\"> {{'collections' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'collectionsDesc' | i18n}}</p> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from '../../vault/groupings.component';\n\n@Component({\n    selector: 'app-org-vault-groupings',\n    templateUrl: '../../vault/groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService,\n        private apiService: ApiService, private i18nService: I18nService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    async loadCollections() {\n        if (!this.organization.canManageAllCollections) {\n            await super.loadCollections(this.organization.id);\n            return;\n        }\n\n        const collections = await this.apiService.getCollections(this.organization.id);\n        if (collections != null && collections.data != null && collections.data.length) {\n            const collectionDomains = collections.data.map(r =>\n                new Collection(new CollectionData(r as CollectionDetailsResponse)));\n            this.collections = await this.collectionService.decryptMany(collectionDomains);\n        } else {\n            this.collections = [];\n        }\n\n        const unassignedCollection = new CollectionView();\n        unassignedCollection.name = this.i18nService.t('unassigned');\n        unassignedCollection.id = 'unassigned';\n        unassignedCollection.organizationId = this.organization.id;\n        unassignedCollection.readOnly = true;\n        this.collections.push(unassignedCollection);\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    collapse(grouping: CollectionView) {\n        super.collapse(grouping, 'org_');\n    }\n\n    isCollapsed(grouping: CollectionView) {\n        return super.isCollapsed(grouping, 'org_');\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    Input,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordRepromptService } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { BulkDeleteComponent } from './bulk-delete.component';\nimport { BulkMoveComponent } from './bulk-move.component';\nimport { BulkRestoreComponent } from './bulk-restore.component';\nimport { BulkShareComponent } from './bulk-share.component';\nimport { CiphersComponent } from './ciphers.component';\n\n@Component({\n    selector: 'app-vault-bulk-actions',\n    templateUrl: 'bulk-actions.component.html',\n})\nexport class BulkActionsComponent {\n    @Input() ciphersComponent: CiphersComponent;\n    @Input() modal: ModalComponent;\n    @Input() deleted: boolean;\n    @Input() organization: Organization;\n\n    @ViewChild('bulkDeleteTemplate', { read: ViewContainerRef, static: true }) bulkDeleteModalRef: ViewContainerRef;\n    @ViewChild('bulkRestoreTemplate', { read: ViewContainerRef, static: true }) bulkRestoreModalRef: ViewContainerRef;\n    @ViewChild('bulkMoveTemplate', { read: ViewContainerRef, static: true }) bulkMoveModalRef: ViewContainerRef;\n    @ViewChild('bulkShareTemplate', { read: ViewContainerRef, static: true }) bulkShareModalRef: ViewContainerRef;\n\n    constructor(private toasterService: ToasterService,\n        private i18nService: I18nService,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private passwordRepromptService: PasswordRepromptService) { }\n\n    async bulkDelete() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkDeleteModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkDeleteComponent>(BulkDeleteComponent, this.bulkDeleteModalRef);\n\n        childComponent.permanent = this.deleted;\n        childComponent.cipherIds = selectedIds;\n        childComponent.organization = this.organization;\n        childComponent.onDeleted.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async bulkRestore() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkRestoreModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkRestoreComponent>(BulkRestoreComponent, this.bulkRestoreModalRef);\n\n        childComponent.cipherIds = selectedIds;\n        childComponent.onRestored.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async bulkShare() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedCiphers = this.ciphersComponent.getSelected();\n        if (selectedCiphers.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkShareModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkShareComponent>(BulkShareComponent, this.bulkShareModalRef);\n\n        childComponent.ciphers = selectedCiphers;\n        childComponent.onShared.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    async bulkMove() {\n        if (!await this.promptPassword()) {\n            return;\n        }\n\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkMoveModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkMoveComponent>(BulkMoveComponent, this.bulkMoveModalRef);\n\n        childComponent.cipherIds = selectedIds;\n        childComponent.onMoved.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    selectAll(select: boolean) {\n        this.ciphersComponent.selectAll(select);\n    }\n\n    private async promptPassword() {\n        const selectedCiphers = this.ciphersComponent.getSelected();\n        const notProtected = !selectedCiphers.find(cipher => cipher.reprompt !== CipherRepromptType.None);\n\n        return notProtected || await this.passwordRepromptService.showPasswordPrompt();\n    }\n}\n","<div class=\"dropdown mr-2\" appListDropdown> <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\"> <button class=\"dropdown-item\" appStopClick (click)=\"bulkMove()\" *ngIf=\"!deleted && !organization\"> <i class=\"fa fa-fw fa-share\" aria-hidden=\"true\"></i> {{'moveSelected' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"bulkShare()\" *ngIf=\"!deleted && !organization\"> <i class=\"fa fa-fw fa-arrow-circle-o-right\" aria-hidden=\"true\"></i> {{'moveSelectedToOrg' | i18n}} </button> <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'restoreSelected' | i18n}} </button> <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{(deleted ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}} </button> <div class=\"dropdown-divider\"></div> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\"> <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i> {{'selectAll' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\"> <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i> {{'unselectAll' | i18n}} </button> </div> </div> <ng-template #bulkDeleteTemplate></ng-template> <ng-template #bulkRestoreTemplate></ng-template> <ng-template #bulkMoveTemplate></ng-template> <ng-template #bulkShareTemplate></ng-template> ","import Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { SendFileData } from '../data/sendFileData';\n\nimport { SendFileView } from '../view/sendFileView';\n\nexport class SendFile extends Domain {\n    id: string;\n    size: string;\n    sizeName: string;\n    fileName: EncString;\n\n    constructor(obj?: SendFileData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.size = obj.size;\n        this.buildDomainModel(this, obj, {\n            id: null,\n            sizeName: null,\n            fileName: null,\n        }, alreadyEncrypted, ['id', 'sizeName']);\n    }\n\n    async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n        const view = await this.decryptObj(new SendFileView(this), {\n            fileName: null,\n        }, null, key);\n        return view;\n    }\n}\n","import Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { SendTextData } from '../data/sendTextData';\n\nimport { SendTextView } from '../view/sendTextView';\n\nexport class SendText extends Domain {\n    text: EncString;\n    hidden: boolean;\n\n    constructor(obj?: SendTextData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.hidden = obj.hidden;\n        this.buildDomainModel(this, obj, {\n            text: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n        return this.decryptObj(new SendTextView(this), {\n            text: null,\n        }, null, key);\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherWithIdRequest extends CipherRequest {\n    id: string;\n\n    constructor(cipher: Cipher) {\n        super(cipher);\n        this.id = cipher.id;\n    }\n}\n","import { Folder } from '../domain/folder';\n\nexport class FolderRequest {\n    name: string;\n\n    constructor(folder: Folder) {\n        this.name = folder.name ? folder.name.encryptedString : null;\n    }\n}\n","import { FolderResponse } from '../response/folderResponse';\n\nexport class FolderData {\n    id: string;\n    userId: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: FolderResponse, userId: string) {\n        this.userId = userId;\n        this.name = response.name;\n        this.id = response.id;\n        this.revisionDate = response.revisionDate;\n    }\n}\n","import { FolderData } from '../data/folderData';\n\nimport { FolderView } from '../view/folderView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nexport class Folder extends Domain {\n    id: string;\n    name: EncString;\n    revisionDate: Date;\n\n    constructor(obj?: FolderData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            name: null,\n        }, alreadyEncrypted, ['id']);\n\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    }\n\n    decrypt(): Promise<FolderView> {\n        return this.decryptObj(new FolderView(this), {\n            name: null,\n        }, null);\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Directive({\n    selector: '[appSelectCopy]',\n})\nexport class SelectCopyDirective {\n    constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) { }\n\n    @HostListener('copy') onCopy() {\n        if (window == null) {\n            return;\n        }\n        let copyText = '';\n        const selection = window.getSelection();\n        for (let i = 0; i < selection.rangeCount; i++) {\n            const range = selection.getRangeAt(i);\n            const text = range.toString();\n\n            // The selection should only contain one line of text. In some cases however, the\n            // selection contains newlines and space characters from the indentation of following\n            // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n            // that aren't part of the password, the selection has to be trimmed.\n            let stringEndPos = text.length;\n            const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n            if (newLinePos > -1) {\n                const otherPart = text.substr(newLinePos).trim();\n                if (otherPart === '') {\n                    stringEndPos = newLinePos;\n                }\n            }\n            copyText += text.substring(0, stringEndPos);\n        }\n        this.platformUtilsService.copyToClipboard(copyText, { window: window });\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\nimport { Utils } from 'jslib-common/misc/utils';\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: 'colorPassword' })\nexport class ColorPasswordPipe implements PipeTransform {\n    transform(password: string) {\n        // Convert to an array to handle cases that stings have special characters, ie: emoji.\n        const passwordArray = Array.from(password);\n        let colorizedPassword = '';\n        for (let i = 0; i < passwordArray.length; i++) {\n            let character = passwordArray[i];\n            let isSpecial = false;\n            // Sanitize HTML first.\n            switch (character) {\n                case '&':\n                    character = '&amp;';\n                    isSpecial = true;\n                    break;\n                case '<':\n                    character = '&lt;';\n                    isSpecial = true;\n                    break;\n                case '>':\n                    character = '&gt;';\n                    isSpecial = true;\n                    break;\n                case ' ':\n                    character = '&nbsp;';\n                    isSpecial = true;\n                    break;\n                default:\n                    break;\n            }\n            let type = 'letter';\n            if (character.match(Utils.regexpEmojiPresentation)) {\n                type = 'emoji';\n            } else if (isSpecial || character.match(/[^\\w ]/)) {\n                type = 'special';\n            } else if (character.match(/\\d/)) {\n                type = 'number';\n            }\n            colorizedPassword += '<span class=\"password-' + type + '\">' + character + '</span>';\n        }\n        return colorizedPassword;\n    }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 454;","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Injectable()\nexport class ProviderGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const provider = await this.userService.getProvider(route.params.providerId);\n        if (provider == null) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        if (!provider.isProviderAdmin && !provider.enabled) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('providerIsDisabled'));\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\n@Injectable()\nexport class ProviderTypeGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const provider = await this.userService.getProvider(route.params.providerId);\n        const permissions = route.data == null ? null : route.data.permissions as Permissions[];\n\n        if (\n            (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && provider.canAccessEventLogs) ||\n            (permissions.indexOf(Permissions.ManageProvider) !== -1 && provider.isProviderAdmin) ||\n            (permissions.indexOf(Permissions.ManageUsers) !== -1 && provider.canManageUsers)\n        ) {\n            return true;\n        }\n\n        this.router.navigate(['/providers', provider.id]);\n        return false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\n@Component({\n    selector: 'providers-layout',\n    templateUrl: 'providers-layout.component.html',\n})\nexport class ProvidersLayoutComponent {\n\n    provider: Provider;\n    private providerId: string;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        this.route.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            await this.load();\n        });\n    }\n\n    async load() {\n        this.provider = await this.userService.getProvider(this.providerId);\n    }\n\n    get showMenuBar() {\n        return this.showManageTab || this.showSettingsTab;\n    }\n\n    get showManageTab() {\n        return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n    }\n\n    get showSettingsTab() {\n        return this.provider.isProviderAdmin;\n    }\n\n    get manageRoute(): string {\n        switch (true) {\n            case this.provider.canManageUsers:\n                return 'manage/people';\n            case this.provider.canAccessEventLogs:\n                return 'manage/events';\n        }\n    }\n}\n","<app-navbar></app-navbar> <div class=\"org-nav\" *ngIf=\"provider\"> <div class=\"container d-flex\"> <div class=\"d-flex flex-column\"> <div class=\"my-auto d-flex align-items-center pl-1\"> <app-avatar [data]=\"provider.name\" size=\"45\" [circle]=\"true\"></app-avatar> <div class=\"org-name ml-3\"> <span>{{provider.name}}</span> <small class=\"text-muted\">{{'provider' | i18n}}</small> </div> <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\"> <div class=\"card-body py-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'providerIsDisabled' | i18n}} </div> </div> </div> <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\"> <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\"> <i class=\"fa fa-university\" aria-hidden=\"true\"></i> {{'clients' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showManageTab\"> <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\"> <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i> {{'manage' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showSettingsTab\"> <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\"> <i class=\"fa fa-cogs\" aria-hidden=\"true\"></i> {{'settings' | i18n}} </a> </li> </ul> </div> </div> </div> <div class=\"container page-content\"> <router-outlet></router-outlet> </div> <app-footer></app-footer> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport {\n    ProviderOrganizationOrganizationDetailsResponse\n} from 'jslib-common/models/response/provider/providerOrganizationResponse';\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { ModalComponent } from 'src/app/modal.component';\n\nimport { ProviderService } from '../services/provider.service';\n\nimport { AddOrganizationComponent } from './add-organization.component';\n\nconst DisallowedPlanTypes = [PlanType.Free, PlanType.FamiliesAnnually2019, PlanType.FamiliesAnnually];\n\n@Component({\n    templateUrl: 'clients.component.html',\n})\nexport class ClientsComponent implements OnInit {\n\n    @ViewChild('add', { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n    providerId: any;\n    searchText: string;\n    addableOrganizations: Organization[];\n    loading = true;\n    manageOrganizations = false;\n    showAddExisting = false;\n\n    clients: ProviderOrganizationOrganizationDetailsResponse[];\n    pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n    modal: ModalComponent;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n    protected actionPromise: Promise<any>;\n    private pagedClientsCount = 0;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private apiService: ApiService, private searchService: SearchService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private toasterService: ToasterService, private validationService: ValidationService,\n        private providerService: ProviderService, private componentFactoryResolver: ComponentFactoryResolver,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n\n            await this.load();\n\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getProviderClients(this.providerId);\n        this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n        this.manageOrganizations = (await this.userService.getProvider(this.providerId)).type === ProviderUserType.ProviderAdmin;\n        const candidateOrgs = (await this.userService.getAllOrganizations()).filter(o => o.providerId == null);\n        const allowedOrgsIds = await Promise.all(candidateOrgs.map(o => this.apiService.getOrganization(o.id))).then(orgs =>\n            orgs.filter(o => !DisallowedPlanTypes.includes(o.planType))\n                .map(o => o.id));\n        this.addableOrganizations = candidateOrgs.filter(o => allowedOrgsIds.includes(o.id));\n\n        this.showAddExisting = this.addableOrganizations.length != 0;\n        this.loading = false;\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.clients && this.clients.length > this.pageSize;\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    async resetPaging() {\n        this.pagedClients = [];\n        this.loadMore();\n    }\n\n\n    loadMore() {\n        if (!this.clients || this.clients.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedClients.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n            pagedSize = this.pagedClientsCount;\n        }\n        if (this.clients.length > pagedLength) {\n            this.pagedClients = this.pagedClients.concat(this.clients.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedClientsCount = this.pagedClients.length;\n        this.didScroll = this.pagedClients.length > this.pageSize;\n    }\n\n    addExistingOrganization() {\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddOrganizationComponent>(AddOrganizationComponent, this.addModalRef);\n\n        childComponent.providerId = this.providerId;\n        childComponent.organizations = this.addableOrganizations;\n        childComponent.onAddedOrganization.subscribe(async () => {\n            try {\n                await this.load();\n                this.modal.close();\n            } catch (e) {\n                this.logService.error(`Handled exception: ${e}`);\n            }\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('detachOrganizationConfirmation'), organization.organizationName,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n\n        if (!confirmed) {\n            return false;\n        }\n\n        this.actionPromise = this.providerService.detachOrganizastion(this.providerId, organization.id);\n        try {\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('detachedOrganization', organization.organizationName));\n            await this.load();\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'clients' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newClientOrganization' | i18n}} </a> <button class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"addExistingOrganization()\" *ngIf=\"manageOrganizations && showAddExisting\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'addExistingOrganization' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (clients | search:searchText:'organizationName':'id') as searchedClients\"> <p *ngIf=\"!searchedClients.length\">{{'noClientsInList' | i18n}}</p> <ng-container *ngIf=\"searchedClients.length\"> <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let o of searchedClients\"> <td width=\"30\"> <app-avatar [data]=\"o.organizationName\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a [routerLink]=\"['/organizations', o.organizationId]\">{{o.organizationName}}</a> </td> <td class=\"table-list-options\" *ngIf=\"manageOrganizations\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> <ng-template #add></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ProviderService } from '../services/provider.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { Provider } from 'jslib-common/models/domain/provider';\n\nimport { PlanType } from 'jslib-common/enums/planType';\n\n@Component({\n    selector: 'provider-add-organization',\n    templateUrl: 'add-organization.component.html',\n})\nexport class AddOrganizationComponent implements OnInit {\n\n    @Input() providerId: string;\n    @Input() organizations: Organization[];\n    @Output() onAddedOrganization = new EventEmitter();\n\n    provider: Provider;\n    formPromise: Promise<any>;\n    loading = true;\n\n    constructor(private userService: UserService, private providerService: ProviderService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private validationService: ValidationService,\n        private apiService: ApiService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        if (this.providerId == null) {\n            return;\n        }\n\n        this.provider = await this.userService.getProvider(this.providerId);\n\n        this.loading = false;\n    }\n\n    async add(organization: Organization) {\n        if (this.formPromise) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('addOrganizationConfirmation', organization.name, this.provider.name), organization.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.formPromise = this.providerService.addOrganizationToProvider(this.providerId, organization.id);\n            await this.formPromise;\n        } catch (e) {\n            this.validationService.showError(e);\n            return;\n        } finally {\n            this.formPromise = null;\n        }\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('organizationJoinedProvider'));\n        this.onAddedOrganization.emit();\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"addTitle\"> {{'addExistingOrganization' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"card-body text-center\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <ng-container *ngIf=\"!loading\"> <table class=\"table table-hover table-list\"> <tr *ngFor=\"let o of organizations\"> <td width=\"30\"> <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> {{o.name}} </td> <td> <button class=\"btn btn-outline-secondary pull-right\" (click)=\"add(o)\" [disabled]=\"formPromise\">Add</button> </td> </tr> </table> </ng-container> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { OrganizationPlansComponent } from 'src/app/settings/organization-plans.component';\n\n@Component({\n    selector: 'app-create-organization',\n    templateUrl: 'create-organization.component.html',\n})\nexport class CreateOrganizationComponent implements OnInit {\n    @ViewChild(OrganizationPlansComponent, { static: true }) orgPlansComponent: OrganizationPlansComponent;\n\n    providerId: string;\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'newClientOrganization' | i18n}}</h1> </div> <p>{{'newClientOrganizationDesc' | i18n}}</p> <app-organization-plans [providerId]=\"providerId\"></app-organization-plans> ","export class WebConstants {\n    static readonly stripeTestKey = 'pk_test_KPoCfZXu7mznb9uSCPZ2JpTD';\n    static readonly stripeLiveKey = 'pk_live_bpN0P37nMxrMQkcaHXtAybJk';\n    static readonly btSandboxKey = 'sandbox_r72q8jq6_9pnxkwm75f87sdc2';\n    static readonly btProductionKey = 'production_qfbsv8kc_njj2zjtyngtjmbjd';\n    static readonly paypal = {\n        businessIdProduction: '4ZDA7DLUUJGMN',\n        businessIdSandbox: 'AD3LAUZSNVPJY',\n        buttonActionProduction: 'https://www.paypal.com/cgi-bin/webscr',\n        buttonActionSandbox: 'https://www.sandbox.paypal.com/cgi-bin/webscr',\n    };\n}\n","import { TaxInfoUpdateRequest } from './taxInfoUpdateRequest';\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n    taxId: string;\n    line1: string;\n    line2: string;\n    city: string;\n    state: string;\n}\n","export class TaxInfoUpdateRequest {\n    country: string;\n    postalCode: string;\n}\n","export { AttachmentResponse } from './attachmentResponse';\nexport { CipherResponse } from './cipherResponse';\nexport { CollectionResponse } from './collectionResponse';\nexport { DeviceResponse } from './deviceResponse';\nexport { DomainsResponse } from './domainsResponse';\nexport { ErrorResponse } from './errorResponse';\nexport { FolderResponse } from './folderResponse';\nexport { GlobalDomainResponse } from './globalDomainResponse';\nexport { IdentityTokenResponse } from './identityTokenResponse';\nexport { IdentityTwoFactorResponse } from './identityTwoFactorResponse';\nexport { KeysResponse } from './keysResponse';\nexport { ListResponse } from './listResponse';\nexport { ProfileOrganizationResponse } from './profileOrganizationResponse';\nexport { ProfileResponse } from './profileResponse';\nexport { SyncResponse } from './syncResponse';\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class CardApi extends BaseResponse {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.cardholderName = this.getResponseProperty('CardholderName');\n        this.brand = this.getResponseProperty('Brand');\n        this.number = this.getResponseProperty('Number');\n        this.expMonth = this.getResponseProperty('ExpMonth');\n        this.expYear = this.getResponseProperty('ExpYear');\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { FieldType } from '../../enums/fieldType';\n\nexport class FieldApi extends BaseResponse {\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.value = this.getResponseProperty('Value');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class IdentityApi extends BaseResponse {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.title = this.getResponseProperty('Title');\n        this.firstName = this.getResponseProperty('FirstName');\n        this.middleName = this.getResponseProperty('MiddleName');\n        this.lastName = this.getResponseProperty('LastName');\n        this.address1 = this.getResponseProperty('Address1');\n        this.address2 = this.getResponseProperty('Address2');\n        this.address3 = this.getResponseProperty('Address3');\n        this.city = this.getResponseProperty('City');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.country = this.getResponseProperty('Country');\n        this.company = this.getResponseProperty('Company');\n        this.email = this.getResponseProperty('Email');\n        this.phone = this.getResponseProperty('Phone');\n        this.ssn = this.getResponseProperty('SSN');\n        this.username = this.getResponseProperty('Username');\n        this.passportNumber = this.getResponseProperty('PassportNumber');\n        this.licenseNumber = this.getResponseProperty('LicenseNumber');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { LoginUriApi } from './loginUriApi';\n\nexport class LoginApi extends BaseResponse {\n    uris: LoginUriApi[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n    autofillOnPageLoad: boolean;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.username = this.getResponseProperty('Username');\n        this.password = this.getResponseProperty('Password');\n        this.passwordRevisionDate = this.getResponseProperty('PasswordRevisionDate');\n        this.totp = this.getResponseProperty('Totp');\n        this.autofillOnPageLoad = this.getResponseProperty('AutofillOnPageLoad');\n\n        const uris = this.getResponseProperty('Uris');\n        if (uris != null) {\n            this.uris = uris.map((u: any) => new LoginUriApi(u));\n        }\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { UriMatchType } from '../../enums/uriMatchType';\n\nexport class LoginUriApi extends BaseResponse {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.uri = this.getResponseProperty('Uri');\n        const match = this.getResponseProperty('Match');\n        this.match = match != null ? match : null;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { SecureNoteType } from '../../enums/secureNoteType';\n\nexport class SecureNoteApi extends BaseResponse {\n    type: SecureNoteType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class GlobalDomainResponse extends BaseResponse {\n    type: number;\n    domains: string[];\n    excluded: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.domains = this.getResponseProperty('Domains');\n        this.excluded = this.getResponseProperty('Excluded');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class IdentityTokenResponse extends BaseResponse {\n    accessToken: string;\n    expiresIn: number;\n    refreshToken: string;\n    tokenType: string;\n\n    resetMasterPassword: boolean;\n    privateKey: string;\n    key: string;\n    twoFactorToken: string;\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n        this.accessToken = response.access_token;\n        this.expiresIn = response.expires_in;\n        this.refreshToken = response.refresh_token;\n        this.tokenType = response.token_type;\n\n        this.resetMasterPassword = this.getResponseProperty('ResetMasterPassword');\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.key = this.getResponseProperty('Key');\n        this.twoFactorToken = this.getResponseProperty('TwoFactorToken');\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n    twoFactorProviders: TwoFactorProviderType[];\n    twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string; }>();\n    captchaToken: string;\n\n    constructor(response: any) {\n        super(response);\n        this.captchaToken = this.getResponseProperty('CaptchaBypassToken');\n        this.twoFactorProviders = this.getResponseProperty('TwoFactorProviders');\n        const twoFactorProviders2 = this.getResponseProperty('TwoFactorProviders2');\n        if (twoFactorProviders2 != null) {\n            for (const prop in twoFactorProviders2) {\n                if (twoFactorProviders2.hasOwnProperty(prop)) {\n                    this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n                }\n            }\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class KeysResponse extends BaseResponse {\n    privateKey: string;\n    publicKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.publicKey = this.getResponseProperty('PublicKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class ListResponse<T> extends BaseResponse {\n    data: T[];\n    continuationToken: string;\n\n    constructor(response: any, t: new (dataResponse: any) => T) {\n        super(response);\n        const data = this.getResponseProperty('Data');\n        this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n        this.continuationToken = this.getResponseProperty('ContinuationToken');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n    id: string;\n    name: string;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useBusinessPortal: boolean;\n    useSso: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    key: string;\n    hasPublicAndPrivateKeys: boolean;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    providerId: string;\n    providerName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.usePolicies = this.getResponseProperty('UsePolicies');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.useBusinessPortal = this.getResponseProperty('UseBusinessPortal');\n        this.useSso = this.getResponseProperty('UseSso');\n        this.useResetPassword = this.getResponseProperty('UseResetPassword');\n        this.selfHost = this.getResponseProperty('SelfHost');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.key = this.getResponseProperty('Key');\n        this.hasPublicAndPrivateKeys = this.getResponseProperty('HasPublicAndPrivateKeys');\n        this.status = this.getResponseProperty('Status');\n        this.type = this.getResponseProperty('Type');\n        this.enabled = this.getResponseProperty('Enabled');\n        this.ssoBound = this.getResponseProperty('SsoBound');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.permissions = new PermissionsApi(this.getResponseProperty('permissions'));\n        this.resetPasswordEnrolled = this.getResponseProperty('ResetPasswordEnrolled');\n        this.userId = this.getResponseProperty('UserId');\n        this.providerId = this.getResponseProperty('ProviderId');\n        this.providerName = this.getResponseProperty('ProviderName');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\nimport { CollectionDetailsResponse } from './collectionResponse';\nimport { DomainsResponse } from './domainsResponse';\nimport { FolderResponse } from './folderResponse';\nimport { PolicyResponse } from './policyResponse';\nimport { ProfileResponse } from './profileResponse';\nimport { SendResponse } from './sendResponse';\n\nexport class SyncResponse extends BaseResponse {\n    profile?: ProfileResponse;\n    folders: FolderResponse[] = [];\n    collections: CollectionDetailsResponse[] = [];\n    ciphers: CipherResponse[] = [];\n    domains?: DomainsResponse;\n    policies?: PolicyResponse[] = [];\n    sends: SendResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n\n        const profile = this.getResponseProperty('Profile');\n        if (profile != null) {\n            this.profile = new ProfileResponse(profile);\n        }\n\n        const folders = this.getResponseProperty('Folders');\n        if (folders != null) {\n            this.folders = folders.map((f: any) => new FolderResponse(f));\n        }\n\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n        }\n\n        const ciphers = this.getResponseProperty('Ciphers');\n        if (ciphers != null) {\n            this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n        }\n\n        const domains = this.getResponseProperty('Domains');\n        if (domains != null) {\n            this.domains = new DomainsResponse(domains);\n        }\n\n        const policies = this.getResponseProperty('Policies');\n        if (policies != null) {\n            this.policies = policies.map((p: any) => new PolicyResponse(p));\n        }\n\n        const sends = this.getResponseProperty('Sends');\n        if (sends != null) {\n            this.sends = sends.map((s: any) => new SendResponse(s));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class PolicyResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.type = this.getResponseProperty('Type');\n        this.data = this.getResponseProperty('Data');\n        this.enabled = this.getResponseProperty('Enabled');\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Toast, ToasterService } from 'angular2-toaster';\n\nimport { BaseAcceptComponent } from 'src/app/common/base.accept.component';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { ProviderUserAcceptRequest } from 'jslib-common/models/request/provider/providerUserAcceptRequest';\n\n@Component({\n    selector: 'app-accept-provider',\n    templateUrl: 'accept-provider.component.html',\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n    providerName: string;\n\n    failedMessage = 'providerInviteAcceptFailed';\n\n    requiredParameters = ['providerId', 'providerUserId', 'token'];\n\n    constructor(router: Router, toasterService: ToasterService, i18nService: I18nService, route: ActivatedRoute,\n        userService: UserService, stateService: StateService, private apiService: ApiService) {\n        super(router, toasterService, i18nService, route, userService, stateService);\n    }\n\n    async authedHandler(qParams: any) {\n        const request = new ProviderUserAcceptRequest();\n        request.token = qParams.token;\n\n        await this.apiService.postProviderUserAccept(qParams.providerId, qParams.providerUserId, request);\n        const toast: Toast = {\n            type: 'success',\n            title: this.i18nService.t('inviteAccepted'),\n            body: this.i18nService.t('providerInviteAcceptedDesc'),\n            timeout: 10000,\n        };\n        this.toasterService.popAsync(toast);\n        this.router.navigate(['/vault']);\n    }\n\n    async unauthedHandler(qParams: any) {\n        this.providerName = qParams.providerName;\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img src=\"/src/images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'joinProvider' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p class=\"text-center\"> {{providerName}} <strong class=\"d-block mt-2\">{{email}}</strong> </p> <p>{{'joinProviderDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block ml-2 mt-0\"> {{'createAccount' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\n\nimport { EventService } from 'src/app/services/event.service';\n\nimport { BaseEventsComponent } from 'src/app/common/base.events.component';\n\n@Component({\n    selector: 'provider-events',\n    templateUrl: 'events.component.html',\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n    exportFileName: string = 'provider-events';\n    providerId: string;\n\n    private providerUsersUserIdMap = new Map<string, any>();\n    private providerUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute, eventService: EventService,\n        i18nService: I18nService, toasterService: ToasterService, private userService: UserService,\n        exportService: ExportService, platformUtilsService: PlatformUtilsService, private router: Router,\n        logService: LogService, private userNamePipe: UserNamePipe) {\n        super(eventService, i18nService, toasterService, exportService, platformUtilsService, logService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            const provider = await this.userService.getProvider(this.providerId);\n            if (provider == null || !provider.useEvents) {\n                this.router.navigate(['/providers', this.providerId]);\n                return;\n            }\n            await this.load();\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getProviderUsers(this.providerId);\n        response.data.forEach(u => {\n            const name = this.userNamePipe.transform(u);\n            this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n            this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n        });\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n        return this.apiService.getEventsProvider(this.providerId, startDate, endDate, continuationToken);\n    }\n\n    protected getUserName(r: EventResponse, userId: string) {\n        return userId != null && this.providerUsersUserIdMap.has(userId) ? this.providerUsersUserIdMap.get(userId) : null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'eventLogs' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"form-inline\"> <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\" placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> <span class=\"mx-2\">-</span> <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\" placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> </div> <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshForm.loading\"> <i class=\"fa fa-refresh fa-fw\" aria-hidden=\"true\" [ngClass]=\"{'fa-spin': loaded && refreshForm.loading}\"></i> {{'refresh' | i18n}} </button> </form> <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\" [ngClass]=\"{loading:exportForm.loading}\" (click)=\"exportEvents()\" [disabled]=\"loaded && exportForm.loading || dirtyDates\"> <i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\"></i> <span>{{'export' | i18n}}</span> </button> </form> </div> </div> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p *ngIf=\"!events || !events.length\">{{'noEventsInList' | i18n}}</p> <table class=\"table table-hover\" *ngIf=\"events && events.length\"> <thead> <tr> <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th> <th class=\"border-top-0\" width=\"40\"> <span class=\"sr-only\">{{'device' | i18n}}</span> </th> <th class=\"border-top-0\" width=\"150\">{{'user' | i18n}}</th> <th class=\"border-top-0\">{{'event' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let e of events\"> <td>{{e.date | date:'medium'}}</td> <td> <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span> </td> <td> <span title=\"{{e.userEmail}}\">{{e.userName}}</span> </td> <td [innerHTML]=\"e.message\"></td> </tr> </tbody> </table> <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\" (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'loadMore' | i18n}}</span> </button> </ng-container> ","import { Directive } from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { EventView } from 'jslib-common/models/view/eventView';\n\nimport { ListResponse } from 'jslib-common/models/response';\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\n\nimport { LogService } from 'jslib-common/abstractions';\nimport { EventService } from 'src/app/services/event.service';\n\n@Directive()\nexport abstract class BaseEventsComponent {\n    loading = true;\n    loaded = false;\n    events: EventView[];\n    start: string;\n    end: string;\n    dirtyDates: boolean = true;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    exportPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    abstract readonly exportFileName: string;\n\n    constructor(protected eventService: EventService, protected i18nService: I18nService,\n        protected toasterService: ToasterService, protected exportService: ExportService,\n        protected platformUtilsService: PlatformUtilsService, protected logService: LogService) {\n        const defaultDates = this.eventService.getDefaultDateFilters();\n        this.start = defaultDates[0];\n        this.end = defaultDates[1];\n    }\n\n    async exportEvents() {\n        if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n            return;\n        }\n\n        this.loading = true;\n\n        const dates = this.parseDates();\n        if (dates == null) {\n            return;\n        }\n\n        try {\n            this.exportPromise = this.export(dates[0], dates[1]);\n\n            await this.exportPromise;\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n\n        this.exportPromise = null;\n        this.loading = false;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.appApiPromiseUnfulfilled()) {\n            return;\n        }\n\n        const dates = this.parseDates();\n        if (dates == null) {\n            return;\n        }\n\n        this.loading = true;\n        let events: EventView[] = [];\n        try {\n            const promise = this.loadAndParseEvents(dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            const result = await promise;\n            this.continuationToken = result.continuationToken;\n            events = result.events;\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.dirtyDates = false;\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n\n    protected abstract requestEvents(startDate: string, endDate: string, continuationToken: string): Promise<ListResponse<EventResponse>>;\n    protected abstract getUserName(r: EventResponse, userId: string): { name: string, email: string };\n\n    protected async loadAndParseEvents(startDate: string, endDate: string, continuationToken: string) {\n        const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n        const events = await Promise.all(response.data.map(async r => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = await this.eventService.getEventInfo(r);\n            const user = this.getUserName(r, userId);\n            return new EventView({\n                message: eventInfo.message,\n                humanReadableMessage: eventInfo.humanReadableMessage,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.i18nService.t('unknown'),\n                userEmail: user != null ? user.email : '',\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            });\n        }));\n        return { continuationToken: response.continuationToken, events: events };\n    }\n\n    protected parseDates() {\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return null;\n        }\n        return dates;\n    }\n\n    protected appApiPromiseUnfulfilled() {\n        return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n    }\n\n    private async export(start: string, end: string) {\n        let continuationToken = this.continuationToken;\n        let events = [].concat(this.events);\n\n        while (continuationToken != null) {\n            const result = await this.loadAndParseEvents(start, end, continuationToken);\n            continuationToken = result.continuationToken;\n            events = events.concat(result.events);\n        }\n\n        const data = await this.exportService.getEventExport(events);\n        const fileName = this.exportService.getFileName(this.exportFileName, 'csv');\n        this.platformUtilsService.saveFile(window, data, { type: 'text/plain' }, fileName);\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Provider } from 'jslib-common/models/domain/provider';\n\n@Component({\n    selector: 'provider-manage',\n    templateUrl: 'manage.component.html',\n})\nexport class ManageComponent implements OnInit {\n    provider: Provider;\n    accessEvents = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.provider = await this.userService.getProvider(params.providerId);\n            this.accessEvents = this.provider.useEvents;\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\" *ngIf=\"provider\"> <div class=\"card-header\">{{'manage' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"people\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"provider.canManageUsers\"> {{'people' | i18n}} </a> <a routerLink=\"events\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"provider.canAccessEventLogs && accessEvents\"> {{'eventLogs' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\n\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { ProviderUserUserDetailsResponse } from 'jslib-common/models/response/provider/providerUserResponse';\n\nimport { ProviderUserBulkRequest } from 'jslib-common/models/request/provider/providerUserBulkRequest';\nimport { ProviderUserConfirmRequest } from 'jslib-common/models/request/provider/providerUserConfirmRequest';\nimport { ProviderUserBulkResponse } from 'jslib-common/models/response/provider/providerUserBulkResponse';\n\nimport { BasePeopleComponent } from 'src/app/common/base.people.component';\nimport { ModalComponent } from 'src/app/modal.component';\nimport { BulkStatusComponent } from 'src/app/organizations/manage/bulk/bulk-status.component';\nimport { EntityEventsComponent } from 'src/app/organizations/manage/entity-events.component';\nimport { BulkConfirmComponent } from './bulk/bulk-confirm.component';\nimport { BulkRemoveComponent } from './bulk/bulk-remove.component';\nimport { UserAddEditComponent } from './user-add-edit.component';\n\n@Component({\n    selector: 'provider-people',\n    templateUrl: 'people.component.html',\n})\nexport class PeopleComponent extends BasePeopleComponent<ProviderUserUserDetailsResponse> implements OnInit {\n\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('groupsTemplate', { read: ViewContainerRef, static: true }) groupsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n    @ViewChild('bulkStatusTemplate', { read: ViewContainerRef, static: true }) bulkStatusModalRef: ViewContainerRef;\n    @ViewChild('bulkConfirmTemplate', { read: ViewContainerRef, static: true }) bulkConfirmModalRef: ViewContainerRef;\n    @ViewChild('bulkRemoveTemplate', { read: ViewContainerRef, static: true }) bulkRemoveModalRef: ViewContainerRef;\n\n    userType = ProviderUserType;\n    userStatusType = ProviderUserStatusType;\n    providerId: string;\n    accessEvents = false;\n\n    constructor(apiService: ApiService, private route: ActivatedRoute,\n        i18nService: I18nService, componentFactoryResolver: ComponentFactoryResolver,\n        platformUtilsService: PlatformUtilsService, toasterService: ToasterService,\n        cryptoService: CryptoService, private userService: UserService, private router: Router,\n        storageService: StorageService, searchService: SearchService, validationService: ValidationService,\n        logService: LogService, searchPipe: SearchPipe, userNamePipe: UserNamePipe) {\n        super(apiService, searchService, i18nService, platformUtilsService, toasterService, cryptoService,\n            storageService, validationService, componentFactoryResolver, logService, searchPipe, userNamePipe);\n    }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            const provider = await this.userService.getProvider(this.providerId);\n\n            if (!provider.canManageUsers) {\n                this.router.navigate(['../'], { relativeTo: this.route });\n                return;\n            }\n\n            this.accessEvents = provider.useEvents;\n\n            await this.load();\n\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (qParams.viewEvents != null) {\n                    const user = this.users.filter(u => u.id === qParams.viewEvents);\n                    if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n                        this.events(user[0]);\n                    }\n                }\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n        return this.apiService.getProviderUsers(this.providerId);\n    }\n\n    deleteUser(id: string): Promise<any> {\n        return this.apiService.deleteProviderUser(this.providerId, id);\n    }\n\n    reinviteUser(id: string): Promise<any> {\n        return this.apiService.postProviderUserReinvite(this.providerId, id);\n    }\n\n    async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n        const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n        const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n        const request = new ProviderUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n    }\n\n    edit(user: ProviderUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<UserAddEditComponent>(\n            UserAddEditComponent, this.addEditModalRef);\n\n        childComponent.name = this.userNamePipe.transform(user);\n        childComponent.providerId = this.providerId;\n        childComponent.providerUserId = user != null ? user.id : null;\n        childComponent.onSavedUser.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedUser.subscribe(() => {\n            this.modal.close();\n            this.removeUser(user);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async events(user: ProviderUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityEventsComponent>(\n            EntityEventsComponent, this.eventsModalRef);\n\n        childComponent.name = this.userNamePipe.transform(user);\n        childComponent.providerId = this.providerId;\n        childComponent.entityId = user.id;\n        childComponent.showUser = false;\n        childComponent.entity = 'user';\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async bulkRemove() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkRemoveModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show(BulkRemoveComponent, this.bulkRemoveModalRef);\n\n        childComponent.providerId = this.providerId;\n        childComponent.users = this.getCheckedUsers();\n\n        this.modal.onClosed.subscribe(async () => {\n            await this.load();\n            this.modal = null;\n        });\n    }\n\n    async bulkReinvite() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const users = this.getCheckedUsers();\n        const filteredUsers = users.filter(u => u.status === ProviderUserStatusType.Invited);\n\n        if (filteredUsers.length <= 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('noSelectedUsersApplicable'));\n            return;\n        }\n\n        try {\n            const request = new ProviderUserBulkRequest(filteredUsers.map(user => user.id));\n            const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n            this.showBulkStatus(users, filteredUsers, response, this.i18nService.t('bulkReinviteMessage'));\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async bulkConfirm() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkConfirmModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show(BulkConfirmComponent, this.bulkConfirmModalRef);\n\n        childComponent.providerId = this.providerId;\n        childComponent.users = this.getCheckedUsers();\n\n        this.modal.onClosed.subscribe(async () => {\n            await this.load();\n            this.modal = null;\n        });\n    }\n\n    private async showBulkStatus(users: ProviderUserUserDetailsResponse[], filteredUsers: ProviderUserUserDetailsResponse[],\n        request: Promise<ListResponse<ProviderUserBulkResponse>>, successfullMessage: string) {\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkStatusModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkStatusComponent>(\n            BulkStatusComponent, this.bulkStatusModalRef);\n\n        childComponent.loading = true;\n\n        // Workaround to handle closing the modal shortly after it has been opened\n        let close = false;\n        this.modal.onShown.subscribe(() => {\n            if (close) {\n                this.modal.close();\n            }\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        try {\n            const response = await request;\n\n            if (this.modal) {\n                const keyedErrors: any = response.data.filter(r => r.error !== '').reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n                const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n                childComponent.users = users.map(user => {\n                    let message = keyedErrors[user.id] ?? successfullMessage;\n                    if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n                        message = this.i18nService.t('bulkFilteredMessage');\n                    }\n\n                    return {\n                        user: user,\n                        error: keyedErrors.hasOwnProperty(user.id),\n                        message: message,\n                    };\n                });\n                childComponent.loading = false;\n            }\n        } catch {\n            close = true;\n            if (this.modal) {\n                this.modal.close();\n            }\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'people' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"btn-group btn-group-sm\" role=\"group\"> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == null}\" (click)=\"filter(null)\"> {{'all' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{allCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Invited}\" (click)=\"filter(userStatusType.Invited)\"> {{'invited' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{invitedCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Accepted}\" (click)=\"filter(userStatusType.Accepted)\"> {{'accepted' | i18n}} <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{acceptedCount}}</span> </button> </div> <div class=\"ml-3\"> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <div class=\"dropdown ml-3\" appListDropdown> <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\"> <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'reinviteSelected' | i18n}} </button> <button class=\"dropdown-item text-success\" appStopClick (click)=\"bulkConfirm()\" *ngIf=\"showBulkConfirmUsers\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirmSelected' | i18n}} </button> <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </button> <div class=\"dropdown-divider\"></div> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\"> <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i> {{'selectAll' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\"> <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i> {{'unselectAll' | i18n}} </button> </div> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'inviteUser' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedUsers : users | search:searchText:'name':'email':'id') as searchedUsers\"> <p *ngIf=\"!searchedUsers.length\">{{'noUsersInList' | i18n}}</p> <ng-container *ngIf=\"searchedUsers.length\"> <app-callout type=\"info\" title=\"{{'confirmUsers' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"showConfirmUsers\"> {{'providerUsersNeedConfirmed' | i18n}} </app-callout> <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let u of searchedUsers\"> <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp> </td> <td width=\"30\"> <app-avatar [data]=\"u | userName\" [email]=\"u.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" appStopClick (click)=\"edit(u)\">{{u.email}}</a> <span class=\"badge badge-secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{'accepted' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small> </td> <td> <ng-container *ngIf=\"u.twoFactorEnabled\"> <i class=\"fa fa-lock\" title=\"{{'userUsingTwoStep' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'userUsingTwoStep' | i18n}}</span> </ng-container> </td> <td> <span *ngIf=\"u.type === userType.ProviderAdmin\">{{'providerAdmin' | i18n}}</span> <span *ngIf=\"u.type === userType.ServiceUser\">{{'serviceUser' | i18n}}</span> <span *ngIf=\"u.type === userType.Custom\">{{'custom' | i18n}}</span> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(u)\" *ngIf=\"u.status === userStatusType.Invited\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'resendInvitation' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(u)\" *ngIf=\"u.status === userStatusType.Accepted\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirm' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"groups(u)\" *ngIf=\"accessGroups\"> <i class=\"fa fa-fw fa-sitemap\" aria-hidden=\"true\"></i> {{'groups' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"events(u)\" *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"> <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i> {{'eventLogs' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> <ng-template #addEdit></ng-template> <ng-template #eventsTemplate></ng-template> <ng-template #confirmTemplate></ng-template> <ng-template #bulkStatusTemplate></ng-template> <ng-template #bulkConfirmTemplate></ng-template> <ng-template #bulkRemoveTemplate></ng-template> ","import {\n    ComponentFactoryResolver,\n    Directive,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\n\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\nimport { ProviderUserUserDetailsResponse } from 'jslib-common/models/response/provider/providerUserResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { ModalComponent } from '../modal.component';\nimport { UserConfirmComponent } from '../organizations/manage/user-confirm.component';\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse>  {\n\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n\n    get allCount() {\n        return this.allUsers != null ? this.allUsers.length : 0;\n    }\n\n    get invitedCount() {\n        return this.statusMap.has(this.userStatusType.Invited) ?\n            this.statusMap.get(this.userStatusType.Invited).length : 0;\n    }\n\n    get acceptedCount() {\n        return this.statusMap.has(this.userStatusType.Accepted) ?\n            this.statusMap.get(this.userStatusType.Accepted).length : 0;\n    }\n\n    get confirmedCount() {\n        return this.statusMap.has(this.userStatusType.Confirmed) ?\n            this.statusMap.get(this.userStatusType.Confirmed).length : 0;\n    }\n\n    get showConfirmUsers(): boolean {\n        return this.allUsers != null && this.statusMap != null && this.allUsers.length > 1 &&\n            this.confirmedCount > 0 && this.confirmedCount < 3 && this.acceptedCount > 0;\n    }\n\n    get showBulkConfirmUsers(): boolean {\n        return this.acceptedCount > 0;\n    }\n\n    abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n    abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n    loading = true;\n    statusMap = new Map<StatusType, UserType[]>();\n    status: StatusType;\n    users: UserType[] = [];\n    pagedUsers: UserType[] = [];\n    searchText: string;\n    actionPromise: Promise<any>;\n\n    protected allUsers: UserType[] = [];\n\n    protected didScroll = false;\n    protected pageSize = 100;\n    protected modal: ModalComponent = null;\n\n    private pagedUsersCount = 0;\n\n    constructor(protected apiService: ApiService, private searchService: SearchService,\n        protected i18nService: I18nService, private platformUtilsService: PlatformUtilsService,\n        protected toasterService: ToasterService, protected cryptoService: CryptoService,\n        private storageService: StorageService, protected validationService: ValidationService,\n        protected componentFactoryResolver: ComponentFactoryResolver, private logService: LogService,\n        private searchPipe: SearchPipe, protected userNamePipe: UserNamePipe) { }\n\n    abstract edit(user: UserType): void;\n    abstract getUsers(): Promise<ListResponse<UserType>>;\n    abstract deleteUser(id: string): Promise<any>;\n    abstract reinviteUser(id: string): Promise<any>;\n    abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<any>;\n\n    async load() {\n        const response = await this.getUsers();\n        this.statusMap.clear();\n        for (const status of Utils.iterateEnum(this.userStatusType)) {\n            this.statusMap.set(status, []);\n        }\n\n        this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n        this.allUsers.sort(Utils.getSortFunction(this.i18nService, 'email'));\n        this.allUsers.forEach(u => {\n            if (!this.statusMap.has(u.status)) {\n                this.statusMap.set(u.status, [u]);\n            } else {\n                this.statusMap.get(u.status).push(u);\n            }\n        });\n        this.filter(this.status);\n        this.loading = false;\n    }\n\n    filter(status: StatusType) {\n        this.status = status;\n        if (this.status != null) {\n            this.users = this.statusMap.get(this.status);\n        } else {\n            this.users = this.allUsers;\n        }\n        // Reset checkbox selecton\n        this.selectAll(false);\n        this.resetPaging();\n    }\n\n    loadMore() {\n        if (!this.users || this.users.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedUsers.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n            pagedSize = this.pagedUsersCount;\n        }\n        if (this.users.length > pagedLength) {\n            this.pagedUsers = this.pagedUsers.concat(this.users.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedUsersCount = this.pagedUsers.length;\n        this.didScroll = this.pagedUsers.length > this.pageSize;\n    }\n\n    checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n        (user as any).checked = select == null ? !(user as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        if (select) {\n            this.selectAll(false);\n        }\n\n        const filteredUsers = this.searchPipe.transform(this.users, this.searchText, 'name', 'email', 'id');\n\n        const selectCount = select && filteredUsers.length > MaxCheckedCount\n            ? MaxCheckedCount\n            : filteredUsers.length;\n        for (let i = 0; i < selectCount; i++) {\n            this.checkUser(filteredUsers[i], select);\n        }\n    }\n\n    async resetPaging() {\n        this.pagedUsers = [];\n        this.loadMore();\n    }\n\n    invite() {\n        this.edit(null);\n    }\n\n    async remove(user: UserType) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.userNamePipe.transform(user),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n\n        if (!confirmed) {\n            return false;\n        }\n\n        this.actionPromise = this.deleteUser(user.id);\n        try {\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.userNamePipe.transform(user)));\n            this.removeUser(user);\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async reinvite(user: UserType) {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        this.actionPromise = this.reinviteUser(user.id);\n        try {\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', this.userNamePipe.transform(user)));\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async confirm(user: UserType) {\n        function updateUser(self: BasePeopleComponent<UserType>) {\n            user.status = self.userStatusType.Confirmed;\n            const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n            if (mapIndex > -1) {\n                self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n                self.statusMap.get(self.userStatusType.Confirmed).push(user);\n            }\n        }\n\n        const confirmUser = async (publicKey: Uint8Array) => {\n            try {\n                this.actionPromise = this.confirmUser(user, publicKey);\n                await this.actionPromise;\n                updateUser(this);\n                this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.userNamePipe.transform(user)));\n            } catch (e) {\n                this.validationService.showError(e);\n                throw e;\n            } finally {\n                this.actionPromise = null;\n            }\n        };\n\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        try {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n            const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n            const autoConfirm = await this.storageService.get<boolean>(ConstantsService.autoConfirmFingerprints);\n            if (autoConfirm == null || !autoConfirm) {\n                if (this.modal != null) {\n                    this.modal.close();\n                }\n\n                const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n                this.modal = this.confirmModalRef.createComponent(factory).instance;\n                const childComponent = this.modal.show<UserConfirmComponent>(\n                    UserConfirmComponent, this.confirmModalRef);\n\n                childComponent.name = this.userNamePipe.transform(user);\n                childComponent.userId = user != null ? user.userId : null;\n                childComponent.publicKey = publicKey;\n                childComponent.onConfirmedUser.subscribe(async () => {\n                    try {\n                        await confirmUser(publicKey);\n                        this.modal.close();\n                    } catch (e) {\n                        this.logService.error(`Handled exception: ${e}`);\n                    }\n                });\n\n                this.modal.onClosed.subscribe(() => {\n                    this.modal = null;\n                });\n                return;\n            }\n\n            try {\n                const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n                this.logService.info(`User's fingerprint: ${fingerprint.join('-')}`);\n            } catch { }\n            await confirmUser(publicKey);\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.users && this.users.length > this.pageSize;\n    }\n\n    protected getCheckedUsers() {\n        return this.users.filter(u => (u as any).checked);\n    }\n\n    protected removeUser(user: UserType) {\n        let index = this.users.indexOf(user);\n        if (index > -1) {\n            this.users.splice(index, 1);\n            this.resetPaging();\n        }\n        if (this.statusMap.has(user.status)) {\n            index = this.statusMap.get(user.status).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(user.status).splice(index, 1);\n            }\n        }\n    }\n\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\n@Component({\n    selector: 'app-user-confirm',\n    templateUrl: 'user-confirm.component.html',\n})\nexport class UserConfirmComponent implements OnInit {\n    @Input() name: string;\n    @Input() userId: string;\n    @Input() publicKey: Uint8Array;\n    @Output() onConfirmedUser = new EventEmitter();\n\n    dontAskAgain = false;\n    loading = true;\n    fingerprint: string;\n\n    constructor(private cryptoService: CryptoService, private storageService: StorageService) { }\n\n    async ngOnInit() {\n        try {\n            if (this.publicKey != null) {\n                const fingerprint = await this.cryptoService.getFingerprint(this.userId, this.publicKey.buffer);\n                if (fingerprint != null) {\n                    this.fingerprint = fingerprint.join('-');\n                }\n            }\n        } catch { }\n        this.loading = false;\n    }\n\n    async submit() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.dontAskAgain) {\n            await this.storageService.save(ConstantsService.autoConfirmFingerprints, true);\n        }\n\n        this.onConfirmedUser.emit();\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"confirmUserTitle\"> {{'confirmUser' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <p><code>{{fingerprint}}</code></p> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"dontAskAgain\" name=\"DontAskAgain\" [(ngModel)]=\"dontAskAgain\"> <label class=\"form-check-label\" for=\"dontAskAgain\"> {{'dontAskFingerprintAgain' | i18n}} </label> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport { ProviderUserBulkConfirmRequest } from 'jslib-common/models/request/provider/providerUserBulkConfirmRequest';\nimport { ProviderUserBulkRequest } from 'jslib-common/models/request/provider/providerUserBulkRequest';\n\nimport { ProviderUserStatusType } from 'jslib-common/enums/providerUserStatusType';\n\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from 'src/app/organizations/manage/bulk/bulk-confirm.component';\nimport { BulkUserDetails } from 'src/app/organizations/manage/bulk/bulk-status.component';\n\n@Component({\n    templateUrl: '/src/app/organizations/manage/bulk/bulk-confirm.component.html',\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n\n    @Input() providerId: string;\n\n    protected isAccepted(user: BulkUserDetails) {\n        return user.status === ProviderUserStatusType.Accepted;\n    }\n\n    protected async getPublicKeys() {\n        const request = new ProviderUserBulkRequest(this.filteredUsers.map(user => user.id));\n        return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n    }\n\n    protected getCryptoKey() {\n        return this.cryptoService.getProviderKey(this.providerId);\n    }\n\n    protected async postConfirmRequest(userIdsWithKeys: any[]) {\n        const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n        return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n    }\n}\n","import {\n    Component,\n    Input,\n} from '@angular/core';\n\nimport { ProviderUserBulkRequest } from 'jslib-common/models/request/provider/providerUserBulkRequest';\n\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from 'src/app/organizations/manage/bulk/bulk-remove.component';\n\n@Component({\n    templateUrl: '/src/app/organizations/manage/bulk/bulk-remove.component.html',\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n\n    @Input() providerId: string;\n\n    async deleteUsers() {\n        const request = new ProviderUserBulkRequest(this.users.map(user => user.id));\n        return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ProviderUserInviteRequest } from 'jslib-common/models/request/provider/providerUserInviteRequest';\n\nimport { PermissionsApi } from 'jslib-common/models/api/permissionsApi';\n\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\nimport { ProviderUserUpdateRequest } from 'jslib-common/models/request/provider/providerUserUpdateRequest';\n\n@Component({\n    selector: 'provider-user-add-edit',\n    templateUrl: 'user-add-edit.component.html',\n})\nexport class UserAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() providerUserId: string;\n    @Input() providerId: string;\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    emails: string;\n    type: ProviderUserType = ProviderUserType.ServiceUser;\n    permissions = new PermissionsApi();\n    showCustom = false;\n    access: 'all' | 'selected' = 'selected';\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    userType = ProviderUserType;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.providerUserId != null;\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editUser');\n            try {\n                const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n                this.type = user.type;\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('inviteUser');\n        }\n\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            if (this.editMode) {\n                const request = new ProviderUserUpdateRequest();\n                request.type = this.type;\n                this.formPromise = this.apiService.putProviderUser(this.providerId, this.providerUserId, request);\n            } else {\n                const request = new ProviderUserInviteRequest();\n                request.emails = this.emails.trim().split(/\\s*,\\s*/);\n                request.type = this.type;\n                this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.name));\n            this.onDeletedUser.emit();\n        } catch { }\n    }\n\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> {{title}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <ng-container *ngIf=\"!editMode\"> <p>{{'providerInviteUserDesc' | i18n}}</p> <div class=\"form-group mb-4\"> <label for=\"emails\">{{'email' | i18n}}</label> <input id=\"emails\" class=\"form-control\" type=\"text\" name=\"Emails\" [(ngModel)]=\"emails\" required appAutoFocus> <small class=\"text-muted\">{{'inviteMultipleEmailDesc' | i18n : '20'}}</small> </div> </ng-container> <h3> {{'userType' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#user-types\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </h3> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeServiceUser\" [value]=\"userType.ServiceUser\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeServiceUser\"> {{'serviceUser' | i18n}} <small>{{'serviceUserDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeProviderAdmin\" [value]=\"userType.ProviderAdmin\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeProviderAdmin\"> {{'providerAdmin' | i18n}} <small>{{'providerAdminDesc' | i18n}}</small> </label> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'provider-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent {\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            const provider = await this.userService.getProvider(params.providerId);\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\"> <div class=\"card-header\">{{'settings' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'myProvider' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { BaseAcceptComponent } from 'src/app/common/base.accept.component';\n\n@Component({\n    selector: 'app-setup-provider',\n    templateUrl: 'setup-provider.component.html',\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n\n    failedShortMessage = 'inviteAcceptFailedShort';\n    failedMessage = 'inviteAcceptFailed';\n\n    requiredParameters = ['providerId', 'email', 'token'];\n\n    async authedHandler(qParams: any) {\n        this.router.navigate(['/providers/setup'], {queryParams: qParams});\n    }\n\n    // tslint:disable-next-line\n    async unauthedHandler(qParams: any) {}\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img src=\"/src/images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'setupProvider' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p>{{'setupProviderLoginDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { ProviderSetupRequest } from 'jslib-common/models/request/provider/providerSetupRequest';\n\n@Component({\n    selector: 'provider-setup',\n    templateUrl: 'setup.component.html',\n})\nexport class SetupComponent implements OnInit {\n    loading = true;\n    authed = false;\n    email: string;\n    formPromise: Promise<any>;\n\n    providerId: string;\n    token: string;\n    name: string;\n    billingEmail: string;\n\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private cryptoService: CryptoService, private apiService: ApiService,\n        private syncService: SyncService, private validationService: ValidationService) { }\n\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        let fired = false;\n        this.route.queryParams.subscribe(async qParams => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n            if (error) {\n                const toast: Toast = {\n                    type: 'error',\n                    title: null,\n                    body: this.i18nService.t('emergencyInviteAcceptFailed'),\n                    timeout: 10000,\n                };\n                this.toasterService.popAsync(toast);\n                this.router.navigate(['/']);\n            } else {\n                this.providerId = qParams.providerId;\n                this.token = qParams.token;\n            }\n        });\n    }\n\n    async submit() {\n        this.formPromise = this.doSubmit();\n        await this.formPromise;\n        this.formPromise = null;\n    }\n\n    async doSubmit() {\n        try {\n            const shareKey = await this.cryptoService.makeShareKey();\n            const key = shareKey[0].encryptedString;\n\n            const request = new ProviderSetupRequest();\n            request.name = this.name;\n            request.billingEmail = this.billingEmail;\n            request.token = this.token;\n            request.key = key;\n\n            const provider = await this.apiService.postProviderSetup(this.providerId, request);\n            this.toasterService.popAsync('success', null, this.i18nService.t('providerSetup'));\n            await this.syncService.fullSync(true);\n\n            this.router.navigate(['/providers', provider.id]);\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n    }\n}\n","<app-navbar></app-navbar> <div class=\"container page-content\"> <div class=\"page-header\"> <h1>{{'setupProvider' | i18n}}</h1> </div> <p>{{'setupProviderDesc' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\"> <h2 class=\"mt-5\">{{'generalInformation' | i18n}}</h2> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"name\">{{'providerName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required> </div> <div class=\"form-group col-6\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"billingEmail\" required> </div> </div> <div class=\"mt-4\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\"> {{'cancel' | i18n}} </button> </div> </form> </div> <app-footer></app-footer> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { ProviderUpdateRequest } from 'jslib-common/models/request/provider/providerUpdateRequest';\n\nimport { ProviderResponse } from 'jslib-common/models/response/provider/providerResponse';\n\n@Component({\n    selector: 'provider-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    selfHosted = false;\n    loading = true;\n    provider: ProviderResponse;\n    formPromise: Promise<any>;\n    taxFormPromise: Promise<any>;\n\n    private providerId: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private route: ActivatedRoute,\n        private syncService: SyncService, private platformUtilsService: PlatformUtilsService,\n        private logService: LogService) { }\n\n    async ngOnInit() {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n        this.route.parent.parent.params.subscribe(async params => {\n            this.providerId = params.providerId;\n            try {\n                this.provider = await this.apiService.getProvider(this.providerId);\n            } catch (e) {\n                this.logService.error(`Handled exception: ${e}`);\n            }\n        });\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            const request = new ProviderUpdateRequest();\n            request.name = this.provider.name;\n            request.businessName = this.provider.businessName;\n            request.billingEmail = this.provider.billingEmail;\n\n            this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('providerUpdated'));\n        } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n        }\n    }\n}\n","<div class=\"page-header\"> <h1>{{'myProvider' | i18n}}</h1> </div> <div *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"provider && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"name\">{{'providerName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"provider.name\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"provider.billingEmail\" [disabled]=\"selfHosted\"> </div> </div> <div class=\"col-6\"> <app-avatar data=\"{{provider.name}}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport {\n    DatePipe,\n    registerLocaleData,\n} from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ToasterModule } from 'angular2-toaster';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { AppComponent } from './app.component';\nimport { ModalComponent } from './modal.component';\n\nimport { AvatarComponent } from './components/avatar.component';\nimport { PasswordStrengthComponent } from './components/password-strength.component';\n\nimport { FooterComponent } from './layouts/footer.component';\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { NavbarComponent } from './layouts/navbar.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptEmergencyComponent } from './accounts/accept-emergency.component';\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { SetPasswordComponent } from './accounts/set-password.component';\nimport { SsoComponent } from './accounts/sso.component';\nimport { TwoFactorOptionsComponent } from './accounts/two-factor-options.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { UpdateTempPasswordComponent } from './accounts/update-temp-password.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from './organizations/manage/bulk/bulk-confirm.component';\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from './organizations/manage/bulk/bulk-remove.component';\nimport { BulkStatusComponent as OrgBulkStatusComponent } from './organizations/manage/bulk/bulk-status.component';\nimport {\n    CollectionAddEditComponent as OrgCollectionAddEditComponent,\n} from './organizations/manage/collection-add-edit.component';\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EntityEventsComponent as OrgEntityEventsComponent } from './organizations/manage/entity-events.component';\nimport { EntityUsersComponent as OrgEntityUsersComponent } from './organizations/manage/entity-users.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from './organizations/manage/group-add-edit.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\nimport { PolicyEditComponent as OrgPolicyEditComponent } from './organizations/manage/policy-edit.component';\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from './organizations/manage/reset-password.component';\nimport { UserAddEditComponent as OrgUserAddEditComponent } from './organizations/manage/user-add-edit.component';\nimport { UserConfirmComponent as OrgUserConfirmComponent } from './organizations/manage/user-confirm.component';\nimport { UserGroupsComponent as OrgUserGroupsComponent } from './organizations/manage/user-groups.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { AdjustSeatsComponent } from './organizations/settings/adjust-seats.component';\nimport { ChangePlanComponent } from './organizations/settings/change-plan.component';\nimport { DeleteOrganizationComponent } from './organizations/settings/delete-organization.component';\nimport { DownloadLicenseComponent } from './organizations/settings/download-license.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { SettingsComponent as OrgSettingComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { AddEditComponent as OrgAddEditComponent } from './organizations/vault/add-edit.component';\nimport { AttachmentsComponent as OrgAttachmentsComponent } from './organizations/vault/attachments.component';\nimport { CiphersComponent as OrgCiphersComponent } from './organizations/vault/ciphers.component';\nimport { CollectionsComponent as OrgCollectionsComponent } from './organizations/vault/collections.component';\nimport { GroupingsComponent as OrgGroupingsComponent } from './organizations/vault/groupings.component';\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccessComponent } from './send/access.component';\nimport { AddEditComponent as SendAddEditComponent } from './send/add-edit.component';\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from './send/efflux-dates.component';\nimport { SendComponent } from './send/send.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { AddCreditComponent } from './settings/add-credit.component';\nimport { AdjustPaymentComponent } from './settings/adjust-payment.component';\nimport { AdjustStorageComponent } from './settings/adjust-storage.component';\nimport { ApiKeyComponent } from './settings/api-key.component';\nimport { ChangeEmailComponent } from './settings/change-email.component';\nimport { ChangeKdfComponent } from './settings/change-kdf.component';\nimport { ChangePasswordComponent } from './settings/change-password.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DeauthorizeSessionsComponent } from './settings/deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './settings/delete-account.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { EmergencyAccessAddEditComponent } from './settings/emergency-access-add-edit.component';\nimport { EmergencyAccessAttachmentsComponent } from './settings/emergency-access-attachments.component';\nimport { EmergencyAccessConfirmComponent } from './settings/emergency-access-confirm.component';\nimport { EmergencyAccessTakeoverComponent } from './settings/emergency-access-takeover.component';\nimport { EmergencyAccessViewComponent } from './settings/emergency-access-view.component';\nimport { EmergencyAccessComponent } from './settings/emergency-access.component';\nimport { EmergencyAddEditComponent } from './settings/emergency-add-edit.component';\nimport { LinkSsoComponent } from './settings/link-sso.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationPlansComponent } from './settings/organization-plans.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PaymentComponent } from './settings/payment.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { ProfileComponent } from './settings/profile.component';\nimport { PurgeVaultComponent } from './settings/purge-vault.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TaxInfoComponent } from './settings/tax-info.component';\nimport { TwoFactorAuthenticatorComponent } from './settings/two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './settings/two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './settings/two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './settings/two-factor-recovery.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { TwoFactorVerifyComponent } from './settings/two-factor-verify.component';\nimport { TwoFactorWebAuthnComponent } from './settings/two-factor-webauthn.component';\nimport { TwoFactorYubiKeyComponent } from './settings/two-factor-yubikey.component';\nimport { UpdateKeyComponent } from './settings/update-key.component';\nimport { UpdateLicenseComponent } from './settings/update-license.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\nimport { VerifyEmailComponent } from './settings/verify-email.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorHistoryComponent } from './tools/password-generator-history.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { AddEditComponent } from './vault/add-edit.component';\nimport { AttachmentsComponent } from './vault/attachments.component';\nimport { BulkActionsComponent } from './vault/bulk-actions.component';\nimport { BulkDeleteComponent } from './vault/bulk-delete.component';\nimport { BulkMoveComponent } from './vault/bulk-move.component';\nimport { BulkRestoreComponent } from './vault/bulk-restore.component';\nimport { BulkShareComponent } from './vault/bulk-share.component';\nimport { CiphersComponent } from './vault/ciphers.component';\nimport { CollectionsComponent } from './vault/collections.component';\nimport { FolderAddEditComponent } from './vault/folder-add-edit.component';\nimport { GroupingsComponent } from './vault/groupings.component';\nimport { ShareComponent } from './vault/share.component';\nimport { VaultComponent } from './vault/vault.component';\n\nimport { ProvidersComponent } from './providers/providers.component';\n\nimport { CalloutComponent } from 'jslib-angular/components/callout.component';\nimport { IconComponent } from 'jslib-angular/components/icon.component';\n\nimport { A11yTitleDirective } from 'jslib-angular/directives/a11y-title.directive';\nimport { ApiActionDirective } from 'jslib-angular/directives/api-action.directive';\nimport { AutofocusDirective } from 'jslib-angular/directives/autofocus.directive';\nimport { BlurClickDirective } from 'jslib-angular/directives/blur-click.directive';\nimport { BoxRowDirective } from 'jslib-angular/directives/box-row.directive';\nimport { FallbackSrcDirective } from 'jslib-angular/directives/fallback-src.directive';\nimport { InputVerbatimDirective } from 'jslib-angular/directives/input-verbatim.directive';\nimport { SelectCopyDirective } from 'jslib-angular/directives/select-copy.directive';\nimport { StopClickDirective } from 'jslib-angular/directives/stop-click.directive';\nimport { StopPropDirective } from 'jslib-angular/directives/stop-prop.directive';\nimport { TrueFalseValueDirective } from 'jslib-angular/directives/true-false-value.directive';\n\nimport { ColorPasswordPipe } from 'jslib-angular/pipes/color-password.pipe';\nimport { I18nPipe } from 'jslib-angular/pipes/i18n.pipe';\nimport { SearchCiphersPipe } from 'jslib-angular/pipes/search-ciphers.pipe';\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport localeAz from '@angular/common/locales/az';\nimport localeBg from '@angular/common/locales/bg';\nimport localeCa from '@angular/common/locales/ca';\nimport localeCs from '@angular/common/locales/cs';\nimport localeDa from '@angular/common/locales/da';\nimport localeDe from '@angular/common/locales/de';\nimport localeEl from '@angular/common/locales/el';\nimport localeEnGb from '@angular/common/locales/en-GB';\nimport localeEnIn from '@angular/common/locales/en-IN';\nimport localeEo from '@angular/common/locales/eo';\nimport localeEs from '@angular/common/locales/es';\nimport localeEt from '@angular/common/locales/et';\nimport localeFi from '@angular/common/locales/fi';\nimport localeFr from '@angular/common/locales/fr';\nimport localeHe from '@angular/common/locales/he';\nimport localeHr from '@angular/common/locales/hr';\nimport localeHu from '@angular/common/locales/hu';\nimport localeId from '@angular/common/locales/id';\nimport localeIt from '@angular/common/locales/it';\nimport localeJa from '@angular/common/locales/ja';\nimport localeKn from '@angular/common/locales/kn';\nimport localeKo from '@angular/common/locales/ko';\nimport localeLv from '@angular/common/locales/lv';\nimport localeMl from '@angular/common/locales/ml';\nimport localeNb from '@angular/common/locales/nb';\nimport localeNl from '@angular/common/locales/nl';\nimport localePl from '@angular/common/locales/pl';\nimport localePtBr from '@angular/common/locales/pt';\nimport localePtPt from '@angular/common/locales/pt-PT';\nimport localeRo from '@angular/common/locales/ro';\nimport localeRu from '@angular/common/locales/ru';\nimport localeSk from '@angular/common/locales/sk';\nimport localeSr from '@angular/common/locales/sr';\nimport localeSv from '@angular/common/locales/sv';\nimport localeTr from '@angular/common/locales/tr';\nimport localeUk from '@angular/common/locales/uk';\nimport localeZhCn from '@angular/common/locales/zh-Hans';\nimport localeZhTw from '@angular/common/locales/zh-Hant';\n\nregisterLocaleData(localeAz, 'az');\nregisterLocaleData(localeBg, 'bg');\nregisterLocaleData(localeCa, 'ca');\nregisterLocaleData(localeCs, 'cs');\nregisterLocaleData(localeDa, 'da');\nregisterLocaleData(localeDe, 'de');\nregisterLocaleData(localeEl, 'el');\nregisterLocaleData(localeEnGb, 'en-GB');\nregisterLocaleData(localeEnIn, 'en-IN');\nregisterLocaleData(localeEs, 'es');\nregisterLocaleData(localeEt, 'et');\nregisterLocaleData(localeEo, 'eo');\nregisterLocaleData(localeFi, 'fi');\nregisterLocaleData(localeFr, 'fr');\nregisterLocaleData(localeHe, 'he');\nregisterLocaleData(localeHr, 'hr');\nregisterLocaleData(localeHu, 'hu');\nregisterLocaleData(localeId, 'id');\nregisterLocaleData(localeIt, 'it');\nregisterLocaleData(localeJa, 'ja');\nregisterLocaleData(localeKn, 'kn');\nregisterLocaleData(localeKo, 'ko');\nregisterLocaleData(localeLv, 'lv');\nregisterLocaleData(localeMl, 'ml');\nregisterLocaleData(localeNb, 'nb');\nregisterLocaleData(localeNl, 'nl');\nregisterLocaleData(localePl, 'pl');\nregisterLocaleData(localePtBr, 'pt-BR');\nregisterLocaleData(localePtPt, 'pt-PT');\nregisterLocaleData(localeRo, 'ro');\nregisterLocaleData(localeRu, 'ru');\nregisterLocaleData(localeSk, 'sk');\nregisterLocaleData(localeSr, 'sr');\nregisterLocaleData(localeSv, 'sv');\nregisterLocaleData(localeTr, 'tr');\nregisterLocaleData(localeUk, 'uk');\nregisterLocaleData(localeZhCn, 'zh-CN');\nregisterLocaleData(localeZhTw, 'zh-TW');\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        DragDropModule,\n        ToasterModule.forChild(),\n        ReactiveFormsModule,\n        RouterModule,\n    ],\n    declarations: [\n        A11yTitleDirective,\n        AcceptEmergencyComponent,\n        AccessComponent,\n        AcceptOrganizationComponent,\n        AccountComponent,\n        SetPasswordComponent,\n        AddCreditComponent,\n        AddEditComponent,\n        AdjustPaymentComponent,\n        AdjustSeatsComponent,\n        AdjustStorageComponent,\n        ApiActionDirective,\n        ApiKeyComponent,\n        AppComponent,\n        AttachmentsComponent,\n        AutofocusDirective,\n        AvatarComponent,\n        BlurClickDirective,\n        BoxRowDirective,\n        BreachReportComponent,\n        BulkActionsComponent,\n        BulkDeleteComponent,\n        BulkMoveComponent,\n        BulkRestoreComponent,\n        BulkShareComponent,\n        CalloutComponent,\n        ChangeEmailComponent,\n        ChangeKdfComponent,\n        ChangePasswordComponent,\n        ChangePlanComponent,\n        CiphersComponent,\n        CollectionsComponent,\n        ColorPasswordPipe,\n        CreateOrganizationComponent,\n        DeauthorizeSessionsComponent,\n        DeleteAccountComponent,\n        DeleteOrganizationComponent,\n        DomainRulesComponent,\n        DownloadLicenseComponent,\n        EmergencyAccessAddEditComponent,\n        EmergencyAccessAttachmentsComponent,\n        EmergencyAccessComponent,\n        EmergencyAccessConfirmComponent,\n        EmergencyAccessTakeoverComponent,\n        EmergencyAccessViewComponent,\n        EmergencyAddEditComponent,\n        ExportComponent,\n        ExposedPasswordsReportComponent,\n        FallbackSrcDirective,\n        FolderAddEditComponent,\n        FooterComponent,\n        FrontendLayoutComponent,\n        GroupingsComponent,\n        HintComponent,\n        I18nPipe,\n        IconComponent,\n        ImportComponent,\n        InactiveTwoFactorReportComponent,\n        InputVerbatimDirective,\n        LinkSsoComponent,\n        LockComponent,\n        LoginComponent,\n        ModalComponent,\n        NavbarComponent,\n        OptionsComponent,\n        OrgAccountComponent,\n        OrgAddEditComponent,\n        OrganizationBillingComponent,\n        OrganizationPlansComponent,\n        OrganizationSubscriptionComponent,\n        OrgAttachmentsComponent,\n        OrgBulkStatusComponent,\n        OrgBulkConfirmComponent,\n        OrgBulkRemoveComponent,\n        OrgCiphersComponent,\n        OrgCollectionAddEditComponent,\n        OrgCollectionsComponent,\n        OrgEntityEventsComponent,\n        OrgEntityUsersComponent,\n        OrgEventsComponent,\n        OrgExportComponent,\n        OrgExposedPasswordsReportComponent,\n        OrgImportComponent,\n        OrgInactiveTwoFactorReportComponent,\n        OrgGroupAddEditComponent,\n        OrgGroupingsComponent,\n        OrgGroupsComponent,\n        OrgManageCollectionsComponent,\n        OrgManageComponent,\n        OrgPeopleComponent,\n        OrgPolicyEditComponent,\n        OrgPoliciesComponent,\n        OrgResetPasswordComponent,\n        OrgReusedPasswordsReportComponent,\n        OrgSettingComponent,\n        OrgToolsComponent,\n        OrgTwoFactorSetupComponent,\n        OrgUserAddEditComponent,\n        OrgUserConfirmComponent,\n        OrgUserGroupsComponent,\n        OrganizationsComponent,\n        OrganizationLayoutComponent,\n        OrgUnsecuredWebsitesReportComponent,\n        OrgVaultComponent,\n        OrgWeakPasswordsReportComponent,\n        PasswordGeneratorComponent,\n        PasswordGeneratorHistoryComponent,\n        PasswordStrengthComponent,\n        PaymentComponent,\n        PremiumComponent,\n        ProfileComponent,\n        PurgeVaultComponent,\n        RecoverDeleteComponent,\n        RecoverTwoFactorComponent,\n        RegisterComponent,\n        ReusedPasswordsReportComponent,\n        SearchCiphersPipe,\n        SearchPipe,\n        SelectCopyDirective,\n        SendAddEditComponent,\n        SendEffluxDatesComponent,\n        SendComponent,\n        SettingsComponent,\n        ShareComponent,\n        SsoComponent,\n        StopClickDirective,\n        StopPropDirective,\n        TaxInfoComponent,\n        ToolsComponent,\n        TrueFalseValueDirective,\n        TwoFactorAuthenticatorComponent,\n        TwoFactorComponent,\n        TwoFactorDuoComponent,\n        TwoFactorEmailComponent,\n        TwoFactorOptionsComponent,\n        TwoFactorRecoveryComponent,\n        TwoFactorSetupComponent,\n        TwoFactorVerifyComponent,\n        TwoFactorWebAuthnComponent,\n        TwoFactorYubiKeyComponent,\n        UnsecuredWebsitesReportComponent,\n        UpdateKeyComponent,\n        UpdateLicenseComponent,\n        UpdateTempPasswordComponent,\n        UserBillingComponent,\n        UserLayoutComponent,\n        UserSubscriptionComponent,\n        UserNamePipe,\n        VaultComponent,\n        VerifyEmailComponent,\n        VerifyEmailTokenComponent,\n        VerifyRecoverDeleteComponent,\n        WeakPasswordsReportComponent,\n        ProvidersComponent,\n    ],\n    exports: [\n        A11yTitleDirective,\n        AvatarComponent,\n        CalloutComponent,\n        ApiActionDirective,\n        StopClickDirective,\n        StopPropDirective,\n        I18nPipe,\n        SearchPipe,\n        UserNamePipe,\n        ModalComponent,\n        NavbarComponent,\n        FooterComponent,\n        OrganizationPlansComponent,\n    ],\n    providers: [DatePipe, SearchPipe, UserNamePipe],\n    bootstrap: [],\n})\nexport class OssModule { }\n","import * as jq from 'jquery';\nimport Swal from 'sweetalert2';\n\nimport {\n    BodyOutputType,\n    Toast,\n    ToasterConfig,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { NotificationsService } from 'jslib-common/abstractions/notifications.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SettingsService } from 'jslib-common/abstractions/settings.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { RouterService } from './services/router.service';\n\nconst BroadcasterSubscriptionId = 'AppComponent';\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n})\nexport class AppComponent implements OnDestroy, OnInit {\n    toasterConfig: ToasterConfig = new ToasterConfig({\n        showCloseButton: true,\n        mouseoverTimerStop: true,\n        animation: 'flyRight',\n        limit: 5,\n    });\n\n    private lastActivity: number = null;\n    private idleTimer: number = null;\n    private isIdle = false;\n\n    constructor(\n        private broadcasterService: BroadcasterService, private userService: UserService,\n        private tokenService: TokenService, private folderService: FolderService,\n        private settingsService: SettingsService, private syncService: SyncService,\n        private passwordGenerationService: PasswordGenerationService, private cipherService: CipherService,\n        private authService: AuthService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private ngZone: NgZone,\n        private vaultTimeoutService: VaultTimeoutService, private storageService: StorageService,\n        private cryptoService: CryptoService, private collectionService: CollectionService,\n        private sanitizer: DomSanitizer, private searchService: SearchService,\n        private notificationsService: NotificationsService, private routerService: RouterService,\n        private stateService: StateService, private eventService: EventService,\n        private policyService: PolicyService) { }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            window.onmousemove = () => this.recordActivity();\n            window.onmousedown = () => this.recordActivity();\n            window.ontouchstart = () => this.recordActivity();\n            window.onclick = () => this.recordActivity();\n            window.onscroll = () => this.recordActivity();\n            window.onkeypress = () => this.recordActivity();\n        });\n\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'loggedIn':\n                    case 'loggedOut':\n                    case 'unlocked':\n                        this.notificationsService.updateConnection(false);\n                        break;\n                    case 'authBlocked':\n                        this.router.navigate(['/']);\n                        break;\n                    case 'logout':\n                        this.logOut(!!message.expired);\n                        break;\n                    case 'lockVault':\n                        await this.vaultTimeoutService.lock();\n                        break;\n                    case 'locked':\n                        this.notificationsService.updateConnection(false);\n                        this.router.navigate(['lock']);\n                        break;\n                    case 'lockedUrl':\n                        window.setTimeout(() => this.routerService.setPreviousUrl(message.url), 500);\n                        break;\n                    case 'syncStarted':\n                        break;\n                    case 'syncCompleted':\n                        break;\n                    case 'upgradeOrganization':\n                        const upgradeConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('upgradeOrganizationDesc'), this.i18nService.t('upgradeOrganization'),\n                            this.i18nService.t('upgradeOrganization'), this.i18nService.t('cancel'));\n                        if (upgradeConfirmed) {\n                            this.router.navigate(['organizations', message.organizationId, 'settings', 'billing']);\n                        }\n                        break;\n                    case 'premiumRequired':\n                        const premiumConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n                        if (premiumConfirmed) {\n                            this.router.navigate(['settings/premium']);\n                        }\n                        break;\n                    case 'emailVerificationRequired':\n                        const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('emailVerificationRequiredDesc'),\n                            this.i18nService.t('emailVerificationRequired'),\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n                        if (emailVerificationConfirmed) {\n                            this.platformUtilsService.launchUri('https://bitwarden.com/help/article/create-bitwarden-account/');\n                        }\n                        break;\n                    case 'showToast':\n                        this.showToast(message);\n                        break;\n                    case 'setFullWidth':\n                        this.setFullWidth();\n                        break;\n                    default:\n                        break;\n                }\n            });\n        });\n\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                const modals = Array.from(document.querySelectorAll('.modal'));\n                for (const modal of modals) {\n                    (jq(modal) as any).modal('hide');\n                }\n\n                if (document.querySelector('.swal-modal') != null) {\n                    Swal.close(undefined);\n                }\n            }\n        });\n\n        this.setFullWidth();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    private async logOut(expired: boolean) {\n        await this.eventService.uploadEvents();\n        const userId = await this.userService.getUserId();\n\n        await Promise.all([\n            this.eventService.clearEvents(),\n            this.syncService.setLastSync(new Date(0)),\n            this.tokenService.clearToken(),\n            this.cryptoService.clearKeys(),\n            this.userService.clear(),\n            this.settingsService.clear(userId),\n            this.cipherService.clear(userId),\n            this.folderService.clear(userId),\n            this.collectionService.clear(userId),\n            this.policyService.clear(userId),\n            this.passwordGenerationService.clear(),\n            this.stateService.purge(),\n        ]);\n\n        this.searchService.clearIndex();\n        this.authService.logOut(async () => {\n            if (expired) {\n                this.toasterService.popAsync('warning', this.i18nService.t('loggedOut'),\n                    this.i18nService.t('loginExpired'));\n            }\n\n            Swal.close();\n            this.router.navigate(['/']);\n        });\n    }\n\n    private async recordActivity() {\n        const now = (new Date()).getTime();\n        if (this.lastActivity != null && now - this.lastActivity < 250) {\n            return;\n        }\n\n        this.lastActivity = now;\n        this.storageService.save(ConstantsService.lastActiveKey, now);\n\n        // Idle states\n        if (this.isIdle) {\n            this.isIdle = false;\n            this.idleStateChanged();\n        }\n        if (this.idleTimer != null) {\n            window.clearTimeout(this.idleTimer);\n            this.idleTimer = null;\n        }\n        this.idleTimer = window.setTimeout(() => {\n            if (!this.isIdle) {\n                this.isIdle = true;\n                this.idleStateChanged();\n            }\n        }, IdleTimeout);\n    }\n\n    private showToast(msg: any) {\n        const toast: Toast = {\n            type: msg.type,\n            title: msg.title,\n        };\n        if (typeof (msg.text) === 'string') {\n            toast.body = msg.text;\n        } else if (msg.text.length === 1) {\n            toast.body = msg.text[0];\n        } else {\n            let message = '';\n            msg.text.forEach((t: string) =>\n                message += ('<p>' + this.sanitizer.sanitize(SecurityContext.HTML, t) + '</p>'));\n            toast.body = message;\n            toast.bodyOutputType = BodyOutputType.TrustedHtml;\n        }\n        if (msg.options != null) {\n            if (msg.options.trustedHtml === true) {\n                toast.bodyOutputType = BodyOutputType.TrustedHtml;\n            }\n            if (msg.options.timeout != null && msg.options.timeout > 0) {\n                toast.timeout = msg.options.timeout;\n            }\n        }\n        this.toasterService.popAsync(toast);\n    }\n\n    private idleStateChanged() {\n        if (this.isIdle) {\n            this.notificationsService.disconnectFromInactivity();\n        } else {\n            this.notificationsService.reconnectFromActivity();\n        }\n    }\n\n    private async setFullWidth() {\n        const enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\n        if (enableFullWidth) {\n            document.body.classList.add('full-width');\n        } else {\n            document.body.classList.remove('full-width');\n        }\n    }\n}\n","<toaster-container [toasterconfig]=\"toasterConfig\" aria-live=\"polite\"></toaster-container> <router-outlet></router-outlet> ","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nconst BroadcasterSubscriptionId = 'OrganizationLayoutComponent';\n\n@Component({\n    selector: 'app-organization-layout',\n    templateUrl: 'organization-layout.component.html',\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n    organization: Organization;\n    businessTokenPromise: Promise<any>;\n    private organizationId: string;\n    private businessUrl: string;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone,\n        private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private environmentService: EnvironmentService) { }\n\n    ngOnInit() {\n        this.businessUrl = this.environmentService.getEnterpriseUrl();\n\n        document.body.classList.remove('layout_frontend');\n        this.route.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n        });\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'updatedOrgLicense':\n                        await this.load();\n                        break;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.organization = await this.userService.getOrganization(this.organizationId);\n    }\n\n    async goToBusinessPortal() {\n        if (this.businessTokenPromise != null) {\n            return;\n        }\n        try {\n            this.businessTokenPromise = this.apiService.getEnterprisePortalSignInToken();\n            const token = await this.businessTokenPromise;\n            if (token != null) {\n                const userId = await this.userService.getUserId();\n                this.platformUtilsService.launchUri(this.businessUrl + '/login?userId=' + userId +\n                    '&token=' + (window as any).encodeURIComponent(token) + '&organizationId=' + this.organization.id);\n            }\n        } catch { }\n        this.businessTokenPromise = null;\n    }\n\n    get showMenuBar() {\n        return this.showManageTab || this.showToolsTab || this.organization.isOwner;\n    }\n\n    get showManageTab(): boolean {\n        return this.organization.canManageUsers ||\n            this.organization.canManageAssignedCollections ||\n            this.organization.canManageAllCollections ||\n            this.organization.canManageGroups ||\n            this.organization.canManagePolicies ||\n            this.organization.canAccessEventLogs;\n    }\n\n    get showToolsTab(): boolean {\n        return this.organization.canAccessImportExport || this.organization.canAccessReports;\n    }\n\n    get showBusinessPortalButton(): boolean {\n        return this.organization.useBusinessPortal && this.organization.canAccessBusinessPortal;\n    }\n\n    get toolsRoute(): string {\n        return this.organization.canAccessImportExport ?\n            'tools/import' :\n            'tools/exposed-passwords-report';\n    }\n\n    get manageRoute(): string {\n        let route: string;\n        switch (true) {\n            case this.organization.canManageUsers:\n                route = 'manage/people';\n                break;\n            case this.organization.canManageAssignedCollections || this.organization.canManageAllCollections:\n                route = 'manage/collections';\n                break;\n            case this.organization.canManageGroups:\n                route = 'manage/groups';\n                break;\n            case this.organization.canManagePolicies:\n                route = 'manage/policies';\n                break;\n            case this.organization.canAccessEventLogs:\n                route = 'manage/events';\n                break;\n        }\n        return route;\n    }\n}\n","<app-navbar></app-navbar> <div class=\"org-nav\" *ngIf=\"organization\"> <div class=\"container d-flex\"> <div class=\"d-flex flex-column\"> <div class=\"my-auto d-flex align-items-center pl-1\"> <app-avatar [data]=\"organization.name\" size=\"45\" [circle]=\"true\"></app-avatar> <div class=\"org-name ml-3\"> <span>{{organization.name}}</span> <small class=\"text-muted\">{{'organization' | i18n}}</small> </div> <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!organization.enabled\"> <div class=\"card-body py-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'organizationIsDisabled' | i18n}} </div> </div> <div class=\"ml-3 card border-info text-info bg-transparent\" *ngIf=\"organization.isProviderUser\"> <div class=\"card-body py-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'accessingUsingProvider' | i18n : organization.providerName}} </div> </div> </div> <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\"> <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\"> <i class=\"fa fa-lock\" aria-hidden=\"true\"></i> {{'vault' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showManageTab\"> <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\"> <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i> {{'manage' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"showToolsTab\"> <a class=\"nav-link\" [routerLink]=\"toolsRoute\" routerLinkActive=\"active\"> <i class=\"fa fa-wrench\" aria-hidden=\"true\"></i> {{'tools' | i18n}} </a> </li> <li class=\"nav-item\" *ngIf=\"organization.isOwner\"> <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\"> <i class=\"fa fa-cogs\" aria-hidden=\"true\"></i> {{'settings' | i18n}} </a> </li> </ul> </div> <div class=\"ml-auto d-flex align-items-center\"> <button class=\"btn btn-primary\" (click)=\"goToBusinessPortal()\" #businessBtn [appApiAction]=\"businessTokenPromise\" *ngIf=\"showBusinessPortalButton\"> <i class=\"fa fa-bank fa-fw\" [hidden]=\"businessBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-fw\" [hidden]=\"!businessBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'businessPortal' | i18n}} → </button> </div> </div> </div> <router-outlet></router-outlet> <app-footer></app-footer> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\n@Component({\n    selector: 'app-user-layout',\n    templateUrl: 'user-layout.component.html',\n})\nexport class UserLayoutComponent implements OnInit {\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","<app-navbar></app-navbar> <router-outlet></router-outlet> <app-footer></app-footer> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { EmergencyAccessAcceptRequest } from 'jslib-common/models/request/emergencyAccessAcceptRequest';\nimport { BaseAcceptComponent } from '../common/base.accept.component';\n\n@Component({\n    selector: 'app-accept-emergency',\n    templateUrl: 'accept-emergency.component.html',\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n\n    name: string;\n\n    protected requiredParameters: string[] = ['id', 'name', 'email', 'token'];\n    protected failedShortMessage = 'emergencyInviteAcceptFailedShort';\n    protected failedMessage = 'emergencyInviteAcceptFailed';\n\n    constructor(router: Router, toasterService: ToasterService,\n        i18nService: I18nService, route: ActivatedRoute,\n        private apiService: ApiService, userService: UserService,\n        stateService: StateService) {\n        super(router, toasterService, i18nService, route, userService, stateService);\n    }\n\n    async authedHandler(qParams: any): Promise<void> {\n        const request = new EmergencyAccessAcceptRequest();\n        request.token = qParams.token;\n        this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n        await this.actionPromise;\n        const toast: Toast = {\n            type: 'success',\n            title: this.i18nService.t('inviteAccepted'),\n            body: this.i18nService.t('emergencyInviteAcceptedDesc'),\n            timeout: 10000,\n        };\n        this.toasterService.popAsync(toast);\n        this.router.navigate(['/vault']);\n    }\n\n    async unauthedHandler(qParams: any): Promise<void> {\n        this.name = qParams.name;\n        if (this.name != null) {\n            // Fix URL encoding of space issue with Angular\n            this.name = this.name.replace(/\\+/g, ' ');\n        }\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'emergencyAccess' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p class=\"text-center\"> {{name}} </p> <p>{{'acceptEmergencyAccess' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block ml-2 mt-0\"> {{'createAccount' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { OrganizationUserAcceptRequest } from 'jslib-common/models/request/organizationUserAcceptRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\nimport { Policy } from 'jslib-common/models/domain/policy';\nimport { BaseAcceptComponent } from '../common/base.accept.component';\n\n@Component({\n    selector: 'app-accept-organization',\n    templateUrl: 'accept-organization.component.html',\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n    orgName: string;\n\n    protected requiredParameters: string[] = ['organizationId', 'organizationUserId', 'token'];\n\n    constructor(router: Router, toasterService: ToasterService,\n        i18nService: I18nService, route: ActivatedRoute,\n        private apiService: ApiService, userService: UserService,\n        stateService: StateService, private cryptoService: CryptoService,\n        private policyService: PolicyService) {\n        super(router, toasterService, i18nService, route, userService, stateService);\n    }\n\n    async authedHandler(qParams: any): Promise<void> {\n        const request = new OrganizationUserAcceptRequest();\n        request.token = qParams.token;\n        if (await this.performResetPasswordAutoEnroll(qParams)) {\n            this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\n                qParams.organizationUserId, request).then(() => {\n                    // Retrieve Public Key\n                    return this.apiService.getOrganizationKeys(qParams.organizationId);\n                }).then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                    }\n\n                    const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n                    // RSA Encrypt user's encKey.key with organization public key\n                    const encKey = await this.cryptoService.getEncKey();\n                    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n                    // Create request and execute enrollment\n                    const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n                    resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n                    // Get User Id\n                    const userId = await this.userService.getUserId();\n\n                    return this.apiService.putOrganizationUserResetPasswordEnrollment(qParams.organizationId, userId, resetRequest);\n                });\n        } else {\n            this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\n                qParams.organizationUserId, request);\n        }\n\n        await this.actionPromise;\n        const toast: Toast = {\n            type: 'success',\n            title: this.i18nService.t('inviteAccepted'),\n            body: this.i18nService.t('inviteAcceptedDesc'),\n            timeout: 10000,\n        };\n        this.toasterService.popAsync(toast);\n\n        await this.stateService.remove('orgInvitation');\n        this.router.navigate(['/vault']);\n    }\n\n    async unauthedHandler(qParams: any): Promise<void> {\n        this.orgName = qParams.organizationName;\n        if (this.orgName != null) {\n            // Fix URL encoding of space issue with Angular\n            this.orgName = this.orgName.replace(/\\+/g, ' ');\n        }\n        await this.stateService.save('orgInvitation', qParams);\n    }\n\n    private async performResetPasswordAutoEnroll(qParams: any): Promise<boolean> {\n        let policyList: Policy[] = null;\n        try {\n            const policies = await this.apiService.getPoliciesByToken(qParams.organizationId, qParams.token,\n                qParams.email, qParams.organizationUserId);\n            policyList = this.policyService.mapPoliciesFromToken(policies);\n        } catch { }\n\n        if (policyList != null) {\n            const result = this.policyService.getResetPasswordPolicyOptions(policyList, qParams.organizationId);\n            // Return true if policy enabled and auto-enroll enabled\n            return result[1] && result[0].autoEnrollEnabled;\n        }\n\n        return false;\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\"> <div> <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> <div class=\"container\" *ngIf=\"!loading && !authed\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'joinOrganization' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <p class=\"text-center\"> {{orgName}} <strong class=\"d-block mt-2\">{{email}}</strong> </p> <p>{{'joinOrganizationDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\"> {{'logIn' | i18n}} </a> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block ml-2 mt-0\"> {{'createAccount' | i18n}} </a> </div> </div> </div> </div> </div> </div> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { HintComponent as BaseHintComponent } from 'jslib-angular/components/hint.component';\n\n@Component({\n    selector: 'app-hint',\n    templateUrl: 'hint.component.html',\n})\nexport class HintComponent extends BaseHintComponent {\n    constructor(router: Router, i18nService: I18nService,\n        apiService: ApiService, platformUtilsService: PlatformUtilsService) {\n        super(router, i18nService, apiService, platformUtilsService);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'passwordHint' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> <small class=\"form-text text-muted\">{{'enterEmailToGetHint' | i18n}}</small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span [hidden]=\"form.loading\">{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { RouterService } from '../services/router.service';\n\nimport { LockComponent as BaseLockComponent } from 'jslib-angular/components/lock.component';\n\n@Component({\n    selector: 'app-lock',\n    templateUrl: 'lock.component.html',\n})\nexport class LockComponent extends BaseLockComponent {\n    constructor(router: Router, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, messagingService: MessagingService,\n        userService: UserService, cryptoService: CryptoService,\n        storageService: StorageService, vaultTimeoutService: VaultTimeoutService,\n        environmentService: EnvironmentService, private routerService: RouterService,\n        stateService: StateService, apiService: ApiService) {\n        super(router, i18nService, platformUtilsService, messagingService, userService, cryptoService,\n            storageService, vaultTimeoutService, environmentService, stateService, apiService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        this.onSuccessfulSubmit = () => {\n            const previousUrl = this.routerService.getPreviousUrl();\n            if (previousUrl !== '/' && previousUrl.indexOf('lock') === -1) {\n                this.successRoute = previousUrl;\n            }\n            this.router.navigate([this.successRoute]);\n        };\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"text-center mb-4\"> <i class=\"fa fa-lock fa-4x text-muted\" aria-hidden=\"true\"></i> </p> <p class=\"lead text-center mx-4 mb-4\">{{'yourVaultIsLocked' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> <small class=\"text-muted form-text\"> {{'loggedInAsEmailOn' | i18n : email : webVaultHostname}} </small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-unlock-alt\" aria-hidden=\"true\"></i> {{'unlock' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\"> {{'logOut' | i18n}} </button> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { LoginComponent as BaseLoginComponent } from 'jslib-angular/components/login.component';\n\nimport { Policy } from 'jslib-common/models/domain/policy';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: 'login.component.html',\n})\nexport class LoginComponent extends BaseLoginComponent {\n\n    showResetPasswordAutoEnrollWarning = false;\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, private route: ActivatedRoute,\n        storageService: StorageService, stateService: StateService,\n        platformUtilsService: PlatformUtilsService, environmentService: EnvironmentService,\n        passwordGenerationService: PasswordGenerationService, cryptoFunctionService: CryptoFunctionService,\n        private apiService: ApiService, private policyService: PolicyService) {\n        super(authService, router,\n            platformUtilsService, i18nService,\n            stateService, environmentService,\n            passwordGenerationService, cryptoFunctionService,\n            storageService);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            await super.ngOnInit();\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            let policyList: Policy[] = null;\n            try {\n                const policies = await this.apiService.getPoliciesByToken(invite.organizationId, invite.token,\n                    invite.email, invite.organizationUserId);\n                policyList = this.policyService.mapPoliciesFromToken(policies);\n            } catch { }\n\n            if (policyList != null) {\n                const result = this.policyService.getResetPasswordPolicyOptions(policyList, invite.organizationId);\n                // Set to true if policy enabled and auto-enroll enabled\n                this.showResetPasswordAutoEnrollWarning = result[1] && result[0].autoEnrollEnabled;\n            }\n        }\n    }\n\n    async goAfterLogIn() {\n        const loginRedirect = await this.stateService.get<any>('loginRedirect');\n        if (loginRedirect != null) {\n            this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n            await this.stateService.remove('loginRedirect');\n        } else {\n            this.router.navigate([this.successRoute]);\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <img src=\"images/logo-dark@2x.png\" class=\"logo mb-2\" alt=\"Bitwarden\"> <p class=\"lead text-center mx-4 mb-4\">{{'loginOrCreateNewAccount' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <app-callout type=\"warning\" title=\"{{'resetPasswordPolicyAutoEnroll' | i18n}}\" *ngIf=\"showResetPasswordAutoEnrollWarning\"> {{'resetPasswordAutoEnrollInviteWarning' | i18n}} </app-callout> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> <small class=\"form-text\"> <a routerLink=\"/hint\">{{'getMasterPasswordHint' | i18n}}</a> </small> </div> <div class=\"form-check mb-3\"> <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberEmail\" name=\"RememberEmail\" [(ngModel)]=\"rememberEmail\"> <label class=\"form-check-label\" for=\"rememberEmail\">{{'rememberEmail' | i18n}}</label> </div> <div class=\"mb-n3\" [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/register\" [queryParams]=\"{email: email}\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'createAccount' | i18n}} </a> </div> <div class=\"d-flex\"> <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\"> <i class=\"fa fa-bank\" aria-hidden=\"true\"></i> {{'enterpriseSingleSignOn' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Directive, Input } from '@angular/core';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CaptchaIFrame } from 'jslib-common/misc/captcha_iframe';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n    @Input() captchaSiteKey: string = null;\n    captchaToken: string = null;\n    captcha: CaptchaIFrame;\n\n    constructor(protected environmentService: EnvironmentService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    async setupCaptcha() {\n        const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n        this.captcha = new CaptchaIFrame(window, webVaultUrl,\n            this.i18nService, (token: string) => {\n                this.captchaToken = token;\n            }, (error: string) => {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);\n            }, (info: string) => {\n                this.platformUtilsService.showToast('info', this.i18nService.t('info'), info);\n            }\n        );\n    }\n\n    showCaptcha() {\n        return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n\n    protected handleCaptchaRequired(response: { captchaSiteKey: string; }): boolean {\n        if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n            return false;\n        }\n\n        this.captchaSiteKey = response.captchaSiteKey;\n        this.captcha.init(response.captchaSiteKey);\n        return true;\n    }\n}\n","import { I18nService } from '../abstractions/i18n.service';\n\nexport abstract class IFrameComponent {\n    iframe: HTMLIFrameElement;\n    private connectorLink: HTMLAnchorElement;\n    private parseFunction = this.parseMessage.bind(this);\n\n    constructor(private win: Window, protected webVaultUrl: string, private path: string, private iframeId: string,\n        public successCallback?: (message: string) => any,\n        public errorCallback?: (message: string) => any, public infoCallback?: (message: string) => any) {\n        this.connectorLink = win.document.createElement('a');\n    }\n\n    stop() {\n        this.sendMessage('stop');\n    }\n\n    start() {\n        this.sendMessage('start');\n    }\n\n    sendMessage(message: any) {\n        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n            return;\n        }\n\n        this.iframe.contentWindow.postMessage(message, this.iframe.src);\n    }\n\n    base64Encode(str: string): string {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n            return String.fromCharCode(('0x' + p1) as any);\n        }));\n    }\n\n    cleanup() {\n        this.win.removeEventListener('message', this.parseFunction, false);\n    }\n\n    protected createParams(data: any, version: number) {\n        return new URLSearchParams({\n            data: this.base64Encode(JSON.stringify(data)),\n            parent: encodeURIComponent(this.win.document.location.href),\n            v: version.toString(),\n        });\n    }\n\n    protected initComponent(params: URLSearchParams): void {\n        this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n        this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n        this.iframe.src = this.connectorLink.href;\n\n        this.win.addEventListener('message', this.parseFunction, false);\n    }\n\n    private parseMessage(event: MessageEvent) {\n        if (!this.validMessage(event)) {\n            return;\n        }\n\n        const parts: string[] = event.data.split('|');\n        if (parts[0] === 'success' && this.successCallback) {\n            this.successCallback(parts[1]);\n        } else if (parts[0] === 'error' && this.errorCallback) {\n            this.errorCallback(parts[1]);\n        } else if (parts[0] === 'info' && this.infoCallback) {\n            this.infoCallback(parts[1]);\n        }\n    }\n\n    private validMessage(event: MessageEvent) {\n        if (event.origin == null || event.origin === '' || event.origin !== (this.connectorLink as any).origin ||\n            event.data == null || typeof (event.data) !== 'string') {\n            return false;\n        }\n\n        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||\n            event.data.indexOf('info|') === 0;\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { DeleteRecoverRequest } from 'jslib-common/models/request/deleteRecoverRequest';\n\n@Component({\n    selector: 'app-recover-delete',\n    templateUrl: 'recover-delete.component.html',\n})\nexport class RecoverDeleteComponent {\n    email: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService) {\n    }\n\n    async submit() {\n        try {\n            const request = new DeleteRecoverRequest();\n            request.email = this.email.trim().toLowerCase();\n            this.formPromise = this.apiService.postAccountRecoverDelete(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deleteRecoverEmailSent'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <p>{{'deleteRecoverDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { TwoFactorRecoveryRequest } from 'jslib-common/models/request/twoFactorRecoveryRequest';\n\n@Component({\n    selector: 'app-recover-two-factor',\n    templateUrl: 'recover-two-factor.component.html',\n})\nexport class RecoverTwoFactorComponent {\n    email: string;\n    masterPassword: string;\n    recoveryCode: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private cryptoService: CryptoService, private authService: AuthService) { }\n\n    async submit() {\n        try {\n            const request = new TwoFactorRecoveryRequest();\n            request.recoveryCode = this.recoveryCode.replace(/\\s/g, '').toLowerCase();\n            request.email = this.email.trim().toLowerCase();\n            const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n            this.formPromise = this.apiService.postTwoFactorRecover(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepRecoverDisabled'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'recoverAccountTwoStep' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <p>{{'recoverAccountTwoStepDesc' | i18n}} <a href=\"https://help.bitwarden.com/article/lost-two-step-device/\" target=\"_blank\" rel=\"noopener\">{{'learnMore' | i18n}}</a> </p> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required appAutofocus inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"recoveryCode\">{{'recoveryCodeTitle' | i18n}}</label> <input id=\"recoveryCode\" class=\"text-monospace form-control\" type=\"text\" name=\"RecoveryCode\" [(ngModel)]=\"recoveryCode\" required appInputVerbatim> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { RegisterComponent as BaseRegisterComponent } from 'jslib-angular/components/register.component';\n\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { Policy } from 'jslib-common/models/domain/policy';\n\nimport { PolicyData } from 'jslib-common/models/data/policyData';\nimport { ReferenceEventRequest } from 'jslib-common/models/request/referenceEventRequest';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: 'register.component.html',\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n    showCreateOrgMessage = false;\n    layout = '';\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n    private policies: Policy[];\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, cryptoService: CryptoService,\n        apiService: ApiService, private route: ActivatedRoute,\n        stateService: StateService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService, private policyService: PolicyService,\n        environmentService: EnvironmentService) {\n        super(authService, router, i18nService, cryptoService, apiService, stateService, platformUtilsService,\n            passwordGenerationService, environmentService);\n    }\n\n    getPasswordScoreAlertDisplay() {\n        if (this.enforcedPolicyOptions == null) {\n            return '';\n        }\n\n        let str: string;\n        switch (this.enforcedPolicyOptions.minComplexity) {\n            case 4:\n                str = this.i18nService.t('strong');\n                break;\n            case 3:\n                str = this.i18nService.t('good');\n                break;\n            default:\n                str = this.i18nService.t('weak');\n                break;\n        }\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\n    }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(qParams => {\n            this.referenceData = new ReferenceEventRequest();\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.showCreateOrgMessage = true;\n                this.referenceData.flow = qParams.org;\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            if (qParams.layout != null) {\n                this.layout = this.referenceData.layout = qParams.layout;\n            }\n            if (qParams.reference != null) {\n                this.referenceData.id = qParams.reference;\n            } else {\n                this.referenceData.id = ('; ' + document.cookie).split('; reference=').pop().split(';').shift();\n            }\n            if (this.referenceData.id === '') {\n                this.referenceData.id = null;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            try {\n                const policies = await this.apiService.getPoliciesByToken(invite.organizationId, invite.token,\n                    invite.email, invite.organizationUserId);\n                if (policies.data != null) {\n                    const policiesData = policies.data.map(p => new PolicyData(p));\n                    this.policies = policiesData.map(p => new Policy(p));\n                }\n            } catch { }\n        }\n\n        if (this.policies != null) {\n            this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(this.policies);\n        }\n\n        await super.ngOnInit();\n    }\n\n    async submit() {\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(this.masterPasswordScore, this.masterPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return;\n        }\n\n        await super.submit();\n    }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\"> <header class=\"header\" *ngIf=\"layout === 'enterprise2'\"> <div class=\"container\"> <div class=\"row\"> <div class=\"col-7\"> <img alt=\"Bitwarden\" class=\"logo mb-2\" src=\"images/logo-horizontal-white.png\"> </div> </div> </div> </header> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row\"> <div class=\"col-7\" *ngIf=\"layout\"> <div class=\"mt-5\"> <div *ngIf=\"layout === 'enterprise2'\"> <h2>Companies globally trust Bitwarden for password management.</h2> <p>Start your 7-day free trial!</p> <p class=\"highlight\">Quickly deploy your <b>organization</b></p> <p>Use Bitwarden across all platforms</p> <p>Collaborate and share securely</p> <figure> <figcaption> <cite> <img src=\"images/wired-logo.png\" alt=\"Wired\"> </cite> </figcaption> <blockquote> \"Bitwarden has become a popular choice among open-source software advocates. After using it for a few months, I can see why.\" - February 2020 </blockquote> </figure> </div> <div *ngIf=\"layout === 'enterprise3'\"> <p>Enterprise 3 layout</p> </div> <div *ngIf=\"layout === 'enterprise4'\"> <p>Enterprise 4 layout</p> </div> </div> </div> <div [ngClass]=\"{'col-5': layout, 'col-12': !layout}\"> <div class=\"row justify-content-md-center mt-5\"> <div [ngClass]=\"{'col-5': !layout, 'col-12': layout}\"> <p class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{'createAccount' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <app-callout title=\"{{'createOrganizationStep1' | i18n}}\" type=\"info\" icon=\"fa-thumb-tack\" *ngIf=\"showCreateOrgMessage\"> {{'createOrganizationCreatePersonalAccount' | i18n}} </app-callout> <div class=\"form-group\"> <label for=\"email\">{{'emailAddress' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required [appAutofocus]=\"email === ''\" inputmode=\"email\" appInputVerbatim=\"false\"> <small class=\"form-text text-muted\">{{'emailAddressDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"name\">{{'yourName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" [appAutofocus]=\"email !== ''\"> <small class=\"form-text text-muted\">{{'yourNameDesc' | i18n}}</small> </div> <div class=\"form-group\"> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\"> {{'masterPasswordPolicyInEffect' | i18n}} <ul class=\"mb-0\"> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\"> {{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\"> {{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\"> {{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\"> {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <div class=\"w-100\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPassword\" class=\"text-monospace form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> <div> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <div class=\"progress-bar invisible\"></div> </div> </div> <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordRetype\" class=\"text-monospace form-control\" [(ngModel)]=\"confirmMasterPassword\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-group\"> <label for=\"hint\">{{'masterPassHint' | i18n}}</label> <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\"> <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small> </div> <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div> <div class=\"form-group\" *ngIf=\"showTerms\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"acceptPolicies\" [(ngModel)]=\"acceptPolicies\" name=\"AcceptPolicies\"> <label class=\"form-check-label small text-muted\" for=\"acceptPolicies\"> {{'acceptPolicies' | i18n}}<br> <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{'termsOfService' | i18n}}</a>, <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{'privacyPolicy' | i18n}}</a> </label> </div> </div> <hr> <div class=\"d-flex mb-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'submit' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </div> </div> </form> </div> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    SetPasswordComponent as BaseSetPasswordComponent,\n} from 'jslib-angular/components/set-password.component';\n\n@Component({\n    selector: 'app-set-password',\n    templateUrl: 'set-password.component.html',\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n    constructor(apiService: ApiService, i18nService: I18nService,\n        cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, router: Router,\n        syncService: SyncService, route: ActivatedRoute) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService, router, apiService, syncService, route);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'setMasterPassword' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body text-center\" *ngIf=\"syncLoading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!syncLoading\"> <app-callout type=\"info\">{{'ssoCompleteRegistration' | i18n}}</app-callout> <div class=\"form-group\"> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\"> {{'masterPasswordPolicyInEffect' | i18n}} <ul class=\"mb-0\"> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\"> {{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\"> {{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\"> {{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\"> {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <div class=\"w-100\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordHash\" class=\"text-monospace form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> <div> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <div class=\"progress-bar invisible\"></div> </div> </div> <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small> </div> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordRetype\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-group\"> <label for=\"hint\">{{'masterPassHint' | i18n}}</label> <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\"> <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\"> {{'logOut' | i18n}} </button> </div> </div> </div> </div> </div> </form> ","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { SsoComponent as BaseSsoComponent } from 'jslib-angular/components/sso.component';\n\nconst IdentifierStorageKey = 'ssoOrgIdentifier';\n\n@Component({\n    selector: 'app-sso',\n    templateUrl: 'sso.component.html',\n})\nexport class SsoComponent extends BaseSsoComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, route: ActivatedRoute,\n        storageService: StorageService, stateService: StateService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService,\n        cryptoFunctionService: CryptoFunctionService, environmentService: EnvironmentService,\n        passwordGenerationService: PasswordGenerationService) {\n        super(authService, router, i18nService, route, storageService, stateService, platformUtilsService,\n            apiService, cryptoFunctionService, environmentService, passwordGenerationService);\n        this.redirectUri = window.location.origin + '/sso-connector.html';\n        this.clientId = 'web';\n    }\n\n    async ngOnInit() {\n        super.ngOnInit();\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            } else {\n                const storedIdentifier = await this.storageService.get<string>(IdentifierStorageKey);\n                if (storedIdentifier != null) {\n                    this.identifier = storedIdentifier;\n                }\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    async submit() {\n        await this.storageService.save(IdentifierStorageKey, this.identifier);\n        if (this.clientId === 'browser') {\n            document.cookie = `ssoHandOffMessage=${this.i18nService.t('ssoHandOff')};SameSite=strict`;\n        }\n        super.submit();\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" class=\"container\" [appApiAction]=\"initiateSsoFormPromise\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <img src=\"images/logo-dark@2x.png\" class=\"logo mb-2\" alt=\"Bitwarden\"> <div class=\"card d-block mt-4\"> <div class=\"card-body\" *ngIf=\"loggingIn\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> {{'loading' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loggingIn\"> <p>{{'ssoLogInWithOrgIdentifier' | i18n}}</p> <div class=\"form-group\"> <label for=\"identifier\">{{'organizationIdentifier' | i18n}}</label> <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\" [(ngModel)]=\"identifier\" required appAutofocus> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import { Directive } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { AuthResult } from 'jslib-common/models/domain/authResult';\n\n@Directive()\nexport class SsoComponent {\n    identifier: string;\n    loggingIn = false;\n\n    formPromise: Promise<AuthResult>;\n    initiateSsoFormPromise: Promise<any>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n    onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'lock';\n    protected changePasswordRoute = 'set-password';\n    protected clientId: string;\n    protected redirectUri: string;\n    protected state: string;\n    protected codeChallenge: string;\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected route: ActivatedRoute,\n        protected storageService: StorageService, protected stateService: StateService,\n        protected platformUtilsService: PlatformUtilsService, protected apiService: ApiService,\n        protected cryptoFunctionService: CryptoFunctionService, protected environmentService: EnvironmentService,\n        protected passwordGenerationService: PasswordGenerationService) { }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.code != null && qParams.state != null) {\n                const codeVerifier = await this.storageService.get<string>(ConstantsService.ssoCodeVerifierKey);\n                const state = await this.storageService.get<string>(ConstantsService.ssoStateKey);\n                await this.storageService.remove(ConstantsService.ssoCodeVerifierKey);\n                await this.storageService.remove(ConstantsService.ssoStateKey);\n                if (qParams.code != null && codeVerifier != null && state != null && this.checkState(state, qParams.state)) {\n                    await this.logIn(qParams.code, codeVerifier, this.getOrgIdentiferFromState(qParams.state));\n                }\n            } else if (qParams.clientId != null && qParams.redirectUri != null && qParams.state != null &&\n                qParams.codeChallenge != null) {\n                this.redirectUri = qParams.redirectUri;\n                this.state = qParams.state;\n                this.codeChallenge = qParams.codeChallenge;\n                this.clientId = qParams.clientId;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n        this.initiateSsoFormPromise = this.preValidate();\n        if (await this.initiateSsoFormPromise) {\n            const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n            this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n        }\n    }\n\n    async preValidate(): Promise<boolean> {\n        if (this.identifier == null || this.identifier === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('ssoValidationFailed'),\n                this.i18nService.t('ssoIdentifierRequired'));\n            return false;\n        }\n        return await this.apiService.preValidateSso(this.identifier);\n    }\n\n    protected async buildAuthorizeUrl(returnUri?: string, includeUserIdentifier?: boolean): Promise<string> {\n        let codeChallenge = this.codeChallenge;\n        let state = this.state;\n\n        const passwordOptions: any = {\n            type: 'password',\n            length: 64,\n            uppercase: true,\n            lowercase: true,\n            numbers: true,\n            special: false,\n        };\n\n        if (codeChallenge == null) {\n            const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n            const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, 'sha256');\n            codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n            await this.storageService.save(ConstantsService.ssoCodeVerifierKey, codeVerifier);\n        }\n\n        if (state == null) {\n            state = await this.passwordGenerationService.generatePassword(passwordOptions);\n            if (returnUri) {\n                state += `_returnUri='${returnUri}'`;\n            }\n        }\n\n        // Add Organization Identifier to state\n        state += `_identifier=${this.identifier}`;\n\n        // Save state (regardless of new or existing)\n        await this.storageService.save(ConstantsService.ssoStateKey, state);\n\n        let authorizeUrl = this.environmentService.getIdentityUrl() + '/connect/authorize?' +\n            'client_id=' + this.clientId + '&redirect_uri=' + encodeURIComponent(this.redirectUri) + '&' +\n            'response_type=code&scope=api offline_access&' +\n            'state=' + state + '&code_challenge=' + codeChallenge + '&' +\n            'code_challenge_method=S256&response_mode=query&' +\n            'domain_hint=' + encodeURIComponent(this.identifier);\n\n        if (includeUserIdentifier) {\n            const userIdentifier = await this.apiService.getSsoUserIdentifier();\n            authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n        }\n\n        return authorizeUrl;\n    }\n\n    private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n        this.loggingIn = true;\n        try {\n            this.formPromise = this.authService.logInSso(code, codeVerifier, this.redirectUri);\n            const response = await this.formPromise;\n            if (response.twoFactor) {\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n                    this.onSuccessfulLoginTwoFactorNavigate();\n                } else {\n                    this.router.navigate([this.twoFactorRoute], {\n                        queryParams: {\n                            identifier: orgIdFromState,\n                            sso: 'true',\n                        },\n                    });\n                }\n            } else if (response.resetMasterPassword) {\n                if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n                    this.onSuccessfulLoginChangePasswordNavigate();\n                } else {\n                    this.router.navigate([this.changePasswordRoute], {\n                        queryParams: {\n                            identifier: orgIdFromState,\n                        },\n                    });\n                }\n            } else {\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch { }\n        this.loggingIn = false;\n    }\n\n    private getOrgIdentiferFromState(state: string): string {\n        if (state === null || state === undefined) {\n            return null;\n        }\n\n        const stateSplit = state.split('_identifier=');\n        return stateSplit.length > 1 ? stateSplit[1] : null;\n    }\n\n    private checkState(state: string, checkState: string): boolean {\n        if (state === null || state === undefined) {\n            return false;\n        }\n        if (checkState === null || checkState === undefined) {\n            return false;\n        }\n\n        const stateSplit = state.split('_identifier=');\n        const checkStateSplit = checkState.split('_identifier=');\n        return stateSplit[0] === checkStateSplit[0];\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent,\n} from 'jslib-angular/components/two-factor-options.component';\n\n@Component({\n    selector: 'app-two-factor-options',\n    templateUrl: 'two-factor-options.component.html',\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService) {\n        super(authService, router, i18nService, platformUtilsService, window);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{'twoStepOptions' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <div class=\"list-group list-group-flush\"> <a href=\"#\" appStopClick *ngFor=\"let p of providers\" (click)=\"choose(p)\" class=\"list-group-item list-group-item-action\"> <img [src]=\"'images/two-factor/' + p.type + '.png'\" alt=\"\" class=\"pull-right\"> <h3>{{p.name}}</h3> {{p.description}} </a> <a href=\"#\" appStopClick class=\"list-group-item list-group-item-action\" (click)=\"recover()\"> <h3>{{'recoveryCodeTitle' | i18n}}</h3> {{'recoveryCodeDesc' | i18n}} </a> </div> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </div> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { TwoFactorOptionsComponent } from './two-factor-options.component';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from 'jslib-angular/components/two-factor.component';\n\n@Component({\n    selector: 'app-two-factor',\n    templateUrl: 'two-factor.component.html',\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n    @ViewChild('twoFactorOptions', { read: ViewContainerRef, static: true }) twoFactorOptionsModal: ViewContainerRef;\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, apiService: ApiService,\n        platformUtilsService: PlatformUtilsService, stateService: StateService,\n        environmentService: EnvironmentService, private componentFactoryResolver: ComponentFactoryResolver,\n        storageService: StorageService, route: ActivatedRoute) {\n        super(authService, router, i18nService, apiService, platformUtilsService, window, environmentService,\n            stateService, storageService, route);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    anotherMethod() {\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        const modal = this.twoFactorOptionsModal.createComponent(factory).instance;\n        const childComponent = modal.show<TwoFactorOptionsComponent>(TwoFactorOptionsComponent,\n            this.twoFactorOptionsModal);\n\n        childComponent.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n            modal.close();\n            this.selectedProviderType = provider;\n            await this.init();\n        });\n        childComponent.onRecoverSelected.subscribe(() => {\n            modal.close();\n        });\n    }\n\n    async goAfterLogIn() {\n        const loginRedirect = await this.stateService.get<any>('loginRedirect');\n        if (loginRedirect != null) {\n            this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n            await this.stateService.remove('loginRedirect');\n        } else {\n            this.router.navigate([this.successRoute], {\n                queryParams: {\n                    identifier: this.identifier,\n                },\n            });\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate autocomplete=\"off\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\" [ngClass]=\"{'col-9': selectedProviderType === providerType.Duo || selectedProviderType === providerType.OrganizationDuo}\"> <p class=\"lead text-center mb-4\">{{title}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <ng-container *ngIf=\"selectedProviderType === providerType.Email || selectedProviderType === providerType.Authenticator\"> <p *ngIf=\"selectedProviderType === providerType.Authenticator\"> {{'enterVerificationCodeApp' | i18n}}</p> <p *ngIf=\"selectedProviderType === providerType.Email\"> {{'enterVerificationCodeEmail' | i18n : twoFactorEmail}} </p> <div class=\"form-group\"> <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label> <input id=\"code\" type=\"text\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\" required appAutofocus inputmode=\"tel\" appInputVerbatim> <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\"> <a href=\"#\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\" *ngIf=\"selectedProviderType === providerType.Email\"> {{'sendVerificationCodeEmailAgain' | i18n}} </a> </small> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\"> <p class=\"text-center\">{{'insertYubiKey' | i18n}}</p> <img src=\"images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\"> <div class=\"form-group\"> <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label> <input id=\"code\" type=\"password\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\" required appAutofocus appInputVerbatim autocomplete=\"new-password\"> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\"> <div id=\"web-authn-frame\" class=\"mb-3\"> <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe> </div> </ng-container> <ng-container *ngIf=\"selectedProviderType === providerType.Duo ||\n                        selectedProviderType === providerType.OrganizationDuo\"> <div id=\"duo-frame\" class=\"mb-3\"> <iframe id=\"duo_iframe\"></iframe> </div> </ng-container> <i class=\"fa fa-spinner text-muted fa-spin pull-right\" title=\"{{'loading' | i18n}}\" *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\" aria-hidden=\"true\"></i> <div class=\"form-check\" *ngIf=\"selectedProviderType != null\"> <input id=\"remember\" type=\"checkbox\" name=\"Remember\" class=\"form-check-input\" [(ngModel)]=\"remember\"> <label for=\"remember\" class=\"form-check-label\">{{'rememberMe' | i18n}}</label> </div> <ng-container *ngIf=\"selectedProviderType == null\"> <p>{{'noTwoStepProviders' | i18n}}</p> <p>{{'noTwoStepProviders2' | i18n}}</p> </ng-container> <hr> <div class=\"d-flex mb-3\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\" *ngIf=\"selectedProviderType != null && selectedProviderType !== providerType.Duo && \n                        selectedProviderType !== providerType.OrganizationDuo && selectedProviderType !== providerType.WebAuthn\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'continue' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> <div class=\"text-center\"> <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{'useAnotherTwoStepMethod' | i18n}}</a> </div> </div> </div> </div> </div> </form> <ng-template #twoFactorOptions></ng-template> ","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorEmailRequest extends PasswordVerificationRequest {\n    email: string;\n\n    constructor(email: string, masterPasswordHash: string) {\n        super();\n        this.masterPasswordHash = masterPasswordHash;\n        this.email = email;\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class AuthResult {\n    twoFactor: boolean = false;\n    captchaSiteKey: string = '';\n    resetMasterPassword: boolean = false;\n    twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string; }> = null;\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from 'jslib-angular/components/update-temp-password.component';\n\n@Component({\n    selector: 'app-update-temp-password',\n    templateUrl: 'update-temp-password.component.html',\n})\n\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n    constructor(i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService, policyService: PolicyService,\n        cryptoService: CryptoService, userService: UserService,\n        messagingService: MessagingService, apiService: ApiService) {\n        super(i18nService, platformUtilsService, passwordGenerationService, policyService, cryptoService,\n            userService, messagingService, apiService);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-4\"> <p class=\"lead text-center mb-4\">{{'updateMasterPassword' | i18n}}</p> <div class=\"card d-block\"> <div class=\"card-body\"> <app-callout type=\"warning\">{{'updateMasterPasswordWarning' | i18n}} </app-callout> <div class=\"form-group\"> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\"> {{'masterPasswordPolicyInEffect' | i18n}} <ul class=\"mb-0\"> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\"> {{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\"> {{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\"> {{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\"> {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <div class=\"d-flex\"> <div class=\"w-100\"> <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordHash\" class=\"text-monospace form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> <div> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <div class=\"progress-bar invisible\"></div> </div> </div> </div> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label> <div class=\"d-flex\"> <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"MasterPasswordRetype\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim> <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-group\"> <label for=\"hint\">{{'masterPassHint' | i18n}}</label> <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\"> <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small> </div> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\"> {{'logOut' | i18n}} </button> </div> </div> </div> </div> </div> </form> ","export class OrganizationUserResetPasswordRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { VerifyEmailRequest } from 'jslib-common/models/request/verifyEmailRequest';\n\n@Component({\n    selector: 'app-verify-email-token',\n    templateUrl: 'verify-email-token.component.html',\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private apiService: ApiService, private userService: UserService) { }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async qParams => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null) {\n                try {\n                    await this.apiService.postAccountVerifyEmailToken(\n                        new VerifyEmailRequest(qParams.userId, qParams.token));\n                    const authed = await this.userService.isAuthenticated();\n                    if (authed) {\n                        await this.apiService.refreshIdentityToken();\n                    }\n                    this.toasterService.popAsync('success', null, this.i18nService.t('emailVerified'));\n                    this.router.navigate(['/']);\n                    return;\n                } catch { }\n            }\n            this.toasterService.popAsync('error', null, this.i18nService.t('emailVerifiedFailed'));\n            this.router.navigate(['/']);\n        });\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\"> <div> <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\"> <p class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { VerifyDeleteRecoverRequest } from 'jslib-common/models/request/verifyDeleteRecoverRequest';\n\n@Component({\n    selector: 'app-verify-recover-delete',\n    templateUrl: 'verify-recover-delete.component.html',\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n    email: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private token: string;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async qParams => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n                this.userId = qParams.userId;\n                this.token = qParams.token;\n                this.email = qParams.email;\n            } else {\n                this.router.navigate(['/']);\n            }\n        });\n    }\n\n    async submit() {\n        try {\n            const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n            this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-md-center mt-5\"> <div class=\"col-5\"> <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p> <div class=\"card\"> <div class=\"card-body\"> <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout> <p class=\"text-center\"> <strong>{{email}}</strong> </p> <p>{{'deleteRecoverConfirmDesc' | i18n}}</p> <hr> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-danger btn-block btn-submit\" [disabled]=\"form.loading\"> <span>{{'deleteAccount' | i18n}}</span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"> {{'cancel' | i18n}} </a> </div> </div> </div> </div> </div> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { CollectionRequest } from 'jslib-common/models/request/collectionRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-collection-add-edit',\n    templateUrl: 'collection-add-edit.component.html',\n})\nexport class CollectionAddEditComponent implements OnInit {\n    @Input() collectionId: string;\n    @Input() organizationId: string;\n    @Output() onSavedCollection = new EventEmitter();\n    @Output() onDeletedCollection = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    accessGroups: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    private orgKey: SymmetricCryptoKey;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService, private userService: UserService) { }\n\n    async ngOnInit() {\n        const organization = await this.userService.getOrganization(this.organizationId);\n        this.accessGroups = organization.useGroups;\n        this.editMode = this.loading = this.collectionId != null;\n        if (this.accessGroups) {\n            const groupsResponse = await this.apiService.getGroups(this.organizationId);\n            this.groups = groupsResponse.data.map(r => r).sort(Utils.getSortFunction(this.i18nService, 'name'));\n        }\n        this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editCollection');\n            try {\n                const collection = await this.apiService.getCollectionDetails(this.organizationId, this.collectionId);\n                this.name = await this.cryptoService.decryptToUtf8(new EncString(collection.name), this.orgKey);\n                this.externalId = collection.externalId;\n                if (collection.groups != null && this.groups.length > 0) {\n                    collection.groups.forEach(s => {\n                        const group = this.groups.filter(g => !g.accessAll && g.id === s.id);\n                        if (group != null && group.length > 0) {\n                            (group[0] as any).checked = true;\n                            (group[0] as any).readOnly = s.readOnly;\n                            (group[0] as any).hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addCollection');\n        }\n\n        this.groups.forEach(g => {\n            if (g.accessAll) {\n                (g as any).checked = true;\n            }\n        });\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        if (g.accessAll) {\n            return;\n        }\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n            (g as any).hidePasswords = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach(g => this.check(g, select));\n    }\n\n    async submit() {\n        if (this.orgKey == null) {\n            throw new Error('No encryption key for this organization.');\n        }\n\n        const request = new CollectionRequest();\n        request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n        request.externalId = this.externalId;\n        request.groups = this.groups.filter(g => (g as any).checked && !g.accessAll)\n            .map(g => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords));\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putCollection(this.organizationId, this.collectionId, request);\n            } else {\n                this.formPromise = this.apiService.postCollection(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedCollectionId' : 'createdCollectionId', this.name));\n            this.onSavedCollection.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', this.name));\n            this.onDeletedCollection.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required appAutofocus> </div> <div class=\"form-group\"> <label for=\"externalId\">{{'externalId' | i18n}}</label> <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\"> <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small> </div> <ng-container *ngIf=\"accessGroups\"> <h3 class=\"mt-4 d-flex mb-0\"> {{'groupAccess' | i18n}} <div class=\"ml-auto\" *ngIf=\"groups && groups.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div *ngIf=\"!groups || !groups.length\"> {{'noGroupsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let g of groups; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(g)\"> <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\" [disabled]=\"g.accessAll\" appStopProp> </td> <td (click)=\"check(g)\"> {{g.name}} <ng-container *ngIf=\"g.accessAll\"> <i class=\"fa fa-th text-muted fa-fw\" title=\"{{'groupAccessAllItems' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'groupAccessAllItems' | i18n}}</span> </ng-container> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"g.hidePasswords\" name=\"Groups[{{i}}].HidePasswords\" [disabled]=\"!g.checked || g.accessAll\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"g.readOnly\" name=\"Groups[{{i}}].ReadOnly\" [disabled]=\"!g.checked || g.accessAll\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { Collection } from '../domain/collection';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class CollectionRequest {\n    name: string;\n    externalId: string;\n    groups: SelectionReadOnlyRequest[] = [];\n\n    constructor(collection?: Collection) {\n        if (collection == null) {\n            return;\n        }\n        this.name = collection.name ? collection.name.encryptedString : null;\n        this.externalId = collection.externalId;\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport {\n    CollectionDetailsResponse,\n    CollectionResponse,\n} from 'jslib-common/models/response/collectionResponse';\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { ModalComponent } from '../../modal.component';\nimport { CollectionAddEditComponent } from './collection-add-edit.component';\nimport { EntityUsersComponent } from './entity-users.component';\n\n@Component({\n    selector: 'app-org-manage-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    collections: CollectionView[];\n    pagedCollections: CollectionView[];\n    searchText: string;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedCollectionsCount = 0;\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private collectionService: CollectionService, private componentFactoryResolver: ComponentFactoryResolver,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\n        private searchService: SearchService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const organization = await this.userService.getOrganization(this.organizationId);\n        let response: ListResponse<CollectionResponse>;\n        if (organization.canManageAllCollections) {\n            response = await this.apiService.getCollections(this.organizationId);\n        } else {\n            response = await this.apiService.getUserCollections();\n        }\n        const collections = response.data.filter(c => c.organizationId === this.organizationId).map(r =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n        this.resetPaging();\n        this.loading = false;\n    }\n\n    loadMore() {\n        if (!this.collections || this.collections.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedCollections.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n            pagedSize = this.pagedCollectionsCount;\n        }\n        if (this.collections.length > pagedLength) {\n            this.pagedCollections =\n                this.pagedCollections.concat(this.collections.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedCollectionsCount = this.pagedCollections.length;\n        this.didScroll = this.pagedCollections.length > this.pageSize;\n    }\n\n    edit(collection: CollectionView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionAddEditComponent>(\n            CollectionAddEditComponent, this.addEditModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.collectionId = collection != null ? collection.id : null;\n        childComponent.onSavedCollection.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedCollection.subscribe(() => {\n            this.modal.close();\n            this.removeCollection(collection);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(collection: CollectionView) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), collection.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteCollection(this.organizationId, collection.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', collection.name));\n            this.removeCollection(collection);\n        } catch { }\n    }\n\n    users(collection: CollectionView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.usersModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityUsersComponent>(\n            EntityUsersComponent, this.usersModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.entity = 'collection';\n        childComponent.entityId = collection.id;\n        childComponent.entityName = collection.name;\n\n        childComponent.onEditedUsers.subscribe(() => {\n            this.load();\n            this.modal.close();\n        });\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async resetPaging() {\n        this.pagedCollections = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.collections && this.collections.length > this.pageSize;\n    }\n\n    private removeCollection(collection: CollectionView) {\n        const index = this.collections.indexOf(collection);\n        if (index > -1) {\n            this.collections.splice(index, 1);\n            this.resetPaging();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'collections' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newCollection' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedCollections : collections | search:searchText:'name':'id') as searchedCollections\"> <p *ngIf=\"!searchedCollections.length\">{{'noCollectionsInList' | i18n}}</p> <table class=\"table table-hover table-list\" *ngIf=\"searchedCollections.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let c of searchedCollections\"> <td> <a href=\"#\" appStopClick (click)=\"edit(c)\">{{c.name}}</a> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(c)\"> <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i> {{'users' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> <ng-template #addEdit></ng-template> <ng-template #usersTemplate></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { EventResponse } from 'jslib-common/models/response/eventResponse';\n\nimport { EventService } from '../../services/event.service';\n\nimport { BaseEventsComponent } from '../../common/base.events.component';\n\n@Component({\n    selector: 'app-org-events',\n    templateUrl: 'events.component.html',\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n    exportFileName: string = 'org-events';\n    organizationId: string;\n    organization: Organization;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute, eventService: EventService,\n        i18nService: I18nService, toasterService: ToasterService, private userService: UserService,\n        exportService: ExportService, platformUtilsService: PlatformUtilsService, private router: Router,\n        logService: LogService, private userNamePipe: UserNamePipe) {\n        super(eventService, i18nService, toasterService, exportService, platformUtilsService, logService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            this.organization = await this.userService.getOrganization(this.organizationId);\n            if (this.organization == null || !this.organization.useEvents) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n\n            await this.load();\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\n        response.data.forEach(u => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n        });\n\n        if (this.organization.providerId != null) {\n            try {\n                const provider = await this.userService.getProvider(this.organization.providerId);\n                if (provider != null && (await this.userService.getProvider(this.organization.providerId)).canManageUsers) {\n                    const providerUsersResponse = await this.apiService.getProviderUsers(this.organization.providerId);\n                    providerUsersResponse.data.forEach(u => {\n                        const name = this.userNamePipe.transform(u);\n                        this.orgUsersUserIdMap.set(u.userId, { name: `${name} (${this.organization.providerName})`, email: u.email });\n                    });\n                }\n            } catch (e) {\n                this.logService.warning(e);\n            }\n        }\n\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n        return this.apiService.getEventsOrganization(this.organizationId, startDate, endDate, continuationToken);\n    }\n\n    protected getUserName(r: EventResponse, userId: string) {\n        if (userId == null) {\n            return null;\n        }\n\n        if (this.orgUsersUserIdMap.has(userId)) {\n            return this.orgUsersUserIdMap.get(userId);\n        }\n\n        if (r.providerId != null && r.providerId === this.organization.providerId) {\n            return {\n                'name': this.organization.providerName,\n            };\n        }\n\n        return null;\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'eventLogs' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"form-inline\"> <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\" placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> <span class=\"mx-2\">-</span> <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label> <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\" placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\" (change)=\"dirtyDates = true\"> </div> <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshForm.loading\"> <i class=\"fa fa-refresh fa-fw\" aria-hidden=\"true\" [ngClass]=\"{'fa-spin': loaded && refreshForm.loading}\"></i> {{'refresh' | i18n}} </button> </form> <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\"> <button type=\"button\" class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\" [ngClass]=\"{loading:exportForm.loading}\" (click)=\"exportEvents()\" [disabled]=\"loaded && exportForm.loading || dirtyDates\"> <i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\"></i> <span>{{'export' | i18n}}</span> </button> </form> </div> </div> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p *ngIf=\"!events || !events.length\">{{'noEventsInList' | i18n}}</p> <table class=\"table table-hover\" *ngIf=\"events && events.length\"> <thead> <tr> <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th> <th class=\"border-top-0\" width=\"40\"> <span class=\"sr-only\">{{'device' | i18n}}</span> </th> <th class=\"border-top-0\" width=\"150\">{{'user' | i18n}}</th> <th class=\"border-top-0\">{{'event' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let e of events\"> <td>{{e.date | date:'medium'}}</td> <td> <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span> </td> <td> <span title=\"{{e.userEmail}}\">{{e.userName}}</span> </td> <td [innerHTML]=\"e.message\"></td> </tr> </tbody> </table> <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\" (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'loadMore' | i18n}}</span> </button> </ng-container> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { GroupRequest } from 'jslib-common/models/request/groupRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\n@Component({\n    selector: 'app-group-add-edit',\n    templateUrl: 'group-add-edit.component.html',\n})\nexport class GroupAddEditComponent implements OnInit {\n    @Input() groupId: string;\n    @Input() organizationId: string;\n    @Output() onSavedGroup = new EventEmitter();\n    @Output() onDeletedGroup = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private collectionService: CollectionService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.groupId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editGroup');\n            try {\n                const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n                this.access = group.accessAll ? 'all' : 'selected';\n                this.name = group.name;\n                this.externalId = group.externalId;\n                if (group.collections != null && this.collections != null) {\n                    group.collections.forEach(s => {\n                        const collection = this.collections.filter(c => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                            collection[0].hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addGroup');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map(r =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n\n    async submit() {\n        const request = new GroupRequest();\n        request.name = this.name;\n        request.externalId = this.externalId;\n        request.accessAll = this.access === 'all';\n        if (!request.accessAll) {\n            request.collections = this.collections.filter(c => (c as any).checked)\n                .map(c => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n        }\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n            } else {\n                this.formPromise = this.apiService.postGroup(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedGroupId' : 'createdGroupId', this.name));\n            this.onSavedGroup.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', this.name));\n            this.onDeletedGroup.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required> </div> <div class=\"form-group\"> <label for=\"externalId\">{{'externalId' | i18n}}</label> <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\"> <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small> </div> <h3 class=\"mt-4 d-flex\"> <div class=\"mb-2\"> {{'accessControl' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessAll\"> {{'groupAccessAllItems' | i18n}} </label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessSelected\"> {{'groupAccessSelectedCollections' | i18n}} </label> </div> </div> <ng-container *ngIf=\"access === 'selected'\"> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let c of collections; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(c)\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(c)\"> {{c.name}} </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\" name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\" [disabled]=\"!c.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" aria-hidden=\"true\" title=\"{{'loading' | i18n}}\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { ModalComponent } from '../../modal.component';\nimport { EntityUsersComponent } from './entity-users.component';\nimport { GroupAddEditComponent } from './group-add-edit.component';\n\n@Component({\n    selector: 'app-org-groups',\n    templateUrl: 'groups.component.html',\n})\nexport class GroupsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    groups: GroupResponse[];\n    pagedGroups: GroupResponse[];\n    searchText: string;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedGroupsCount = 0;\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private toasterService: ToasterService, private platformUtilsService: PlatformUtilsService,\n        private userService: UserService, private router: Router,\n        private searchService: SearchService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.useGroups) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            await this.load();\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getGroups(this.organizationId);\n        const groups = response.data != null && response.data.length > 0 ? response.data : [];\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n        this.resetPaging();\n        this.loading = false;\n    }\n\n    loadMore() {\n        if (!this.groups || this.groups.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedGroups.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n            pagedSize = this.pagedGroupsCount;\n        }\n        if (this.groups.length > pagedLength) {\n            this.pagedGroups = this.pagedGroups.concat(this.groups.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedGroupsCount = this.pagedGroups.length;\n        this.didScroll = this.pagedGroups.length > this.pageSize;\n    }\n\n    edit(group: GroupResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<GroupAddEditComponent>(\n            GroupAddEditComponent, this.addEditModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.groupId = group != null ? group.id : null;\n        childComponent.onSavedGroup.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedGroup.subscribe(() => {\n            this.modal.close();\n            this.removeGroup(group);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(group: GroupResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), group.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteGroup(this.organizationId, group.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', group.name));\n            this.removeGroup(group);\n        } catch { }\n    }\n\n    users(group: GroupResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.usersModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityUsersComponent>(\n            EntityUsersComponent, this.usersModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.entity = 'group';\n        childComponent.entityId = group.id;\n        childComponent.entityName = group.name;\n\n        childComponent.onEditedUsers.subscribe(() => {\n            this.modal.close();\n        });\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async resetPaging() {\n        this.pagedGroups = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.groups && this.groups.length > this.pageSize;\n    }\n\n    private removeGroup(group: GroupResponse) {\n        const index = this.groups.indexOf(group);\n        if (index > -1) {\n            this.groups.splice(index, 1);\n            this.resetPaging();\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'groups' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newGroup' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedGroups : groups | search:searchText:'name':'id') as searchedGroups\"> <p *ngIf=\"!searchedGroups.length\">{{'noGroupsInList' | i18n}}</p> <table class=\"table table-hover table-list\" *ngIf=\"searchedGroups.length\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let g of searchedGroups\"> <td> <a href=\"#\" appStopClick (click)=\"edit(g)\">{{g.name}}</a> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\"> <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i> {{'users' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> <ng-template #addEdit></ng-template> <ng-template #usersTemplate></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-org-manage',\n    templateUrl: 'manage.component.html',\n})\nexport class ManageComponent implements OnInit {\n    organization: Organization;\n    accessPolicies = false;\n    accessGroups = false;\n    accessEvents = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.accessPolicies = this.organization.usePolicies;\n            this.accessEvents = this.organization.useEvents;\n            this.accessGroups = this.organization.useGroups;\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\" *ngIf=\"organization\"> <div class=\"card-header\">{{'manage' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"people\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageUsers\"> {{'people' | i18n}} </a> <a routerLink=\"collections\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageAssignedCollections || organization.canManageAllCollections\"> {{'collections' | i18n}} </a> <a routerLink=\"groups\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManageGroups && accessGroups\"> {{'groups' | i18n}} </a> <a routerLink=\"policies\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canManagePolicies && accessPolicies\"> {{'policies' | i18n}} </a> <a routerLink=\"events\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"organization.canAccessEventLogs && accessEvents\"> {{'eventLogs' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUserBulkRequest } from 'jslib-common/models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from 'jslib-common/models/request/organizationUserConfirmRequest';\n\nimport { ListResponse } from 'jslib-common/models/response/listResponse';\nimport { OrganizationUserBulkResponse } from 'jslib-common/models/response/organizationUserBulkResponse';\nimport { OrganizationUserUserDetailsResponse } from 'jslib-common/models/response/organizationUserResponse';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { ProviderUserType } from 'jslib-common/enums/providerUserType';\n\nimport { SearchPipe } from 'jslib-angular/pipes/search.pipe';\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { BasePeopleComponent } from '../../common/base.people.component';\nimport { ModalComponent } from '../../modal.component';\nimport { BulkConfirmComponent } from './bulk/bulk-confirm.component';\nimport { BulkRemoveComponent } from './bulk/bulk-remove.component';\nimport { BulkStatusComponent } from './bulk/bulk-status.component';\nimport { EntityEventsComponent } from './entity-events.component';\nimport { ResetPasswordComponent } from './reset-password.component';\nimport { UserAddEditComponent } from './user-add-edit.component';\nimport { UserGroupsComponent } from './user-groups.component';\n\n@Component({\n    selector: 'app-org-people',\n    templateUrl: 'people.component.html',\n})\nexport class PeopleComponent extends BasePeopleComponent<OrganizationUserUserDetailsResponse> implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('groupsTemplate', { read: ViewContainerRef, static: true }) groupsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n    @ViewChild('resetPasswordTemplate', { read: ViewContainerRef, static: true }) resetPasswordModalRef: ViewContainerRef;\n    @ViewChild('bulkStatusTemplate', { read: ViewContainerRef, static: true }) bulkStatusModalRef: ViewContainerRef;\n    @ViewChild('bulkConfirmTemplate', { read: ViewContainerRef, static: true }) bulkConfirmModalRef: ViewContainerRef;\n    @ViewChild('bulkRemoveTemplate', { read: ViewContainerRef, static: true }) bulkRemoveModalRef: ViewContainerRef;\n\n    userType = ProviderUserType;\n    userStatusType = OrganizationUserStatusType;\n\n    organizationId: string;\n    status: OrganizationUserStatusType = null;\n    accessEvents = false;\n    accessGroups = false;\n    canResetPassword = false; // User permission (admin/custom)\n    orgUseResetPassword = false; // Org plan ability\n    orgHasKeys = false; // Org public/private keys\n    orgResetPasswordPolicyEnabled = false;\n    callingUserType: OrganizationUserType = null;\n\n    constructor(apiService: ApiService, private route: ActivatedRoute,\n        i18nService: I18nService, componentFactoryResolver: ComponentFactoryResolver,\n        platformUtilsService: PlatformUtilsService, toasterService: ToasterService,\n        cryptoService: CryptoService, private userService: UserService, private router: Router,\n        storageService: StorageService, searchService: SearchService,\n        validationService: ValidationService, private policyService: PolicyService,\n        logService: LogService, searchPipe: SearchPipe, userNamePipe: UserNamePipe, private syncService: SyncService) {\n            super(apiService, searchService, i18nService, platformUtilsService, toasterService, cryptoService,\n                storageService, validationService, componentFactoryResolver, logService, searchPipe, userNamePipe);\n        }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (!organization.canManageUsers) {\n                this.router.navigate(['../collections'], { relativeTo: this.route });\n                return;\n            }\n            this.accessEvents = organization.useEvents;\n            this.accessGroups = organization.useGroups;\n            this.canResetPassword = organization.canManageUsersPassword;\n            this.orgUseResetPassword = organization.useResetPassword;\n            this.callingUserType = organization.type;\n            this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n            // Backfill pub/priv key if necessary\n            if (this.canResetPassword && !this.orgHasKeys) {\n                const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n                const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n                const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n                const response = await this.apiService.postOrganizationKeys(this.organizationId, request);\n                if (response != null) {\n                    this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n                    await this.syncService.fullSync(true); // Replace oganizations with new data\n                } else {\n                    throw new Error(this.i18nService.t('resetPasswordOrgKeysError'));\n                }\n            }\n\n            await this.load();\n\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.searchText = qParams.search;\n                if (qParams.viewEvents != null) {\n                    const user = this.users.filter(u => u.id === qParams.viewEvents);\n                    if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n                        this.events(user[0]);\n                    }\n                }\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const policies = await this.policyService.getAll(PolicyType.ResetPassword);\n        this.orgResetPasswordPolicyEnabled = policies.some(p => p.organizationId === this.organizationId && p.enabled);\n        super.load();\n    }\n\n    getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n        return this.apiService.getOrganizationUsers(this.organizationId);\n    }\n\n    deleteUser(id: string): Promise<any> {\n        return this.apiService.deleteOrganizationUser(this.organizationId, id);\n    }\n\n    reinviteUser(id: string): Promise<any> {\n        return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n    }\n\n    async confirmUser(user: OrganizationUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n        const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n        const request = new OrganizationUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n    }\n\n    allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n        // Hierarchy check\n        let callingUserHasPermission = false;\n\n        switch (this.callingUserType) {\n            case OrganizationUserType.Owner:\n                callingUserHasPermission = true;\n                break;\n            case OrganizationUserType.Admin:\n                callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n                break;\n            case OrganizationUserType.Custom:\n                callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner\n                    && orgUser.type !== OrganizationUserType.Admin;\n                break;\n        }\n\n        // Final\n        return this.canResetPassword && callingUserHasPermission && this.orgUseResetPassword && this.orgHasKeys\n            && orgUser.resetPasswordEnrolled && this.orgResetPasswordPolicyEnabled\n            && orgUser.status === OrganizationUserStatusType.Confirmed;\n    }\n\n    showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n        return this.orgUseResetPassword && orgUser.resetPasswordEnrolled && this.orgResetPasswordPolicyEnabled;\n    }\n\n    edit(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<UserAddEditComponent>(\n            UserAddEditComponent, this.addEditModalRef);\n\n        childComponent.name = this.userNamePipe.transform(user);\n        childComponent.organizationId = this.organizationId;\n        childComponent.organizationUserId = user != null ? user.id : null;\n        childComponent.onSavedUser.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedUser.subscribe(() => {\n            this.modal.close();\n            this.removeUser(user);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    groups(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.groupsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<UserGroupsComponent>(\n            UserGroupsComponent, this.groupsModalRef);\n\n        childComponent.name = this.userNamePipe.transform(user);\n        childComponent.organizationId = this.organizationId;\n        childComponent.organizationUserId = user != null ? user.id : null;\n        childComponent.onSavedUser.subscribe(() => {\n            this.modal.close();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async bulkRemove() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkRemoveModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show(BulkRemoveComponent, this.bulkRemoveModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.users = this.getCheckedUsers();\n\n        this.modal.onClosed.subscribe(async () => {\n            await this.load();\n            this.modal = null;\n        });\n    }\n\n    async bulkReinvite() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const users = this.getCheckedUsers();\n        const filteredUsers = users.filter(u => u.status === OrganizationUserStatusType.Invited);\n\n        if (filteredUsers.length <= 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('noSelectedUsersApplicable'));\n            return;\n        }\n\n\n        try {\n            const request = new OrganizationUserBulkRequest(filteredUsers.map(user => user.id));\n            const response = this.apiService.postManyOrganizationUserReinvite(this.organizationId, request);\n            this.showBulkStatus(users, filteredUsers, response, this.i18nService.t('bulkReinviteMessage'));\n        } catch (e) {\n            this.validationService.showError(e);\n        }\n        this.actionPromise = null;\n    }\n\n    async bulkConfirm() {\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkConfirmModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show(BulkConfirmComponent, this.bulkConfirmModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.users = this.getCheckedUsers();\n\n        this.modal.onClosed.subscribe(async () => {\n            await this.load();\n            this.modal = null;\n        });\n    }\n\n    async events(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityEventsComponent>(\n            EntityEventsComponent, this.eventsModalRef);\n\n        childComponent.name = this.userNamePipe.transform(user);\n        childComponent.organizationId = this.organizationId;\n        childComponent.entityId = user.id;\n        childComponent.showUser = false;\n        childComponent.entity = 'user';\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async resetPassword(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.resetPasswordModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ResetPasswordComponent>(\n            ResetPasswordComponent, this.resetPasswordModalRef);\n\n        childComponent.name = this.userNamePipe.transform(user);\n        childComponent.email = user != null ? user.email : null;\n        childComponent.organizationId = this.organizationId;\n        childComponent.id = user != null ? user.id : null;\n\n        childComponent.onPasswordReset.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private async showBulkStatus(users: OrganizationUserUserDetailsResponse[], filteredUsers: OrganizationUserUserDetailsResponse[],\n        request: Promise<ListResponse<OrganizationUserBulkResponse>>, successfullMessage: string) {\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkStatusModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkStatusComponent>(\n            BulkStatusComponent, this.bulkStatusModalRef);\n\n        childComponent.loading = true;\n\n        // Workaround to handle closing the modal shortly after it has been opened\n        let close = false;\n        this.modal.onShown.subscribe(() => {\n            if (close) {\n                this.modal.close();\n            }\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        try {\n            const response = await request;\n\n            if (this.modal) {\n                const keyedErrors: any = response.data.filter(r => r.error !== '').reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n                const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n                childComponent.users = users.map(user => {\n                    let message = keyedErrors[user.id] ?? successfullMessage;\n                    if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n                        message = this.i18nService.t('bulkFilteredMessage');\n                    }\n\n                    return {\n                        user: user,\n                        error: keyedErrors.hasOwnProperty(user.id),\n                        message: message,\n                    };\n                });\n                childComponent.loading = false;\n            }\n        } catch {\n            close = true;\n            if (this.modal) {\n                this.modal.close();\n            }\n        }\n    }\n}\n","<div class=\"page-header d-flex\"> <h1>{{'people' | i18n}}</h1> <div class=\"ml-auto d-flex\"> <div class=\"btn-group btn-group-sm\" role=\"group\"> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == null}\" (click)=\"filter(null)\"> {{'all' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{allCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Invited}\" (click)=\"filter(userStatusType.Invited)\"> {{'invited' | i18n}} <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{invitedCount}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == userStatusType.Accepted}\" (click)=\"filter(userStatusType.Accepted)\"> {{'accepted' | i18n}} <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{acceptedCount}}</span> </button> </div> <div class=\"ml-3\"> <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label> <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\" [(ngModel)]=\"searchText\"> </div> <div class=\"dropdown ml-3\" appListDropdown> <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\"> <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'reinviteSelected' | i18n}} </button> <button class=\"dropdown-item text-success\" appStopClick (click)=\"bulkConfirm()\" *ngIf=\"showBulkConfirmUsers\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirmSelected' | i18n}} </button> <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </button> <div class=\"dropdown-divider\"></div> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\"> <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i> {{'selectAll' | i18n}} </button> <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\"> <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i> {{'unselectAll' | i18n}} </button> </div> </div> <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'inviteUser' | i18n}} </button> </div> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading && (isPaging() ? pagedUsers : users | search:searchText:'name':'email':'id') as searchedUsers\"> <p *ngIf=\"!searchedUsers.length\">{{'noUsersInList' | i18n}}</p> <ng-container *ngIf=\"searchedUsers.length\"> <app-callout type=\"info\" title=\"{{'confirmUsers' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"showConfirmUsers\"> {{'usersNeedConfirmed' | i18n}} </app-callout> <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\"> <tbody> <tr *ngFor=\"let u of searchedUsers\"> <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp> </td> <td width=\"30\"> <app-avatar [data]=\"u | userName\" [email]=\"u.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" appStopClick (click)=\"edit(u)\">{{u.email}}</a> <span class=\"badge badge-secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{'accepted' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small> </td> <td> <ng-container *ngIf=\"u.twoFactorEnabled\"> <i class=\"fa fa-lock\" title=\"{{'userUsingTwoStep' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'userUsingTwoStep' | i18n}}</span> </ng-container> <ng-container *ngIf=\"showEnrolledStatus(u)\"> <i class=\"fa fa-key\" title=\"{{'enrolledPasswordReset' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'enrolledPasswordReset' | i18n}}</span> </ng-container> </td> <td> <span *ngIf=\"u.type === userType.Owner\">{{'owner' | i18n}}</span> <span *ngIf=\"u.type === userType.Admin\">{{'admin' | i18n}}</span> <span *ngIf=\"u.type === userType.Manager\">{{'manager' | i18n}}</span> <span *ngIf=\"u.type === userType.User\">{{'user' | i18n}}</span> <span *ngIf=\"u.type === userType.Custom\">{{'custom' | i18n}}</span> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(u)\" *ngIf=\"u.status === userStatusType.Invited\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'resendInvitation' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(u)\" *ngIf=\"u.status === userStatusType.Accepted\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirm' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"groups(u)\" *ngIf=\"accessGroups\"> <i class=\"fa fa-fw fa-sitemap\" aria-hidden=\"true\"></i> {{'groups' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"events(u)\" *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"> <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i> {{'eventLogs' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"resetPassword(u)\" *ngIf=\"allowResetPassword(u)\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'resetPassword' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </ng-container> <ng-template #addEdit></ng-template> <ng-template #groupsTemplate></ng-template> <ng-template #eventsTemplate></ng-template> <ng-template #confirmTemplate></ng-template> <ng-template #resetPasswordTemplate></ng-template> <ng-template #bulkStatusTemplate></ng-template> <ng-template #bulkConfirmTemplate></ng-template> <ng-template #bulkRemoveTemplate></ng-template> ","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { OrganizationUserResetPasswordRequest } from 'jslib-common/models/request/organizationUserResetPasswordRequest';\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: 'reset-password.component.html',\n})\nexport class ResetPasswordComponent implements OnInit {\n    @Input() name: string;\n    @Input() email: string;\n    @Input() id: string;\n    @Input() organizationId: string;\n    @Output() onPasswordReset = new EventEmitter();\n\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n    newPassword: string = null;\n    showPassword: boolean = false;\n    masterPasswordScore: number;\n    formPromise: Promise<any>;\n    private newPasswordStrengthTimeout: any;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private passwordGenerationService: PasswordGenerationService,\n        private policyService: PolicyService, private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        // Get Enforced Policy Options\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    }\n\n    get loggedOutWarningName() {\n        return this.name != null ? this.name : this.i18nService.t('thisUser');\n    }\n\n    getPasswordScoreAlertDisplay() {\n        if (this.enforcedPolicyOptions == null) {\n            return '';\n        }\n\n        let str: string;\n        switch (this.enforcedPolicyOptions.minComplexity) {\n            case 4:\n                str = this.i18nService.t('strong');\n                break;\n            case 3:\n                str = this.i18nService.t('good');\n                break;\n            default:\n                str = this.i18nService.t('weak');\n                break;\n        }\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\n    }\n\n    async generatePassword() {\n        const options = (await this.passwordGenerationService.getOptions())[0];\n        this.newPassword = await this.passwordGenerationService.generatePassword(options);\n        this.updatePasswordStrength();\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('newPassword').focus();\n    }\n\n    copy(value: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n\n    async submit() {\n        // Validation\n        if (this.newPassword == null || this.newPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n\n        if (this.newPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return false;\n        }\n\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(this.masterPasswordScore, this.newPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return;\n        }\n\n        if (this.masterPasswordScore < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return false;\n            }\n        }\n\n        // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n        try {\n            this.formPromise = this.apiService.getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n                .then(async response => {\n                    if (response == null) {\n                        throw new Error(this.i18nService.t('resetPasswordDetailsError'));\n                    }\n\n                    const kdfType = response.kdf;\n                    const kdfIterations = response.kdfIterations;\n                    const resetPasswordKey = response.resetPasswordKey;\n                    const encryptedPrivateKey = response.encryptedPrivateKey;\n\n                    // Decrypt Organization's encrypted Private Key with org key\n                    const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n                    const decPrivateKey = await this.cryptoService.decryptToBytes(new EncString(encryptedPrivateKey), orgSymKey);\n\n                    // Decrypt User's Reset Password Key to get EncKey\n                    const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n                    const userEncKey = new SymmetricCryptoKey(decValue);\n\n                    // Create new key and hash new password\n                    const newKey = await this.cryptoService.makeKey(this.newPassword, this.email.trim().toLowerCase(),\n                        kdfType, kdfIterations);\n                    const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n                    // Create new encKey for the User\n                    const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n                    // Create request\n                    const request = new OrganizationUserResetPasswordRequest();\n                    request.key = newEncKey[1].encryptedString;\n                    request.newMasterPasswordHash = newPasswordHash;\n\n                    // Change user's password\n                    return this.apiService.putOrganizationUserResetPassword(this.organizationId, this.id, request);\n                });\n\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('resetPasswordSuccess'));\n            this.onPasswordReset.emit();\n        } catch { }\n    }\n\n    updatePasswordStrength() {\n        if (this.newPasswordStrengthTimeout != null) {\n            clearTimeout(this.newPasswordStrengthTimeout);\n        }\n        this.newPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.newPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        if (this.name != null && this.name !== '') {\n            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));\n        }\n        return userInput;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\"> <div class=\"modal-dialog\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"resetPasswordTitle\"> {{'resetPassword' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <app-callout type=\"warning\">{{'resetPasswordLoggedOutWarning' | i18n: loggedOutWarningName}} </app-callout> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\"> {{'resetPasswordMasterPasswordPolicyInEffect' | i18n}} <ul class=\"mb-0\"> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\"> {{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\"> {{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\"> {{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\"> {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </app-callout> <div class=\"row\"> <div class=\"col form-group\"> <div class=\"d-flex\"> <label for=\"newPassword\">{{'newPassword' | i18n}}</label> <div class=\"ml-auto d-flex\"> <a href=\"#\" class=\"d-block mr-2 fa-icon-above-input\" appStopClick appA11yTitle=\"{{'generatePassword' | i18n}}\" (click)=\"generatePassword()\"> <i class=\"fa fa-lg fa-fw fa-refresh\" aria-hidden=\"true\"></i> </a> </div> </div> <div class=\"input-group mb-1\"> <input id=\"newPassword\" class=\"form-control text-monospace\" appAutofocus type=\"{{showPassword ? 'text' : 'password'}}\" name=\"NewPassword\" [(ngModel)]=\"newPassword\" required appInputVerbatim autocomplete=\"new-password\" (input)=\"updatePasswordStrength()\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(newPassword)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </div> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"> </app-password-strength> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib-common/models/data/collectionData';\nimport { Collection } from 'jslib-common/models/domain/collection';\nimport { OrganizationUserInviteRequest } from 'jslib-common/models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateRequest } from 'jslib-common/models/request/organizationUserUpdateRequest';\nimport { SelectionReadOnlyRequest } from 'jslib-common/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib-common/models/response/collectionResponse';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { OrganizationUserType } from 'jslib-common/enums/organizationUserType';\nimport { PermissionsApi } from 'jslib-common/models/api/permissionsApi';\n\n@Component({\n    selector: 'app-user-add-edit',\n    templateUrl: 'user-add-edit.component.html',\n})\nexport class UserAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    emails: string;\n    type: OrganizationUserType = OrganizationUserType.User;\n    permissions = new PermissionsApi();\n    showCustom = false;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    organizationUserType = OrganizationUserType;\n\n    get customUserTypeSelected(): boolean {\n        return this.type === OrganizationUserType.Custom;\n    }\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private collectionService: CollectionService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.organizationUserId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editUser');\n            try {\n                const user = await this.apiService.getOrganizationUser(this.organizationId, this.organizationUserId);\n                this.access = user.accessAll ? 'all' : 'selected';\n                this.type = user.type;\n                if (user.type === OrganizationUserType.Custom) {\n                    this.permissions = user.permissions;\n                }\n                if (user.collections != null && this.collections != null) {\n                    user.collections.forEach(s => {\n                        const collection = this.collections.filter(c => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                            collection[0].hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('inviteUser');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map(r =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach(c => this.check(c, select));\n    }\n\n    setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n        p.accessBusinessPortal = clearPermissions ?\n            false :\n            this.permissions.accessBusinessPortal;\n        p.accessEventLogs = this.permissions.accessEventLogs = clearPermissions ?\n            false :\n            this.permissions.accessEventLogs;\n        p.accessImportExport = clearPermissions ?\n            false :\n            this.permissions.accessImportExport;\n        p.accessReports = clearPermissions ?\n            false :\n            this.permissions.accessReports;\n        p.manageAllCollections = clearPermissions ?\n            false :\n            this.permissions.manageAllCollections;\n        p.manageAssignedCollections = clearPermissions ?\n            false :\n            this.permissions.manageAssignedCollections;\n        p.manageGroups = clearPermissions ?\n            false :\n            this.permissions.manageGroups;\n        p.manageSso = clearPermissions ?\n            false :\n            this.permissions.manageSso;\n        p.managePolicies = clearPermissions ?\n            false :\n            this.permissions.managePolicies;\n        p.manageUsers = clearPermissions ?\n            false :\n            this.permissions.manageUsers;\n        p.manageResetPassword = clearPermissions ?\n            false :\n            this.permissions.manageResetPassword;\n        return p;\n    }\n\n    handleDependentPermissions() {\n        // Manage Password Reset must have Manage Users enabled\n        if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n            this.permissions.manageUsers = true;\n            (document.getElementById('manageUsers') as HTMLInputElement).checked = true;\n            this.platformUtilsService.showToast('info', null, this.i18nService.t('resetPasswordManageUsers'));\n        }\n    }\n\n    async submit() {\n        let collections: SelectionReadOnlyRequest[] = null;\n        if (this.access !== 'all') {\n            collections = this.collections.filter(c => (c as any).checked)\n                .map(c => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n        }\n\n        try {\n            if (this.editMode) {\n                const request = new OrganizationUserUpdateRequest();\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.collections = collections;\n                request.permissions = this.setRequestPermissions(request.permissions ?? new PermissionsApi(), request.type !== OrganizationUserType.Custom);\n                this.formPromise = this.apiService.putOrganizationUser(this.organizationId, this.organizationUserId,\n                    request);\n            } else {\n                const request = new OrganizationUserInviteRequest();\n                request.emails = this.emails.trim().split(/\\s*,\\s*/);\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.permissions = this.setRequestPermissions(request.permissions ?? new PermissionsApi(), request.type !== OrganizationUserType.Custom);\n                request.collections = collections;\n                this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteOrganizationUser(this.organizationId, this.organizationUserId);\n            await this.deletePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.name));\n            this.onDeletedUser.emit();\n        } catch { }\n    }\n\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> {{title}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <ng-container *ngIf=\"!editMode\"> <p>{{'inviteUserDesc' | i18n}}</p> <div class=\"form-group mb-4\"> <label for=\"emails\">{{'email' | i18n}}</label> <input id=\"emails\" class=\"form-control\" type=\"text\" name=\"Emails\" [(ngModel)]=\"emails\" required appAutoFocus> <small class=\"text-muted\">{{'inviteMultipleEmailDesc' | i18n : '20'}}</small> </div> </ng-container> <h3> {{'userType' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#user-types\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </h3> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeUser\" [value]=\"organizationUserType.User\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeUser\"> {{'user' | i18n}} <small>{{'userDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeManager\" [value]=\"organizationUserType.Manager\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeManager\"> {{'manager' | i18n}} <small>{{'managerDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeAdmin\" [value]=\"organizationUserType.Admin\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeAdmin\"> {{'admin' | i18n}} <small>{{'adminDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeOwner\" [value]=\"organizationUserType.Owner\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeOwner\"> {{'owner' | i18n}} <small>{{'ownerDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeCustom\" [value]=\"organizationUserType.Custom\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"userTypeCustom\"> {{'custom' | i18n}} <small>{{'customDesc' | i18n}}</small> </label> </div> <ng-container *ngIf=\"customUserTypeSelected\"> <h3 class=\"mt-4 d-flex\"> {{'permissions' | i18n}} </h3> <div class=\"row\"> <div class=\"col-6\"> <div class=\"mb-3\"> <label class=\"font-weight-bold mb-0\">Manager Permissions</label> <hr class=\"my-0 mr-2\"/> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageAssignedCollections\" id=\"manageAssignedCollections\" [(ngModel)]=\"permissions.manageAssignedCollections\"> <label class=\"form-check-label font-weight-normal\" for=\"manageAssignedCollections\"> {{'manageAssignedCollections' | i18n}} </label> </div> </div> </div> </div> <div class=\"col-6\"> <div class=\"mb-3\"> <label class=\"font-weight-bold mb-0\">Admin Permissions</label> <hr class=\"my-0 mr-2\"/> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessBusinessPortal\" id=\"accessBusinessPortal\" [(ngModel)]=\"permissions.accessBusinessPortal\"> <label class=\"form-check-label font-weight-normal\" for=\"accessBusinessPortal\"> {{'accessBusinessPortal' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessEventLogs\" id=\"accessEventLogs\" [(ngModel)]=\"permissions.accessEventLogs\"> <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\"> {{'accessEventLogs' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessImportExport\" id=\"accessImportExport\" [(ngModel)]=\"permissions.accessImportExport\"> <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\"> {{'accessImportExport' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"accessReports\" id=\"accessReports\" [(ngModel)]=\"permissions.accessReports\"> <label class=\"form-check-label font-weight-normal\" for=\"accessReports\"> {{'accessReports' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageAllCollections\" id=\"manageAllCollections\" [(ngModel)]=\"permissions.manageAllCollections\"> <label class=\"form-check-label font-weight-normal\" for=\"manageAllCollections\"> {{'manageAllCollections' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageGroups\" id=\"manageGroups\" [(ngModel)]=\"permissions.manageGroups\"> <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\"> {{'manageGroups' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageSso\" id=\"managePolicies\" [(ngModel)]=\"permissions.manageSso\"> <label class=\"form-check-label font-weight-normal\" for=\"manageSso\"> {{'manageSso' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"managePolicies\" id=\"managePolicies\" [(ngModel)]=\"permissions.managePolicies\"> <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\"> {{'managePolicies' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageUsers\" id=\"manageUsers\" [(ngModel)]=\"permissions.manageUsers\" (change)=\"handleDependentPermissions()\"> <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\"> {{'manageUsers' | i18n}} </label> </div> </div> <div class=\"form-group mb-0\"> <div class=\"form-check mt-1 form-check-block\"> <input class=\"form-check-input\" type=\"checkbox\" name=\"manageResetPassword\" id=\"manageResetPassword\" [(ngModel)]=\"permissions.manageResetPassword\" (change)=\"handleDependentPermissions()\"> <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\"> {{'manageResetPassword' | i18n}} </label> </div> </div> </div> </div> </div> </ng-container> <h3 class=\"mt-4 d-flex\"> <div class=\"mb-3\"> {{'accessControl' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </h3> <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessAll\"> {{'userAccessAllItems' | i18n}} </label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\" [(ngModel)]=\"access\"> <label class=\"form-check-label\" for=\"accessSelected\"> {{'userAccessSelectedCollections' | i18n}} </label> </div> </div> <ng-container *ngIf=\"access === 'selected'\"> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <thead> <tr> <th>&nbsp;</th> <th>{{'name' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th> <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th> </tr> </thead> <tbody> <tr *ngFor=\"let c of collections; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(c)\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(c)\"> {{c.name}} </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\" name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\"> </td> <td class=\"text-center\"> <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\" [disabled]=\"!c.checked\"> </td> </tr> </tbody> </table> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { OrganizationUserUpdateGroupsRequest } from 'jslib-common/models/request/organizationUserUpdateGroupsRequest';\nimport { GroupResponse } from 'jslib-common/models/response/groupResponse';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-user-groups',\n    templateUrl: 'user-groups.component.html',\n})\nexport class UserGroupsComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n\n    loading = true;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const groupsResponse = await this.apiService.getGroups(this.organizationId);\n        const groups = groupsResponse.data.map(r => r);\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n\n        try {\n            const userGroups = await this.apiService.getOrganizationUserGroups(\n                this.organizationId, this.organizationUserId);\n            if (userGroups != null && this.groups != null) {\n                userGroups.forEach(ug => {\n                    const group = this.groups.filter(g => g.id === ug);\n                    if (group != null && group.length > 0) {\n                        (group[0] as any).checked = true;\n                    }\n                });\n            }\n        } catch { }\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach(g => this.check(g, select));\n    }\n\n    async submit() {\n        const request = new OrganizationUserUpdateGroupsRequest();\n        request.groupIds = this.groups.filter(g => (g as any).checked).map(g => g.id);\n\n        try {\n            this.formPromise = this.apiService.putOrganizationUserGroups(this.organizationId, this.organizationUserId,\n                request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('editedGroupsForUser', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"groupAccessTitle\"> {{'groupAccess' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <p>{{'groupAccessUserDesc' | i18n}}</p> <div *ngIf=\"!groups || !groups.length\"> {{'noGroupsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\"> <tbody> <tr *ngFor=\"let g of groups; let i = index\"> <td class=\"table-list-checkbox\" (click)=\"check(g)\"> <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\" appStopProp> </td> <td (click)=\"check(g)\"> {{g.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { EnvironmentService } from 'jslib-common/abstractions';\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nimport { ModalComponent } from '../../modal.component';\n\nimport { PolicyEditComponent } from './policy-edit.component';\n\n@Component({\n    selector: 'app-org-policies',\n    templateUrl: 'policies.component.html',\n})\nexport class PoliciesComponent implements OnInit {\n    @ViewChild('editTemplate', { read: ViewContainerRef, static: true }) editModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    policies: any[];\n\n    // Remove when removing deprecation warning\n    enterpriseTokenPromise: Promise<any>;\n    userCanAccessBusinessPortal = false;\n\n    private enterpriseUrl: string;\n\n    private modal: ModalComponent = null;\n    private orgPolicies: PolicyResponse[];\n    private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\n        private router: Router, private environmentService: EnvironmentService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.usePolicies) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            this.userCanAccessBusinessPortal = organization.canAccessBusinessPortal;\n            this.policies = [\n                {\n                    name: this.i18nService.t('twoStepLogin'),\n                    description: this.i18nService.t('twoStepLoginPolicyDesc'),\n                    type: PolicyType.TwoFactorAuthentication,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('masterPass'),\n                    description: this.i18nService.t('masterPassPolicyDesc'),\n                    type: PolicyType.MasterPassword,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('passwordGenerator'),\n                    description: this.i18nService.t('passwordGeneratorPolicyDesc'),\n                    type: PolicyType.PasswordGenerator,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('singleOrg'),\n                    description: this.i18nService.t('singleOrgDesc'),\n                    type: PolicyType.SingleOrg,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('requireSso'),\n                    description: this.i18nService.t('requireSsoPolicyDesc'),\n                    type: PolicyType.RequireSso,\n                    enabled: false,\n                    display: organization.useSso,\n                },\n                {\n                    name: this.i18nService.t('personalOwnership'),\n                    description: this.i18nService.t('personalOwnershipPolicyDesc'),\n                    type: PolicyType.PersonalOwnership,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('disableSend'),\n                    description: this.i18nService.t('disableSendPolicyDesc'),\n                    type: PolicyType.DisableSend,\n                    enabled: false,\n                    display: true,\n                },\n                {\n                    name: this.i18nService.t('sendOptions'),\n                    description: this.i18nService.t('sendOptionsPolicyDesc'),\n                    type: PolicyType.SendOptions,\n                    enabled: false,\n                    display: true,\n                }, {\n                    name: this.i18nService.t('resetPasswordPolicy'),\n                    description: this.i18nService.t('resetPasswordPolicyDescription'),\n                    type: PolicyType.ResetPassword,\n                    enabled: false,\n                    display: organization.useResetPassword,\n                },\n            ];\n            await this.load();\n\n            // Handle policies component launch from Event message\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                if (qParams.policyId != null) {\n                    const policyIdFromEvents: string = qParams.policyId;\n                    for (const orgPolicy of this.orgPolicies) {\n                        if (orgPolicy.id === policyIdFromEvents) {\n                            for (let i = 0; i < this.policies.length; i++) {\n                                if (this.policies[i].type === orgPolicy.type) {\n                                    this.edit(this.policies[i]);\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                    }\n                }\n\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n\n        // Remove when removing deprecation warning\n        this.enterpriseUrl = this.environmentService.getEnterpriseUrl();\n    }\n\n    async load() {\n        const response = await this.apiService.getPolicies(this.organizationId);\n        this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n        this.orgPolicies.forEach(op => {\n            this.policiesEnabledMap.set(op.type, op.enabled);\n        });\n        this.policies.forEach(p => {\n            p.enabled = this.policiesEnabledMap.has(p.type) && this.policiesEnabledMap.get(p.type);\n        });\n        this.loading = false;\n    }\n\n    edit(p: any) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.editModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<PolicyEditComponent>(\n            PolicyEditComponent, this.editModalRef);\n\n        childComponent.name = p.name;\n        childComponent.description = p.description;\n        childComponent.type = p.type;\n        childComponent.organizationId = this.organizationId;\n        childComponent.policiesEnabledMap = this.policiesEnabledMap;\n        childComponent.onSavedPolicy.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n\n    // Remove when removing deprecation warning\n    async goToEnterprisePortal() {\n        if (this.enterpriseTokenPromise != null) {\n            return;\n        }\n        try {\n            this.enterpriseTokenPromise = this.apiService.getEnterprisePortalSignInToken();\n            const token = await this.enterpriseTokenPromise;\n            if (token != null) {\n                const userId = await this.userService.getUserId();\n                this.platformUtilsService.launchUri(this.enterpriseUrl + '/login?userId=' + userId +\n                    '&token=' + (window as any).encodeURIComponent(token) + '&organizationId=' + this.organizationId);\n            }\n        } catch { }\n        this.enterpriseTokenPromise = null;\n    }\n}\n","<app-callout *ngIf=\"userCanAccessBusinessPortal\" [type]=\"'warning'\"> <p>{{'webPoliciesDeprecationWarning' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"goToEnterprisePortal()\">{{'businessPortal' | i18n}}</button> </app-callout> <div class=\"page-header d-flex\"> <h1>{{'policies' | i18n}}</h1> </div> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <table class=\"table table-hover table-list\" *ngIf=\"!loading\"> <tbody> <tr *ngFor=\"let p of policies\"> <td *ngIf=\"p.display\"> <a href=\"#\" appStopClick (click)=\"edit(p)\">{{p.name}}</a> <span class=\"badge badge-success\" *ngIf=\"p.enabled\">{{'enabled' | i18n}}</span> <small class=\"text-muted d-block\">{{p.description}}</small> </td> </tr> </tbody> </table> <ng-template #editTemplate></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib-common/enums/policyType';\n\nimport { PolicyRequest } from 'jslib-common/models/request/policyRequest';\n\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\n@Component({\n    selector: 'app-policy-edit',\n    templateUrl: 'policy-edit.component.html',\n})\nexport class PolicyEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() description: string;\n    @Input() type: PolicyType;\n    @Input() organizationId: string;\n    @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n    @Output() onSavedPolicy = new EventEmitter();\n\n    policyType = PolicyType;\n    loading = true;\n    enabled = false;\n    formPromise: Promise<any>;\n    passwordScores: any[];\n    defaultTypes: any[];\n\n    // Master password\n    masterPassMinComplexity?: number = null;\n    masterPassMinLength?: number;\n    masterPassRequireUpper?: number;\n    masterPassRequireLower?: number;\n    masterPassRequireNumbers?: number;\n    masterPassRequireSpecial?: number;\n\n    // Password generator\n    passGenDefaultType?: string;\n    passGenMinLength?: number;\n    passGenUseUpper?: boolean;\n    passGenUseLower?: boolean;\n    passGenUseNumbers?: boolean;\n    passGenUseSpecial?: boolean;\n    passGenMinNumbers?: number;\n    passGenMinSpecial?: number;\n    passGenMinNumberWords?: number;\n    passGenCapitalize?: boolean;\n    passGenIncludeNumber?: boolean;\n\n    // Send options\n    sendDisableHideEmail?: boolean;\n\n    // Reset Password\n    resetPasswordAutoEnroll?: boolean;\n\n    private policy: PolicyResponse;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) {\n        this.passwordScores = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('weak') + ' (0)', value: 0 },\n            { name: i18nService.t('weak') + ' (1)', value: 1 },\n            { name: i18nService.t('weak') + ' (2)', value: 2 },\n            { name: i18nService.t('good') + ' (3)', value: 3 },\n            { name: i18nService.t('strong') + ' (4)', value: 4 },\n        ];\n        this.defaultTypes = [\n            { name: i18nService.t('userPreference'), value: null },\n            { name: i18nService.t('password'), value: 'password' },\n            { name: i18nService.t('passphrase'), value: 'passphrase' },\n        ];\n    }\n\n    async ngOnInit() {\n        await this.load();\n        this.loading = false;\n    }\n\n    async load() {\n        try {\n            this.policy = await this.apiService.getPolicy(this.organizationId, this.type);\n\n            if (this.policy != null) {\n                this.enabled = this.policy.enabled;\n                if (this.policy.data != null) {\n                    switch (this.type) {\n                        case PolicyType.PasswordGenerator:\n                            this.passGenDefaultType = this.policy.data.defaultType;\n                            this.passGenMinLength = this.policy.data.minLength;\n                            this.passGenUseUpper = this.policy.data.useUpper;\n                            this.passGenUseLower = this.policy.data.useLower;\n                            this.passGenUseNumbers = this.policy.data.useNumbers;\n                            this.passGenUseSpecial = this.policy.data.useSpecial;\n                            this.passGenMinNumbers = this.policy.data.minNumbers;\n                            this.passGenMinSpecial = this.policy.data.minSpecial;\n                            this.passGenMinNumberWords = this.policy.data.minNumberWords;\n                            this.passGenCapitalize = this.policy.data.capitalize;\n                            this.passGenIncludeNumber = this.policy.data.includeNumber;\n                            break;\n                        case PolicyType.MasterPassword:\n                            this.masterPassMinComplexity = this.policy.data.minComplexity;\n                            this.masterPassMinLength = this.policy.data.minLength;\n                            this.masterPassRequireUpper = this.policy.data.requireUpper;\n                            this.masterPassRequireLower = this.policy.data.requireLower;\n                            this.masterPassRequireNumbers = this.policy.data.requireNumbers;\n                            this.masterPassRequireSpecial = this.policy.data.requireSpecial;\n                            break;\n                        case PolicyType.SendOptions:\n                            this.sendDisableHideEmail = this.policy.data.disableHideEmail;\n                            break;\n                        case PolicyType.ResetPassword:\n                            this.resetPasswordAutoEnroll = this.policy.data.autoEnrollEnabled;\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n        } catch (e) {\n            if (e.statusCode === 404) {\n                this.enabled = false;\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    async submit() {\n        if (this.preValidate()) {\n            const request = new PolicyRequest();\n            request.enabled = this.enabled;\n            request.type = this.type;\n            request.data = null;\n            switch (this.type) {\n                case PolicyType.PasswordGenerator:\n                    request.data = {\n                        defaultType: this.passGenDefaultType,\n                        minLength: this.passGenMinLength || null,\n                        useUpper: this.passGenUseUpper,\n                        useLower: this.passGenUseLower,\n                        useNumbers: this.passGenUseNumbers,\n                        useSpecial: this.passGenUseSpecial,\n                        minNumbers: this.passGenMinNumbers || null,\n                        minSpecial: this.passGenMinSpecial || null,\n                        minNumberWords: this.passGenMinNumberWords || null,\n                        capitalize: this.passGenCapitalize,\n                        includeNumber: this.passGenIncludeNumber,\n                    };\n                    break;\n                case PolicyType.MasterPassword:\n                    request.data = {\n                        minComplexity: this.masterPassMinComplexity || null,\n                        minLength: this.masterPassMinLength || null,\n                        requireUpper: this.masterPassRequireUpper,\n                        requireLower: this.masterPassRequireLower,\n                        requireNumbers: this.masterPassRequireNumbers,\n                        requireSpecial: this.masterPassRequireSpecial,\n                    };\n                    break;\n                case PolicyType.SendOptions:\n                    request.data = {\n                        disableHideEmail: this.sendDisableHideEmail,\n                    };\n                    break;\n                case PolicyType.ResetPassword:\n                    request.data = {\n                        autoEnrollEnabled: this.resetPasswordAutoEnroll,\n                    };\n                    break;\n                default:\n                    break;\n            }\n            try {\n                this.formPromise = this.apiService.putPolicy(this.organizationId, this.type, request);\n                await this.formPromise;\n                this.toasterService.popAsync('success', null, this.i18nService.t('editedPolicyId', this.name));\n                this.onSavedPolicy.emit();\n            } catch { }\n        }\n    }\n\n    get checkboxDesc(): string {\n        return this.type === PolicyType.PersonalOwnership ? this.i18nService.t('personalOwnershipCheckboxDesc') :\n            this.i18nService.t('enabled');\n    }\n\n    private preValidate(): boolean {\n        switch (this.type) {\n            case PolicyType.RequireSso:\n                // Don't need prevalidation checks if submitting to disable\n                if (!this.enabled) {\n                    return true;\n                }\n                // Have SingleOrg policy enabled?\n                if (!(this.policiesEnabledMap.has(PolicyType.SingleOrg)\n                    && this.policiesEnabledMap.get(PolicyType.SingleOrg))) {\n                    this.toasterService.popAsync('error', null, this.i18nService.t('requireSsoPolicyReqError'));\n                    return false;\n                }\n                return true;\n\n            case PolicyType.SingleOrg:\n                // Don't need prevalidation checks if submitting to enable\n                if (this.enabled) {\n                    return true;\n                }\n                // If RequireSso Policy is enabled prevent submittal\n                if (this.policiesEnabledMap.has(PolicyType.RequireSso)\n                    && this.policiesEnabledMap.get(PolicyType.RequireSso)) {\n                    this.toasterService.popAsync('error', null, this.i18nService.t('disableRequireSsoError'));\n                    return false;\n                }\n                return true;\n\n            default:\n                return true;\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"policiesEditTitle\">{{'editPolicy' | i18n}} - {{name}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <p>{{description}}</p> <app-callout type=\"warning\" *ngIf=\"type === policyType.TwoFactorAuthentication\" title=\"{{'warning' | i18n}}\" icon=\"fa-warning\"> {{'twoStepLoginPolicyWarning' | i18n}} </app-callout> <app-callout type=\"warning\" *ngIf=\"type === policyType.SingleOrg\" title=\"{{'warning' | i18n}}\" icon=\"fa-warning\"> {{'singleOrgPolicyWarning' | i18n}} </app-callout> <ng-container *ngIf=\"type === policyType.RequireSso\"> <app-callout type=\"tip\" title=\"{{'prerequisite' | i18n}}\"> {{'requireSsoPolicyReq' | i18n}} </app-callout> <app-callout type=\"warning\"> {{'requireSsoExemption' | i18n}} </app-callout> </ng-container> <app-callout type=\"warning\" *ngIf=\"type === policyType.PersonalOwnership\"> {{'personalOwnershipExemption' | i18n}} </app-callout> <app-callout type=\"warning\" *ngIf=\"type === policyType.DisableSend\"> {{'disableSendExemption' | i18n}} </app-callout> <app-callout type=\"warning\" *ngIf=\"type === policyType.SendOptions\"> {{'sendOptionsExemption' | i18n}} </app-callout> <app-callout type=\"warning\" *ngIf=\"type === policyType.ResetPassword\"> {{'resetPasswordPolicyWarning' | i18n}} </app-callout> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [(ngModel)]=\"enabled\" name=\"Enabled\"> <label class=\"form-check-label\" for=\"enabled\">{{checkboxDesc}}</label> </div> </div> <ng-container *ngIf=\"type === policyType.MasterPassword\"> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"masterPassMinComplexity\">{{'minComplexityScore' | i18n}}</label> <select id=\"masterPassMinComplexity\" name=\"MasterPassMinComplexity\" [(ngModel)]=\"masterPassMinComplexity\" class=\"form-control\"> <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> <div class=\"col-6 form-group\"> <label for=\"masterPassMinLength\">{{'minLength' | i18n}}</label> <input id=\"masterPassMinLength\" class=\"form-control\" type=\"number\" min=\"8\" name=\"MasterPassMinLength\" [(ngModel)]=\"masterPassMinLength\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireUpper\" [(ngModel)]=\"masterPassRequireUpper\" name=\"MasterPassRequireUpper\"> <label class=\"form-check-label\" for=\"masterPassRequireUpper\">A-Z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireLower\" [(ngModel)]=\"masterPassRequireLower\" name=\"MasterPassRequireLower\"> <label class=\"form-check-label\" for=\"masterPassRequireLower\">a-z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireNumbers\" [(ngModel)]=\"masterPassRequireNumbers\" name=\"MasterPassRequireNumbers\"> <label class=\"form-check-label\" for=\"masterPassRequireNumbers\">0-9</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireSpecial\" [(ngModel)]=\"masterPassRequireSpecial\" name=\"MasterPassRequireSpecial\"> <label class=\"form-check-label\" for=\"masterPassRequireSpecial\">!@#$%^&amp;*</label> </div> </ng-container> <ng-container *ngIf=\"type === policyType.PasswordGenerator\"> <div class=\"row\"> <div class=\"col-6 form-group mb-0\"> <label for=\"passGenDefaultType\">{{'defaultType' | i18n}}</label> <select id=\"passGenDefaultType\" name=\"PassGenDefaultType\" [(ngModel)]=\"passGenDefaultType\" class=\"form-control\"> <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <h3 class=\"mt-4\">{{'password' | i18n}}</h3> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"passGenMinLength\">{{'minLength' | i18n}}</label> <input id=\"passGenMinLength\" class=\"form-control\" type=\"number\" name=\"PassGenMinLength\" min=\"5\" max=\"128\" [(ngModel)]=\"passGenMinLength\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"passGenMinNumbers\">{{'minNumbers' | i18n}}</label> <input id=\"passGenMinNumbers\" class=\"form-control\" type=\"number\" name=\"PassGenMinNumbers\" min=\"0\" max=\"9\" [(ngModel)]=\"passGenMinNumbers\"> </div> <div class=\"col-6 form-group\"> <label for=\"passGenMinSpecial\">{{'minSpecial' | i18n}}</label> <input id=\"passGenMinSpecial\" class=\"form-control\" type=\"number\" name=\"PassGenMinSpecial\" min=\"0\" max=\"9\" [(ngModel)]=\"passGenMinSpecial\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseUpper\" [(ngModel)]=\"passGenUseUpper\" name=\"PassGenUseUpper\"> <label class=\"form-check-label\" for=\"passGenUseUpper\">A-Z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseLower\" [(ngModel)]=\"passGenUseLower\" name=\"PassGenUseLower\"> <label class=\"form-check-label\" for=\"passGenUseLower\">a-z</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseNumbers\" [(ngModel)]=\"passGenUseNumbers\" name=\"PassGenUseNumbers\"> <label class=\"form-check-label\" for=\"passGenUseNumbers\">0-9</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseSpecial\" [(ngModel)]=\"passGenUseSpecial\" name=\"PassGenUseSpecial\"> <label class=\"form-check-label\" for=\"passGenUseSpecial\">!@#$%^&amp;*</label> </div> <h3 class=\"mt-4\">{{'passphrase' | i18n}}</h3> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"passGenMinNumberWords\">{{'minimumNumberOfWords' | i18n}}</label> <input id=\"passGenMinNumberWords\" class=\"form-control\" type=\"number\" name=\"PassGenMinNumberWords\" min=\"3\" max=\"20\" [(ngModel)]=\"passGenMinNumberWords\"> </div> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenCapitalize\" [(ngModel)]=\"passGenCapitalize\" name=\"PassGenCapitalize\"> <label class=\"form-check-label\" for=\"passGenCapitalize\">{{'capitalize' | i18n}}</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenIncludeNumber\" [(ngModel)]=\"passGenIncludeNumber\" name=\"PassGenIncludeNumber\"> <label class=\"form-check-label\" for=\"passGenIncludeNumber\">{{'includeNumber' | i18n}}</label> </div> </ng-container> <ng-container *ngIf=\"type === policyType.SendOptions\"> <h3 class=\"mt-4\">{{'options' | i18n}}</h3> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"sendDisableHideEmail\" [(ngModel)]=\"sendDisableHideEmail\" name=\"SendDisableHideEmail\"> <label class=\"form-check-label\" for=\"sendDisableHideEmail\">{{'disableHideEmail' | i18n}}</label> </div> </ng-container> <ng-container *ngIf=\"type === policyType.ResetPassword\"> <h3 class=\"mt-4\">{{'resetPasswordPolicyAutoEnroll' | i18n}}</h3> <p>{{'resetPasswordPolicyAutoEnrollDescription' | i18n}}</p> <app-callout type=\"warning\"> {{'resetPasswordPolicyAutoEnrollWarning' | i18n}} </app-callout> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"autoEnrollEnabled\" [(ngModel)]=\"resetPasswordAutoEnroll\" name=\"AutoEnrollEnabled\"> <label class=\"form-check-label\" for=\"autoEnrollEnabled\">{{'resetPasswordPolicyAutoEnrollCheckbox' | i18n }}</label> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> </div> </form> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { OrganizationKeysRequest } from 'jslib-common/models/request/organizationKeysRequest';\nimport { OrganizationUpdateRequest } from 'jslib-common/models/request/organizationUpdateRequest';\n\nimport { OrganizationResponse } from 'jslib-common/models/response/organizationResponse';\n\nimport { ModalComponent } from '../../modal.component';\n\nimport { ApiKeyComponent } from '../../settings/api-key.component';\nimport { PurgeVaultComponent } from '../../settings/purge-vault.component';\nimport { TaxInfoComponent } from '../../settings/tax-info.component';\n\nimport { DeleteOrganizationComponent } from './delete-organization.component';\n\n@Component({\n    selector: 'app-org-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deleteOrganizationTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\n    @ViewChild('purgeOrganizationTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\n    @ViewChild('apiKeyTemplate', { read: ViewContainerRef, static: true }) apiKeyModalRef: ViewContainerRef;\n    @ViewChild('rotateApiKeyTemplate', { read: ViewContainerRef, static: true }) rotateApiKeyModalRef: ViewContainerRef;\n    @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n    selfHosted = false;\n    loading = true;\n    canUseApi = false;\n    org: OrganizationResponse;\n    formPromise: Promise<any>;\n    taxFormPromise: Promise<any>;\n\n    private organizationId: string;\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\n        private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private route: ActivatedRoute,\n        private syncService: SyncService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            try {\n                this.org = await this.apiService.getOrganization(this.organizationId);\n                this.canUseApi = this.org.useApi;\n            } catch { }\n        });\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            const request = new OrganizationUpdateRequest();\n            request.name = this.org.name;\n            request.businessName = this.org.businessName;\n            request.billingEmail = this.org.billingEmail;\n            request.identifier = this.org.identifier;\n\n            // Backfill pub/priv key if necessary\n            if (!this.org.hasPublicAndPrivateKeys) {\n                const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n                const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n                request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n            }\n\n            this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpdated'));\n        } catch { }\n    }\n\n    async submitTaxInfo() {\n        this.taxFormPromise = this.taxInfo.submitTaxInfo();\n        await this.taxFormPromise;\n        this.toasterService.popAsync('success', null, this.i18nService.t('taxInfoUpdated'));\n    }\n\n    deleteOrganization() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<DeleteOrganizationComponent>(\n            DeleteOrganizationComponent, this.deleteModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    purgeVault() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.purgeModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<PurgeVaultComponent>(PurgeVaultComponent, this.purgeModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    viewApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.apiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.apiKeyModalRef);\n        childComponent.keyType = 'organization';\n        childComponent.entityId = this.organizationId;\n        childComponent.postKey = this.apiService.postOrganizationApiKey.bind(this.apiService);\n        childComponent.scope = 'api.organization';\n        childComponent.grantType = 'client_credentials';\n        childComponent.apiKeyTitle = 'apiKey';\n        childComponent.apiKeyWarning = 'apiKeyWarning';\n        childComponent.apiKeyDescription = 'apiKeyDesc';\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    rotateApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.rotateApiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.rotateApiKeyModalRef);\n        childComponent.keyType = 'organization';\n        childComponent.isRotation = true;\n        childComponent.entityId = this.organizationId;\n        childComponent.postKey = this.apiService.postOrganizationRotateApiKey.bind(this.apiService);\n        childComponent.scope = 'api.organization';\n        childComponent.grantType = 'client_credentials';\n        childComponent.apiKeyTitle = 'apiKey';\n        childComponent.apiKeyWarning = 'apiKeyWarning';\n        childComponent.apiKeyDescription = 'apiKeyRotateDesc';\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'myOrganization' | i18n}}</h1> </div> <div *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"org && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"name\">{{'organizationName' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"org.name\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label> <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"org.billingEmail\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"businessName\">{{'businessName' | i18n}}</label> <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\" [(ngModel)]=\"org.businessName\" [disabled]=\"selfHosted\"> </div> <div class=\"form-group\"> <label for=\"identifier\">{{'identifier' | i18n}}</label> <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\" [(ngModel)]=\"org.identifier\"> </div> </div> <div class=\"col-6\"> <app-avatar data=\"{{org.name}}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> <ng-container *ngIf=\"canUseApi\"> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'apiKey' | i18n}}</h1> </div> <p> {{'apiKeyDesc' | i18n}} <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}} </a> </p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">{{'viewApiKey' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">{{'rotateApiKey' | i18n}}</button> </ng-container> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'taxInformation' | i18n}}</h1> </div> <p>{{'taxInformationDesc' | i18n}}</p> <div *ngIf=\"!org || loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"org && !loading\" #formTax (ngSubmit)=\"submitTaxInfo()\" [appApiAction]=\"taxFormPromise\" ngNativeValidate> <app-tax-info></app-tax-info> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> <div class=\"secondary-header text-danger border-0 mb-0\"> <h1>{{'dangerZone' | i18n}}</h1> </div> <div class=\"card border-danger\"> <div class=\"card-body\"> <p>{{'dangerZoneDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">{{'deleteOrganization' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button> </div> </div> <ng-template #deleteOrganizationTemplate></ng-template> <ng-template #purgeOrganizationTemplate></ng-template> <ng-template #apiKeyTemplate></ng-template> <ng-template #rotateApiKeyTemplate></ng-template> ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-organization',\n    templateUrl: 'delete-organization.component.html',\n})\nexport class DeleteOrganizationComponent {\n    organizationId: string;\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteOrganization(this.organizationId, request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('organizationDeleted'),\n                this.i18nService.t('organizationDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{'deleteOrganization' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'deleteOrganizationDesc' | i18n}}</p> <app-callout type=\"warning\">{{'deleteOrganizationWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deleteOrganization' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { SeatRequest } from 'jslib-common/models/request/seatRequest';\n\nimport { PaymentComponent } from '../../settings/payment.component';\n\n@Component({\n    selector: 'app-adjust-seats',\n    templateUrl: 'adjust-seats.component.html',\n})\nexport class AdjustSeatsComponent {\n    @Input() seatPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n    seatAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private router: Router,\n        private activatedRoute: ActivatedRoute) { }\n\n    async submit() {\n        try {\n            const request = new SeatRequest();\n            request.seatAdjustment = this.seatAdjustment;\n            if (!this.add) {\n                request.seatAdjustment *= -1;\n            }\n\n            let paymentFailed = false;\n            const action = async () => {\n                const result = await this.apiService.postOrganizationSeat(this.organizationId, request);\n                if (result != null && result.paymentIntentClientSecret != null) {\n                    try {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    } catch {\n                        paymentFailed = true;\n                    }\n                }\n            };\n            this.formPromise = action();\n            await this.formPromise;\n            this.onAdjusted.emit(this.seatAdjustment);\n            if (paymentFailed) {\n                this.toasterService.popAsync({\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\n                    type: 'warning',\n                    timeout: 10000,\n                });\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\n            } else {\n                this.toasterService.popAsync('success', null,\n                    this.i18nService.t('adjustedSeats', request.seatAdjustment.toString()));\n            }\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedSeatTotal(): number {\n        return this.seatAdjustment * this.seatPrice;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{(add ? 'addSeats' : 'removeSeats') | i18n}}</h3> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"seatAdjustment\">{{(add ? 'seatsToAdd' : 'seatsToRemove') | i18n}}</label> <input id=\"seatAdjustment\" class=\"form-control\" type=\"number\" name=\"SeatAdjustment\" [(ngModel)]=\"seatAdjustment\" min=\"0\" step=\"1\" required> </div> </div> <div *ngIf=\"add\" class=\"mb-3\"> <strong>{{'total' | i18n}}:</strong> {{seatAdjustment || 0}} &times; {{seatPrice | currency:'$'}} = {{adjustedSeatTotal | currency:'$'}} /{{interval | i18n}} </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> <small class=\"d-block text-muted mt-3\"> {{(add ? 'seatsAddNote' : 'seatsRemoveNote') | i18n}} </small> </div> </form> <app-payment [showMethods]=\"false\"></app-payment> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\n@Component({\n    selector: 'app-change-plan',\n    templateUrl: 'change-plan.component.html',\n})\nexport class ChangePlanComponent {\n    @Input() organizationId: string;\n    @Output() onChanged = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n    defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n    defaultUpgradeProduct: ProductType = ProductType.Families;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        try {\n            this.onChanged.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<div class=\"card card-org-plans\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h2 class=\"card-body-header\">{{'changeBillingPlan' | i18n}}</h2> <p class=\"mb-0\">{{'changeBillingPlanUpgrade' | i18n}}</p> <app-organization-plans [showFree]=\"false\" [showCancel]=\"true\" [plan]=\"defaultUpgradePlan\" [product]=\"defaultUpgradeProduct\" [organizationId]=\"organizationId\" (onCanceled)=\"cancel()\"> </app-organization-plans> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-download-license',\n    templateUrl: 'download-license.component.html',\n})\nexport class DownloadLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onDownloaded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    installationId: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        if (this.installationId == null || this.installationId === '') {\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.getOrganizationLicense(this.organizationId, this.installationId);\n            const license = await this.formPromise;\n            const licenseString = JSON.stringify(license, null, 2);\n            this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_organization_license.json');\n            this.onDownloaded.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'downloadLicense' | i18n}}</h3> <div class=\"row\"> <div class=\"form-group col-6\"> <div class=\"d-flex\"> <label for=\"installationId\">{{'enterInstallationId' | i18n}}</label> <a class=\"ml-auto\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://help.bitwarden.com/article/licensing-on-premise/#organization-account-sharing\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <input id=\"installationId\" class=\"form-control\" type=\"text\" name=\"InstallationId\" [(ngModel)]=\"installationId\" required> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\"> {{'cancel' | i18n}} </button> </div> </form> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { UserBillingComponent } from '../../settings/user-billing.component';\n\n@Component({\n    selector: 'app-org-billing',\n    templateUrl: '../../settings/user-billing.component.html',\n})\nexport class OrganizationBillingComponent extends UserBillingComponent implements OnInit {\n    constructor(apiService: ApiService, i18nService: I18nService, toasterService: ToasterService,\n        private route: ActivatedRoute, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { OrganizationSubscriptionResponse } from 'jslib-common/models/response/organizationSubscriptionResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { UserService } from 'jslib-common/abstractions';\nimport { PlanType } from 'jslib-common/enums/planType';\n\n@Component({\n    selector: 'app-org-subscription',\n    templateUrl: 'organization-subscription.component.html',\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    organizationId: string;\n    adjustSeatsAdd = true;\n    showAdjustSeats = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    showDownloadLicense = false;\n    showChangePlan = false;\n    sub: OrganizationSubscriptionResponse;\n    selfHosted = false;\n\n    userOrg: Organization;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private toasterService: ToasterService,\n        private messagingService: MessagingService, private route: ActivatedRoute,\n        private userService: UserService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n\n        this.loading = true;\n        this.userOrg = await this.userService.getOrganization(this.organizationId);\n        this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n            await this.reinstatePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n            await this.cancelPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    async changePlan() {\n        if (this.subscription == null && this.sub.planType === PlanType.Free) {\n            this.showChangePlan = !this.showChangePlan;\n            return;\n        }\n        const contactSupport = await this.platformUtilsService.showDialog(this.i18nService.t('changeBillingPlanDesc'),\n            this.i18nService.t('changeBillingPlan'), this.i18nService.t('contactSupport'), this.i18nService.t('close'));\n        if (contactSupport) {\n            this.platformUtilsService.launchUri('https://bitwarden.com/contact');\n        }\n    }\n\n    closeChangePlan(changed: boolean) {\n        this.showChangePlan = false;\n    }\n\n    downloadLicense() {\n        this.showDownloadLicense = !this.showDownloadLicense;\n    }\n\n    closeDownloadLicense() {\n        this.showDownloadLicense = false;\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(updated: boolean) {\n        this.showUpdateLicense = false;\n        if (updated) {\n            this.load();\n            this.messagingService.send('updatedOrgLicense');\n        }\n    }\n\n    adjustSeats(add: boolean) {\n        this.adjustSeatsAdd = add;\n        this.showAdjustSeats = true;\n    }\n\n    closeSeats(load: boolean) {\n        this.showAdjustSeats = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get isExpired() {\n        return this.sub != null && this.sub.expiration != null &&\n            new Date(this.sub.expiration) < new Date();\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get billingInterval() {\n        const monthly = !this.sub.plan.isAnnual;\n        return monthly ? 'month' : 'year';\n    }\n\n    get storageGbPrice() {\n        return this.sub.plan.additionalStoragePricePerGb;\n    }\n\n    get seatPrice() {\n        return this.sub.plan.seatPrice;\n    }\n\n    get canAdjustSeats() {\n        return this.sub.plan.hasAdditionalSeatsOption;\n    }\n\n    get canDownloadLicense() {\n        return (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n            (this.subscription != null && !this.subscription.cancelled);\n    }\n}\n","<div class=\"page-header\"> <h1> {{'subscription' | i18n}} <small *ngIf=\"firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"sub\"> <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\"> {{'subscriptionCanceled' | i18n}}</app-callout> <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\"> <p>{{'subscriptionPendingCanceled' | i18n}}</p> <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\" [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'reinstateSubscription' | i18n}}</span> </button> </app-callout> <dl *ngIf=\"selfHosted\"> <dt>{{'billingPlan' | i18n}}</dt> <dd>{{sub.plan.name}}</dd> <dt>{{'expiration' | i18n}}</dt> <dd *ngIf=\"sub.expiration\"> {{sub.expiration | date:'mediumDate'}} <span *ngIf=\"isExpired\" class=\"text-danger ml-2\"> <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{'licenseIsExpired' | i18n}} </span> </dd> <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd> </dl> <div class=\"row\" *ngIf=\"!selfHosted\"> <div class=\"col-4\"> <dl> <dt>{{'billingPlan' | i18n}}</dt> <dd>{{sub.plan.name}}</dd> <ng-container *ngIf=\"subscription\"> <dt>{{'status' | i18n}}</dt> <dd> <span class=\"text-capitalize\">{{subscription.status || '-'}}</span> <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span> </dd> <dt>{{'nextCharge' | i18n}}</dt> <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) : '-'}} </dd> </ng-container> </dl> </div> <div class=\"col-8\" *ngIf=\"subscription\"> <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong> <table class=\"table\"> <tbody> <tr *ngFor=\"let i of subscription.items\"> <td> {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}} </td> <td> {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}} </td> </tr> </tbody> </table> </div> </div> <ng-container *ngIf=\"selfHosted\"> <div> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\"> {{'updateLicense' | i18n}} </button> <a href=\"https://vault.bitwarden.com\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\"> {{'manageSubscription' | i18n}} </a> </div> <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3> <app-update-license [organizationId]=\"organizationId\" (onUpdated)=\"closeUpdateLicense(true)\" (onCanceled)=\"closeUpdateLicense(false)\"></app-update-license> </div> </div> </ng-container> <ng-container *ngIf=\"!selfHosted\"> <div class=\"d-flex\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePlan()\" *ngIf=\"!showChangePlan\"> {{'changeBillingPlan' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"downloadLicense()\" *ngIf=\"canDownloadLicense\" [disabled]=\"showDownloadLicense\"> {{'downloadLicense' | i18n}} </button> <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\" [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\" *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'cancelSubscription' | i18n}}</span> </button> </div> <app-change-plan [organizationId]=\"organizationId\" (onChanged)=\"closeChangePlan(true)\" (onCanceled)=\"closeChangePlan(false)\" *ngIf=\"showChangePlan\"></app-change-plan> <div class=\"mt-3\" *ngIf=\"showDownloadLicense\"> <app-download-license [organizationId]=\"organizationId\" (onDownloaded)=\"closeDownloadLicense()\" (onCanceled)=\"closeDownloadLicense()\"></app-download-license> </div> <h2 class=\"spaced-header\">{{'userSeats' | i18n}}</h2> <p>{{'subscriptionUserSeats' | i18n : sub.seats}}</p> <ng-container *ngIf=\"subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <div class=\"d-flex\" *ngIf=\"!showAdjustSeats\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustSeats(true)\"> {{'addSeats' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustSeats(false)\"> {{'removeSeats' | i18n}} </button> </div> <app-adjust-seats [seatPrice]=\"seatPrice\" [add]=\"adjustSeatsAdd\" [organizationId]=\"organizationId\" [interval]=\"billingInterval\" (onAdjusted)=\"closeSeats(true)\" (onCanceled)=\"closeSeats(false)\" *ngIf=\"showAdjustSeats\"></app-adjust-seats> </div> </ng-container> <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2> <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p> <div class=\"progress\"> <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\" [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\"> {{(storagePercentage / 100) | percent}}</div> </div> <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\"> {{'addStorage' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustStorage(false)\"> {{'removeStorage' | i18n}} </button> </div> <app-adjust-storage [storageGbPrice]=\"storageGbPrice\" [add]=\"adjustStorageAdd\" [organizationId]=\"organizationId\" [interval]=\"billingInterval\" (onAdjusted)=\"closeStorage(true)\" (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage> </div> </ng-container> <ng-container *ngIf=\"userOrg?.providerId != null\"> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'provider' | i18n}}</h1> </div> {{'yourProviderIs' | i18n : userOrg.providerName}} </ng-container> </ng-container> </ng-container> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent {\n    access2fa = false;\n    selfHosted: boolean;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.selfHosted = await this.platformUtilsService.isSelfHost();\n            const organization = await this.userService.getOrganization(params.organizationId);\n            this.access2fa = organization.use2fa;\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\"> <div class=\"card-header\">{{'settings' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'myOrganization' | i18n}} </a> <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'subscription' | i18n}} </a> <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\"> {{'billing' | i18n}} </a> <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"access2fa\"> {{'twoStepLogin' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorDuoComponent } from '../../settings/two-factor-duo.component';\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from '../../settings/two-factor-setup.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: '../../settings/two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n    constructor(apiService: ApiService, userService: UserService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        policyService: PolicyService, private route: ActivatedRoute) {\n        super(apiService, userService, componentFactoryResolver, messagingService, policyService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            await super.ngOnInit();\n        });\n    }\n\n    manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.OrganizationDuo:\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.type = TwoFactorProviderType.OrganizationDuo;\n                duoComp.organizationId = this.organizationId;\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type !== TwoFactorProviderType.OrganizationDuo;\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UpdateTwoFactorAuthenticatorRequest } from 'jslib-common/models/request/updateTwoFactorAuthenticatorRequest';\nimport { TwoFactorAuthenticatorResponse } from 'jslib-common/models/response/twoFactorAuthenticatorResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-authenticator',\n    templateUrl: 'two-factor-authenticator.component.html',\n})\nexport class TwoFactorAuthenticatorComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\n    type = TwoFactorProviderType.Authenticator;\n    key: string;\n    token: string;\n    formPromise: Promise<any>;\n\n    private qrScript: HTMLScriptElement;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, private userService: UserService,\n        platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n        this.qrScript = window.document.createElement('script');\n        this.qrScript.src = 'scripts/qrious.min.js';\n        this.qrScript.async = true;\n    }\n\n    ngOnInit() {\n        window.document.body.appendChild(this.qrScript);\n    }\n\n    ngOnDestroy() {\n        window.document.body.removeChild(this.qrScript);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorAuthenticatorRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.token = this.token;\n        request.key = this.key;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorAuthenticatorResponse) {\n        this.token = null;\n        this.enabled = response.enabled;\n        this.key = response.key;\n        const email = await this.userService.getEmail();\n        window.setTimeout(() => {\n            const qr = new (window as any).QRious({\n                element: document.getElementById('qr'),\n                value: 'otpauth://totp/Bitwarden:' + encodeURIComponent(email) +\n                    '?secret=' + encodeURIComponent(this.key) + '&issuer=Bitwarden',\n                size: 160,\n            });\n        }, 100);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\"> {{'twoStepLogin' | i18n}} <small>{{'authenticatorAppTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <ng-container *ngIf=\"!enabled\"> <img src=\"images/0.png\" class=\"float-right\" alt=\"\"> <p>{{'twoStepAuthenticatorDesc' | i18n}}</p> <p> <strong>1. {{'twoStepAuthenticatorDownloadApp' | i18n}}</strong> </p> </ng-container> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> <p>{{'twoStepLoginProviderEnabled' | i18n}}</p> {{'twoStepAuthenticatorReaddDesc' | i18n}} </app-callout> <img src=\"images/0.png\" class=\"float-right\" alt=\"\"> <p>{{'twoStepAuthenticatorNeedApp' | i18n}}</p> </ng-container> <ul class=\"fa-ul\"> <li> <i class=\"fa-li fa fa-apple\"></i>{{'iosDevices' | i18n}}: <a href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\" target=\"_blank\" rel=\"noopener\">Authy</a> </li> <li> <i class=\"fa-li fa fa-android\"></i>{{'androidDevices' | i18n}}: <a href=\"https://play.google.com/store/apps/details?id=com.authy.authy\" target=\"_blank\" rel=\"noopener\">Authy</a> </li> <li> <i class=\"fa-li fa fa-windows\"></i>{{'windowsDevices' | i18n}}: <a href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\" target=\"_blank\" rel=\"noopener\">Microsoft Authenticator</a> </li> </ul> <p>{{'twoStepAuthenticatorAppsRecommended' | i18n}}</p> <p *ngIf=\"!enabled\"> <strong>2. {{'twoStepAuthenticatorScanCode' | i18n}}</strong> </p> <hr *ngIf=\"enabled\"> <p class=\"text-center\" [ngClass]=\"{'mb-0': enabled}\"> <canvas id=\"qr\"></canvas><br> <code appA11yTitle=\"{{'key' | i18n}}\">{{key}}</code> </p> <ng-container *ngIf=\"!enabled\"> <label for=\"token\">3. {{'twoStepAuthenticatorEnterCode' | i18n}}</label> <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required appInputVerbatim> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { TwoFactorEmailRequest } from 'jslib-common/models/request/twoFactorEmailRequest';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\nimport { UpdateTwoFactorEmailRequest } from 'jslib-common/models/request/updateTwoFactorEmailRequest';\nimport { TwoFactorEmailResponse } from 'jslib-common/models/response/twoFactorEmailResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-email',\n    templateUrl: 'two-factor-email.component.html',\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Email;\n    email: string;\n    token: string;\n    sentEmail: string;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private userService: UserService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    async sendEmail() {\n        try {\n            const request = new TwoFactorEmailRequest(this.email, this.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n            await this.emailPromise;\n            this.sentEmail = this.email;\n        } catch { }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorEmailRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.email = this.email;\n        request.token = this.token;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorEmail(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorEmailResponse) {\n        this.token = null;\n        this.email = response.email;\n        this.enabled = response.enabled;\n        if (!this.enabled && (this.email == null || this.email === '')) {\n            this.email = await this.userService.getEmail();\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faEmailTitle\"> {{'twoStepLogin' | i18n}} <small>{{'emailTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <ng-container *ngIf=\"enabled\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <strong>{{'email' | i18n}}:</strong> {{email}} </ng-container> <ng-container *ngIf=\"!enabled\"> <p class=\"d-flex\"> <span class=\"mr-3\">{{'twoFactorEmailDesc' | i18n}}</span> <img src=\"images/1.png\" class=\"float-right ml-auto\" alt=\"\"> </p> <div class=\"form-group\"> <label for=\"email\">1. {{'twoFactorEmailEnterEmail' | i18n}}</label> <input id=\"email\" type=\"text\" name=\"Email\" class=\"form-control\" [(ngModel)]=\"email\" required inputmode=\"email\" appInputVerbatim=\"false\"> </div> <div class=\"mb-3 d-flex\"> <button #sendBtn type=\"button\" class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\" (click)=\"sendEmail()\" [appApiAction]=\"emailPromise\" [disabled]=\"sendBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'sendEmail' | i18n}}</span> </button> <span class=\"text-success ml-3\" *ngIf=\"sentEmail\"> {{'verificationCodeEmailSent' | i18n : sentEmail}} </span> </div> <div class=\"form-group\"> <label for=\"token\">2. {{'twoFactorEmailEnterCode' | i18n}}</label> <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required appInputVerbatim> </div> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span> <span *ngIf=\"enabled\">{{'disable' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { TwoFactorRecoverResponse } from 'jslib-common/models/response/twoFactorRescoverResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\n@Component({\n    selector: 'app-two-factor-recovery',\n    templateUrl: 'two-factor-recovery.component.html',\n})\nexport class TwoFactorRecoveryComponent {\n    type = -1;\n    code: string;\n    authed: boolean;\n    twoFactorProviderType = TwoFactorProviderType;\n\n    constructor(private i18nService: I18nService) { }\n\n    auth(authResponse: any) {\n        this.authed = true;\n        this.processResponse(authResponse.response);\n    }\n\n    print() {\n        const w = window.open();\n        w.document.write('<div style=\"font-size: 18px; text-align: center;\">' +\n            '<p>' + this.i18nService.t('twoFactorRecoveryYourCode') + ':</p>' +\n            '<code style=\"font-family: Menlo, Monaco, Consolas, \\'Courier New\\', monospace;\">' +\n            this.code + '</code></div>' +\n            '<p style=\"text-align: center;\">' + new Date() + '</p>');\n        w.onafterprint = () => w.close();\n        w.print();\n    }\n\n    private formatString(s: string) {\n        if (s == null) {\n            return null;\n        }\n        return s.replace(/(.{4})/g, '$1 ').trim().toUpperCase();\n    }\n\n    private processResponse(response: TwoFactorRecoverResponse) {\n        this.code = this.formatString(response.code);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\"> <div class=\"modal-dialog\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faRecoveryTitle\"> {{'twoStepLogin' | i18n}} <small>{{'recoveryCodeTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <ng-container *ngIf=\"authed\"> <div class=\"modal-body text-center\"> <ng-container *ngIf=\"code\"> <p>{{'twoFactorRecoveryYourCode' | i18n}}:</p> <code class=\"text-lg\">{{code}}</code> </ng-container> <ng-container *ngIf=\"!code\"> {{'twoFactorRecoveryNoCode' | i18n}} </ng-container> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">{{'printCode' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </ng-container> </div> </div> </div> ","import {\n    Component,\n    NgZone,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from 'jslib-common/models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from 'jslib-common/models/request/updateTwoFactorWebAuthnRequest';\nimport {\n    ChallengeResponse,\n    TwoFactorWebAuthnResponse,\n} from 'jslib-common/models/response/twoFactorWebAuthnResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-webauthn',\n    templateUrl: 'two-factor-webauthn.component.html',\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.WebAuthn;\n    name: string;\n    keys: any[];\n    keyIdAvailable: number = null;\n    keysConfiguredCount = 0;\n    webAuthnError: boolean;\n    webAuthnListening: boolean;\n    webAuthnResponse: PublicKeyCredential;\n    challengePromise: Promise<ChallengeResponse>;\n    formPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private ngZone: NgZone) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n            // Should never happen.\n            return Promise.reject();\n        }\n        const request = new UpdateTwoFactorWebAuthnRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.deviceResponse = this.webAuthnResponse;\n        request.id = this.keyIdAvailable;\n        request.name = this.name;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    disable() {\n        return super.disable(this.formPromise);\n    }\n\n    async remove(key: any) {\n        if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n            return;\n        }\n        const name = key.name != null ? key.name : this.i18nService.t('webAuthnkeyX', key.id);\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeU2fConfirmation'), name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n        const request = new UpdateTwoFactorWebAuthnDeleteRequest();\n        request.id = key.id;\n        request.masterPasswordHash = this.masterPasswordHash;\n        try {\n            key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n            const response = await key.removePromise;\n            key.removePromise = null;\n            await this.processResponse(response);\n        } catch { }\n    }\n\n    async readKey() {\n        if (this.keyIdAvailable == null) {\n            return;\n        }\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        try {\n            this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n            const challenge = await this.challengePromise;\n            this.readDevice(challenge);\n        } catch { }\n    }\n\n    private readDevice(webAuthnChallenge: ChallengeResponse) {\n        // tslint:disable-next-line\n        console.log('listening for key...');\n        this.resetWebAuthn(true);\n\n        navigator.credentials.create({\n            publicKey: webAuthnChallenge,\n        }).then((data: PublicKeyCredential) => {\n            this.ngZone.run(() => {\n                this.webAuthnListening = false;\n                this.webAuthnResponse = data;\n            });\n        }).catch(err => {\n            // tslint:disable-next-line\n            console.error(err);\n            this.resetWebAuthn(false);\n            // TODO: Should we display the actual error?\n            this.webAuthnError = true;\n        });\n    }\n\n    private resetWebAuthn(listening = false) {\n        this.webAuthnResponse = null;\n        this.webAuthnError = false;\n        this.webAuthnListening = listening;\n    }\n\n    private processResponse(response: TwoFactorWebAuthnResponse) {\n        this.resetWebAuthn();\n        this.keys = [];\n        this.keyIdAvailable = null;\n        this.name = null;\n        this.keysConfiguredCount = 0;\n        for (let i = 1; i <= 5; i++) {\n            if (response.keys != null) {\n                const key = response.keys.filter(k => k.id === i);\n                if (key.length > 0) {\n                    this.keysConfiguredCount++;\n                    this.keys.push({\n                        id: i, name: key[0].name,\n                        configured: true,\n                        migrated: key[0].migrated,\n                        removePromise: null,\n                    });\n                    continue;\n                }\n            }\n            this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n            if (this.keyIdAvailable == null) {\n                this.keyIdAvailable = i;\n            }\n        }\n        this.enabled = response.enabled;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\"> <div class=\"modal-dialog modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faU2fTitle\"> {{'twoStepLogin' | i18n}} <small>{{'webAuthnTitle' | i18n}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"> <div class=\"modal-body\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <app-callout type=\"warning\"> <p>{{'twoFactorWebAuthnWarning' | i18n}}</p> <ul class=\"mb-0\"> <li>{{'twoFactorWebAuthnSupportWeb' | i18n}}</li> </ul> </app-callout> <img src=\"images/7.png\" class=\"float-right ml-5\" alt=\"\"> <ul class=\"fa-ul\"> <li *ngFor=\"let k of keys; let i = index\" #removeKeyBtn [appApiAction]=\"k.removePromise\"> <i class=\"fa-li fa fa-key\"></i> <strong *ngIf=\"!k.configured || !k.name\">{{'webAuthnkeyX' | i18n : i + 1}}</strong> <strong *ngIf=\"k.configured && k.name\">{{k.name}}</strong> <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\"> <ng-container *ngIf=\"k.migrated\"> <span>{{'webAuthnMigrated' | i18n}}</span> </ng-container> </ng-container> <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\"> <i class=\"fa fa-spin fa-spinner text-muted fa-fw\" title=\"{{'loading' | i18n}}\" *ngIf=\"removeKeyBtn.loading\" aria-hidden=\"true\"></i> - <a href=\"#\" appStopClick (click)=\"remove(k)\">{{'remove' | i18n}}</a> </ng-container> </li> </ul> <hr> <p>{{'twoFactorWebAuthnAdd' | i18n}}:</p> <ol> <li>{{'twoFactorU2fGiveName' | i18n}}</li> <li>{{'twoFactorU2fPlugInReadKey' | i18n}}</li> <li>{{'twoFactorU2fTouchButton' | i18n}}</li> <li>{{'twoFactorU2fSaveForm' | i18n}}</li> </ol> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" type=\"text\" name=\"Name\" class=\"form-control\" [(ngModel)]=\"name\" [disabled]=\"!keyIdAvailable\"> </div> </div> <button type=\"button\" (click)=\"readKey()\" class=\"btn btn-outline-secondary mr-2\" [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\" #readKeyBtn [appApiAction]=\"challengePromise\"> {{'readKey' | i18n}} </button> <ng-container *ngIf=\"readKeyBtn.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i> </ng-container> <ng-container *ngIf=\"!readKeyBtn.loading\"> <ng-container *ngIf=\"webAuthnListening\"> <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i> {{'twoFactorU2fWaiting' | i18n}}... </ng-container> <ng-container *ngIf=\"webAuthnResponse\"> <i class=\"fa fa-check-circle text-success\" aria-hidden=\"true\"></i> {{'twoFactorU2fClickSave' | i18n}} </ng-container> <ng-container *ngIf=\"webAuthnError\"> <i class=\"fa fa-warning text-danger\" aria-hidden=\"true\"></i> {{'twoFactorU2fProblemReadingTryAgain' | i18n}} </ng-container> </ng-container> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || !webAuthnResponse\"> <i class=\"fa fa-spinner fa-spin\" *ngIf=\"form.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!form.loading\">{{'save' | i18n}}</span> </button> <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\" *ngIf=\"enabled\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'disableAllKeys' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { UpdateTwoFactorYubioOtpRequest } from 'jslib-common/models/request/updateTwoFactorYubioOtpRequest';\nimport { TwoFactorYubiKeyResponse } from 'jslib-common/models/response/twoFactorYubiKeyResponse';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-yubikey',\n    templateUrl: 'two-factor-yubikey.component.html',\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Yubikey;\n    keys: any[];\n    nfc = false;\n\n    formPromise: Promise<any>;\n    disablePromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        toasterService: ToasterService, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        const request = new UpdateTwoFactorYubioOtpRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n        request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n        request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n        request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n        request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n        request.nfc = this.nfc;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n            this.toasterService.popAsync('success', null, this.i18nService.t('yubikeysUpdated'));\n        });\n    }\n\n    disable() {\n        return super.disable(this.disablePromise);\n    }\n\n    remove(key: any) {\n        key.existingKey = null;\n        key.key = null;\n    }\n\n    private processResponse(response: TwoFactorYubiKeyResponse) {\n        this.enabled = response.enabled;\n        this.keys = [\n            { key: response.key1, existingKey: this.padRight(response.key1) },\n            { key: response.key2, existingKey: this.padRight(response.key2) },\n            { key: response.key3, existingKey: this.padRight(response.key3) },\n            { key: response.key4, existingKey: this.padRight(response.key4) },\n            { key: response.key5, existingKey: this.padRight(response.key5) },\n        ];\n        this.nfc = response.nfc || !response.enabled;\n    }\n\n    private padRight(str: string, character = '•', size = 44) {\n        if (str == null || character == null || str.length >= size) {\n            return str;\n        }\n        const max = (size - str.length) / character.length;\n        for (let i = 0; i < max; i++) {\n            str += character;\n        }\n        return str;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\"> <div class=\"modal-dialog modal-lg\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\"> {{'twoStepLogin' | i18n}} <small>YubiKey</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\"> </app-two-factor-verify> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\" autocomplete=\"off\"> <div class=\"modal-body\"> <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\"> {{'twoStepLoginProviderEnabled' | i18n}} </app-callout> <app-callout type=\"warning\"> <p>{{'twoFactorYubikeyWarning' | i18n}}</p> <ul class=\"mb-0\"> <li>{{'twoFactorYubikeySupportUsb' | i18n}}</li> <li>{{'twoFactorYubikeySupportMobile' | i18n}}</li> </ul> </app-callout> <img src=\"images/3.png\" class=\"float-right\" alt=\"\"> <p>{{'twoFactorYubikeyAdd' | i18n}}:</p> <ol> <li>{{'twoFactorYubikeyPlugIn' | i18n}}</li> <li>{{'twoFactorYubikeySelectKey' | i18n}}</li> <li>{{'twoFactorYubikeyTouchButton' | i18n}}</li> <li>{{'twoFactorYubikeySaveForm' | i18n}}</li> </ol> <hr> <div class=\"row\"> <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\"> <label for=\"key{{i + 1}}\">{{'yubikeyX' | i18n : i + 1}}</label> <input id=\"key{{i + 1}}\" type=\"password\" name=\"Key{{i + 1}}\" class=\"form-control\" [(ngModel)]=\"k.key\" *ngIf=\"!k.existingKey\" appInputVerbatim autocomplete=\"new-password\"> <div class=\"d-flex\" *ngIf=\"k.existingKey\"> <span class=\"mr-2\">{{k.existingKey}}</span> <button type=\"button\" class=\"btn btn-link text-danger ml-auto\" (click)=\"remove(k)\" appA11yTitle=\"{{'remove' | i18n}}\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> </div> <strong class=\"d-block mb-2\">{{'nfcSupport' | i18n}}</strong> <div class=\"form-check\"> <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\"> <label class=\"form-check-label\" for=\"nfc\">{{'twoFactorYubikeySupportsNfc' | i18n}}</label> </div> <small class=\"form-text text-muted\">{{'twoFactorYubikeySupportsNfcDesc' | i18n}}</small> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\" *ngIf=\"enabled\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'disableAllKeys' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> </div> ","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { ExportComponent as BaseExportComponent } from '../../tools/export.component';\n\nimport { EventType } from 'jslib-common/enums/eventType';\n\n@Component({\n    selector: 'app-org-export',\n    templateUrl: '../../tools/export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService, private route: ActivatedRoute) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n        });\n    }\n\n    getExportData() {\n        return this.exportService.getOrganizationExport(this.organizationId, this.format);\n    }\n\n    getFileName() {\n        return super.getFileName('org');\n    }\n\n    async collectEvent(): Promise<any> {\n        // TODO\n        // await this.eventService.collect(EventType.Organization_ClientExportedVault);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent,\n} from '../../tools/exposed-passwords-report.component';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: '../../tools/exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, auditService: AuditService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService, private route: ActivatedRoute) {\n        super(cipherService, auditService, componentFactoryResolver, messagingService, userService);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import { PasswordHistoryResponse } from '../response/passwordHistoryResponse';\n\nexport class PasswordHistoryData {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response?: PasswordHistoryResponse) {\n        if (response == null) {\n            return;\n        }\n\n        this.password = response.password;\n        this.lastUsedDate = response.lastUsedDate;\n    }\n}\n","import { View } from './view';\n\nimport { Attachment } from '../domain/attachment';\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\n\nexport class AttachmentView implements View {\n    id: string = null;\n    url: string = null;\n    size: string = null;\n    sizeName: string = null;\n    fileName: string = null;\n    key: SymmetricCryptoKey = null;\n\n    constructor(a?: Attachment) {\n        if (!a) {\n            return;\n        }\n\n        this.id = a.id;\n        this.url = a.url;\n        this.size = a.size;\n        this.sizeName = a.sizeName;\n    }\n\n    get fileSize(): number {\n        try {\n            if (this.size != null) {\n                return parseInt(this.size, null);\n            }\n        } catch { }\n        return 0;\n    }\n}\n","import { PasswordHistoryData } from '../data/passwordHistoryData';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\n\nimport { PasswordHistoryView } from '../view/passwordHistoryView';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class Password extends Domain {\n    password: EncString;\n    lastUsedDate: Date;\n\n    constructor(obj?: PasswordHistoryData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            password: null,\n        }, alreadyEncrypted);\n        this.lastUsedDate = new Date(obj.lastUsedDate);\n    }\n\n    decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n         return this.decryptObj(new PasswordHistoryView(this), {\n            password: null,\n        }, orgId, encKey);\n    }\n\n    toPasswordHistoryData(): PasswordHistoryData {\n        const ph = new PasswordHistoryData();\n        ph.lastUsedDate = this.lastUsedDate.toISOString();\n        this.buildDataModel(this, ph, {\n            password: null,\n        });\n        return ph;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherCreateRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    Input,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appFallbackSrc]',\n})\nexport class FallbackSrcDirective {\n    @Input('appFallbackSrc') appFallbackSrc: string;\n\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('error') onError() {\n        this.el.nativeElement.src = this.appFallbackSrc;\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { ImportService } from 'jslib-common/abstractions/import.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ImportComponent as BaseImportComponent } from '../../tools/import.component';\n\n@Component({\n    selector: 'app-org-import',\n    templateUrl: '../../tools/import.component.html',\n})\nexport class ImportComponent extends BaseImportComponent {\n    organizationName: string;\n\n    constructor(i18nService: I18nService, toasterService: ToasterService,\n        importService: ImportService, router: Router, private route: ActivatedRoute,\n        platformUtilsService: PlatformUtilsService,\n        private userService: UserService) {\n        super(i18nService, toasterService, importService, router, platformUtilsService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organizationId = params.organizationId;\n            this.successNavigate = ['organizations', this.organizationId, 'vault'];\n            super.ngOnInit();\n        });\n        const organization = await this.userService.getOrganization(this.organizationId);\n        this.organizationName = organization.name;\n    }\n\n    async submit() {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('importWarning', this.organizationName),\n            this.i18nService.t('warning'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n        super.submit();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent,\n} from '../../tools/inactive-two-factor-report.component';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: '../../tools/inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport {\n    ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent,\n} from '../../tools/reused-passwords-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: '../../tools/reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent {\n    organization: Organization;\n    accessReports = false;\n    loading = true;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private messagingService: MessagingService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            this.accessReports = this.organization.useTotp;\n            this.loading = false;\n        });\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n    }\n}\n","<div class=\"container page-content\"> <ng-container *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"!loading\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\"> <div class=\"card-header\">{{'tools' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'importData' | i18n}} </a> <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exportVault' | i18n}} </a> </div> </div> <div class=\"card\" *ngIf=\"organization.canAccessReports\"> <div class=\"card-header d-flex\"> {{'reports' | i18n}} <div class=\"ml-auto\"> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!accessReports\" (click)=\"upgradeOrganization()\"> {{'upgrade' | i18n}} </a> </div> </div> <div class=\"list-group list-group-flush\"> <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exposedPasswordsReport' | i18n}} </a> <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'reusedPasswordsReport' | i18n}} </a> <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'weakPasswordsReport' | i18n}} </a> <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'unsecuredWebsitesReport' | i18n}} </a> <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'inactive2faReport' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </ng-container> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent,\n} from '../../tools/unsecured-websites-report.component';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: '../../tools/unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport {\n    WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent,\n} from '../../tools/weak-passwords-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: '../../tools/weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n    manageableCiphers: Cipher[];\n\n    constructor(cipherService: CipherService, passwordGenerationService: PasswordGenerationService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService, private route: ActivatedRoute) {\n        super(cipherService, passwordGenerationService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.manageableCiphers = await this.cipherService.getAll();\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n\n    canManageCipher(c: CipherView): boolean {\n        return this.manageableCiphers.some(x => x.id === c.id);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from '../../vault/attachments.component';\n\n@Component({\n    selector: 'app-org-vault-attachments',\n    templateUrl: '../../vault/attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = false;\n    organization: Organization;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.organization.canManageAllCollections && this.showFixOldAttachments(attachment)) {\n            await super.reuploadCipherAttachment(attachment, true);\n        }\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canManageAllCollections) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file, this.organization.canManageAllCollections);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        if (!this.organization.canManageAllCollections) {\n            return super.deleteCipherAttachment(attachmentId);\n        }\n        return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.organization.canManageAllCollections;\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { ErrorResponse } from 'jslib-common/models/response';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Output() onUploadedAttachment = new EventEmitter();\n    @Output() onDeletedAttachment = new EventEmitter();\n    @Output() onReuploadedAttachment = new EventEmitter();\n\n    cipher: CipherView;\n    cipherDomain: Cipher;\n    hasUpdatedKey: boolean;\n    canAccessAttachments: boolean;\n    formPromise: Promise<any>;\n    deletePromises: { [id: string]: Promise<any>; } = {};\n    reuploadPromises: { [id: string]: Promise<any>; } = {};\n    emergencyAccessId?: string = null;\n\n    constructor(protected cipherService: CipherService, protected i18nService: I18nService,\n        protected cryptoService: CryptoService, protected userService: UserService,\n        protected platformUtilsService: PlatformUtilsService, protected apiService: ApiService,\n        protected win: Window) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit() {\n        if (!this.hasUpdatedKey) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        if (files[0].size > 524288000) { // 500 MB\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('maxFileSize'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.saveCipherAttachment(files[0]);\n            this.cipherDomain = await this.formPromise;\n            this.cipher = await this.cipherDomain.decrypt();\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n            this.onUploadedAttachment.emit();\n        } catch { }\n\n        // reset file input\n        // ref: https://stackoverflow.com/a/20552042\n        fileEl.type = '';\n        fileEl.type = 'file';\n        fileEl.value = '';\n    }\n\n    async delete(attachment: AttachmentView) {\n        if (this.deletePromises[attachment.id] != null) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteAttachmentConfirmation'), this.i18nService.t('deleteAttachment'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n            await this.deletePromises[attachment.id];\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedAttachment'));\n            const i = this.cipher.attachments.indexOf(attachment);\n            if (i > -1) {\n                this.cipher.attachments.splice(i, 1);\n            }\n        } catch { }\n\n        this.deletePromises[attachment.id] = null;\n        this.onDeletedAttachment.emit();\n    }\n\n    async download(attachment: AttachmentView) {\n        const a = (attachment as any);\n        if (a.downloading) {\n            return;\n        }\n\n        if (!this.canAccessAttachments) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('premiumRequired'),\n                this.i18nService.t('premiumRequiredDesc'));\n            return;\n        }\n\n        let url: string;\n        try {\n            const attachmentDownloadResponse = await this.apiService.getAttachmentData(this.cipher.id, attachment.id,\n                this.emergencyAccessId);\n            url = attachmentDownloadResponse.url;\n        } catch (e) {\n            if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n                url = attachment.url;\n            } else if (e instanceof ErrorResponse) {\n                throw new Error((e as ErrorResponse).getSingleMessage());\n            } else {\n                throw e;\n            }\n        }\n\n        a.downloading = true;\n        const response = await fetch(new Request(url, { cache: 'no-store' }));\n        if (response.status !== 200) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            a.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const key = attachment.key != null ? attachment.key :\n                await this.cryptoService.getOrgKey(this.cipher.organizationId);\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n            this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        a.downloading = false;\n    }\n\n    protected async init() {\n        this.cipherDomain = await this.loadCipher();\n        this.cipher = await this.cipherDomain.decrypt();\n\n        this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n        const canAccessPremium = await this.userService.canAccessPremium();\n        this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n        if (!this.canAccessAttachments) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://vault.bitwarden.com/#/?premium=purchase');\n            }\n        } else if (!this.hasUpdatedKey) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateKey'), this.i18nService.t('featureUnavailable'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'), 'warning');\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://help.bitwarden.com/article/update-encryption-key/');\n            }\n        }\n    }\n\n    protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n        const a = (attachment as any);\n        if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n            return;\n        }\n\n        try {\n            this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n                // 1. Download\n                a.downloading = true;\n                const response = await fetch(new Request(attachment.url, { cache: 'no-store' }));\n                if (response.status !== 200) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                    a.downloading = false;\n                    return;\n                }\n\n                try {\n                    // 2. Resave\n                    const buf = await response.arrayBuffer();\n                    const key = attachment.key != null ? attachment.key :\n                        await this.cryptoService.getOrgKey(this.cipher.organizationId);\n                    const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n                    this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n                        this.cipherDomain, attachment.fileName, decBuf, admin);\n                    this.cipher = await this.cipherDomain.decrypt();\n\n                    // 3. Delete old\n                    this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n                    await this.deletePromises[attachment.id];\n                    const foundAttachment = this.cipher.attachments.filter(a2 => a2.id === attachment.id);\n                    if (foundAttachment.length > 0) {\n                        const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n                        if (i > -1) {\n                            this.cipher.attachments.splice(i, 1);\n                        }\n                    }\n\n                    this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n                    this.onReuploadedAttachment.emit();\n                } catch (e) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                }\n\n                a.downloading = false;\n            });\n            await this.reuploadPromises[attachment.id];\n        } catch { }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CipherData } from 'jslib-common/models/data/cipherData';\nimport { Cipher } from 'jslib-common/models/domain/cipher';\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherCollectionsRequest } from 'jslib-common/models/request/cipherCollectionsRequest';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from '../../vault/collections.component';\n\n@Component({\n    selector: 'app-org-vault-collections',\n    templateUrl: '../../vault/collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService,\n        private apiService: ApiService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService);\n        this.allowSelectNone = true;\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.canManageAllCollections) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected loadCipherCollections() {\n        if (!this.organization.canManageAllCollections) {\n            return super.loadCipherCollections();\n        }\n        return this.collectionIds;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.canManageAllCollections) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected saveCollections() {\n        if (this.organization.canManageAllCollections) {\n            const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n            return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n        } else {\n            return super.saveCollections();\n        }\n    }\n}\n","export class CipherCollectionsRequest {\n    collectionIds: string[];\n\n    constructor(collectionIds: string[]) {\n        this.collectionIds = collectionIds == null ? [] : collectionIds;\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { ModalComponent } from '../../modal.component';\n\nimport { EntityEventsComponent } from '../manage/entity-events.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { GroupingsComponent } from './groupings.component';\n\nconst BroadcasterSubscriptionId = 'OrgVaultComponent';\n\n@Component({\n    selector: 'app-org-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n\n    organization: Organization;\n    collectionId: string = null;\n    type: CipherType = null;\n    deleted: boolean = false;\n    trashCleanupWarning: string = null;\n\n    modal: ModalComponent = null;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private syncService: SyncService, private i18nService: I18nService,\n        private componentFactoryResolver: ComponentFactoryResolver, private messagingService: MessagingService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.trashCleanupWarning = this.i18nService.t(\n            this.platformUtilsService.isSelfHost() ? 'trashCleanupWarningSelfHosted' : 'trashCleanupWarning'\n        );\n\n        const queryParams = this.route.parent.params.subscribe(async params => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.groupingsComponent.organization = this.organization;\n            this.ciphersComponent.organization = this.organization;\n\n            const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n                this.ciphersComponent.searchText = this.groupingsComponent.searchText = qParams.search;\n                if (!this.organization.canManageAllCollections) {\n                    await this.syncService.fullSync(false);\n                    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                        this.ngZone.run(async () => {\n                            switch (message.command) {\n                                case 'syncCompleted':\n                                    if (message.successfully) {\n                                        await Promise.all([\n                                            this.groupingsComponent.load(),\n                                            this.ciphersComponent.refresh(),\n                                        ]);\n                                        this.changeDetectorRef.detectChanges();\n                                    }\n                                    break;\n                            }\n                        });\n                    });\n                }\n                await this.groupingsComponent.load();\n\n                if (qParams == null) {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                } else {\n                    if (qParams.deleted) {\n                        this.groupingsComponent.selectedTrash = true;\n                        await this.filterDeleted(true);\n                    } else if (qParams.type) {\n                        const t = parseInt(qParams.type, null);\n                        this.groupingsComponent.selectedType = t;\n                        await this.filterCipherType(t, true);\n                    } else if (qParams.collectionId) {\n                        this.groupingsComponent.selectedCollectionId = qParams.collectionId;\n                        await this.filterCollection(qParams.collectionId, true);\n                    } else {\n                        this.groupingsComponent.selectedAll = true;\n                        await this.ciphersComponent.reload();\n                    }\n                }\n\n                if (qParams.viewEvents != null) {\n                    const cipher = this.ciphersComponent.ciphers.filter(c => c.id === qParams.viewEvents);\n                    if (cipher.length > 0) {\n                        this.viewEvents(cipher[0]);\n                    }\n                }\n\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n\n            if (queryParams != null) {\n                queryParams.unsubscribe();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.applyFilter();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        const filter = (c: CipherView) => c.type === type;\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        const filter = (c: CipherView) => {\n            if (collectionId === 'unassigned') {\n                return c.collectionIds == null || c.collectionIds.length === 0;\n            } else {\n                return c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1;\n            }\n        };\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    async filterDeleted(load: boolean = false) {\n        this.ciphersComponent.showAddNew = false;\n        this.ciphersComponent.deleted = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\n        if (load) {\n            await this.ciphersComponent.reload(null, true);\n        } else {\n            await this.ciphersComponent.applyFilter(null);\n        }\n        this.clearFilters();\n        this.deleted = true;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    editCipherAttachments(cipher: CipherView) {\n        if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n            this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher.id;\n        let madeAttachmentChanges = false;\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    editCipherCollections(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\n\n        if (this.organization.canManageAllCollections) {\n            childComponent.collectionIds = cipher.collectionIds;\n            childComponent.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n        }\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher.id;\n        childComponent.onSavedCollections.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    addCipher() {\n        const component = this.editCipher(null);\n        component.organizationId = this.organization.id;\n        component.type = this.type;\n        if (this.organization.canManageAllCollections) {\n            component.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n        }\n        if (this.collectionId != null) {\n            component.collectionIds = [this.collectionId];\n        }\n    }\n\n    editCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(AddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    cloneCipher(cipher: CipherView) {\n        const component = this.editCipher(cipher);\n        component.cloneMode = true;\n        component.organizationId = this.organization.id;\n        if (this.organization.canManageAllCollections) {\n            component.collections = this.groupingsComponent.collections.filter(c => !c.readOnly);\n        }\n        // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n        // in the add-edit componenet\n        component.collectionIds = cipher.collectionIds;\n    }\n\n    async viewEvents(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityEventsComponent>(\n            EntityEventsComponent, this.eventsModalRef);\n\n        childComponent.name = cipher.name;\n        childComponent.organizationId = this.organization.id;\n        childComponent.entityId = cipher.id;\n        childComponent.showUser = true;\n        childComponent.entity = 'cipher';\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private clearFilters() {\n        this.collectionId = null;\n        this.type = null;\n        this.deleted = false;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                type: this.type,\n                collectionId: this.collectionId,\n                deleted: this.deleted ? true : null,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <app-org-vault-groupings [showFolders]=\"false\" [showFavorites]=\"false\" [showTrash]=\"true\" (onAllClicked)=\"clearGroupingFilters()\" (onCipherTypeClicked)=\"filterCipherType($event)\" (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\" (onTrashClicked)=\"filterDeleted()\"> </app-org-vault-groupings> </div> <div class=\"col-9\"> <div class=\"page-header d-flex\"> <h1> {{'vault' | i18n}} <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [modal]=\"modal\" [deleted]=\"deleted\" [organization]=\"organization\"> </app-vault-bulk-actions> <button type=\"button\" class=\"btn btn-outline-primary btn-sm ml-auto\" (click)=\"addCipher()\" *ngIf=\"!deleted\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}} </button> </div> </div> <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"fa-warning\"> {{trashCleanupWarning}} </app-callout> <app-org-vault-ciphers (onCipherClicked)=\"editCipher($event)\" (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\" (onCollectionsClicked)=\"editCipherCollections($event)\" (onEventsClicked)=\"viewEvents($event)\" (onCloneClicked)=\"cloneCipher($event)\"> </app-org-vault-ciphers> </div> </div> </div> <ng-template #attachments></ng-template> <ng-template #cipherAddEdit></ng-template> <ng-template #collections></ng-template> <ng-template #eventsTemplate></ng-template> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherBulkDeleteRequest } from 'jslib-common/models/request/cipherBulkDeleteRequest';\n\n@Component({\n    selector: 'app-vault-bulk-delete',\n    templateUrl: 'bulk-delete.component.html',\n})\nexport class BulkDeleteComponent {\n    @Input() cipherIds: string[] = [];\n    @Input() permanent: boolean = false;\n    @Input() organization: Organization;\n    @Output() onDeleted = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private apiService: ApiService) { }\n\n    async submit() {\n        if (!this.organization || !this.organization.canManageAllCollections) {\n            await this.deleteCiphers();\n        } else {\n            await this.deleteCiphersAdmin();\n        }\n\n        await this.formPromise;\n\n        this.onDeleted.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t(this.permanent ? 'permanentlyDeletedItems'\n            : 'deletedItems'));\n    }\n\n    private async deleteCiphers() {\n        if (this.permanent) {\n            this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n        } else {\n            this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n        }\n    }\n\n    private async deleteCiphersAdmin() {\n        const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n        if (this.permanent) {\n            this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n        } else {\n            this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteSelectedTitle\"> {{(permanent ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> {{(permanent ? 'permanentlyDeleteSelectedItemsDesc' : 'deleteSelectedItemsDesc') | i18n: cipherIds.length}} </div> <div class=\"modal-footer\"> <button appAutoFocus type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{(permanent ? 'permanentlyDelete' : 'delete') | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","export class CipherBulkDeleteRequest {\n    ids: string[];\n    organizationId: string;\n\n    constructor(ids: string[], organizationId?: string) {\n        this.ids = ids == null ? [] : ids;\n        this.organizationId = organizationId;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\n@Component({\n    selector: 'app-vault-bulk-move',\n    templateUrl: 'bulk-move.component.html',\n})\nexport class BulkMoveComponent implements OnInit {\n    @Input() cipherIds: string[] = [];\n    @Output() onMoved = new EventEmitter();\n\n    folderId: string = null;\n    folders: FolderView[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private folderService: FolderService) { }\n\n    async ngOnInit() {\n        this.folders = await this.folderService.getAllDecrypted();\n        this.folderId = this.folders[0].id;\n    }\n\n    async submit() {\n        this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n        await this.formPromise;\n        this.onMoved.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t('movedItems'));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"moveSelectedTitle\"> {{'moveSelected' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'moveSelectedItemsDesc' | i18n: cipherIds.length}}</p> <div class=\"form-group\"> <label for=\"folder\">{{'folder' | i18n}}</label> <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\"> <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option> </select> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-vault-bulk-restore',\n    templateUrl: 'bulk-restore.component.html',\n})\nexport class BulkRestoreComponent {\n    @Input() cipherIds: string[] = [];\n    @Output() onRestored = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService) { }\n\n    async submit() {\n        this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n        await this.formPromise;\n        this.onRestored.emit();\n        this.toasterService.popAsync('success', null, this.i18nService.t('restoredItems'));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"restoreSelectedTitle\"> {{'restoreSelected' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> {{'restoreSelectedItemsDesc' | i18n: cipherIds.length}} </div> <div class=\"modal-footer\"> <button appAutoFocus type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'restore' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CipherView } from 'jslib-common/models/view';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-vault-bulk-share',\n    templateUrl: 'bulk-share.component.html',\n})\nexport class BulkShareComponent implements OnInit {\n    @Input() ciphers: CipherView[] = [];\n    @Input() organizationId: string;\n    @Output() onShared = new EventEmitter();\n\n    nonShareableCount = 0;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n    shareableCiphers: CipherView[] = [];\n    formPromise: Promise<any>;\n\n    private writeableCollections: CollectionView[] = [];\n\n    constructor(private cipherService: CipherService, private toasterService: ToasterService,\n        private i18nService: I18nService, private collectionService: CollectionService,\n        private userService: UserService) { }\n\n    async ngOnInit() {\n        this.shareableCiphers = this.ciphers.filter(c => !c.hasOldAttachments && c.organizationId == null);\n        this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.filter(c => !c.readOnly);\n        this.organizations = await this.userService.getAllOrganizations();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    filterCollections() {\n        this.selectAll(false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit() {\n        const checkedCollectionIds = this.collections.filter(c => (c as any).checked).map(c => c.id);\n        try {\n            this.formPromise = this.cipherService.shareManyWithServer(this.shareableCiphers, this.organizationId,\n                checkedCollectionIds);\n            await this.formPromise;\n            this.onShared.emit();\n            const orgName = this.organizations.find(o => o.id === this.organizationId)?.name ?? this.i18nService.t('organization');\n            this.toasterService.popAsync('success', null, this.i18nService.t('movedItemsToOrg', orgName));\n        } catch { }\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach(c => this.check(c, select));\n    }\n\n    get canSave() {\n        if (this.shareableCiphers != null && this.shareableCiphers.length > 0 && this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\"> {{'moveSelectedToOrg' | i18n}} </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'moveManyToOrgDesc' | i18n}}</p> <p>{{'moveSelectedItemsCountDesc' | i18n: this.ciphers.length : shareableCiphers.length : nonShareableCount}} </p> <div class=\"form-group\"> <label for=\"organization\">{{'organization' | i18n}}</label> <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\" (change)=\"filterCollections()\"> <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option> </select> </div> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\" [ngClass]=\"{loading:form.loading}\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { SendAccess } from 'jslib-common/models/domain/sendAccess';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { SendAccessView } from 'jslib-common/models/view/sendAccessView';\n\nimport { SendType } from 'jslib-common/enums/sendType';\nimport { SendAccessRequest } from 'jslib-common/models/request/sendAccessRequest';\nimport { ErrorResponse } from 'jslib-common/models/response/errorResponse';\n\nimport { SendAccessResponse } from 'jslib-common/models/response/sendAccessResponse';\n\n@Component({\n    selector: 'app-send-access',\n    templateUrl: 'access.component.html',\n})\nexport class AccessComponent implements OnInit {\n    send: SendAccessView;\n    sendType = SendType;\n    downloading = false;\n    loading = true;\n    passwordRequired = false;\n    formPromise: Promise<SendAccessResponse>;\n    password: string;\n    showText = false;\n    unavailable = false;\n    error = false;\n    hideEmail = false;\n\n    private id: string;\n    private key: string;\n    private decKey: SymmetricCryptoKey;\n    private accessRequest: SendAccessRequest;\n\n    constructor(private i18nService: I18nService, private cryptoFunctionService: CryptoFunctionService,\n        private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private route: ActivatedRoute, private cryptoService: CryptoService) {\n    }\n\n    get sendText() {\n        if (this.send == null || this.send.text == null) {\n            return null;\n        }\n        return this.showText ? this.send.text.text : this.send.text.maskedText;\n    }\n\n    get expirationDate() {\n        if (this.send == null || this.send.expirationDate == null) {\n            return null;\n        }\n        return this.send.expirationDate;\n    }\n\n    get creatorIdentifier() {\n        if (this.send == null || this.send.creatorIdentifier == null) {\n            return null;\n        }\n        return this.send.creatorIdentifier;\n    }\n\n    ngOnInit() {\n        this.route.params.subscribe(async params => {\n            this.id = params.sendId;\n            this.key = params.key;\n            if (this.key == null || this.id == null) {\n                return;\n            }\n            await this.load();\n        });\n    }\n\n    async download() {\n        if (this.send == null || this.decKey == null) {\n            return;\n        }\n\n        if (this.downloading) {\n            return;\n        }\n\n\n        const downloadData = await this.apiService.getSendFileDownloadData(this.send, this.accessRequest);\n\n        if (Utils.isNullOrWhitespace(downloadData.url)) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('missingSendFile'));\n            return;\n        }\n\n        this.downloading = true;\n        const response = await fetch(new Request(downloadData.url, { cache: 'no-store' }));\n        if (response.status !== 200) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            this.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, this.decKey);\n            this.platformUtilsService.saveFile(window, decBuf, null, this.send.file.fileName);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        this.downloading = false;\n    }\n\n    copyText() {\n        this.platformUtilsService.copyToClipboard(this.send.text.text);\n        this.platformUtilsService.showToast('success', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('sendTypeText')));\n    }\n\n    toggleText() {\n        this.showText = !this.showText;\n    }\n\n    async load() {\n        this.unavailable = false;\n        this.error = false;\n        this.hideEmail = false;\n        const keyArray = Utils.fromUrlB64ToArray(this.key);\n        this.accessRequest = new SendAccessRequest();\n        if (this.password != null) {\n            const passwordHash = await this.cryptoFunctionService.pbkdf2(this.password, keyArray, 'sha256', 100000);\n            this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n        }\n        try {\n            let sendResponse: SendAccessResponse = null;\n            if (this.loading) {\n                sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n            } else {\n                this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n                sendResponse = await this.formPromise;\n            }\n            this.passwordRequired = false;\n            const sendAccess = new SendAccess(sendResponse);\n            this.decKey = await this.cryptoService.makeSendKey(keyArray);\n            this.send = await sendAccess.decrypt(this.decKey);\n            this.showText = this.send.text != null ? !this.send.text.hidden : true;\n        } catch (e) {\n            if (e instanceof ErrorResponse) {\n                if (e.statusCode === 401) {\n                    this.passwordRequired = true;\n                } else if (e.statusCode === 404) {\n                    this.unavailable = true;\n                } else {\n                    this.error = true;\n                }\n            }\n        }\n        this.loading = false;\n        this.hideEmail = this.creatorIdentifier == null && !this.passwordRequired && !this.loading && !this.unavailable;\n    }\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate> <div class=\"row justify-content-center mt-5\"> <div class=\"col-12\"> <p class=\"lead text-center mb-4\">Bitwarden Send</p> </div> <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\"> <p>{{'sendCreatorIdentifier' | i18n: creatorIdentifier }}</p> </div> <div class=\"col-8\" *ngIf=\"hideEmail\"> <app-callout type=\"warning\" title=\"{{'warning' | i18n}}\"> {{'viewSendHiddenEmailWarning' | i18n }} <a href=\"https://bitwarden.com/help/article/receive-send/\" target=\"_blank\">{{'learnMore' | i18n}}</a>. </app-callout> </div> </div> <div class=\"row justify-content-center\"> <div class=\"col-5\"> <div class=\"card d-block\"> <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\"> <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\"> <p>{{'sendProtectedPassword' | i18n}}</p> <p>{{'sendProtectedPasswordDontKnow' | i18n}}</p> <div class=\"form-group\"> <label for=\"password\">{{'password' | i18n}}</label> <input id=\"password\" type=\"password\" name=\"Password\" class=\"text-monospace form-control\" [(ngModel)]=\"password\" required appInputVerbatim appAutofocus> </div> <div class=\"d-flex\"> <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"> <span> <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'continue' | i18n}} </span> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> <div class=\"card-body\" *ngIf=\"!loading && unavailable\"> {{'sendAccessUnavailable' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loading && error\"> {{'unexpectedError' | i18n}} </div> <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\"> <p class=\"text-center\"><b>{{send.name}}</b></p> <hr> <ng-container *ngIf=\"send.type === sendType.Text\"> <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{'sendHiddenByDefault' | i18n}}</app-callout> <div class=\"form-group\"> <textarea id=\"text\" rows=\"8\" name=\"Text\" [(ngModel)]=\"sendText\" class=\"form-control\" readonly=\"readonly\"></textarea> </div> <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"toggleText()\" *ngIf=\"send.text.hidden\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showText, 'fa-eye-slash': showText}\"></i> {{'toggleVisibility' | i18n}} </button> <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\"> <i class=\"fa fa-copy\" aria-hidden=\"true\"></i> {{'copyValue' | i18n}} </button> </ng-container> <ng-container *ngIf=\"send.type === sendType.File\"> <p>{{send.file.fileName}}</p> <button class=\"btn btn-primary btn-block\" type=\"button\" (click)=\"download()\" *ngIf=\"!downloading\"> <i class=\"fa fa-download\" aria-hidden=\"true\"></i> {{'downloadFile' | i18n}} ({{send.file.sizeName}})</button> <button class=\"btn btn-primary btn-block\" type=\"button\" *ngIf=\"downloading\" disabled=\"true\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </ng-container> <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">Expires: {{expirationDate | date: 'medium'}}</p> </div> </div> </div> <div class=\"col-12 text-center mt-5 text-muted\"> <p class=\"mb-0\">{{'sendAccessTaglineProductDesc' | i18n}}<br> {{'sendAccessTaglineLearnMore' | i18n}} <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\">Bitwarden Send</a> {{'sendAccessTaglineOr' | i18n}} <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{'sendAccessTaglineSignUp' | i18n}}</a> {{'sendAccessTaglineTryToday' | i18n}} </p> </div> </div> </form> ","import { DatePipe } from '@angular/common';\n\nimport { Component } from '@angular/core';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib-angular/components/send/add-edit.component';\n\n@Component({\n    selector: 'app-send-add-edit',\n    templateUrl: 'add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    constructor(i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        environmentService: EnvironmentService, datePipe: DatePipe,\n        sendService: SendService, userService: UserService,\n        messagingService: MessagingService, policyService: PolicyService) {\n        super(i18nService, platformUtilsService, environmentService, datePipe, sendService, userService,\n            messagingService, policyService);\n    }\n\n    async copyLinkToClipboard(link: string): Promise<void | boolean> {\n        // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n        // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n        return new Promise(resolve => {\n            window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n        });\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"send\"> <app-callout *ngIf=\"disableSend\"> <span>{{'sendDisabledWarning' | i18n}}</span> </app-callout> <app-callout *ngIf=\"!disableSend && disableHideEmail\"> <span>{{'sendOptionsPolicyInEffect' | i18n}}</span> <ul class=\"mb-0\"> <li>{{'sendDisableHideEmailInEffect' | i18n}}</li> </ul> </app-callout> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"send.name\" required [readOnly]=\"disableSend\"> <small class=\"form-text text-muted\">{{'sendNameDesc' | i18n}}</small> </div> </div> <div class=\"row\" *ngIf=\"!editMode\"> <div class=\"col-6 form-group\"> <label>{{'whatTypeOfSend' | i18n}}</label> <div class=\"form-check\" *ngFor=\"let o of typeOptions\"> <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"send.type\" name=\"Type_{{o.value}}\" id=\"type_{{o.value}}\" [value]=\"o.value\" (change)=\"typeChanged(o)\" [checked]=\"send.type === o.value\"> <label class=\"form-check-label\" for=\"type_{{o.value}}\"> {{o.name}} </label> </div> </div> </div> <ng-container *ngIf=\"send.type === sendType.Text\"> <div class=\"form-group\"> <label for=\"text\">{{'sendTypeText' | i18n}}</label> <textarea id=\"text\" name=\"Text.Text\" rows=\"6\" [(ngModel)]=\"send.text.text\" class=\"form-control\" [readOnly]=\"disableSend\"></textarea> <small class=\"form-text text-muted\">{{'sendTextDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.text.hidden\" id=\"text-hidden\" name=\"Text.Hidden\" [disabled]=\"disableSend\"> <label class=\"form-check-label\" for=\"text-hidden\">{{'textHiddenByDefault' | i18n}}</label> </div> </div> </ng-container> <ng-container *ngIf=\"send.type === sendType.File\"> <div class=\"form-group\"> <div *ngIf=\"editMode\"> <strong class=\"d-block\">{{'file' | i18n}}</strong> {{send.file.fileName}} ({{send.file.sizeName}}) </div> <div *ngIf=\"!editMode\"> <label for=\"file\">{{'file' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required [disabled]=\"disableSend\"> <small class=\"form-text text-muted\">{{'sendFileDesc' | i18n}} {{'maxFileSize' | i18n}}</small> </div> </div> </ng-container> <h3 class=\"mt-5\">{{'share' | i18n}}</h3> <div class=\"form-group\" *ngIf=\"link\"> <label for=\"link\">{{'sendLinkLabel' | i18n}}</label> <input type=\"text\" readonly=\"readonly\" id=\"link\" name=\"Link\" [(ngModel)]=\"link\" class=\"form-control\"> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"copyLink\" id=\"copy-link\" name=\"CopyLink\"> <label class=\"form-check-label\" for=\"copy-link\">{{'copySendLinkOnSave' | i18n}}</label> </div> </div> <div id=\"options-header\" class=\"section-header d-flex flex-row align-items-center mt-5\" (click)=\"toggleOptions()\"> <h3 class=\"mb-0 mr-2\">{{'options' | i18n}}</h3> <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\"> <i class=\"fa\" aria-hidden=\"true\" [ngClass]=\"{'fa-chevron-down': !showOptions, 'fa-chevron-up': showOptions}\"></i> </a> </div> <div id=\"options\" [hidden]=\"!showOptions\"> <app-send-efflux-dates [initialDeletionDate]=\"send.deletionDate\" [initialExpirationDate]=\"send.expirationDate\" [editMode]=\"editMode\" [disabled]=\"disableSend\" (datesChanged)=\"setDates($event)\"> </app-send-efflux-dates> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"maxAccessCount\">{{'maxAccessCount' | i18n}}</label> <input id=\"maxAccessCount\" class=\"form-control\" type=\"number\" name=\"MaxAccessCount\" [(ngModel)]=\"send.maxAccessCount\" min=\"1\" [readOnly]=\"disableSend\"> <div class=\"form-text text-muted small\">{{'maxAccessCountDesc' | i18n}}</div> </div> <div class=\"col-6 form-group\" *ngIf=\"editMode\"> <label for=\"accessCount\">{{'currentAccessCount' | i18n}}</label> <input id=\"accessCount\" class=\"form-control\" type=\"text\" name=\"AccessCount\" readonly=\"readonly\" [(ngModel)]=\"send.accessCount\"> </div> </div> <div class=\"row\"> <div class=\"col-6 form-group\"> <label for=\"password\" *ngIf=\"!hasPassword\">{{'password' | i18n}}</label> <label for=\"password\" *ngIf=\"hasPassword\">{{'newPassword' | i18n}}</label> <div class=\"input-group\"> <input id=\"password\" class=\"form-control text-monospace\" type=\"{{showPassword ? 'text' : 'password'}}\" name=\"Password\" [(ngModel)]=\"password\" [readOnly]=\"disableSend\"> <div class=\"input-group-append\"> <button type=\"button\" class=\"btn btn-outline-secondary\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePasswordVisible()\"> <i class=\"fa fa-lg\" aria-hidden=\"true\" [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i> </button> </div> </div> <div class=\"form-text text-muted small\">{{'sendPasswordDesc' | i18n}}</div> </div> </div> <div class=\"form-group\"> <label for=\"notes\">{{'notes' | i18n}}</label> <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"send.notes\" class=\"form-control\" [readOnly]=\"disableSend\"></textarea> <div class=\"form-text text-muted small\">{{'sendNotesDesc' | i18n}}</div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.hideEmail\" id=\"hideEmail\" name=\"HideEmail\" [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"> <label class=\"form-check-label\" for=\"hideEmail\"> {{'hideEmail' | i18n}} </label> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.disabled\" id=\"disabled\" name=\"Disabled\" [disabled]=\"disableSend\"> <label class=\"form-check-label\" for=\"disabled\">{{'disableThisSend' | i18n}}</label> </div> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [ngClass]=\"{loading:form.loading}\" [disabled]=\"form.loading || disableSend\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'cancel' | i18n}} </button> <div class=\"ml-auto\" *ngIf=\"send\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import { SendType } from '../../enums/sendType';\nimport { Utils } from '../../misc/utils';\n\nimport { Send } from '../domain/send';\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\n\nimport { SendFileView } from './sendFileView';\nimport { SendTextView } from './sendTextView';\nimport { View } from './view';\n\nexport class SendView implements View {\n    id: string = null;\n    accessId: string = null;\n    name: string = null;\n    notes: string = null;\n    key: ArrayBuffer;\n    cryptoKey: SymmetricCryptoKey;\n    type: SendType = null;\n    text = new SendTextView();\n    file = new SendFileView();\n    maxAccessCount?: number = null;\n    accessCount: number = 0;\n    revisionDate: Date = null;\n    deletionDate: Date = null;\n    expirationDate: Date = null;\n    password: string = null;\n    disabled: boolean = false;\n    hideEmail: boolean = false;\n\n    constructor(s?: Send) {\n        if (!s) {\n            return;\n        }\n\n        this.id = s.id;\n        this.accessId = s.accessId;\n        this.type = s.type;\n        this.maxAccessCount = s.maxAccessCount;\n        this.accessCount = s.accessCount;\n        this.revisionDate = s.revisionDate;\n        this.deletionDate = s.deletionDate;\n        this.expirationDate = s.expirationDate;\n        this.disabled = s.disabled;\n        this.password = s.password;\n        this.hideEmail = s.hideEmail;\n    }\n\n    get urlB64Key(): string {\n        return Utils.fromBufferToUrlB64(this.key);\n    }\n\n    get maxAccessCountReached(): boolean {\n        if (this.maxAccessCount == null) {\n            return false;\n        }\n        return this.accessCount >= this.maxAccessCount;\n    }\n\n    get expired(): boolean {\n        if (this.expirationDate == null) {\n            return false;\n        }\n        return this.expirationDate <= new Date();\n    }\n\n    get pendingDelete(): boolean {\n        return this.deletionDate <= new Date();\n    }\n}\n","import { DatePipe } from '@angular/common';\n\nimport { Component } from '@angular/core';\n\nimport { ControlContainer, NgForm } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from 'jslib-angular/components/send/efflux-dates.component';\n\n@Component({\n    selector: 'app-send-efflux-dates',\n    templateUrl: 'efflux-dates.component.html',\n    viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n    constructor(protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected datePipe: DatePipe) {\n        super(i18nService, platformUtilsService, datePipe);\n    }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\"> <div class=\"col-6 form-group\"> <label for=\"deletionDate\">{{'deletionDate' | i18n}}</label> <ng-template #deletionDateCustom> <ng-container [ngSwitch]=\"browserPath\"> <ng-container *ngSwitchCase=\"'firefox'\"> <div class=\"d-flex justify-content-around\"> <input id=\"deletionDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"DeletionDateFallback\" formControlName=\"fallbackDeletionDate\" required placeholder=\"MM/DD/YYYY\" [readOnly]=\"disableSend\" data-date-format=\"mm/dd/yyyy\"> <input id=\"deletionTimeCustomFallback\" class=\"form-control mt-1 ml-1\" type=\"time\" name=\"DeletionTimeDate\" formControlName=\"fallbackDeletionTime\" required placeholder=\"HH:MM AM/PM\" [readOnly]=\"disableSend\"> </div> </ng-container> <ng-container *ngSwitchCase=\"'safari'\"> <div class=\"d-flex justify-content-around\"> <input id=\"deletionDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"DeletionDateFallback\" formControlName=\"fallbackDeletionDate\" required placeholder=\"MM/DD/YYYY\" [readOnly]=\"disableSend\" data-date-format=\"mm/dd/yyyy\"> <select id=\"deletionTimeCustomFallback\" class=\"form-control mt-1 ml-1\" [required]=\"!editMode\" formControlName=\"fallbackDeletionTime\" name=\"SafariDeletionTime\"> <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">{{o.twelveHour}}</option> </select> </div> </ng-container> <ng-container *ngSwitchDefault> <input id=\"deletionDateCustom\" class=\"form-control mt-1\" type=\"datetime-local\" name=\"DeletionDate\" formControlName=\"defaultDeletionDateTime\" required placeholder=\"MM/DD/YYYY HH:MM AM/PM\" [readOnly]=\"disabled\"> </ng-container> </ng-container> </ng-template> <div *ngIf=\"!editMode\"> <select id=\"deletionDate\" name=\"SelectedDeletionDatePreset\" formControlName=\"selectedDeletionDatePreset\" class=\"form-control\" required> <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\"> <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container> </ng-container> </div> <div *ngIf=\"editMode\"> <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container> </div> <div class=\"form-text text-muted small\">{{'deletionDateDesc' | i18n}}</div> </div> <div class=\"col-6 form-group\"> <div class=\"d-flex\"> <label for=\"expirationDate\">{{'expirationDate' | i18n}}</label> <a href=\"#\" appStopClick (click)=\"clearExpiration()\" class=\"ml-auto\" *ngIf=\"editMode && !disabled\"> {{'clear' | i18n}} </a> </div> <ng-template #expirationDateCustom> <ng-container [ngSwitch]=\"browserPath\"> <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\"> <input id=\"expirationDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"ExpirationDateFallback\" formControlName=\"fallbackExpirationDate\" [required]=\"!editMode\" placeholder=\"MM/DD/YYYY\" [readOnly]=\"disabled\" data-date-format=\"mm/dd/yyyy\"> <input id=\"expirationTimeCustomFallback\" class=\"form-control mt-1 ml-1\" type=\"time\" name=\"ExpirationTimeFallback\" formControlName=\"fallbackExpirationTime\" [required]=\"!editMode\" placeholder=\"HH:MM AM/PM\" [readOnly]=\"disabled\"> </div> <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\"> <input id=\"expirationDateCustomFallback\" class=\"form-control mt-1\" type=\"date\" name=\"ExpirationDateFallback\" formControlName=\"fallbackExpirationDate\" [required]=\"!editMode\" placeholder=\"MM/DD/YYYY\" [readOnly]=\"disabled\" data-date-format=\"mm/dd/yyyy\"> <select id=\"expirationTimeCustomFallback\" class=\"form-control mt-1 ml-1\" [required]=\"!editMode\" formControlName=\"fallbackExpirationTime\" name=\"SafariExpirationTime\"> <option *ngFor=\"let o of safariExpirationTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">{{o.twelveHour}}</option> </select> </div> <ng-container *ngSwitchDefault> <input id=\"expirationDateCustom\" class=\"form-control mt-1\" type=\"datetime-local\" name=\"ExpirationDate\" formControlName=\"defaultExpirationDateTime\" placeholder=\"MM/DD/YYYY HH:MM AM/PM\" [readOnly]=\"disabled\"> </ng-container> </ng-container> </ng-template> <div *ngIf=\"!editMode\"> <select id=\"expirationDate\" name=\"SelectedExpirationDatePreset\" formControlName=\"selectedExpirationDatePreset\" class=\"form-control\" required> <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{o.name}} </option> </select> <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\"> <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container> </ng-container> </div> <div *ngIf=\"editMode\"> <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container> </div> <div class=\"form-text text-muted small\">{{'expirationDateDesc' | i18n}}</div> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    NgZone,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { SendComponent as BaseSendComponent } from 'jslib-angular/components/send/send.component';\n\nimport { AddEditComponent } from './add-edit.component';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'SendComponent';\n\n@Component({\n    selector: 'app-send',\n    templateUrl: 'send.component.html',\n})\nexport class SendComponent extends BaseSendComponent {\n    @ViewChild('sendAddEdit', { read: ViewContainerRef, static: true }) sendAddEditModalRef: ViewContainerRef;\n\n    modal: ModalComponent = null;\n\n    constructor(sendService: SendService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, environmentService: EnvironmentService,\n        ngZone: NgZone, searchService: SearchService, policyService: PolicyService, userService: UserService,\n        private componentFactoryResolver: ComponentFactoryResolver, private broadcasterService: BroadcasterService) {\n        super(sendService, i18nService, platformUtilsService, environmentService, ngZone, searchService,\n            policyService, userService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        await this.load();\n\n        // Broadcaster subscription - load if sync completes in the background\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'syncCompleted':\n                        if (message.successfully) {\n                            await this.load();\n                        }\n                        break;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    addSend() {\n        if (this.disableSend) {\n            return;\n        }\n\n        const component = this.editSend(null);\n        component.type = this.type;\n    }\n\n    editSend(send: SendView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.sendAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(\n            AddEditComponent, this.sendAddEditModalRef);\n\n        childComponent.sendId = send == null ? null : send.id;\n        childComponent.onSavedSend.subscribe(async (s: SendView) => {\n            this.modal.close();\n            await this.load();\n        });\n        childComponent.onDeletedSend.subscribe(async (s: SendView) => {\n            this.modal.close();\n            await this.load();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row card border-warning mb-4\" *ngIf=\"disableSend\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'sendDisabled' | i18n}} </div> <div class=\"card-body\"> <span>{{'sendDisabledWarning' | i18n}}</span> </div> </div> <div class=\"row\"> <div class=\"col-3 groupings\"> <div class=\"card vault-filters\"> <div class=\"card-header d-flex\"> {{'filters' | i18n}} </div> <div class=\"card-body\"> <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchSends' | i18n)}}\" id=\"search\" class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" autocomplete=\"off\" appAutofocus> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedAll}\"> <a href=\"#\" appStopClick (click)=\"selectAll()\"> <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allSends' | i18n}} </a> </li> </ul> <h3>{{'types' | i18n}}</h3> <ul class=\"fa-ul card-ul\"> <li [ngClass]=\"{active: selectedType === sendType.Text}\"> <a href=\"#\" appStopClick (click)=\"selectType(sendType.Text)\"> <i class=\"fa-li fa fa-fw fa-file-text-o\"></i>{{'sendTypeText' | i18n}} </a> </li> <li [ngClass]=\"{active: selectedType === sendType.File}\"> <a href=\"#\" appStopClick (click)=\"selectType(sendType.File)\"> <i class=\"fa-li fa fa-fw fa-file-o\"></i>{{'sendTypeFile' | i18n}} </a> </li> </ul> </div> </div> </div> <div class=\"col-9\"> <div class=\"page-header d-flex\"> <h1> {{'send' | i18n}} <small #actionSpinner [appApiAction]=\"actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addSend()\" [disabled]=\"disableSend\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'createSend' | i18n}} </button> </div> </div> <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\"> <tbody> <tr *ngFor=\"let s of filteredSends\"> <td class=\"table-list-icon\"> <div class=\"icon\" aria-hidden=\"true\"> <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"s.type == sendType.File\"></i> <i class=\"fa fa-fw fa-lg fa-file-text-o\" *ngIf=\"s.type == sendType.Text\"></i> </div> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{s.name}}</a> <ng-container *ngIf=\"s.disabled\"> <i class=\"fa fa-warning\" appStopProp title=\"{{'disabled' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'disabled' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.password\"> <i class=\"fa fa-key\" appStopProp title=\"{{'password' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'password' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.maxAccessCountReached\"> <i class=\"fa fa-ban\" appStopProp title=\"{{'maxAccessCountReached' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'maxAccessCountReached' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.expired\"> <i class=\"fa fa-clock-o\" appStopProp title=\"{{'expired' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'expired' | i18n}}</span> </ng-container> <ng-container *ngIf=\"s.pendingDelete\"> <i class=\"fa fa-trash\" appStopProp title=\"{{'pendingDeletion' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'pendingDeletion' | i18n}}</span> </ng-container> <br> <small appStopProp>{{s.deletionDate | date:'medium'}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(s)\"> <i class=\"fa fa-fw fa-copy\" aria-hidden=\"true\"></i> {{'copySendLink' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\"> <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i> {{'removePassword' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(s)\"> <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i> {{'delete' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\"> <ng-container *ngIf=\"!loaded\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"loaded\"> <p>{{'noSendsInList' | i18n}}</p> <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\"> <i class=\"fa fa-plus fa-fw\"></i>{{'createSend' | i18n}}</button> </ng-container> </div> </div> </div> </div> <ng-template #sendAddEdit></ng-template> ","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ModalComponent } from '../modal.component';\nimport { ApiKeyComponent } from './api-key.component';\nimport { DeauthorizeSessionsComponent } from './deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './delete-account.component';\nimport { PurgeVaultComponent } from './purge-vault.component';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deauthorizeSessionsTemplate', { read: ViewContainerRef, static: true }) deauthModalRef: ViewContainerRef;\n    @ViewChild('purgeVaultTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\n    @ViewChild('deleteAccountTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\n    @ViewChild('viewUserApiKeyTemplate', { read: ViewContainerRef, static: true }) viewUserApiKeyModalRef: ViewContainerRef;\n    @ViewChild('rotateUserApiKeyTemplate', { read: ViewContainerRef, static: true }) rotateUserApiKeyModalRef: ViewContainerRef;\n\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private apiService: ApiService,\n        private userService: UserService) { }\n\n    deauthorizeSessions() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deauthModalRef.createComponent(factory).instance;\n        this.modal.show<DeauthorizeSessionsComponent>(DeauthorizeSessionsComponent, this.deauthModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    purgeVault() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.purgeModalRef.createComponent(factory).instance;\n        this.modal.show<PurgeVaultComponent>(PurgeVaultComponent, this.purgeModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    deleteAccount() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\n        this.modal.show<DeleteAccountComponent>(DeleteAccountComponent, this.deleteModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    async viewUserApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.viewUserApiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.viewUserApiKeyModalRef);\n        childComponent.keyType = 'user';\n        childComponent.entityId = await this.userService.getUserId();\n        childComponent.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n        childComponent.scope = 'api';\n        childComponent.grantType = 'client_credentials';\n        childComponent.apiKeyTitle = 'apiKey';\n        childComponent.apiKeyWarning = 'userApiKeyWarning';\n        childComponent.apiKeyDescription = 'userApiKeyDesc';\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    async rotateUserApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.rotateUserApiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.rotateUserApiKeyModalRef);\n        childComponent.keyType = 'user';\n        childComponent.isRotation = true;\n        childComponent.entityId = await this.userService.getUserId();\n        childComponent.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n        childComponent.scope = 'api';\n        childComponent.grantType = 'client_credentials';\n        childComponent.apiKeyTitle = 'apiKey';\n        childComponent.apiKeyWarning = 'userApiKeyWarning';\n        childComponent.apiKeyDescription = 'apiKeyRotateDesc';\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'myAccount' | i18n}}</h1> </div> <app-profile></app-profile> <div class=\"secondary-header\"> <h1>{{'changeEmail' | i18n}}</h1> </div> <app-change-email></app-change-email> <div class=\"secondary-header\"> <h1>{{'changeMasterPassword' | i18n}}</h1> </div> <app-change-password></app-change-password> <div class=\"secondary-header\"> <h1>{{'encKeySettings' | i18n}}</h1> </div> <app-change-kdf></app-change-kdf> <div class=\"secondary-header border-0 mb-0\"> <h1>{{'apiKey' | i18n}}</h1> </div> <p> {{'userApiKeyDesc' | i18n}} </p> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewUserApiKey()\">{{'viewApiKey' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateUserApiKey()\">{{'rotateApiKey' | i18n}}</button> <div class=\"secondary-header text-danger border-0 mb-0\"> <h1>{{'dangerZone' | i18n}}</h1> </div> <div class=\"card border-danger\"> <div class=\"card-body\"> <p>{{'dangerZoneDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deauthorizeSessions()\">{{'deauthorizeSessions' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button> <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteAccount()\">{{'deleteAccount' | i18n}}</button> </div> </div> <ng-template #deauthorizeSessionsTemplate></ng-template> <ng-template #purgeVaultTemplate></ng-template> <ng-template #deleteAccountTemplate></ng-template> <ng-template #viewUserApiKeyTemplate></ng-template> <ng-template #rotateUserApiKeyTemplate></ng-template> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-deauthorize-sessions',\n    templateUrl: 'deauthorize-sessions.component.html',\n})\nexport class DeauthorizeSessionsComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postSecurityStamp(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('sessionsDeauthorized'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deAuthTitle\">{{'deauthorizeSessions' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'deauthorizeSessionsDesc' | i18n}}</p> <app-callout type=\"warning\">{{'deauthorizeSessionsWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deauthorizeSessions' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-account',\n    templateUrl: 'delete-account.component.html',\n})\nexport class DeleteAccountComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteAccount(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{'deleteAccount' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'deleteAccountDesc' | i18n}}</p> <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'deleteAccount' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { UpdateProfileRequest } from 'jslib-common/models/request/updateProfileRequest';\n\nimport { ProfileResponse } from 'jslib-common/models/response/profileResponse';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: 'profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n    loading = true;\n    profile: ProfileResponse;\n    fingerprint: string;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private userService: UserService,\n        private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        this.profile = await this.apiService.getProfile();\n        this.loading = false;\n        const fingerprint = await this.cryptoService.getFingerprint(await this.userService.getUserId());\n        if (fingerprint != null) {\n            this.fingerprint = fingerprint.join('-');\n        }\n    }\n\n    async submit() {\n        try {\n            const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n            this.formPromise = this.apiService.putProfile(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('accountUpdated'));\n        } catch { }\n    }\n}\n","<div *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <form *ngIf=\"profile && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\"> </div> <div class=\"form-group\"> <label for=\"email\">{{'email' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"profile.email\" readonly=\"readonly\"> </div> <div class=\"form-group\"> <label for=\"masterPasswordHint\">{{'masterPassHintLabel' | i18n}}</label> <input id=\"masterPasswordHint\" class=\"form-control\" type=\"text\" name=\"MasterPasswordHint\" [(ngModel)]=\"profile.masterPasswordHint\"> </div> </div> <div class=\"col-6\"> <div class=\"mb-3\"> <app-avatar data=\"{{profile | userName}}\" [email]=\"profile.email\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar> </div> <hr> <p *ngIf=\"fingerprint\"> {{'yourAccountsFingerprint' | i18n}}: <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i></a><br> <code>{{fingerprint}}</code> </p> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import {\n    Component,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EmailRequest } from 'jslib-common/models/request/emailRequest';\nimport { EmailTokenRequest } from 'jslib-common/models/request/emailTokenRequest';\n\n@Component({\n    selector: 'app-change-email',\n    templateUrl: 'change-email.component.html',\n})\nexport class ChangeEmailComponent {\n    masterPassword: string;\n    newEmail: string;\n    token: string;\n    tokenSent = false;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        this.newEmail = this.newEmail.trim().toLowerCase();\n        if (!this.tokenSent) {\n            const request = new EmailTokenRequest();\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            try {\n                this.formPromise = this.apiService.postEmailToken(request);\n                await this.formPromise;\n                this.tokenSent = true;\n            } catch { }\n        } else {\n            const request = new EmailRequest();\n            request.token = this.token;\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            const kdf = await this.userService.getKdf();\n            const kdfIterations = await this.userService.getKdfIterations();\n            const newKey = await this.cryptoService.makeKey(this.masterPassword, this.newEmail, kdf, kdfIterations);\n            request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n            const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n            request.key = newEncKey[1].encryptedString;\n            try {\n                this.formPromise = this.apiService.postEmail(request);\n                await this.formPromise;\n                this.reset();\n                this.toasterService.popAsync('success', this.i18nService.t('emailChanged'),\n                    this.i18nService.t('logBackIn'));\n                this.messagingService.send('logout');\n            } catch { }\n        }\n    }\n\n    reset() {\n        this.token = this.newEmail = this.masterPassword = null;\n        this.tokenSent = false;\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required [readonly]=\"tokenSent\" appInputVerbatim> </div> <div class=\"form-group\"> <label for=\"newEmail\">{{'newEmail' | i18n}}</label> <input id=\"newEmail\" class=\"form-control\" type=\"text\" name=\"NewEmail\" [(ngModel)]=\"newEmail\" required [readonly]=\"tokenSent\" inputmode=\"email\" appInputVerbatim=\"false\"> </div> </div> </div> <ng-container *ngIf=\"tokenSent\"> <hr> <p>{{'changeEmailDesc' | i18n : newEmail}}</p> <app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"token\">{{'code' | i18n}}</label> <input id=\"token\" class=\"form-control\" type=\"text\" name=\"Token\" [(ngModel)]=\"token\" required appInputVerbatim> </div> </div> </div> </ng-container> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span *ngIf=\"!tokenSent\">{{'continue' | i18n}}</span> <span *ngIf=\"tokenSent\">{{'changeEmail' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\"> {{'cancel' | i18n}} </button> </form> ","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class EmailTokenRequest extends PasswordVerificationRequest {\n    newEmail: string;\n    masterPasswordHash: string;\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport {\n    ChangePasswordComponent as BaseChangePasswordComponent,\n} from 'jslib-angular/components/change-password.component';\n\nimport { EmergencyAccessStatusType } from 'jslib-common/enums/emergencyAccessStatusType';\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { CipherWithIdRequest } from 'jslib-common/models/request/cipherWithIdRequest';\nimport { EmergencyAccessUpdateRequest } from 'jslib-common/models/request/emergencyAccessUpdateRequest';\nimport { FolderWithIdRequest } from 'jslib-common/models/request/folderWithIdRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from 'jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { PasswordRequest } from 'jslib-common/models/request/passwordRequest';\nimport { SendWithIdRequest } from 'jslib-common/models/request/sendWithIdRequest';\nimport { UpdateKeyRequest } from 'jslib-common/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-change-password',\n    templateUrl: 'change-password.component.html',\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n    rotateEncKey = false;\n    currentMasterPassword: string;\n\n    constructor(i18nService: I18nService,\n        cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\n        private folderService: FolderService, private cipherService: CipherService,\n        private syncService: SyncService, private apiService: ApiService, private sendService: SendService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async rotateEncKeyClicked() {\n        if (this.rotateEncKey) {\n            const ciphers = await this.cipherService.getAllDecrypted();\n            let hasOldAttachments = false;\n            if (ciphers != null) {\n                for (let i = 0; i < ciphers.length; i++) {\n                    if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n                        hasOldAttachments = true;\n                        break;\n                    }\n                }\n            }\n\n            if (hasOldAttachments) {\n                const learnMore = await this.platformUtilsService.showDialog(\n                    this.i18nService.t('oldAttachmentsNeedFixDesc'), null,\n                    this.i18nService.t('learnMore'), this.i18nService.t('close'), 'warning');\n                if (learnMore) {\n                    this.platformUtilsService.launchUri(\n                        'https://help.bitwarden.com/article/attachments/#fixing-old-attachments');\n                }\n                this.rotateEncKey = false;\n                return;\n            }\n\n            const result = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateEncryptionKeyWarning') + ' ' +\n                this.i18nService.t('updateEncryptionKeyExportWarning') + ' ' +\n                this.i18nService.t('rotateEncKeyConfirmation'), this.i18nService.t('rotateEncKeyTitle'),\n                this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n            if (!result) {\n                this.rotateEncKey = false;\n            }\n        }\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        await super.submit();\n    }\n\n    async setupSubmitActions() {\n        if (this.currentMasterPassword == null || this.currentMasterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n\n        if (this.rotateEncKey) {\n            await this.syncService.fullSync(true);\n        }\n\n        return super.setupSubmitActions();\n    }\n\n    async performSubmitActions(newMasterPasswordHash: string, newKey: SymmetricCryptoKey,\n        newEncKey: [SymmetricCryptoKey, EncString]) {\n        const request = new PasswordRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.currentMasterPassword, null);\n        request.newMasterPasswordHash = newMasterPasswordHash;\n        request.key = newEncKey[1].encryptedString;\n\n        try {\n            if (this.rotateEncKey) {\n                this.formPromise = this.apiService.postPassword(request).then(() => {\n                    return this.updateKey(newKey, request.newMasterPasswordHash);\n                });\n            } else {\n                this.formPromise = this.apiService.postPassword(request);\n            }\n\n            await this.formPromise;\n\n            this.platformUtilsService.showToast('success', this.i18nService.t('masterPasswordChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n    }\n\n    private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: EncString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = masterPasswordHash;\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        const sends = await this.sendService.getAll();\n        await Promise.all(sends.map(async send => {\n            const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n            send.key = await this.cryptoService.encrypt(cryptoKey, encKey[0]) ?? send.key;\n            request.sends.push(new SendWithIdRequest(send));\n        }));\n\n        await this.apiService.postAccountKey(request);\n\n        await this.updateEmergencyAccesses(encKey[0]);\n\n        await this.updateAllResetPasswordKeys(encKey[0]);\n    }\n\n    private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n        const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n        const allowedStatuses = [\n            EmergencyAccessStatusType.Confirmed,\n            EmergencyAccessStatusType.RecoveryInitiated,\n            EmergencyAccessStatusType.RecoveryApproved,\n        ];\n\n        const filteredAccesses = emergencyAccess.data.filter(d => allowedStatuses.includes(d.status));\n\n        for (const details of filteredAccesses) {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n            const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n            const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n            const updateRequest = new EmergencyAccessUpdateRequest();\n            updateRequest.type = details.type;\n            updateRequest.waitTimeDays = details.waitTimeDays;\n            updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n            await this.apiService.putEmergencyAccess(details.id, updateRequest);\n        }\n    }\n\n    private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey) {\n        const orgs = await this.userService.getAllOrganizations();\n\n        for (const org of orgs) {\n            // If not already enrolled, skip\n            if (!org.resetPasswordEnrolled) {\n                continue;\n            }\n\n            // Retrieve public key\n            const response = await this.apiService.getOrganizationKeys(org.id);\n            const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n            // Re-enroll - encrpyt user's encKey.key with organization public key\n            const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n            // Create/Execute request\n            const request = new OrganizationUserResetPasswordEnrollmentRequest();\n            request.resetPasswordKey = encryptedKey.encryptedString;\n\n            await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n        }\n    }\n}\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\"> {{'masterPasswordPolicyInEffect' | i18n}} <ul class=\"mb-0\"> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">{{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\">{{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">{{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">{{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </app-callout> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"currentMasterPassword\">{{'currentMasterPass' | i18n}}</label> <input id=\"currentMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"currentMasterPassword\" required appInputVerbatim> </div> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"newMasterPassword\">{{'newMasterPass' | i18n}}</label> <input id=\"newMasterPassword\" type=\"password\" name=\"NewMasterPasswordHash\" class=\"form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim autocomplete=\"new-password\"> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"></app-password-strength> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'confirmNewMasterPass' | i18n}}</label> <input id=\"masterPasswordRetype\" type=\"password\" name=\"MasterPasswordRetype\" class=\"form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim autocomplete=\"new-password\"> </div> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"rotateEncKey\" name=\"RotateEncKey\" [(ngModel)]=\"rotateEncKey\" (change)=\"rotateEncKeyClicked()\"> <label class=\"form-check-label\" for=\"rotateEncKey\"> {{'rotateAccountEncKey' | i18n}} </label> <a href=\"https://bitwarden.com/help/article/account-encryption-key/#rotate-your-encryption-key\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'changeMasterPassword' | i18n}}</span> </button> </form> ","export enum EmergencyAccessStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n    RecoveryInitiated = 3,\n    RecoveryApproved = 4,\n}\n","import { EmergencyAccessType } from '../../enums/emergencyAccessType';\n\nexport class EmergencyAccessUpdateRequest {\n    type: EmergencyAccessType;\n    waitTimeDays: number;\n    keyEncrypted?: string;\n}\n","import { FolderRequest } from './folderRequest';\n\nimport { Folder } from '../domain/folder';\n\nexport class FolderWithIdRequest extends FolderRequest {\n    id: string;\n\n    constructor(folder: Folder) {\n        super(folder);\n        this.id = folder.id;\n    }\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class PasswordRequest extends PasswordVerificationRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nimport { Send } from '../domain/send';\n\nexport class SendRequest {\n    type: SendType;\n    fileLength?: number;\n    name: string;\n    notes: string;\n    key: string;\n    maxAccessCount?: number;\n    expirationDate: string;\n    deletionDate: string;\n    text: SendTextApi;\n    file: SendFileApi;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(send: Send, fileLength?: number) {\n        this.type = send.type;\n        this.fileLength = fileLength;\n        this.name = send.name ? send.name.encryptedString : null;\n        this.notes = send.notes ? send.notes.encryptedString : null;\n        this.maxAccessCount = send.maxAccessCount;\n        this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n        this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n        this.key = send.key != null ? send.key.encryptedString : null;\n        this.password = send.password;\n        this.disabled = send.disabled;\n        this.hideEmail = send.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendTextApi();\n                this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n                this.text.hidden = send.text.hidden;\n                break;\n            case SendType.File:\n                this.file = new SendFileApi();\n                this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\nimport { FolderWithIdRequest } from './folderWithIdRequest';\nimport { SendWithIdRequest } from './sendWithIdRequest';\n\nexport class UpdateKeyRequest {\n    ciphers: CipherWithIdRequest[] = [];\n    folders: FolderWithIdRequest[] = [];\n    sends: SendWithIdRequest[] = [];\n    masterPasswordHash: string;\n    privateKey: string;\n    key: string;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { KdfRequest } from 'jslib-common/models/request/kdfRequest';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\n@Component({\n    selector: 'app-change-kdf',\n    templateUrl: 'change-kdf.component.html',\n})\nexport class ChangeKdfComponent implements OnInit {\n    masterPassword: string;\n    kdfIterations: number;\n    kdf = KdfType.PBKDF2_SHA256;\n    kdfOptions: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService) {\n        this.kdfOptions = [\n            { name: 'PBKDF2 SHA-256', value: KdfType.PBKDF2_SHA256 },\n        ];\n    }\n\n    async ngOnInit() {\n        this.kdf = await this.userService.getKdf();\n        this.kdfIterations = await this.userService.getKdfIterations();\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const request = new KdfRequest();\n        request.kdf = this.kdf;\n        request.kdfIterations = this.kdfIterations;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        const email = await this.userService.getEmail();\n        const newKey = await this.cryptoService.makeKey(this.masterPassword, email, this.kdf, this.kdfIterations);\n        request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n        const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n        request.key = newEncKey[1].encryptedString;\n        try {\n            this.formPromise = this.apiService.postAccountKdf(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', this.i18nService.t('encKeySettingsChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\"> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"kdfMasterPassword\">{{'masterPass' | i18n}}</label> <input id=\"kdfMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appInputVerbatim> </div> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group mb-0\"> <label for=\"kdf\">{{'kdfAlgorithm' | i18n}}</label> <a class=\"ml-auto\" href=\"https://en.wikipedia.org/wiki/Key_derivation_function\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required> <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> </div> </div> <div class=\"col-6\"> <div class=\"form-group mb-0\"> <label for=\"kdfIterations\">{{'kdfIterations' | i18n}}</label> <a class=\"ml-auto\" href=\"https://bitwarden.com/help/article/what-encryption-is-used/#pbkdf2\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> <input id=\"kdfIterations\" type=\"number\" min=\"5000\" max=\"2000000\" name=\"KdfIterations\" class=\"form-control\" [(ngModel)]=\"kdfIterations\" required> </div> </div> <div class=\"col-12\"> <div class=\"form-group\"> <div class=\"small form-text text-muted\"> <p>{{'kdfIterationsDesc' | i18n : (100000 | number)}}</p> <strong>{{'warning' | i18n}}</strong>: {{'kdfIterationsWarning' | i18n : (50000 | number)}} </div> </div> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'changeKdf' | i18n}}</span> </button> </form> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlanType } from 'jslib-common/enums/planType';\nimport { ProductType } from 'jslib-common/enums/productType';\n\nimport { OrganizationPlansComponent } from './organization-plans.component';\n\n@Component({\n    selector: 'app-create-organization',\n    templateUrl: 'create-organization.component.html',\n})\nexport class CreateOrganizationComponent implements OnInit {\n    @ViewChild(OrganizationPlansComponent, { static: true }) orgPlansComponent: OrganizationPlansComponent;\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.plan === 'families') {\n                this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n                this.orgPlansComponent.product = ProductType.Families;\n            } else if (qParams.plan === 'teams') {\n                this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n                this.orgPlansComponent.product = ProductType.Teams;\n            } else if (qParams.plan === 'enterprise') {\n                this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n                this.orgPlansComponent.product = ProductType.Enterprise;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n}\n","<div class=\"page-header\"> <h1>{{'newOrganization' | i18n}}</h1> </div> <p>{{'newOrganizationDesc' | i18n}}</p> <app-organization-plans></app-organization-plans> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { UpdateDomainsRequest } from 'jslib-common/models/request/updateDomainsRequest';\n\n@Component({\n    selector: 'app-domain-rules',\n    templateUrl: 'domain-rules.component.html',\n})\nexport class DomainRulesComponent implements OnInit {\n    loading = true;\n    custom: string[] = [];\n    global: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const response = await this.apiService.getSettingsDomains();\n        this.loading = false;\n        if (response.equivalentDomains != null) {\n            this.custom = response.equivalentDomains.map(d => d.join(', '));\n        }\n        if (response.globalEquivalentDomains != null) {\n            this.global = response.globalEquivalentDomains.map(d => {\n                return {\n                    domains: d.domains.join(', '),\n                    excluded: d.excluded,\n                    key: d.type,\n                };\n            });\n        }\n    }\n\n    toggleExcluded(globalDomain: any) {\n        globalDomain.excluded = !globalDomain.excluded;\n    }\n\n    customize(globalDomain: any) {\n        globalDomain.excluded = true;\n        this.custom.push(globalDomain.domains);\n    }\n\n    remove(index: number) {\n        this.custom.splice(index, 1);\n    }\n\n    add() {\n        this.custom.push('');\n    }\n\n    async submit() {\n        const request = new UpdateDomainsRequest();\n        request.excludedGlobalEquivalentDomains = this.global.filter(d => d.excluded)\n            .map(d => d.key);\n        if (request.excludedGlobalEquivalentDomains.length === 0) {\n            request.excludedGlobalEquivalentDomains = null;\n        }\n        request.equivalentDomains = this.custom.filter(d => d != null && d.trim() !== '')\n            .map(d => d.split(',').map(d2 => d2.trim()));\n        if (request.equivalentDomains.length === 0) {\n            request.equivalentDomains = null;\n        }\n\n        try {\n            this.formPromise = this.apiService.putSettingsDomains(request);\n            await this.formPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('domainsUpdated'));\n        } catch { }\n    }\n\n    indexTrackBy(index: number, obj: any): any {\n        return index;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'domainRules' | i18n}}</h1> </div> <p>{{'domainRulesDesc' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <h2>{{'customEqDomains' | i18n}}</h2> <p *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <ng-container *ngIf=\"!loading\"> <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\"> <div class=\"flex-fill\"> <label for=\"customDomain_{{i}}\" class=\"sr-only\">{{'customDomainX' | i18n : (i + 1)}}</label> <textarea class=\"form-control\" name=\"CustomDomain[{{i}}]\" id=\"customDomain_{{i}}\" [(ngModel)]=\"custom[i]\" placeholder=\"{{'ex' | i18n}} google.com, gmail.com\" required></textarea> </div> <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"remove(i)\" appA11yTitle=\"{{'remove' | i18n}}\"> <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i> </button> </div> <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newCustomDomain' | i18n}} </button> <small class=\"text-muted d-block mb-3\">{{'newCustomDomainDesc' | i18n}}</small> </ng-container> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <h2 class=\"spaced-header\">{{'globalEqDomains' | i18n}}</h2> <p *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </p> <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\"> <tbody> <tr *ngFor=\"let d of global\"> <td [ngClass]=\"{'table-list-strike': d.excluded}\">{{d.domains}}</td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\" *ngIf=\"!d.excluded\"> <i class=\"fa fa-fw fa-close\" aria-hidden=\"true\"></i> {{'exclude' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\" *ngIf=\"d.excluded\"> <i class=\"fa fa-fw fa-plus\" aria-hidden=\"true\"></i> {{'include' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\"> <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> {{'customize' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> </form> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\nimport { EmergencyAccessType } from 'jslib-common/enums/emergencyAccessType';\nimport { EmergencyAccessInviteRequest } from 'jslib-common/models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessUpdateRequest } from 'jslib-common/models/request/emergencyAccessUpdateRequest';\n\n@Component({\n    selector: 'emergency-access-add-edit',\n    templateUrl: 'emergency-access-add-edit.component.html',\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() emergencyAccessId: string;\n    @Output() onSaved = new EventEmitter();\n    @Output() onDeleted = new EventEmitter();\n\n    loading = true;\n    readOnly: boolean = false;\n    editMode: boolean = false;\n    title: string;\n    email: string;\n    type: EmergencyAccessType = EmergencyAccessType.View;\n\n    formPromise: Promise<any>;\n\n    emergencyAccessType = EmergencyAccessType;\n    waitTimes: { name: string; value: number; }[];\n    waitTime: number;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.emergencyAccessId != null;\n\n        this.waitTimes = [\n            { name: this.i18nService.t('oneDay'), value: 1 },\n            { name: this.i18nService.t('days', '2'), value: 2 },\n            { name: this.i18nService.t('days', '7'), value: 7 },\n            { name: this.i18nService.t('days', '14'), value: 14 },\n            { name: this.i18nService.t('days', '30'), value: 30 },\n            { name: this.i18nService.t('days', '90'), value: 90 },\n        ];\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editEmergencyContact');\n            try {\n                const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n                this.type = emergencyAccess.type;\n                this.waitTime = emergencyAccess.waitTimeDays;\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('inviteEmergencyContact');\n            this.waitTime = this.waitTimes[2].value;\n        }\n\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            if (this.editMode) {\n                const request = new EmergencyAccessUpdateRequest();\n                request.type = this.type;\n                request.waitTimeDays = this.waitTime;\n\n                this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n            } else {\n                const request = new EmergencyAccessInviteRequest();\n                request.email = this.email.trim();\n                request.type = this.type;\n                request.waitTimeDays = this.waitTime;\n\n                this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n            }\n\n            await this.formPromise;\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSaved.emit();\n        } catch { }\n    }\n\n    async delete() {\n        this.onDeleted.emit();\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> <span class=\"badge badge-primary\" *ngIf=\"readOnly\">{{'premium' | i18n}}</span> {{title}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </div> <div class=\"modal-body\" *ngIf=\"!loading\"> <ng-container *ngIf=\"!editMode\"> <p>{{'inviteEmergencyContactDesc' | i18n}}</p> <div class=\"form-group mb-4\"> <label for=\"email\">{{'email' | i18n}}</label> <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required> </div> </ng-container> <h3> {{'userAccess' | i18n}} <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\" href=\"https://bitwarden.com/help/article/emergency-access/#user-access\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </h3> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"emergencyTypeView\" [value]=\"emergencyAccessType.View\" [(ngModel)]=\"type\"> <label class=\"form-check-label\" for=\"emergencyTypeView\"> {{'view' | i18n}} <small>{{'viewDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"emergencyTypeTakeover\" [value]=\"emergencyAccessType.Takeover\" [(ngModel)]=\"type\" [disabled]=\"readOnly\"> <label class=\"form-check-label\" for=\"emergencyTypeTakeover\"> {{'takeover' | i18n}} <small>{{'takeoverDesc' | i18n}}</small> </label> </div> <div class=\"form-group col-6 mt-4\"> <label for=\"waitTime\">{{'waitTime' | i18n}}</label> <select id=\"waitTime\" name=\"waitTime\" [(ngModel)]=\"waitTime\" class=\"form-control\" [disabled]=\"readOnly\"> <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"text-muted\">{{'waitTimeDesc' | i18n}}</small> </div> </div> <div class=\"modal-footer\"> <button #submitBtn type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loading || submitBtn.loading || readOnly\" [appApiAction]=\"formPromise\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\" *ngIf=\"loading || submitBtn.loading\"></i> <span *ngIf=\"!loading && !submitBtn.loading\">{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","export enum EmergencyAccessType\n{\n    View = 0,\n    Takeover = 1,\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { AttachmentView } from 'jslib-common/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib-angular/components/attachments.component';\n\n@Component({\n    selector: 'emergency-access-attachments',\n    templateUrl: '../vault/attachments.component.html',\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n    viewOnly = true;\n    canAccessAttachments = true;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, apiService, window);\n    }\n\n    protected async init() {\n        // Do nothing since cipher is already decoded\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return false;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'emergency-access-confirm',\n    templateUrl: 'emergency-access-confirm.component.html',\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n    @Input() name: string;\n    @Input() userId: string;\n    @Input() emergencyAccessId: string;\n    @Input() formPromise: Promise<any>;\n    @Output() onConfirmed = new EventEmitter();\n\n    dontAskAgain = false;\n    loading = true;\n    fingerprint: string;\n\n    constructor(private apiService: ApiService, private cryptoService: CryptoService,\n        private storageService: StorageService) { }\n\n    async ngOnInit() {\n        try {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n            if (publicKeyResponse != null) {\n                const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n                const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n                if (fingerprint != null) {\n                    this.fingerprint = fingerprint.join('-');\n                }\n            }\n        } catch { }\n        this.loading = false;\n    }\n\n    async submit() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.dontAskAgain) {\n            await this.storageService.save(ConstantsService.autoConfirmFingerprints, true);\n        }\n\n        try {\n            this.onConfirmed.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"confirmUserTitle\"> {{'confirmUser' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p> {{'fingerprintEnsureIntegrityVerify' | i18n}} <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}</a> </p> <p><code>{{fingerprint}}</code></p> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"dontAskAgain\" name=\"DontAskAgain\" [(ngModel)]=\"dontAskAgain\"> <label class=\"form-check-label\" for=\"dontAskAgain\"> {{'dontAskFingerprintAgain' | i18n}} </label> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'confirm' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\nimport { PolicyData } from 'jslib-common/models/data/policyData';\nimport { Policy } from 'jslib-common/models/domain/policy';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\nimport { EmergencyAccessPasswordRequest } from 'jslib-common/models/request/emergencyAccessPasswordRequest';\nimport { PolicyResponse } from 'jslib-common/models/response/policyResponse';\n\nimport { ChangePasswordComponent } from 'jslib-angular/components/change-password.component';\n\n@Component({\n    selector: 'emergency-access-takeover',\n    templateUrl: 'emergency-access-takeover.component.html',\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n    @Output() onDone = new EventEmitter();\n    @Input() emergencyAccessId: string;\n    @Input() name: string;\n    @Input() email: string;\n    @Input() kdf: KdfType;\n    @Input() kdfIterations: number;\n\n    formPromise: Promise<any>;\n\n    constructor(i18nService: I18nService, cryptoService: CryptoService,\n        messagingService: MessagingService, userService: UserService,\n        passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\n        private apiService: ApiService, private toasterService: ToasterService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n        if (response.data != null && response.data.length > 0) {\n            const policies = response.data.map((policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse)));\n            this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(policies);\n        }\n     }\n\n    async submit() {\n        if (!await this.strongPassword()) {\n            return;\n        }\n\n        const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(this.emergencyAccessId);\n\n        const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n        const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n        if (oldEncKey == null) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'), this.i18nService.t('unexpectedError'));\n            return;\n        }\n\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email, takeoverResponse.kdf, takeoverResponse.kdfIterations);\n        const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n        const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n        const request = new EmergencyAccessPasswordRequest();\n        request.newMasterPasswordHash = masterPasswordHash;\n        request.key = encKey[1].encryptedString;\n\n        this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n        try {\n            this.onDone.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"userAddEditTitle\"> {{'takeover' | i18n}} <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\"> {{'masterPasswordPolicyInEffect' | i18n}} <ul class=\"mb-0\"> <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\"> {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}} </li> <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\"> {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}} </li> <li *ngIf=\"enforcedPolicyOptions?.requireUpper\"> {{'policyInEffectUppercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireLower\"> {{'policyInEffectLowercase' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\"> {{'policyInEffectNumbers' | i18n}}</li> <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\"> {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li> </ul> </app-callout> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPassword\">{{'newMasterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"NewMasterPasswordHash\" class=\"form-control mb-1\" [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim autocomplete=\"new-password\"> <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"></app-password-strength> </div> </div> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"masterPasswordRetype\">{{'confirmNewMasterPass' | i18n}}</label> <input id=\"masterPasswordRetype\" type=\"password\" name=\"MasterPasswordRetype\" class=\"form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim autocomplete=\"new-password\"> </div> </div> </div> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\n\nimport { CipherData } from 'jslib-common/models/data';\nimport { Cipher, SymmetricCryptoKey } from 'jslib-common/models/domain';\nimport { EmergencyAccessViewResponse } from 'jslib-common/models/response/emergencyAccessResponse';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { EmergencyAccessAttachmentsComponent } from './emergency-access-attachments.component';\nimport { EmergencyAddEditComponent } from './emergency-add-edit.component';\n\n@Component({\n    selector: 'emergency-access-view',\n    templateUrl: 'emergency-access-view.component.html',\n})\nexport class EmergencyAccessViewComponent implements OnInit {\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n\n    id: string;\n    ciphers: CipherView[] = [];\n\n    private modal: ModalComponent = null;\n\n    constructor(private cipherService: CipherService, private cryptoService: CryptoService,\n        private componentFactoryResolver: ComponentFactoryResolver, private router: Router,\n        private route: ActivatedRoute, private apiService: ApiService) { }\n\n    ngOnInit() {\n        this.route.params.subscribe(qParams => {\n            if (qParams.id == null) {\n                return this.router.navigate(['settings/emergency-access']);\n            }\n\n            this.id = qParams.id;\n\n            this.load();\n        });\n    }\n\n    selectCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EmergencyAddEditComponent>(EmergencyAddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.cipher = cipher;\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    async load() {\n        const response = await this.apiService.postEmergencyAccessView(this.id);\n        this.ciphers = await this.getAllCiphers(response);\n    }\n\n    async viewAttachments(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EmergencyAccessAttachmentsComponent>(EmergencyAccessAttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.cipher = cipher;\n        childComponent.emergencyAccessId = this.id;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n        const ciphers = response.ciphers;\n\n        const decCiphers: CipherView[] = [];\n        const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n        const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n        const promises: any[] = [];\n        ciphers.forEach(cipherResponse => {\n            const cipherData = new CipherData(cipherResponse);\n            const cipher = new Cipher(cipherData);\n            promises.push(cipher.decrypt(oldEncKey).then(c => decCiphers.push(c)));\n        });\n\n        await Promise.all(promises);\n        decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n        return decCiphers;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'vault' | i18n}}</h1> </div> <div class=\"mt-4\"> <ng-container *ngIf=\"ciphers.length\"> <table class=\"table table-hover table-list table-ciphers\"> <tbody> <tr *ngFor=\"let c of ciphers\"> <td class=\"table-list-icon\"> <app-vault-icon [cipher]=\"c\"></app-vault-icon> </td> <td class=\"reduced-lh wrap\"> <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a> <ng-container *ngIf=\"!organization && c.organizationId\"> <i class=\"fa fa-cube\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'shared' | i18n}}</span> </ng-container> <ng-container *ngIf=\"c.hasAttachments\"> <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'attachments' | i18n}}</span> </ng-container> <br> <small>{{c.subTitle}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\"> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\"> <i class=\"fa fa-fw fa-paperclip\" aria-hidden=\"true\"></i> {{'attachments' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> </ng-container> </div> <ng-template #cipherAddEdit></ng-template> <ng-template #attachments></ng-template> ","import { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class EncryptedObject {\n    iv: ArrayBuffer;\n    data: ArrayBuffer;\n    mac: ArrayBuffer;\n    key: SymmetricCryptoKey;\n}\n","export class EnvironmentUrls {\n    base: string;\n    api: string;\n    identity: string;\n    events: string;\n}\n","export class GeneratedPasswordHistory {\n    password: string;\n    date: number;\n\n    constructor(password: string, date: number) {\n        this.password = password;\n        this.date = date;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { TotpService } from 'jslib-common/abstractions/totp.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { AddEditComponent as BaseAddEditComponent } from '../vault/add-edit.component';\n\n@Component({\n    selector: 'app-org-vault-add-edit',\n    templateUrl: '../vault/add-edit.component.html',\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n    originalCipher: Cipher = null;\n    viewOnly = true;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        totpService: TotpService, passwordGenerationService: PasswordGenerationService,\n        messagingService: MessagingService, eventService: EventService, policyService: PolicyService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, totpService, passwordGenerationService, messagingService,\n            eventService, policyService);\n    }\n\n    async load() {\n        this.title = this.i18nService.t('viewItem');\n    }\n\n    protected async loadCipher() {\n        return Promise.resolve(this.originalCipher);\n    }\n}\n","import { Component, ComponentFactoryResolver, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EmergencyAccessStatusType } from 'jslib-common/enums/emergencyAccessStatusType';\nimport { EmergencyAccessType } from 'jslib-common/enums/emergencyAccessType';\nimport { Utils } from 'jslib-common/misc/utils';\nimport { EmergencyAccessConfirmRequest } from 'jslib-common/models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessGranteeDetailsResponse, EmergencyAccessGrantorDetailsResponse } from 'jslib-common/models/response/emergencyAccessResponse';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { UserNamePipe } from 'jslib-angular/pipes/user-name.pipe';\n\nimport { ModalComponent } from '../modal.component';\nimport { EmergencyAccessAddEditComponent } from './emergency-access-add-edit.component';\nimport { EmergencyAccessConfirmComponent } from './emergency-access-confirm.component';\nimport { EmergencyAccessTakeoverComponent } from './emergency-access-takeover.component';\n\n@Component({\n    selector: 'emergency-access',\n    templateUrl: 'emergency-access.component.html',\n})\nexport class EmergencyAccessComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('takeoverTemplate', { read: ViewContainerRef, static: true}) takeoverModalRef: ViewContainerRef;\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n\n    canAccessPremium: boolean;\n    trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n    grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n    emergencyAccessType = EmergencyAccessType;\n    emergencyAccessStatusType = EmergencyAccessStatusType;\n    actionPromise: Promise<any>;\n    isOrganizationOwner: boolean;\n\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private platformUtilsService: PlatformUtilsService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private storageService: StorageService, private userService: UserService,\n        private messagingService: MessagingService, private userNamePipe: UserNamePipe) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        const orgs = await this.userService.getAllOrganizations();\n        this.isOrganizationOwner = orgs.some(o => o.isOwner);\n        this.load();\n    }\n\n    async load() {\n        this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n        this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    }\n\n    async premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    edit(details: EmergencyAccessGranteeDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EmergencyAccessAddEditComponent>(\n            EmergencyAccessAddEditComponent, this.addEditModalRef);\n\n        childComponent.name = this.userNamePipe.transform(details);\n        childComponent.emergencyAccessId = details?.id;\n        childComponent.readOnly = !this.canAccessPremium;\n        childComponent.onSaved.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeleted.subscribe(() => {\n            this.modal.close();\n            this.remove(details);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    invite() {\n        this.edit(null);\n    }\n\n    async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n        if (this.actionPromise != null) {\n            return;\n        }\n        this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n        await this.actionPromise;\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', contact.email));\n        this.actionPromise = null;\n    }\n\n    async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n        function updateUser() {\n            contact.status = EmergencyAccessStatusType.Confirmed;\n        }\n\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const autoConfirm = await this.storageService.get<boolean>(ConstantsService.autoConfirmFingerprints);\n        if (autoConfirm == null || !autoConfirm) {\n            if (this.modal != null) {\n                this.modal.close();\n            }\n\n            const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n            this.modal = this.confirmModalRef.createComponent(factory).instance;\n            const childComponent = this.modal.show<EmergencyAccessConfirmComponent>(\n                EmergencyAccessConfirmComponent, this.confirmModalRef);\n\n            childComponent.name = this.userNamePipe.transform(contact);\n            childComponent.emergencyAccessId = contact.id;\n            childComponent.userId = contact?.granteeId;\n            childComponent.onConfirmed.subscribe(async () => {\n                this.modal.close();\n\n                childComponent.formPromise = this.doConfirmation(contact);\n                await childComponent.formPromise;\n\n                updateUser();\n                this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.userNamePipe.transform(contact)));\n            });\n\n            this.modal.onClosed.subscribe(() => {\n                this.modal = null;\n            });\n            return;\n        }\n\n        this.actionPromise = this.doConfirmation(contact);\n        await this.actionPromise;\n        updateUser();\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.userNamePipe.transform(contact)));\n        this.actionPromise = null;\n    }\n\n    async remove(details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.userNamePipe.transform(details),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteEmergencyAccess(details.id);\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.userNamePipe.transform(details)));\n\n            if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n                this.removeGrantee(details);\n            } else {\n                this.removeGrantor(details);\n            }\n        } catch { }\n    }\n\n    async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('requestAccessConfirmation', details.waitTimeDays.toString()),\n            this.userNamePipe.transform(details),\n            this.i18nService.t('requestAccess'),\n            this.i18nService.t('no'),\n            'warning',\n        );\n\n        if (!confirmed) {\n            return false;\n        }\n\n        await this.apiService.postEmergencyAccessInitiate(details.id);\n\n        details.status = EmergencyAccessStatusType.RecoveryInitiated;\n        this.toasterService.popAsync('success', null, this.i18nService.t('requestSent', this.userNamePipe.transform(details)));\n    }\n\n    async approve(details: EmergencyAccessGranteeDetailsResponse) {\n        const type = this.i18nService.t(details.type === EmergencyAccessType.View ? 'view' : 'takeover');\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('approveAccessConfirmation', this.userNamePipe.transform(details), type),\n            this.userNamePipe.transform(details),\n            this.i18nService.t('approve'),\n            this.i18nService.t('no'),\n            'warning',\n        );\n\n        if (!confirmed) {\n            return false;\n        }\n\n        await this.apiService.postEmergencyAccessApprove(details.id);\n        details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('emergencyApproved', this.userNamePipe.transform(details)));\n    }\n\n    async reject(details: EmergencyAccessGranteeDetailsResponse) {\n        await this.apiService.postEmergencyAccessReject(details.id);\n        details.status = EmergencyAccessStatusType.Confirmed;\n\n        this.toasterService.popAsync('success', null, this.i18nService.t('emergencyRejected', this.userNamePipe.transform(details)));\n    }\n\n    async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EmergencyAccessTakeoverComponent>(\n            EmergencyAccessTakeoverComponent, this.takeoverModalRef);\n\n        childComponent.name = this.userNamePipe.transform(details);\n        childComponent.email = details.email;\n        childComponent.emergencyAccessId = details != null ? details.id : null;\n\n        childComponent.onDone.subscribe(() => {\n            this.modal.close();\n            this.toasterService.popAsync('success', null, this.i18nService.t('passwordResetFor', this.userNamePipe.transform(details)));\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n        const index = this.trustedContacts.indexOf(details);\n        if (index > -1) {\n            this.trustedContacts.splice(index, 1);\n        }\n    }\n\n    private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n        const index = this.grantedContacts.indexOf(details);\n        if (index > -1) {\n            this.grantedContacts.splice(index, 1);\n        }\n    }\n\n    // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n    private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n        const encKey = await this.cryptoService.getEncKey();\n        const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n        try {\n            // tslint:disable-next-line\n            console.log('User\\'s fingerprint: ' +\n                (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join('-'));\n        } catch { }\n\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        const request = new EmergencyAccessConfirmRequest();\n        request.key = encryptedKey.encryptedString;\n        await this.apiService.postEmergencyAccessConfirm(details.id, request);\n    }\n}\n","<div class=\"page-header\"> <h1>{{'emergencyAccess' | i18n}}</h1> </div> <p> {{'emergencyAccessDesc' | i18n}} <a href=\"https://bitwarden.com/help/article/emergency-access/\" target=\"_blank\" rel=\"noopener\"> {{'learnMore' | i18n}}. </a> </p> <p *ngIf=\"isOrganizationOwner\"> <b>{{'warning' | i18n }}:</b> {{'emergencyAccessOwnerWarning' | i18n}} </p> <div class=\"page-header d-flex\"> <h2> {{'trustedEmergencyContacts' | i18n}} <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </h2> <div class=\"ml-auto d-flex\"> <button class=\"btn btn-sm btn-outline-primary ml-3\" type=\"button\" (click)=\"invite()\" [disabled]=\"!canAccessPremium\"> <i aria-hidden=\"true\" class=\"fa fa-plus fa-fw\"></i> {{'addEmergencyContact' |i18n}} </button> </div> </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\"> <tbody> <tr *ngFor=\"let c of trustedContacts; let i = index\"> <td width=\"30\"> <app-avatar [data]=\"c | userName\" [email]=\"c.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <a href=\"#\" appStopClick (click)=\"edit(c)\">{{c.email}}</a> <span class=\"badge badge-secondary\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{'accepted' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\">{{'emergencyAccessRecoveryInitiated' | i18n}}</span> <span class=\"badge badge-success\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{'emergencyAccessRecoveryApproved' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{'view' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{'takeover' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{c.name}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'resendInvitation' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'confirm' | i18n}} </a> <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"approve(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"> <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> {{'approve' | i18n}} </a> <a class=\"dropdown-item text-warning\" href=\"#\" appStopClick (click)=\"reject(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated || c.status === emergencyAccessStatusType.RecoveryApproved\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'reject' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <p *ngIf=\"!trustedContacts || !trustedContacts.length\">{{'noTrustedContacts' | i18n}}</p> <div class=\"page-header spaced-header\"> <h2>{{'designatedEmergencyContacts' | i18n}}</h2> </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\"> <tbody> <tr *ngFor=\"let c of grantedContacts; let i = index\"> <td width=\"30\"> <app-avatar [data]=\"c | userName\" [email]=\"c.email\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar> </td> <td> <span>{{c.email}}</span> <span class=\"badge badge-secondary\" *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{'invited' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{'accepted' | i18n}}</span> <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\">{{'emergencyAccessRecoveryInitiated' | i18n}}</span> <span class=\"badge badge-success\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{'emergencyAccessRecoveryApproved' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{'view' | i18n}}</span> <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{'takeover' | i18n}}</span> <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{c.name}}</small> </td> <td class=\"table-list-options\"> <div class=\"dropdown\" appListDropdown> <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\"> <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i> </button> <div class=\"dropdown-menu dropdown-menu-right\"> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"requestAccess(c)\" *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"> <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i> {{'requestAccess' | i18n}} </a> <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"takeover(c)\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved && c.type === emergencyAccessType.Takeover\"> <i class=\"fa fa-fw fa-key\" aria-hidden=\"true\"></i> {{'takeover' | i18n}} </a> <a class=\"dropdown-item\" [routerLink]=\"c.id\" *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved && c.type === emergencyAccessType.View\"> <i class=\"fa fa-fw fa-eye\" aria-hidden=\"true\"></i> {{'view' | i18n}} </a> <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\"> <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i> {{'remove' | i18n}} </a> </div> </div> </td> </tr> </tbody> </table> <p *ngIf=\"!grantedContacts || !grantedContacts.length\">{{'noGrantedAccess' | i18n}}</p> <ng-template #addEdit></ng-template> <ng-template #takeoverTemplate></ng-template> <ng-template #confirmTemplate></ng-template> ","import { EmergencyAccessStatusType } from '../../enums/emergencyAccessStatusType';\nimport { EmergencyAccessType } from '../../enums/emergencyAccessType';\nimport { KdfType } from '../../enums/kdfType';\nimport { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n    id: string;\n    granteeId: string;\n    name: string;\n    email: string;\n    type: EmergencyAccessType;\n    status: EmergencyAccessStatusType;\n    waitTimeDays: number;\n    creationDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.granteeId = this.getResponseProperty('GranteeId');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.waitTimeDays = this.getResponseProperty('WaitTimeDays');\n        this.creationDate = this.getResponseProperty('CreationDate');\n    }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n    id: string;\n    grantorId: string;\n    name: string;\n    email: string;\n    type: EmergencyAccessType;\n    status: EmergencyAccessStatusType;\n    waitTimeDays: number;\n    creationDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.grantorId = this.getResponseProperty('GrantorId');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.waitTimeDays = this.getResponseProperty('WaitTimeDays');\n        this.creationDate = this.getResponseProperty('CreationDate');\n    }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n    keyEncrypted: string;\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n\n        this.keyEncrypted = this.getResponseProperty('KeyEncrypted');\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n    keyEncrypted: string;\n    ciphers: CipherResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n\n        this.keyEncrypted = this.getResponseProperty('KeyEncrypted');\n\n        const ciphers = this.getResponseProperty('Ciphers');\n        if (ciphers != null) {\n            this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Component,\n    Input,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { SsoComponent } from 'jslib-angular/components/sso.component';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\n\n@Component({\n    selector: 'app-link-sso',\n    templateUrl: 'link-sso.component.html',\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n    @Input() organization: Organization;\n    returnUri: string = '/settings/organizations';\n\n    constructor(platformUtilsService: PlatformUtilsService, i18nService: I18nService,\n        apiService: ApiService, authService: AuthService,\n        router: Router, route: ActivatedRoute,\n        cryptoFunctionService: CryptoFunctionService, passwordGenerationService: PasswordGenerationService,\n        storageService: StorageService, stateService: StateService, environmentService: EnvironmentService) {\n        super(authService, router,\n            i18nService, route,\n            storageService, stateService,\n            platformUtilsService, apiService,\n            cryptoFunctionService, environmentService, passwordGenerationService);\n\n        this.returnUri = '/settings/organizations';\n        this.redirectUri = window.location.origin + '/sso-connector.html';\n        this.clientId = 'web';\n    }\n\n    async ngAfterContentInit() {\n        this.identifier = this.organization.identifier;\n    }\n}\n","<a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"submit(returnUri, true)\"> <i class=\"fa fa-fw fa-link\" aria-hidden=\"true\"></i> {{'linkSso' | i18n}} </a> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Component({\n    selector: 'app-options',\n    templateUrl: 'options.component.html',\n})\nexport class OptionsComponent implements OnInit {\n    vaultTimeout: number = null;\n    vaultTimeoutAction: string = 'lock';\n    disableIcons: boolean;\n    enableGravatars: boolean;\n    enableFullWidth: boolean;\n    locale: string;\n    vaultTimeouts: any[];\n    localeOptions: any[];\n\n    private startingLocale: string;\n\n    constructor(private storageService: StorageService, private stateService: StateService,\n        private i18nService: I18nService, private toasterService: ToasterService,\n        private vaultTimeoutService: VaultTimeoutService, private platformUtilsService: PlatformUtilsService,\n        private messagingService: MessagingService) {\n        this.vaultTimeouts = [\n            { name: i18nService.t('oneMinute'), value: 1 },\n            { name: i18nService.t('fiveMinutes'), value: 5 },\n            { name: i18nService.t('fifteenMinutes'), value: 15 },\n            { name: i18nService.t('thirtyMinutes'), value: 30 },\n            { name: i18nService.t('oneHour'), value: 60 },\n            { name: i18nService.t('fourHours'), value: 240 },\n            { name: i18nService.t('onRefresh'), value: -1 },\n        ];\n        if (this.platformUtilsService.isDev()) {\n            this.vaultTimeouts.push({ name: i18nService.t('never'), value: null });\n        }\n\n        const localeOptions: any[] = [];\n        i18nService.supportedTranslationLocales.forEach(locale => {\n            let name = locale;\n            if (i18nService.localeNames.has(locale)) {\n                name += (' - ' + i18nService.localeNames.get(locale));\n            }\n            localeOptions.push({ name: name, value: locale });\n        });\n        localeOptions.sort(Utils.getSortFunction(i18nService, 'name'));\n        localeOptions.splice(0, 0, { name: i18nService.t('default'), value: null });\n        this.localeOptions = localeOptions;\n    }\n\n    async ngOnInit() {\n        this.vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        this.vaultTimeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n        this.disableIcons = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        this.enableGravatars = await this.storageService.get<boolean>('enableGravatars');\n        this.enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\n        this.locale = this.startingLocale = await this.storageService.get<string>(ConstantsService.localeKey);\n    }\n\n    async submit() {\n        await this.vaultTimeoutService.setVaultTimeoutOptions(this.vaultTimeout != null ? this.vaultTimeout : null,\n            this.vaultTimeoutAction);\n        await this.storageService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.stateService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.storageService.save('enableGravatars', this.enableGravatars);\n        await this.stateService.save('enableGravatars', this.enableGravatars);\n        await this.storageService.save('enableFullWidth', this.enableFullWidth);\n        this.messagingService.send('setFullWidth');\n        await this.storageService.save(ConstantsService.localeKey, this.locale);\n        if (this.locale !== this.startingLocale) {\n            window.location.reload();\n        } else {\n            this.toasterService.popAsync('success', null, this.i18nService.t('optionsUpdated'));\n        }\n    }\n\n    async vaultTimeoutActionChanged(newValue: string) {\n        if (newValue === 'logOut') {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('vaultTimeoutLogOutConfirmation'),\n                this.i18nService.t('vaultTimeoutLogOutConfirmationTitle'),\n                this.i18nService.t('yes'), this.i18nService.t('cancel'), 'warning');\n            if (!confirmed) {\n                this.vaultTimeoutAction = 'lock';\n                return;\n            }\n        }\n        this.vaultTimeoutAction = newValue;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'options' | i18n}}</h1> </div> <p>{{'optionsDesc' | i18n}}</p> <form (ngSubmit)=\"submit()\" ngNativeValidate> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <label for=\"vaultTimeout\">{{'vaultTimeout' | i18n}}</label> <select id=\"vaultTimeout\" name=\"VaultTimeout\" [(ngModel)]=\"vaultTimeout\" class=\"form-control\"> <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"form-text text-muted\">{{'vaultTimeoutDesc' | i18n}}</small> </div> </div> </div> <div class=\"form-group\"> <label>{{'vaultTimeoutAction' | i18n}}</label> <div class=\"form-check form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLock\" value=\"lock\" [(ngModel)]=\"vaultTimeoutAction\"> <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\"> {{'lock' | i18n}} <small>{{'vaultTimeoutActionLockDesc' | i18n}}</small> </label> </div> <div class=\"form-check mt-2 form-check-block\"> <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLogOut\" value=\"logOut\" [(ngModel)]=\"vaultTimeoutAction\" (ngModelChange)=\"vaultTimeoutActionChanged($event)\"> <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\"> {{'logOut' | i18n}} <small>{{'vaultTimeoutActionLogOutDesc' | i18n}}</small> </label> </div> </div> <div class=\"row\"> <div class=\"col-6\"> <div class=\"form-group\"> <div class=\"d-flex\"> <label for=\"locale\">{{'language' | i18n}}</label> <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/localization/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\"> <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{o.name}}</option> </select> <small class=\"form-text text-muted\">{{'languageDesc' | i18n}}</small> </div> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"disableIcons\" name=\"DisableIcons\" [(ngModel)]=\"disableIcons\"> <label class=\"form-check-label\" for=\"disableIcons\"> {{'disableIcons' | i18n}} </label> <a href=\"https://help.bitwarden.com/article/website-icons/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <small class=\"form-text text-muted\">{{'disableIconsDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enableGravatars\" name=\"enableGravatars\" [(ngModel)]=\"enableGravatars\"> <label class=\"form-check-label\" for=\"enableGravatars\"> {{'enableGravatars' | i18n}} </label> <a href=\"https://gravatar.com/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <small class=\"form-text text-muted\">{{'enableGravatarsDesc' | i18n}}</small> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"checkbox\" id=\"enableFullWidth\" name=\"enableFullWidth\" [(ngModel)]=\"enableFullWidth\"> <label class=\"form-check-label\" for=\"enableFullWidth\"> {{'enableFullWidth' | i18n}} </label> </div> <small class=\"form-text text-muted\">{{'enableFullWidthDesc' | i18n}}</small> </div> <button type=\"submit\" class=\"btn btn-primary\"> {{'save' | i18n}} </button> </form> ","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\n@Component({\n    selector: 'app-premium',\n    templateUrl: 'premium.component.html',\n})\nexport class PremiumComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n    canAccessPremium = false;\n    selfHosted = false;\n    premiumPrice = 10;\n    storageGbPrice = 4;\n    additionalStorage = 0;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, platformUtilsService: PlatformUtilsService,\n        private tokenService: TokenService, private router: Router,\n        private messagingService: MessagingService, private syncService: SyncService,\n        private userService: UserService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        const premium = await this.tokenService.getPremium();\n        if (premium) {\n            this.router.navigate(['/settings/subscription']);\n            return;\n        }\n    }\n\n    async submit() {\n        let files: FileList = null;\n        if (this.selfHosted) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n        }\n\n        try {\n            if (this.selfHosted) {\n                if (!this.tokenService.getEmailVerified()) {\n                    this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                        this.i18nService.t('verifyEmailFirst'));\n                    return;\n                }\n\n                const fd = new FormData();\n                fd.append('license', files[0]);\n                this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n                    return this.finalizePremium();\n                });\n            } else {\n                this.formPromise = this.paymentComponent.createPaymentToken().then(result => {\n                    const fd = new FormData();\n                    fd.append('paymentMethodType', result[1].toString());\n                    if (result[0] != null) {\n                        fd.append('paymentToken', result[0]);\n                    }\n                    fd.append('additionalStorageGb', (this.additionalStorage || 0).toString());\n                    fd.append('country', this.taxInfoComponent.taxInfo.country);\n                    fd.append('postalCode', this.taxInfoComponent.taxInfo.postalCode);\n                    return this.apiService.postPremium(fd);\n                }).then(paymentResponse => {\n                    if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n                        return this.paymentComponent.handleStripeCardPayment(paymentResponse.paymentIntentClientSecret,\n                            () => this.finalizePremium());\n                    } else {\n                        return this.finalizePremium();\n                    }\n                });\n            }\n            await this.formPromise;\n        } catch { }\n    }\n\n    async finalizePremium() {\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n        this.toasterService.popAsync('success', null, this.i18nService.t('premiumUpdated'));\n        this.messagingService.send('purchasedPremium');\n        this.router.navigate(['/settings/subscription']);\n    }\n\n    get additionalStorageTotal(): number {\n        return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n    }\n\n    get subtotal(): number {\n        return this.premiumPrice + this.additionalStorageTotal;\n    }\n\n    get taxCharges(): number {\n        return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null ?\n            (this.taxInfoComponent.taxRate / 100) * this.subtotal :\n            0;\n    }\n\n    get total(): number {\n        return (this.subtotal + this.taxCharges) || 0;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'goPremium' | i18n}}</h1> </div> <app-callout type=\"info\" *ngIf=\"canAccessPremium\" title=\"{{'youHavePremiumAccess' | i18n}}\" icon=\"fa-star\"> {{'alreadyPremiumFromOrg' | i18n}} </app-callout> <app-callout type=\"success\"> <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p> <ul class=\"fa-ul\"> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpStorage' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpTwoStep' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpEmergency' |i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpReports' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpTotp' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpSupport' | i18n}} </li> <li> <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i> {{'premiumSignUpFuture' | i18n}} </li> </ul> <p class=\"text-lg\" [ngClass]=\"{'mb-0':!selfHosted}\">{{'premiumPrice' | i18n : (premiumPrice | currency:'$')}}</p> <a href=\"https://vault.bitwarden.com/#/settings/premium\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\" *ngIf=\"selfHosted\"> {{'purchasePremium' | i18n}} </a> </app-callout> <ng-container *ngIf=\"selfHosted\"> <p>{{'uploadLicenseFilePremium' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"form-group\"> <label for=\"file\">{{'licenseFile' | i18n}}</label> <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required> <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_premium_license.json'}}</small> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> </ng-container> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\"> <h2 class=\"mt-5\">{{'addons' | i18n}}</h2> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label> <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\" [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\" placeholder=\"{{'additionalStorageGbDesc' | i18n}}\"> <small class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (storageGbPrice | currency:'$') : ('year' | i18n)}}</small> </div> </div> <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2> {{'premiumMembership' | i18n}}: {{premiumPrice | currency:'$'}} <br> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{additionalStorageTotal | currency:'$'}} <hr class=\"my-3\"> <h2 class=\"spaced-header mb-4\">{{'paymentInformation' | i18n}}</h2> <app-payment [hideBank]=\"true\"></app-payment> <app-tax-info></app-tax-info> <div id=\"price\" class=\"my-4\"> <div class=\"text-muted text-sm\"> {{ 'planPrice' | i18n }}: {{ subtotal | currency: 'USD $' }} <br/> <ng-container> {{ 'estimatedTax' | i18n }}: {{ taxCharges | currency: 'USD $' }} </ng-container> </div> <hr class=\"my-1 col-3 ml-0\"> <p class=\"text-lg\"><strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}}/{{'year' | i18n}}</p> </div> <small class=\"text-muted font-italic\">{{'paymentChargedAnnually' | i18n}}</small> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'submit' | i18n}}</span> </button> </form> ","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'SettingsComponent';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n    premium: boolean;\n    selfHosted: boolean;\n\n    constructor(private tokenService: TokenService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'purchasedPremium':\n                        await this.load();\n                        break;\n                    default:\n                }\n            });\n        });\n\n        this.selfHosted = await this.platformUtilsService.isSelfHost();\n        await this.load();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.premium = await this.tokenService.getPremium();\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card\"> <div class=\"card-header\">{{'settings' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'myAccount' | i18n}} </a> <a routerLink=\"options\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'options' | i18n}} </a> <a routerLink=\"organizations\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'organizations' | i18n}} </a> <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"premium\"> {{'premiumMembership' | i18n}} </a> <a routerLink=\"premium\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!premium\"> {{'goPremium' | i18n}} </a> <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\"> {{'billing' | i18n}} </a> <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'twoStepLogin' | i18n}} </a> <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'domainRules' | i18n}} </a> <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'emergencyAccess' | i18n}} </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\n\nimport { CipherWithIdRequest } from 'jslib-common/models/request/cipherWithIdRequest';\nimport { FolderWithIdRequest } from 'jslib-common/models/request/folderWithIdRequest';\nimport { UpdateKeyRequest } from 'jslib-common/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-update-key',\n    templateUrl: 'update-key.component.html',\n})\nexport class UpdateKeyComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private syncService: SyncService,\n        private folderService: FolderService, private cipherService: CipherService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (hasEncKey) {\n            return;\n        }\n\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.makeRequest().then(request => {\n                return this.apiService.postAccountKey(request);\n            });\n            await this.formPromise;\n            const toast: Toast = {\n                type: 'success',\n                title: this.i18nService.t('keyUpdated'),\n                body: this.i18nService.t('logBackInOthersToo'),\n                timeout: 15000,\n            };\n            this.toasterService.popAsync(toast);\n            this.messagingService.send('logout');\n        } catch { }\n    }\n\n    private async makeRequest(): Promise<UpdateKeyRequest> {\n        const key = await this.cryptoService.getKey();\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: EncString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        await this.syncService.fullSync(true);\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        return request;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{'updateEncryptionKey' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p>{{'updateEncryptionKeyShortDesc' | i18n}} {{'updateEncryptionKeyDesc' | i18n}} <a href=\"https://help.bitwarden.com/article/update-encryption-key/\" target=\"_blank\" rel=\"noopener\">{{'learnMore' | i18n}}</a> </p> <app-callout type=\"warning\">{{'updateEncryptionKeyWarning' | i18n}}</app-callout> <label for=\"masterPassword\">{{'masterPass' | i18n}}</label> <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\" [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'updateEncryptionKey' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button> </div> </form> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { SubscriptionResponse } from 'jslib-common/models/response/subscriptionResponse';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\n\n@Component({\n    selector: 'app-user-subscription',\n    templateUrl: 'user-subscription.component.html',\n})\nexport class UserSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    sub: SubscriptionResponse;\n    selfHosted = false;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private tokenService: TokenService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private toasterService: ToasterService, private router: Router) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.tokenService.getPremium()) {\n            this.loading = true;\n            this.sub = await this.apiService.getUserSubscription();\n        } else {\n            this.router.navigate(['/settings/premium']);\n            return;\n        }\n\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postReinstatePremium();\n            await this.reinstatePromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postCancelPremium();\n            await this.cancelPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    downloadLicense() {\n        if (this.loading) {\n            return;\n        }\n\n        const licenseString = JSON.stringify(this.sub.license, null, 2);\n        this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_premium_license.json');\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(load: boolean) {\n        this.showUpdateLicense = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t(add ? 'addStorage' : 'removeStorage'), null, null, 'warning');\n            return;\n        }\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get usingInAppPurchase() {\n        return this.sub != null ? this.sub.usingInAppPurchase : false;\n    }\n}\n","<div class=\"page-header\"> <h1> {{'premiumMembership' | i18n}} <small *ngIf=\"firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </small> </h1> </div> <ng-container *ngIf=\"!firstLoaded && loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> <ng-container *ngIf=\"sub\"> <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\"> {{'subscriptionCanceled' | i18n}}</app-callout> <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\"> <p>{{'subscriptionPendingCanceled' | i18n}}</p> <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\" [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'reinstateSubscription' | i18n}}</span> </button> </app-callout> <dl *ngIf=\"selfHosted\"> <dt>{{'expiration' | i18n}}</dt> <dd *ngIf=\"sub.expiration\">{{sub.expiration | date:'mediumDate'}}</dd> <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd> </dl> <div class=\"row\" *ngIf=\"!selfHosted\"> <div class=\"col-4\"> <dl> <dt>{{'status' | i18n}}</dt> <dd> <span class=\"text-capitalize\">{{(subscription && subscription.status) || '-'}}</span> <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span> </dd> <dt>{{'nextCharge' | i18n}}</dt> <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) : '-'}} </dd> </dl> </div> <div class=\"col-8\" *ngIf=\"subscription\"> <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong> <table class=\"table\"> <tbody> <tr *ngFor=\"let i of subscription.items\"> <td> {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}} </td> <td> {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}} </td> </tr> </tbody> </table> </div> </div> <ng-container *ngIf=\"selfHosted\"> <div> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\"> {{'updateLicense' | i18n}} </button> <a href=\"https://vault.bitwarden.com/#/settings/subscription\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\"> {{'manageSubscription' | i18n}} </a> </div> <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\"> <div class=\"card-body\"> <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button> <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3> <app-update-license (onUpdated)=\"closeUpdateLicense(true)\" (onCanceled)=\"closeUpdateLicense(false)\"> </app-update-license> </div> </div> </ng-container> <ng-container *ngIf=\"!selfHosted\"> <div class=\"d-flex\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"downloadLicense()\" *ngIf=\"!subscription || !subscription.cancelled\"> {{'downloadLicense' | i18n}} </button> <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\" [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\" *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'cancelSubscription' | i18n}}</span> </button> </div> <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2> <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p> <div class=\"progress\"> <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\" [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\"> {{(storagePercentage / 100) | percent}}</div> </div> <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"> <div class=\"mt-3\"> <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\"> {{'addStorage' | i18n}} </button> <button type=\"button\" class=\"ml-1 btn btn-outline-secondary\" (click)=\"adjustStorage(false)\"> {{'removeStorage' | i18n}} </button> </div> <app-adjust-storage [storageGbPrice]=\"4\" [add]=\"adjustStorageAdd\" (onAdjusted)=\"closeStorage(true)\" (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage> </div> </ng-container> </ng-container> </ng-container> ","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-verify-email',\n    templateUrl: 'verify-email.component.html',\n})\nexport class VerifyEmailComponent {\n    actionPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService) { }\n\n    async send() {\n        if (this.actionPromise != null) {\n            return;\n        }\n        try {\n            this.actionPromise = this.apiService.postAccountVerifyEmail();\n            await this.actionPromise;\n            this.toasterService.popAsync('success', null, this.i18nService.t('checkInboxForVerification'));\n        } catch { }\n        this.actionPromise = null;\n    }\n}\n","<div class=\"card border-warning\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-envelope-o fa-fw\" aria-hidden=\"true\"></i> {{'verifyEmail' | i18n}} </div> <div class=\"card-body\"> <p>{{'verifyEmailDesc' | i18n}}</p> <button type=\"button\" class=\"btn btn-block btn-outline-secondary btn-submit\" #sendBtn [appApiAction]=\"actionPromise\" [disabled]=\"sendBtn.loading\" (click)=\"send()\"> <i class=\"fa fa-spin fa-spinner\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span> {{'sendEmail' | i18n}} </span> </button> </div> </div> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { BreachAccountResponse } from 'jslib-common/models/response/breachAccountResponse';\n\n@Component({\n    selector: 'app-breach-report',\n    templateUrl: 'breach-report.component.html',\n})\nexport class BreachReportComponent implements OnInit {\n    error = false;\n    username: string;\n    checkedUsername: string;\n    breachedAccounts: BreachAccountResponse[] = [];\n    formPromise: Promise<BreachAccountResponse[]>;\n\n    constructor(private auditService: AuditService, private userService: UserService) { }\n\n    async ngOnInit() {\n        this.username = await this.userService.getEmail();\n    }\n\n    async submit() {\n        this.error = false;\n        this.username = this.username.toLowerCase();\n        try {\n            this.formPromise = this.auditService.breachedAccounts(this.username);\n            this.breachedAccounts = await this.formPromise;\n        } catch {\n            this.error = true;\n        }\n        this.checkedUsername = this.username;\n    }\n}\n","<div class=\"page-header\"> <h1>{{'dataBreachReport' | i18n}}</h1> </div> <p>{{'breachDesc' | i18n}}</p> <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"row\"> <div class=\"form-group col-6\"> <label for=\"username\">{{'username' | i18n}}</label> <input id=\"username\" type=\"text\" name=\"Username\" class=\"form-control\" [(ngModel)]=\"username\" required> <small class=\"form-text text-muted\">{{'breachCheckUsernameEmail' | i18n}}</small> </div> </div> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'checkBreaches' | i18n}}</span> </button> </form> <div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\"> <p *ngIf=\"error\">{{'reportError' | i18n}}...</p> <ng-container *ngIf=\"!error\"> <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!breachedAccounts.length\"> {{'breachUsernameNotFound' | i18n : checkedUsername}} </app-callout> <app-callout type=\"danger\" title=\"{{'breachFound' | i18n}}\" *ngIf=\"breachedAccounts.length\"> {{'breachUsernameFound' | i18n : checkedUsername : breachedAccounts.length}} </app-callout> <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\"> <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\"> <div class=\"row\"> <div class=\"col-2 text-center\"> <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\"> </div> <div class=\"col-7\"> <h3 class=\"text-lg\">{{a.title}}</h3> <p [innerHTML]=\"a.description\"></p> <p class=\"mb-1\">{{'compromisedData' | i18n}}:</p> <ul> <li *ngFor=\"let d of a.dataClasses\">{{d}}</li> </ul> </div> <div class=\"col-3\"> <dl> <dt>{{'website' | i18n}}</dt> <dd>{{a.domain}}</dd> <dt>{{'affectedUsers' | i18n}}</dt> <dd>{{a.pwnCount | number}}</dd> <dt>{{'breachOccurred' | i18n}}</dt> <dd>{{a.breachDate | date: 'mediumDate'}}</dd> <dt>{{'breachReported' | i18n}}</dt> <dd>{{a.addedDate | date: 'mediumDate'}}</dd> </dl> </div> </div> </li> </ul> </ng-container> </div> ","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent,\n} from 'jslib-angular/components/password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator-history',\n    templateUrl: 'password-generator-history.component.html',\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <div class=\"modal-content\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{'passwordHistory' | i18n}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"history.length\"> <ul class=\"list-group list-group-flush\"> <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\"> <div class=\"password-row\"> <div class=\"text-monospace password-wrapper\" [innerHTML]=\"h.password | colorPassword\" appSelectCopy></div> <small class=\"text-muted\">{{h.date | date:'medium'}}</small> </div> <div class=\"ml-auto\"> <button class=\"btn btn-link\" appA11yTitle=\"{{'copyPassword' | i18n}}\" (click)=\"copy(h.password)\"> <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i> </button> </div> </li> </ul> </div> <div class=\"modal-body\" *ngIf=\"!history.length\"> {{'noPasswordsInList' | i18n}} </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"> {{'close' | i18n}} </button> <div class=\"ml-auto\"> <button type=\"button\" (click)=\"clear()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'clear' | i18n}}\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" aria-hidden=\"true\"></i> </button> </div> </div> </div> </div> </div> ","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorComponent as BasePasswordGeneratorComponent,\n} from 'jslib-angular/components/password-generator.component';\n\nimport { ModalComponent } from '../modal.component';\nimport { PasswordGeneratorHistoryComponent } from './password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator',\n    templateUrl: 'password-generator.component.html',\n})\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\n    @ViewChild('historyTemplate', { read: ViewContainerRef, static: true }) historyModalRef: ViewContainerRef;\n\n    private modal: ModalComponent = null;\n\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n\n    history() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.historyModalRef.createComponent(factory).instance;\n        this.modal.show<PasswordGeneratorHistoryComponent>(PasswordGeneratorHistoryComponent, this.historyModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    lengthChanged() {\n        document.getElementById('length').focus();\n    }\n\n    minNumberChanged() {\n        document.getElementById('min-number').focus();\n    }\n\n    minSpecialChanged() {\n        document.getElementById('min-special').focus();\n    }\n}\n","<div class=\"page-header\"> <h1>{{'passwordGenerator' | i18n}}</h1> </div> <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions?.inEffect()\"> {{'passwordGeneratorPolicyInEffect' | i18n}} </app-callout> <div class=\"card card-password bg-light my-4\"> <div class=\"card-body\"> <div class=\"password-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div> </div> </div> <div class=\"form-group\"> <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\"> <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"options.type\" name=\"Type_{{o.value}}\" id=\"type_{{o.value}}\" [value]=\"o.value\" (change)=\"saveOptions()\" [checked]=\"options.type === o.value\"> <label class=\"form-check-label\" for=\"type_{{o.value}}\"> {{o.name}} </label> </div> </div> <ng-container *ngIf=\"options.type === 'passphrase'\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"num-words\">{{'numWords' | i18n}}</label> <input id=\"num-words\" class=\"form-control\" type=\"number\" min=\"3\" max=\"20\" [(ngModel)]=\"options.numWords\" (blur)=\"saveOptions()\"> </div> <div class=\"form-group col-4\"> <label for=\"word-separator\">{{'wordSeparator' | i18n}}</label> <input id=\"word-separator\" class=\"form-control\" type=\"text\" maxlength=\"1\" [(ngModel)]=\"options.wordSeparator\" (blur)=\"saveOptions()\"> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input id=\"capitalize\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.capitalize\" [disabled]=\"enforcedPolicyOptions?.capitalize\"> <label for=\"capitalize\" class=\"form-check-label\">{{'capitalize' | i18n}}</label> </div> <div class=\"form-check\"> <input id=\"include-number\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.includeNumber\" [disabled]=\"enforcedPolicyOptions?.includeNumber\"> <label for=\"include-number\" class=\"form-check-label\">{{'includeNumber' | i18n}}</label> </div> </div> </ng-container> <ng-container *ngIf=\"options.type === 'password'\"> <div class=\"row\"> <div class=\"form-group col-4\"> <label for=\"length\">{{'length' | i18n}}</label> <input id=\"length\" class=\"form-control\" type=\"number\" min=\"5\" max=\"128\" [(ngModel)]=\"options.length\" (blur)=\"saveOptions()\" (change)=\"lengthChanged()\"> </div> <div class=\"form-group col-4\"> <label for=\"min-number\">{{'minNumbers' | i18n}}</label> <input id=\"min-number\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\" [(ngModel)]=\"options.minNumber\" (change)=\"minNumberChanged()\"> </div> <div class=\"form-group col-4\"> <label for=\"min-special\">{{'minSpecial' | i18n}}</label> <input id=\"min-special\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\" [(ngModel)]=\"options.minSpecial\" (change)=\"minSpecialChanged()\"> </div> </div> <div class=\"form-group\"> <div class=\"form-check\"> <input id=\"uppercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.uppercase\" [disabled]=\"enforcedPolicyOptions?.useUppercase\"> <label for=\"uppercase\" class=\"form-check-label\">A-Z</label> </div> <div class=\"form-check\"> <input id=\"lowercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.lowercase\" [disabled]=\"enforcedPolicyOptions?.useLowercase\"> <label for=\"lowercase\" class=\"form-check-label\">a-z</label> </div> <div class=\"form-check\"> <input id=\"numbers\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.number\" [disabled]=\"enforcedPolicyOptions?.useNumbers\"> <label for=\"numbers\" class=\"form-check-label\">0-9</label> </div> <div class=\"form-check\"> <input id=\"special\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"options.special\" [disabled]=\"enforcedPolicyOptions?.useSpecial\"> <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label> </div> <div class=\"form-check\"> <input id=\"ambiguous\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\" [(ngModel)]=\"avoidAmbiguous\"> <label for=\"ambiguous\" class=\"form-check-label\">{{'ambiguous' | i18n}}</label> </div> </div> </ng-container> <div class=\"d-flex\"> <div> <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\"> {{'regeneratePassword' | i18n}} </button> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\"> {{'copyPassword' | i18n}} </button> </div> <div class=\"ml-auto\"> <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"history()\" appA11yTitle=\"{{'passwordHistory' | i18n}}\"> <i class=\"fa fa-clock-o fa-lg\" aria-hidden=\"true\"></i> </button> </div> </div> <ng-template #historyTemplate></ng-template> ","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Component({\n    selector: 'app-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent implements OnInit {\n    canAccessPremium = false;\n\n    constructor(private userService: UserService, private messagingService: MessagingService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <div class=\"card mb-4\"> <div class=\"card-header\">{{'tools' | i18n}}</div> <div class=\"list-group list-group-flush\"> <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'passwordGenerator' | i18n}} </a> <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'importData' | i18n}} </a> <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exportVault' | i18n}} </a> </div> </div> <div class=\"card\"> <div class=\"card-header d-flex\"> {{'reports' | i18n}} <div class=\"ml-auto\"> <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium\" (click)=\"premiumRequired()\"> {{'premium' | i18n}} </a> </div> </div> <div class=\"list-group list-group-flush\"> <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'exposedPasswordsReport' | i18n}} </a> <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'reusedPasswordsReport' | i18n}} </a> <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'weakPasswordsReport' | i18n}} </a> <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'unsecuredWebsitesReport' | i18n}} </a> <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\"> {{'inactive2faReport' | i18n}} </a> <a routerLink=\"breach-report\" class=\"list-group-item d-flex\" routerLinkActive=\"active\"> {{'dataBreachReport' | i18n}} <div class=\"ml-auto\"> <span class=\"badge badge-success\" *ngIf=\"!canAccessPremium\"> {{'free' | i18n | uppercase}} </span> </div> </a> </div> </div> </div> <div class=\"col-9\"> <router-outlet></router-outlet> </div> </div> </div> ","import { Component } from '@angular/core';\n\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport {\n    FolderAddEditComponent as BaseFolderAddEditComponent,\n} from 'jslib-angular/components/folder-add-edit.component';\n\n@Component({\n    selector: 'app-folder-add-edit',\n    templateUrl: 'folder-add-edit.component.html',\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n    constructor(folderService: FolderService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService) {\n        super(folderService, i18nService, platformUtilsService);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\"> <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{title}}</h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <label for=\"name\">{{'name' | i18n}}</label> <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"folder.name\" required appAutofocus> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> <div class=\"ml-auto\"> <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\" appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\" [appApiAction]=\"deletePromise\"> <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i> <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> </button> </div> </div> </form> </div> </div> ","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { ShareComponent as BaseShareComponent } from 'jslib-angular/components/share.component';\n\n@Component({\n    selector: 'app-vault-share',\n    templateUrl: 'share.component.html',\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, userService: UserService,\n        cipherService: CipherService) {\n        super(collectionService, platformUtilsService, i18nService, userService, cipherService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach(c => this.check(c, select));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\"> <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\"> <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\"> <div class=\"modal-header\"> <h2 class=\"modal-title\" id=\"shareTitle\"> {{'moveToOrganization' | i18n}} <small *ngIf=\"cipher\">{{cipher.name}}</small> </h2> <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\"> {{'noOrganizationsList' | i18n}} </div> <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\"> <p>{{'moveToOrgDesc' | i18n}}</p> <div class=\"form-group\"> <label for=\"organization\">{{'organization' | i18n}}</label> <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\" (change)=\"filterCollections()\"> <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option> </select> </div> <div class=\"d-flex\"> <h3>{{'collections' | i18n}}</h3> <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\"> <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\"> {{'selectAll' | i18n}} </button> <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\"> {{'unselectAll' | i18n}} </button> </div> </div> <div *ngIf=\"!collections || !collections.length\"> {{'noCollectionsInList' | i18n}} </div> <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\"> <tbody> <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\"> <td class=\"table-list-checkbox\"> <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\" appStopProp> </td> <td> {{c.name}} </td> </tr> </tbody> </table> </div> <div class=\"modal-footer\"> <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\" [ngClass]=\"{loading:form.loading}\" *ngIf=\"organizations && organizations.length\"> <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span>{{'save' | i18n}}</span> </button> <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-primary\" *ngIf=\"!organizations || !organizations.length\"> {{'newOrganization' | i18n}} </a> <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'cancel' | i18n}}</button> </div> </form> </div> </div> ","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { OrganizationsComponent } from '../settings/organizations.component';\nimport { UpdateKeyComponent } from '../settings/update-key.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { FolderAddEditComponent } from './folder-add-edit.component';\nimport { GroupingsComponent } from './groupings.component';\nimport { ShareComponent } from './share.component';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { TokenService } from 'jslib-common/abstractions/token.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'VaultComponent';\n\n@Component({\n    selector: 'app-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n    @ViewChild(OrganizationsComponent, { static: true }) organizationsComponent: OrganizationsComponent;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('folderAddEdit', { read: ViewContainerRef, static: true }) folderAddEditModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('share', { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('updateKeyTemplate', { read: ViewContainerRef, static: true }) updateKeyModalRef: ViewContainerRef;\n\n    favorites: boolean = false;\n    type: CipherType = null;\n    folderId: string = null;\n    collectionId: string = null;\n    showVerifyEmail = false;\n    showBrowserOutdated = false;\n    showUpdateKey = false;\n    showPremiumCallout = false;\n    showProviders = false;\n    deleted: boolean = false;\n    trashCleanupWarning: string = null;\n\n    modal: ModalComponent = null;\n\n    constructor(private syncService: SyncService, private route: ActivatedRoute,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private tokenService: TokenService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone) { }\n\n    async ngOnInit() {\n        this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n        this.showBrowserOutdated = window.navigator.userAgent.indexOf('MSIE') !== -1;\n        this.trashCleanupWarning = this.i18nService.t(\n            this.platformUtilsService.isSelfHost() ? 'trashCleanupWarningSelfHosted' : 'trashCleanupWarning'\n        );\n\n        const queryParamsSub = this.route.queryParams.subscribe(async params => {\n            await this.syncService.fullSync(false);\n\n            if (await this.userService.getForcePasswordReset()) {\n                this.router.navigate(['update-temp-password']);\n            }\n\n            this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n            const canAccessPremium = await this.userService.canAccessPremium();\n            this.showPremiumCallout = !this.showVerifyEmail && !canAccessPremium &&\n                !this.platformUtilsService.isSelfHost();\n\n            this.showProviders = (await this.userService.getAllProviders()).length > 0;\n\n            await Promise.all([\n                this.groupingsComponent.load(),\n                this.organizationsComponent.load(),\n            ]);\n\n            if (params == null) {\n                this.groupingsComponent.selectedAll = true;\n                await this.ciphersComponent.reload();\n            } else {\n                if (params.deleted) {\n                    this.groupingsComponent.selectedTrash = true;\n                    await this.filterDeleted();\n                } else if (params.favorites) {\n                    this.groupingsComponent.selectedFavorites = true;\n                    await this.filterFavorites();\n                } else if (params.type) {\n                    const t = parseInt(params.type, null);\n                    this.groupingsComponent.selectedType = t;\n                    await this.filterCipherType(t);\n                } else if (params.folderId) {\n                    this.groupingsComponent.selectedFolder = true;\n                    this.groupingsComponent.selectedFolderId = params.folderId;\n                    await this.filterFolder(params.folderId);\n                } else if (params.collectionId) {\n                    this.groupingsComponent.selectedCollectionId = params.collectionId;\n                    await this.filterCollection(params.collectionId);\n                } else {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                }\n            }\n\n            this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                this.ngZone.run(async () => {\n                    switch (message.command) {\n                        case 'syncCompleted':\n                            if (message.successfully) {\n                                await Promise.all([\n                                    this.groupingsComponent.load(),\n                                    this.organizationsComponent.load(),\n                                    this.ciphersComponent.load(this.ciphersComponent.filter),\n                                ]);\n                                this.changeDetectorRef.detectChanges();\n                            }\n                            break;\n                    }\n                });\n            });\n\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.reload();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterFavorites() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFavorites');\n        await this.ciphersComponent.reload(c => c.favorite);\n        this.clearFilters();\n        this.favorites = true;\n        this.go();\n    }\n\n    async filterDeleted() {\n        this.ciphersComponent.showAddNew = false;\n        this.ciphersComponent.deleted = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\n        await this.ciphersComponent.reload(null, true);\n        this.clearFilters();\n        this.deleted = true;\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        await this.ciphersComponent.reload(c => c.type === type);\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterFolder(folderId: string) {\n        this.ciphersComponent.showAddNew = true;\n        folderId = folderId === 'none' ? null : folderId;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFolder');\n        await this.ciphersComponent.reload(c => c.folderId === folderId);\n        this.clearFilters();\n        this.folderId = folderId == null ? 'none' : folderId;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        await this.ciphersComponent.reload(c => c.collectionIds != null &&\n            c.collectionIds.indexOf(collectionId) > -1);\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    async editCipherAttachments(cipher: CipherView) {\n        const canAccessPremium = await this.userService.canAccessPremium();\n        if (cipher.organizationId == null && !canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        } else if (cipher.organizationId != null) {\n            const org = await this.userService.getOrganization(cipher.organizationId);\n            if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n                this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n                return;\n            }\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.cipherId = cipher.id;\n        let madeAttachmentChanges = false;\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onReuploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    shareCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.shareModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ShareComponent>(ShareComponent, this.shareModalRef);\n\n        childComponent.cipherId = cipher.id;\n        childComponent.onSharedCipher.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    editCipherCollections(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\n\n        childComponent.cipherId = cipher.id;\n        childComponent.onSavedCollections.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    async addFolder() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<FolderAddEditComponent>(\n            FolderAddEditComponent, this.folderAddEditModalRef);\n\n        childComponent.folderId = null;\n        childComponent.onSavedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async editFolder(folderId: string) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<FolderAddEditComponent>(\n            FolderAddEditComponent, this.folderAddEditModalRef);\n\n        childComponent.folderId = folderId;\n        childComponent.onSavedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n        });\n        childComponent.onDeletedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n            await this.filterFolder('none');\n            this.groupingsComponent.selectedFolderId = null;\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    addCipher() {\n        const component = this.editCipher(null);\n        component.type = this.type;\n        component.folderId = this.folderId === 'none' ? null : this.folderId;\n        if (this.collectionId != null) {\n            const collection = this.groupingsComponent.collections.filter(c => c.id === this.collectionId);\n            if (collection.length > 0) {\n                component.organizationId = collection[0].organizationId;\n                component.collectionIds = [this.collectionId];\n            }\n        }\n    }\n\n    editCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(\n            AddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    cloneCipher(cipher: CipherView) {\n        const component = this.editCipher(cipher);\n        component.cloneMode = true;\n    }\n\n    updateKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.updateKeyModalRef.createComponent(factory).instance;\n        this.modal.show<UpdateKeyComponent>(UpdateKeyComponent, this.updateKeyModalRef);\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private clearFilters() {\n        this.folderId = null;\n        this.collectionId = null;\n        this.favorites = false;\n        this.type = null;\n        this.deleted = false;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                favorites: this.favorites ? true : null,\n                type: this.type,\n                folderId: this.folderId,\n                collectionId: this.collectionId,\n                deleted: this.deleted ? true : null,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","<div class=\"container page-content\"> <div class=\"row\"> <div class=\"col-3\"> <app-vault-groupings (onAllClicked)=\"clearGroupingFilters()\" (onFavoritesClicked)=\"filterFavorites()\" (onCipherTypeClicked)=\"filterCipherType($event)\" (onFolderClicked)=\"filterFolder($event.id)\" (onAddFolder)=\"addFolder()\" (onEditFolder)=\"editFolder($event.id)\" (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\" (onTrashClicked)=\"filterDeleted()\"> </app-vault-groupings> </div> <div class=\"col-6\"> <div class=\"page-header d-flex\"> <h1> {{'myVault' | i18n}} <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\"> <ng-container *ngIf=\"actionSpinner.loading\"> <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i> <span class=\"sr-only\">{{'loading' | i18n}}</span> </ng-container> </small> </h1> <div class=\"ml-auto d-flex\"> <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [modal]=\"modal\" [deleted]=\"deleted\"> </app-vault-bulk-actions> <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addCipher()\" *ngIf=\"!deleted\"> <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}} </button> </div> </div> <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"fa-warning\"> {{trashCleanupWarning}} </app-callout> <app-vault-ciphers (onCipherClicked)=\"editCipher($event)\" (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\" (onShareClicked)=\"shareCipher($event)\" (onCollectionsClicked)=\"editCipherCollections($event)\" (onCloneClicked)=\"cloneCipher($event)\"> </app-vault-ciphers> </div> <div class=\"col-3\"> <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateKeyTitle' | i18n}} </div> <div class=\"card-body\"> <p>{{'updateEncryptionKeyShortDesc' | i18n}}</p> <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\"> {{'updateEncryptionKey' | i18n}} </button> </div> </div> <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email> <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\"> <div class=\"card-header bg-warning text-white\"> <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateBrowser' | i18n}} </div> <div class=\"card-body\"> <p>{{'updateBrowserDesc' | i18n}}</p> <a class=\"btn btn-block btn-outline-secondary\" target=\"_blank\" href=\"https://browser-update.org/update-browser.html\" rel=\"noopener\"> {{'updateBrowser' | i18n}} </a> </div> </div> <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\"> <div class=\"card-header bg-success text-white\"> <i class=\"fa fa-star fa-fw\" aria-hidden=\"true\"></i> {{'goPremium' | i18n}} </div> <div class=\"card-body\"> <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p> <a class=\"btn btn-block btn-outline-secondary\" routerLink=\"/settings/premium\"> {{'goPremium' | i18n}} </a> </div> </div> <div class=\"card\"> <div class=\"card-header d-flex\"> {{'organizations' | i18n}} <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/what-is-an-organization/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"card-body\"> <app-organizations [vault]=\"true\"></app-organizations> </div> </div> <div class=\"card mt-4\" *ngIf=\"showProviders\"> <div class=\"card-header d-flex\"> {{'providers' | i18n}} <a class=\"ml-auto\" href=\"https://bitwarden.com/help/article/about-providers/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i> </a> </div> <div class=\"card-body\"> <app-providers vault=\"true\"></app-providers> </div> </div> </div> </div> </div> <ng-template #attachments></ng-template> <ng-template #folderAddEdit></ng-template> <ng-template #cipherAddEdit></ng-template> <ng-template #share></ng-template> <ng-template #collections></ng-template> <ng-template #updateKeyTemplate></ng-template> ","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Injectable()\nexport class OrganizationGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.params.organizationId);\n        if (org == null) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        if (!org.isOwner && !org.enabled) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('organizationIsDisabled'));\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\n@Injectable()\nexport class OrganizationTypeGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.params.organizationId);\n        const permissions = route.data == null ? null : route.data.permissions as Permissions[];\n\n        if (\n            (permissions.indexOf(Permissions.AccessBusinessPortal) !== -1 && org.canAccessBusinessPortal) ||\n            (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && org.canAccessEventLogs) ||\n            (permissions.indexOf(Permissions.AccessImportExport) !== -1 && org.canAccessImportExport) ||\n            (permissions.indexOf(Permissions.AccessReports) !== -1 && org.canAccessReports) ||\n            (permissions.indexOf(Permissions.ManageAllCollections) !== -1 && org.canManageAllCollections) ||\n            (permissions.indexOf(Permissions.ManageAssignedCollections) !== -1 && org.canManageAssignedCollections) ||\n            (permissions.indexOf(Permissions.ManageGroups) !== -1 && org.canManageGroups) ||\n            (permissions.indexOf(Permissions.ManageOrganization) !== -1 && org.isOwner) ||\n            (permissions.indexOf(Permissions.ManagePolicies) !== -1 && org.canManagePolicies) ||\n            (permissions.indexOf(Permissions.ManageUsers) !== -1 && org.canManageUsers) ||\n            (permissions.indexOf(Permissions.ManageUsersPassword) !== -1 && org.canManageUsersPassword)\n        ) {\n            return true;\n        }\n\n        this.router.navigate(['/organizations', org.id]);\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class LockGuardService implements CanActivate {\n\n    protected homepage = 'vault';\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (isAuthed) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            if (locked) {\n                return true;\n            } else {\n                this.router.navigate([this.homepage]);\n                return false;\n            }\n        }\n\n        this.router.navigate(['']);\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n\n    protected homepage = 'vault';\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (isAuthed) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            if (locked) {\n                this.router.navigate(['lock']);\n            } else {\n                this.router.navigate([this.homepage]);\n            }\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { DeviceType } from '../enums/deviceType';\nimport { PolicyType } from '../enums/policyType';\n\nimport { ApiService as ApiServiceAbstraction } from '../abstractions/api.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\n\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EmergencyAccessAcceptRequest } from '../models/request/emergencyAccessAcceptRequest';\nimport { EmergencyAccessConfirmRequest } from '../models/request/emergencyAccessConfirmRequest';\nimport { EmergencyAccessInviteRequest } from '../models/request/emergencyAccessInviteRequest';\nimport { EmergencyAccessPasswordRequest } from '../models/request/emergencyAccessPasswordRequest';\nimport { EmergencyAccessUpdateRequest } from '../models/request/emergencyAccessUpdateRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationImportRequest } from '../models/request/organizationImportRequest';\nimport { OrganizationKeysRequest } from '../models/request/organizationKeysRequest';\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserBulkConfirmRequest } from '../models/request/organizationUserBulkConfirmRequest';\nimport { OrganizationUserBulkRequest } from '../models/request/organizationUserBulkRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserResetPasswordEnrollmentRequest } from '../models/request/organizationUserResetPasswordEnrollmentRequest';\nimport { OrganizationUserResetPasswordRequest } from '../models/request/organizationUserResetPasswordRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PolicyRequest } from '../models/request/policyRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { ProviderAddOrganizationRequest } from '../models/request/provider/providerAddOrganizationRequest';\nimport { ProviderOrganizationCreateRequest } from '../models/request/provider/providerOrganizationCreateRequest';\nimport { ProviderSetupRequest } from '../models/request/provider/providerSetupRequest';\nimport { ProviderUpdateRequest } from '../models/request/provider/providerUpdateRequest';\nimport { ProviderUserAcceptRequest } from '../models/request/provider/providerUserAcceptRequest';\nimport { ProviderUserBulkConfirmRequest } from '../models/request/provider/providerUserBulkConfirmRequest';\nimport { ProviderUserBulkRequest } from '../models/request/provider/providerUserBulkRequest';\nimport { ProviderUserConfirmRequest } from '../models/request/provider/providerUserConfirmRequest';\nimport { ProviderUserInviteRequest } from '../models/request/provider/providerUserInviteRequest';\nimport { ProviderUserUpdateRequest } from '../models/request/provider/providerUserUpdateRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { SendAccessRequest } from '../models/request/sendAccessRequest';\nimport { SendRequest } from '../models/request/sendRequest';\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTempPasswordRequest } from '../models/request/updateTempPasswordRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from '../models/request/updateTwoFactorWebAuthnDeleteRequest';\nimport { UpdateTwoFactorWebAuthnRequest } from '../models/request/updateTwoFactorWebAuthnRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { Utils } from '../misc/utils';\n\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { AttachmentResponse } from '../models/response/attachmentResponse';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport {\n    EmergencyAccessGranteeDetailsResponse,\n    EmergencyAccessGrantorDetailsResponse,\n    EmergencyAccessTakeoverResponse,\n    EmergencyAccessViewResponse\n} from '../models/response/emergencyAccessResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationKeysResponse } from '../models/response/organizationKeysResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport { OrganizationUserBulkPublicKeyResponse } from '../models/response/organizationUserBulkPublicKeyResponse';\nimport { OrganizationUserBulkResponse } from '../models/response/organizationUserBulkResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserResetPasswordDetailsReponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PlanResponse } from '../models/response/planResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { ProviderOrganizationOrganizationDetailsResponse, ProviderOrganizationResponse } from '../models/response/provider/providerOrganizationResponse';\nimport { ProviderResponse } from '../models/response/provider/providerResponse';\nimport { ProviderUserBulkPublicKeyResponse } from '../models/response/provider/providerUserBulkPublicKeyResponse';\nimport { ProviderUserBulkResponse } from '../models/response/provider/providerUserBulkResponse';\nimport {\n    ProviderUserResponse,\n    ProviderUserUserDetailsResponse\n} from '../models/response/provider/providerUserResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SendAccessResponse } from '../models/response/sendAccessResponse';\nimport { SendFileDownloadDataResponse } from '../models/response/sendFileDownloadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\nimport { SendResponse } from '../models/response/sendResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\nimport { TaxRateResponse } from '../models/response/taxRateResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport { TwoFactorWebAuthnResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { ChallengeResponse } from '../models/response/twoFactorWebAuthnResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nimport { EnvironmentService } from '../abstractions';\nimport { IdentityCaptchaResponse } from '../models/response/identityCaptchaResponse';\nimport { SendAccessView } from '../models/view/sendAccessView';\n\nexport class ApiService implements ApiServiceAbstraction {\n    protected apiKeyRefresh: (clientId: string, clientSecret: string) => Promise<any>;\n    private device: DeviceType;\n    private deviceType: string;\n    private isWebClient = false;\n    private isDesktopClient = false;\n\n    constructor(private tokenService: TokenService, private platformUtilsService: PlatformUtilsService,\n        private environmentService: EnvironmentService, private logoutCallback: (expired: boolean) => Promise<void>,\n        private customUserAgent: string = null) {\n        this.device = platformUtilsService.getDevice();\n        this.deviceType = this.device.toString();\n        this.isWebClient = this.device === DeviceType.IEBrowser || this.device === DeviceType.ChromeBrowser ||\n            this.device === DeviceType.EdgeBrowser || this.device === DeviceType.FirefoxBrowser ||\n            this.device === DeviceType.OperaBrowser || this.device === DeviceType.SafariBrowser ||\n            this.device === DeviceType.UnknownBrowser || this.device === DeviceType.VivaldiBrowser;\n        this.isDesktopClient = this.device === DeviceType.WindowsDesktop || this.device === DeviceType.MacOsDesktop ||\n            this.device === DeviceType.LinuxDesktop;\n    }\n\n    // Auth APIs\n\n    async postIdentityToken(request: TokenRequest): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n        const headers = new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n        request.alterIdentityTokenHeaders(headers);\n        const response = await this.fetch(new Request(this.environmentService.getIdentityUrl() + '/connect/token', {\n            body: this.qsStringify(request.toIdentityToken(request.clientId ?? this.platformUtilsService.identityClientId)),\n            credentials: this.getCredentials(),\n            cache: 'no-store',\n            headers: headers,\n            method: 'POST',\n        }));\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        }\n\n        if (responseJson != null) {\n            if (response.status === 200) {\n                return new IdentityTokenResponse(responseJson);\n            } else if (response.status === 400 && responseJson.TwoFactorProviders2 &&\n                Object.keys(responseJson.TwoFactorProviders2).length) {\n                await this.tokenService.clearTwoFactorToken(request.email);\n                return new IdentityTwoFactorResponse(responseJson);\n            } else if (response.status === 400 && responseJson.HCaptcha_SiteKey &&\n                Object.keys(responseJson.HCaptcha_SiteKey).length) {\n                return new IdentityCaptchaResponse(responseJson);\n            }\n        }\n\n        return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n    }\n\n    async refreshIdentityToken(): Promise<any> {\n        try {\n            await this.doAuthRefresh();\n        } catch (e) {\n            return Promise.reject(null);\n        }\n    }\n\n    // Account APIs\n\n    async getProfile(): Promise<ProfileResponse> {\n        const r = await this.send('GET', '/accounts/profile', null, true, true);\n        return new ProfileResponse(r);\n    }\n\n    async getUserBilling(): Promise<BillingResponse> {\n        const r = await this.send('GET', '/accounts/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getUserSubscription(): Promise<SubscriptionResponse> {\n        const r = await this.send('GET', '/accounts/subscription', null, true, true);\n        return new SubscriptionResponse(r);\n    }\n\n    async getTaxInfo(): Promise<TaxInfoResponse> {\n        const r = await this.send('GET', '/accounts/tax', null, true, true);\n        return new TaxInfoResponse(r);\n    }\n\n    async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n        const r = await this.send('PUT', '/accounts/profile', request, true, true);\n        return new ProfileResponse(r);\n    }\n\n    putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n        return this.send('PUT', '/accounts/tax', request, true, false);\n    }\n\n    async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n        const r = await this.send('POST', '/accounts/prelogin', request, false, true);\n        return new PreloginResponse(r);\n    }\n\n    postEmailToken(request: EmailTokenRequest): Promise<any> {\n        return this.send('POST', '/accounts/email-token', request, true, false);\n    }\n\n    postEmail(request: EmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/email', request, true, false);\n    }\n\n    postPassword(request: PasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/password', request, true, false);\n    }\n\n    setPassword(request: SetPasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/set-password', request, true, false);\n    }\n\n    postSecurityStamp(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/security-stamp', request, true, false);\n    }\n\n    deleteAccount(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/accounts', request, true, false);\n    }\n\n    async getAccountRevisionDate(): Promise<number> {\n        const r = await this.send('GET', '/accounts/revision-date', null, true, true);\n        return r as number;\n    }\n\n    postPasswordHint(request: PasswordHintRequest): Promise<any> {\n        return this.send('POST', '/accounts/password-hint', request, false, false);\n    }\n\n    postRegister(request: RegisterRequest): Promise<any> {\n        return this.send('POST', '/accounts/register', request, false, false);\n    }\n\n    async postPremium(data: FormData): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/premium', data, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postIapCheck(request: IapCheckRequest): Promise<any> {\n        return this.send('POST', '/accounts/iap-check', request, true, false);\n    }\n\n    postReinstatePremium(): Promise<any> {\n        return this.send('POST', '/accounts/reinstate-premium', null, true, false);\n    }\n\n    postCancelPremium(): Promise<any> {\n        return this.send('POST', '/accounts/cancel-premium', null, true, false);\n    }\n\n    async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postAccountPayment(request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/accounts/payment', request, true, false);\n    }\n\n    postAccountLicense(data: FormData): Promise<any> {\n        return this.send('POST', '/accounts/license', data, true, false);\n    }\n\n    postAccountKeys(request: KeysRequest): Promise<any> {\n        return this.send('POST', '/accounts/keys', request, true, false);\n    }\n\n    postAccountKey(request: UpdateKeyRequest): Promise<any> {\n        return this.send('POST', '/accounts/key', request, true, false);\n    }\n\n    postAccountVerifyEmail(): Promise<any> {\n        return this.send('POST', '/accounts/verify-email', null, true, false);\n    }\n\n    postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-email-token', request, false, false);\n    }\n\n    postAccountVerifyPassword(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-password', request, true, false);\n    }\n\n    postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover', request, false, false);\n    }\n\n    postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover-token', request, false, false);\n    }\n\n    postAccountKdf(request: KdfRequest): Promise<any> {\n        return this.send('POST', '/accounts/kdf', request, true, false);\n    }\n\n    async getEnterprisePortalSignInToken(): Promise<string> {\n        const r = await this.send('GET', '/accounts/enterprise-portal-signin-token', null, true, true);\n        return r as string;\n    }\n\n    async deleteSsoUser(organizationId: string): Promise<any> {\n        return this.send('DELETE', '/accounts/sso/' + organizationId, null, true, false);\n    }\n\n    async getSsoUserIdentifier(): Promise<string> {\n        return this.send('GET', '/accounts/sso/user-identifier', null, true, true);\n    }\n\n    async postUserApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/accounts/api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postUserRotateApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/accounts/rotate-api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n        return this.send('PUT', '/accounts/update-temp-password', request, true, false);\n    }\n\n    // Folder APIs\n\n    async getFolder(id: string): Promise<FolderResponse> {\n        const r = await this.send('GET', '/folders/' + id, null, true, true);\n        return new FolderResponse(r);\n    }\n\n    async postFolder(request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('POST', '/folders', request, true, true);\n        return new FolderResponse(r);\n    }\n\n    async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('PUT', '/folders/' + id, request, true, true);\n        return new FolderResponse(r);\n    }\n\n    deleteFolder(id: string): Promise<any> {\n        return this.send('DELETE', '/folders/' + id, null, true, false);\n    }\n\n    // Send APIs\n\n    async getSend(id: string): Promise<SendResponse> {\n        const r = await this.send('GET', '/sends/' + id, null, true, true);\n        return new SendResponse(r);\n    }\n\n    async postSendAccess(id: string, request: SendAccessRequest, apiUrl?: string): Promise<SendAccessResponse> {\n        const addSendIdHeader = (headers: Headers) => {\n            headers.set('Send-Id', id);\n        };\n        const r = await this.send('POST', '/sends/access/' + id, request, false, true, apiUrl, addSendIdHeader);\n        return new SendAccessResponse(r);\n    }\n\n    async getSendFileDownloadData(send: SendAccessView, request: SendAccessRequest, apiUrl?: string): Promise<SendFileDownloadDataResponse> {\n        const addSendIdHeader = (headers: Headers) => {\n            headers.set('Send-Id', send.id);\n        };\n        const r = await this.send('POST', '/sends/' + send.id + '/access/file/' + send.file.id, request, false, true,\n            apiUrl, addSendIdHeader);\n        return new SendFileDownloadDataResponse(r);\n    }\n\n    async getSends(): Promise<ListResponse<SendResponse>> {\n        const r = await this.send('GET', '/sends', null, true, true);\n        return new ListResponse(r, SendResponse);\n    }\n\n    async postSend(request: SendRequest): Promise<SendResponse> {\n        const r = await this.send('POST', '/sends', request, true, true);\n        return new SendResponse(r);\n    }\n\n    async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n        const r = await this.send('POST', '/sends/file/v2', request, true, true);\n        return new SendFileUploadDataResponse(r);\n    }\n\n    async renewSendFileUploadUrl(sendId: string, fileId: string): Promise<SendFileUploadDataResponse> {\n        const r = await this.send('GET', '/sends/' + sendId + '/file/' + fileId, null, true, true);\n        return new SendFileUploadDataResponse(r);\n    }\n\n    postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n        return this.send('POST', '/sends/' + sendId + '/file/' + fileId, data, true, false);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n        const r = await this.send('POST', '/sends/file', data, true, true);\n        return new SendResponse(r);\n    }\n\n    async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n        const r = await this.send('PUT', '/sends/' + id, request, true, true);\n        return new SendResponse(r);\n    }\n\n    async putSendRemovePassword(id: string): Promise<SendResponse> {\n        const r = await this.send('PUT', '/sends/' + id + '/remove-password', null, true, true);\n        return new SendResponse(r);\n    }\n\n    deleteSend(id: string): Promise<any> {\n        return this.send('DELETE', '/sends/' + id, null, true, false);\n    }\n\n    // Cipher APIs\n\n    async getCipher(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id, null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCipherAdmin(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id + '/admin', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n        const r = await this.send('GET', '/ciphers/organization-details?organizationId=' + organizationId,\n            null, true, true);\n        return new ListResponse(r, CipherResponse);\n    }\n\n    async postCipher(request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/create', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id, request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipher(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id, null, true, false);\n    }\n\n    deleteCipherAdmin(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/admin', null, true, false);\n    }\n\n    deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers', request, true, false);\n    }\n\n    deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers/admin', request, true, false);\n    }\n\n    putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/move', request, true, false);\n    }\n\n    async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/share', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/share', request, true, false);\n    }\n\n    putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections', request, true, false);\n    }\n\n    putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections-admin', request, true, false);\n    }\n\n    postPurgeCiphers(request: PasswordVerificationRequest, organizationId: string = null): Promise<any> {\n        let path = '/ciphers/purge';\n        if (organizationId != null) {\n            path += '?organizationId=' + organizationId;\n        }\n        return this.send('POST', path, request, true, false);\n    }\n\n    postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import', request, true, false);\n    }\n\n    postImportOrganizationCiphers(organizationId: string, request: ImportOrganizationCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import-organization?organizationId=' + organizationId, request, true, false);\n    }\n\n    putDeleteCipher(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/delete', null, true, false);\n    }\n\n    putDeleteCipherAdmin(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/delete-admin', null, true, false);\n    }\n\n    putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/delete', request, true, false);\n    }\n\n    putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/delete-admin', request, true, false);\n    }\n\n    async putRestoreCipher(id: string): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/restore', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/restore-admin', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putRestoreManyCiphers(request: CipherBulkDeleteRequest): Promise<ListResponse<CipherResponse>> {\n        const r = await this.send('PUT', '/ciphers/restore', request, true, true);\n        return new ListResponse<CipherResponse>(r, CipherResponse);\n    }\n\n    // Attachments APIs\n\n    async getAttachmentData(cipherId: string, attachmentId: string, emergencyAccessId?: string): Promise<AttachmentResponse> {\n        const path = (emergencyAccessId != null ?\n            '/emergency-access/' + emergencyAccessId + '/' :\n            '/ciphers/') + cipherId + '/attachment/' + attachmentId;\n        const r = await this.send('GET', path, null, true, true);\n        return new AttachmentResponse(r);\n    }\n\n    async postCipherAttachment(id: string, request: AttachmentRequest): Promise<AttachmentUploadDataResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment/v2', request, true, true);\n        return new AttachmentUploadDataResponse(r);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment-admin', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId, null, true, false);\n    }\n\n    deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId + '/admin', null, true, false);\n    }\n\n    postShareCipherAttachment(id: string, attachmentId: string, data: FormData,\n        organizationId: string): Promise<any> {\n        return this.send('POST', '/ciphers/' + id + '/attachment/' +\n            attachmentId + '/share?organizationId=' + organizationId, data, true, false);\n    }\n\n    async renewAttachmentUploadUrl(id: string, attachmentId: string): Promise<AttachmentUploadDataResponse> {\n        const r = await this.send('GET', '/ciphers/' + id + '/attachment/' + attachmentId + '/renew', null, true, true);\n        return new AttachmentUploadDataResponse(r);\n    }\n\n    postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n        return this.send('POST', '/ciphers/' + id + '/attachment/' + attachmentId, data, true, false);\n    }\n\n    // Collections APIs\n\n    async getCollectionDetails(organizationId: string, id: string): Promise<CollectionGroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/details',\n            null, true, true);\n        return new CollectionGroupDetailsResponse(r);\n    }\n\n    async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollectionUsers(organizationId: string, id: string): Promise<SelectionReadOnlyResponse[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            null, true, true);\n        return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n    }\n\n    async postCollection(organizationId: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/collections', request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollection(organizationId: string, id: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id,\n            request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollectionUsers(organizationId: string, id: string, request: SelectionReadOnlyRequest[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            request, true, false);\n    }\n\n    deleteCollection(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/collections/' + id, null, true, false);\n    }\n\n    deleteCollectionUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/collections/' + id + '/user/' + organizationUserId,\n            null, true, false);\n    }\n\n    // Groups APIs\n\n    async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/details',\n            null, true, true);\n        return new GroupDetailsResponse(r);\n    }\n\n    async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups', null, true, true);\n        return new ListResponse(r, GroupResponse);\n    }\n\n    async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/users',\n            null, true, true);\n        return r;\n    }\n\n    async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/groups', request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroup(organizationId: string, id: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id, request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id + '/users', request, true, false);\n    }\n\n    deleteGroup(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/groups/' + id, null, true, false);\n    }\n\n    deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/groups/' + id + '/user/' + organizationUserId, null, true, false);\n    }\n\n    // Policy APIs\n\n    async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/' + type, null, true, true);\n        return new PolicyResponse(r);\n    }\n\n    async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies', null, true, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    async getPoliciesByToken(organizationId: string, token: string, email: string, organizationUserId: string):\n        Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/token?' +\n            'token=' + encodeURIComponent(token) + '&email=' + encodeURIComponent(email) +\n            '&organizationUserId=' + organizationUserId, null, false, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<PolicyResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/policies/' + type, request, true, true);\n        return new PolicyResponse(r);\n    }\n\n    // Organization User APIs\n\n    async getOrganizationUser(organizationId: string, id: string): Promise<OrganizationUserDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id, null, true, true);\n        return new OrganizationUserDetailsResponse(r);\n    }\n\n    async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id + '/groups',\n            null, true, true);\n        return r;\n    }\n\n    async getOrganizationUsers(organizationId: string): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users', null, true, true);\n        return new ListResponse(r, OrganizationUserUserDetailsResponse);\n    }\n\n    async getOrganizationUserResetPasswordDetails(organizationId: string, id: string):\n        Promise<OrganizationUserResetPasswordDetailsReponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id +\n            '/reset-password-details', null, true, true);\n        return new OrganizationUserResetPasswordDetailsReponse(r);\n    }\n\n    postOrganizationUserInvite(organizationId: string, request: OrganizationUserInviteRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/invite', request, true, false);\n    }\n\n    postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/reinvite', null, true, false);\n    }\n\n    async postManyOrganizationUserReinvite(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/users/reinvite', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    postOrganizationUserAccept(organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/accept', request, true, false);\n    }\n\n    postOrganizationUserConfirm(organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/confirm',\n            request, true, false);\n    }\n\n    async postOrganizationUsersPublicKey(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/users/public-keys', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n    }\n\n    async postOrganizationUserBulkConfirm(organizationId: string, request: OrganizationUserBulkConfirmRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/users/confirm', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    putOrganizationUser(organizationId: string, id: string, request: OrganizationUserUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id, request, true, false);\n    }\n\n    putOrganizationUserGroups(organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/groups', request, true, false);\n    }\n\n    putOrganizationUserResetPasswordEnrollment(organizationId: string, userId: string,\n        request: OrganizationUserResetPasswordEnrollmentRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + userId + '/reset-password-enrollment',\n            request, true, false);\n    }\n\n    putOrganizationUserResetPassword(organizationId: string, id: string,\n        request: OrganizationUserResetPasswordRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/reset-password',\n            request, true, false);\n    }\n\n    deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/users/' + id, null, true, false);\n    }\n\n    async deleteManyOrganizationUsers(organizationId: string, request: OrganizationUserBulkRequest): Promise<ListResponse<OrganizationUserBulkResponse>> {\n        const r = await this.send('DELETE', '/organizations/' + organizationId + '/users', request, true, true);\n        return new ListResponse(r, OrganizationUserBulkResponse);\n    }\n\n    // Plan APIs\n\n    async getPlans(): Promise<ListResponse<PlanResponse>> {\n        const r = await this.send('GET', '/plans/', null, true, true);\n        return new ListResponse(r, PlanResponse);\n    }\n\n    async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/import', request, true, false);\n    }\n\n    async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n        return this.send('POST', '/public/organization/import', request, true, false);\n    }\n\n    async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n        const r = await this.send('GET', '/plans/sales-tax-rates/', null, true, true);\n        return new ListResponse(r, TaxRateResponse);\n    }\n\n    // Settings APIs\n\n    async getSettingsDomains(): Promise<DomainsResponse> {\n        const r = await this.send('GET', '/settings/domains', null, true, true);\n        return new DomainsResponse(r);\n    }\n\n    async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n        const r = await this.send('PUT', '/settings/domains', request, true, true);\n        return new DomainsResponse(r);\n    }\n\n    // Sync APIs\n\n    async getSync(): Promise<SyncResponse> {\n        const path = this.isDesktopClient || this.isWebClient ? '/sync?excludeDomains=true' : '/sync';\n        const r = await this.send('GET', path, null, true, true);\n        return new SyncResponse(r);\n    }\n\n    // Two-factor APIs\n\n    async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorOrganizationProviders(organizationId: string): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorAuthenticator(request: PasswordVerificationRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('POST', '/two-factor/get-authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async getTwoFactorEmail(request: PasswordVerificationRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('POST', '/two-factor/get-email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async getTwoFactorDuo(request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/two-factor/get-duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorOrganizationDuo(organizationId: string,\n        request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/two-factor/get-duo',\n            request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorYubiKey(request: PasswordVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('POST', '/two-factor/get-yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async getTwoFactorWebAuthn(request: PasswordVerificationRequest): Promise<TwoFactorWebAuthnResponse> {\n        const r = await this.send('POST', '/two-factor/get-webauthn', request, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async getTwoFactorWebAuthnChallenge(request: PasswordVerificationRequest): Promise<ChallengeResponse> {\n        const r = await this.send('POST', '/two-factor/get-webauthn-challenge', request, true, true);\n        return new ChallengeResponse(r);\n    }\n\n    async getTwoFactorRecover(request: PasswordVerificationRequest): Promise<TwoFactorRecoverResponse> {\n        const r = await this.send('POST', '/two-factor/get-recover', request, true, true);\n        return new TwoFactorRecoverResponse(r);\n    }\n\n    async putTwoFactorAuthenticator(\n        request: UpdateTwoFactorAuthenticatorRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('PUT', '/two-factor/authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('PUT', '/two-factor/email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorOrganizationDuo(organizationId: string,\n        request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorYubiKey(request: UpdateTwoFactorYubioOtpRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('PUT', '/two-factor/yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async putTwoFactorWebAuthn(request: UpdateTwoFactorWebAuthnRequest): Promise<TwoFactorWebAuthnResponse> {\n        const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n        const data: any = Object.assign({}, request);\n\n        data.deviceResponse = {\n            id: request.deviceResponse.id,\n            rawId: btoa(request.deviceResponse.id),\n            type: request.deviceResponse.type,\n            extensions: request.deviceResponse.getClientExtensionResults(),\n            response: {\n                AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n                clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n            },\n        };\n\n        const r = await this.send('PUT', '/two-factor/webauthn', data, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async deleteTwoFactorWebAuthn(request: UpdateTwoFactorWebAuthnDeleteRequest): Promise<TwoFactorWebAuthnResponse> {\n        const r = await this.send('DELETE', '/two-factor/webauthn', request, true, true);\n        return new TwoFactorWebAuthnResponse(r);\n    }\n\n    async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/two-factor/disable', request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    async putTwoFactorOrganizationDisable(organizationId: string,\n        request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/disable',\n            request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n        return this.send('POST', '/two-factor/recover', request, false, false);\n    }\n\n    postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email', request, true, false);\n    }\n\n    postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email-login', request, false, false);\n    }\n\n    // Emergency Access APIs\n\n    async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n        const r = await this.send('GET', '/emergency-access/trusted', null, true, true);\n        return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n    }\n\n    async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n        const r = await this.send('GET', '/emergency-access/granted', null, true, true);\n        return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n    }\n\n    async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n        const r = await this.send('GET', '/emergency-access/' + id, null, true, true);\n        return new EmergencyAccessGranteeDetailsResponse(r);\n    }\n\n    async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/emergency-access/' + id + '/policies', null, true, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n        return this.send('PUT', '/emergency-access/' + id, request, true, false);\n    }\n\n    deleteEmergencyAccess(id: string): Promise<any> {\n        return this.send('DELETE', '/emergency-access/' + id, null, true, false);\n    }\n\n    postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/invite', request, true, false);\n    }\n\n    postEmergencyAccessReinvite(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/reinvite', null, true, false);\n    }\n\n    postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/accept', request, true, false);\n    }\n\n    postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/confirm', request, true, false);\n    }\n\n    postEmergencyAccessInitiate(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/initiate', null, true, false);\n    }\n\n    postEmergencyAccessApprove(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/approve', null, true, false);\n    }\n\n    postEmergencyAccessReject(id: string): Promise<any> {\n        return this.send('POST', '/emergency-access/' + id + '/reject', null, true, false);\n    }\n\n    async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/takeover', null, true, true);\n        return new EmergencyAccessTakeoverResponse(r);\n    }\n\n    async postEmergencyAccessPassword(id: string, request: EmergencyAccessPasswordRequest): Promise<any> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/password', request, true, true);\n    }\n\n    async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n        const r = await this.send('POST', '/emergency-access/' + id + '/view', null, true, true);\n        return new EmergencyAccessViewResponse(r);\n    }\n\n    // Organization APIs\n\n    async getOrganization(id: string): Promise<OrganizationResponse> {\n        const r = await this.send('GET', '/organizations/' + id, null, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async getOrganizationBilling(id: string): Promise<BillingResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/subscription', null, true, true);\n        return new OrganizationSubscriptionResponse(r);\n    }\n\n    async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n        return this.send('GET', '/organizations/' + id + '/license?installationId=' + installationId,\n            null, true, true);\n    }\n\n    async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/tax', null, true, true);\n        return new TaxInfoResponse(r);\n    }\n\n    async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations', request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganization(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('PUT', '/organizations/' + id, request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganizationTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + id + '/tax', request, true, false);\n    }\n\n    postLeaveOrganization(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/leave', null, true, false);\n    }\n\n    async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations/license', data, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/license', data, true, false);\n    }\n\n    async postOrganizationApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationRotateApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/rotate-api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationUpgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/upgrade', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/seat', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/payment', request, true, false);\n    }\n\n    postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/verify-bank', request, true, false);\n    }\n\n    postOrganizationCancel(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/cancel', null, true, false);\n    }\n\n    postOrganizationReinstate(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/reinstate', null, true, false);\n    }\n\n    deleteOrganization(id: string, request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/organizations/' + id, request, true, false);\n    }\n\n    async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/keys', null, true, true);\n        return new OrganizationKeysResponse(r);\n    }\n\n    async postOrganizationKeys(id: string, request: OrganizationKeysRequest): Promise<OrganizationKeysResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/keys', request, true, true);\n        return new OrganizationKeysResponse(r);\n    }\n\n    // Provider APIs\n\n    async postProviderSetup(id: string, request: ProviderSetupRequest) {\n        const r = await this.send('POST', '/providers/' + id + '/setup', request, true, true);\n        return new ProviderResponse(r);\n    }\n\n    async getProvider(id: string) {\n        const r = await this.send('GET', '/providers/' + id, null, true, true);\n        return new ProviderResponse(r);\n    }\n\n    async putProvider(id: string, request: ProviderUpdateRequest) {\n        const r = await this.send('PUT', '/providers/' + id, request, true, true);\n        return new ProviderResponse(r);\n    }\n\n    // Provider User APIs\n\n    async getProviderUsers(providerId: string): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n        const r = await this.send('GET', '/providers/' + providerId + '/users', null, true, true);\n        return new ListResponse(r, ProviderUserUserDetailsResponse);\n    }\n\n    async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n        const r = await this.send('GET', '/providers/' + providerId + '/users/' + id, null, true, true);\n        return new ProviderUserResponse(r);\n    }\n\n    postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/invite', request, true, false);\n    }\n\n    postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/' + id + '/reinvite', null, true, false);\n    }\n\n    async postManyProviderUserReinvite(providerId: string, request: ProviderUserBulkRequest): Promise<ListResponse<ProviderUserBulkResponse>> {\n        const r = await this.send('POST', '/providers/' + providerId + '/users/reinvite', request, true, true);\n        return new ListResponse(r, ProviderUserBulkResponse);\n    }\n\n    async postProviderUserBulkConfirm(providerId: string, request: ProviderUserBulkConfirmRequest): Promise<ListResponse<ProviderUserBulkResponse>> {\n        const r = await this.send('POST', '/providers/' + providerId + '/users/confirm', request, true, true);\n        return new ListResponse(r, ProviderUserBulkResponse);\n    }\n\n    async deleteManyProviderUsers(providerId: string, request: ProviderUserBulkRequest): Promise<ListResponse<ProviderUserBulkResponse>> {\n        const r = await this.send('DELETE', '/providers/' + providerId + '/users', request, true, true);\n        return new ListResponse(r, ProviderUserBulkResponse);\n    }\n\n    postProviderUserAccept(providerId: string, id: string, request: ProviderUserAcceptRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/' + id + '/accept', request, true, false);\n    }\n\n    postProviderUserConfirm(providerId: string, id: string, request: ProviderUserConfirmRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/users/' + id + '/confirm',\n            request, true, false);\n    }\n\n    async postProviderUsersPublicKey(providerId: string, request: ProviderUserBulkRequest): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n        const r = await this.send('POST', '/providers/' + providerId + '/users/public-keys', request, true, true);\n        return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n    }\n\n\n    putProviderUser(providerId: string, id: string, request: ProviderUserUpdateRequest): Promise<any> {\n        return this.send('PUT', '/providers/' + providerId + '/users/' + id, request, true, false);\n    }\n\n    deleteProviderUser(providerId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/providers/' + providerId + '/users/' + id, null, true, false);\n    }\n\n    // Provider Organization APIs\n\n    async getProviderClients(providerId: string): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n        const r = await this.send('GET', '/providers/' + providerId + '/organizations', null, true, true);\n        return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n    }\n\n    postProviderAddOrganization(providerId: string, request: ProviderAddOrganizationRequest): Promise<any> {\n        return this.send('POST', '/providers/' + providerId + '/organizations/add', request, true, false);\n    }\n\n    async postProviderCreateOrganization(providerId: string, request: ProviderOrganizationCreateRequest): Promise<ProviderOrganizationResponse> {\n        const r = await this.send('POST', '/providers/' + providerId + '/organizations', request, true, true);\n        return new ProviderOrganizationResponse(r);\n    }\n\n    deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/providers/' + providerId + '/organizations/' + id, null, true, false);\n    }\n\n    // Event APIs\n\n    async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/events', start, end, token), null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsCipher(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/ciphers/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganization(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/organizations/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganizationUser(organizationId: string, id: string,\n        start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET',\n            this.addEventParameters('/organizations/' + organizationId + '/users/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsProvider(id: string, start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/providers/' + id + '/events', start, end, token), null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsProviderUser(providerId: string, id: string,\n        start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET',\n            this.addEventParameters('/providers/' + providerId + '/users/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async postEventsCollect(request: EventRequest[]): Promise<any> {\n        const authHeader = await this.getActiveBearerToken();\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n            'Authorization': 'Bearer ' + authHeader,\n            'Content-Type': 'application/json; charset=utf-8',\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n        const response = await this.fetch(new Request(this.environmentService.getEventsUrl() + '/collect', {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            method: 'POST',\n            body: JSON.stringify(request),\n            headers: headers,\n        }));\n        if (response.status !== 200) {\n            return Promise.reject('Event post failed.');\n        }\n    }\n\n    // User APIs\n\n    async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n        const r = await this.send('GET', '/users/' + id + '/public-key', null, true, true);\n        return new UserKeyResponse(r);\n    }\n\n    // HIBP APIs\n\n    async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n        const r = await this.send('GET', '/hibp/breach?username=' + username, null, true, true);\n        return r.map((a: any) => new BreachAccountResponse(a));\n    }\n\n    // Misc\n\n    async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n        const r = await this.send('POST', '/bitpay-invoice', request, true, true);\n        return r as string;\n    }\n\n    async postSetupPayment(): Promise<string> {\n        const r = await this.send('POST', '/setup-payment', null, true, true);\n        return r as string;\n    }\n\n    // Helpers\n\n    async getActiveBearerToken(): Promise<string> {\n        let accessToken = await this.tokenService.getToken();\n        if (this.tokenService.tokenNeedsRefresh()) {\n            await this.doAuthRefresh();\n            accessToken = await this.tokenService.getToken();\n        }\n        return accessToken;\n    }\n\n    fetch(request: Request): Promise<Response> {\n        if (request.method === 'GET') {\n            request.headers.set('Cache-Control', 'no-store');\n            request.headers.set('Pragma', 'no-cache');\n        }\n        return this.nativeFetch(request);\n    }\n\n    nativeFetch(request: Request): Promise<Response> {\n        return fetch(request);\n    }\n\n    async preValidateSso(identifier: string): Promise<boolean> {\n        if (identifier == null || identifier === '') {\n            throw new Error('Organization Identifier was not provided.');\n        }\n        const headers = new Headers({\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n        const response = await this.fetch(new Request(this.environmentService.getIdentityUrl() + path, {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            headers: headers,\n            method: 'GET',\n        }));\n\n        if (response.status === 200) {\n            return true;\n        } else {\n            const error = await this.handleError(response, false, true);\n            return Promise.reject(error);\n        }\n    }\n\n    protected async doAuthRefresh(): Promise<void> {\n        const refreshToken = await this.tokenService.getRefreshToken();\n        if (refreshToken != null && refreshToken !== '') {\n            return this.doRefreshToken();\n        }\n\n        const clientId = await this.tokenService.getClientId();\n        const clientSecret = await this.tokenService.getClientSecret();\n        if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n            return this.doApiTokenRefresh();\n        }\n\n        throw new Error('Cannot refresh token, no refresh token or api keys are stored');\n    }\n\n    protected async doApiTokenRefresh(): Promise<void> {\n        const clientId = await this.tokenService.getClientId();\n        const clientSecret = await this.tokenService.getClientSecret();\n        if (Utils.isNullOrWhitespace(clientId) || Utils.isNullOrWhitespace(clientSecret) || this.apiKeyRefresh == null) {\n            throw new Error();\n        }\n\n        await this.apiKeyRefresh(clientId, clientSecret);\n    }\n\n    protected async doRefreshToken(): Promise<void> {\n        const refreshToken = await this.tokenService.getRefreshToken();\n        if (refreshToken == null || refreshToken === '') {\n            throw new Error();\n        }\n        const headers = new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const decodedToken = this.tokenService.decodeToken();\n        const response = await this.fetch(new Request(this.environmentService.getIdentityUrl() + '/connect/token', {\n            body: this.qsStringify({\n                grant_type: 'refresh_token',\n                client_id: decodedToken.client_id,\n                refresh_token: refreshToken,\n            }),\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            headers: headers,\n            method: 'POST',\n        }));\n\n        if (response.status === 200) {\n            const responseJson = await response.json();\n            const tokenResponse = new IdentityTokenResponse(responseJson);\n            await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken, null);\n        } else {\n            const error = await this.handleError(response, true, true);\n            return Promise.reject(error);\n        }\n    }\n\n    private async send(method: 'GET' | 'POST' | 'PUT' | 'DELETE', path: string, body: any,\n        authed: boolean, hasResponse: boolean, apiUrl?: string,\n        alterHeaders?: (headers: Headers) => void): Promise<any> {\n        apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const requestInit: RequestInit = {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            method: method,\n        };\n\n        if (authed) {\n            const authHeader = await this.getActiveBearerToken();\n            headers.set('Authorization', 'Bearer ' + authHeader);\n        }\n        if (body != null) {\n            if (typeof body === 'string') {\n                requestInit.body = body;\n                headers.set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n            } else if (typeof body === 'object') {\n                if (body instanceof FormData) {\n                    requestInit.body = body;\n                } else {\n                    headers.set('Content-Type', 'application/json; charset=utf-8');\n                    requestInit.body = JSON.stringify(body);\n                }\n            }\n        }\n        if (hasResponse) {\n            headers.set('Accept', 'application/json');\n        }\n        if (alterHeaders != null) {\n            alterHeaders(headers);\n        }\n\n        requestInit.headers = headers;\n        const response = await this.fetch(new Request(apiUrl + path, requestInit));\n\n        if (hasResponse && response.status === 200) {\n            const responseJson = await response.json();\n            return responseJson;\n        } else if (response.status !== 200) {\n            const error = await this.handleError(response, false, authed);\n            return Promise.reject(error);\n        }\n    }\n\n    private async handleError(response: Response, tokenError: boolean, authed: boolean): Promise<ErrorResponse> {\n        if (authed && ((tokenError && response.status === 400) || response.status === 401 || response.status === 403)) {\n            await this.logoutCallback(true);\n            return null;\n        }\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        } else if (this.isTextResponse(response)) {\n            responseJson = { Message: await response.text() };\n        }\n\n        return new ErrorResponse(responseJson, response.status, tokenError);\n    }\n\n    private qsStringify(params: any): string {\n        return Object.keys(params).map(key => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n        }).join('&');\n    }\n\n    private getCredentials(): RequestCredentials {\n        if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n            return 'include';\n        }\n        return undefined;\n    }\n\n    private addEventParameters(base: string, start: string, end: string, token: string) {\n        if (start != null) {\n            base += ('?start=' + start);\n        }\n        if (end != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('end=' + end);\n        }\n        if (token != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('continuationToken=' + token);\n        }\n        return base;\n    }\n\n    private isJsonResponse(response: Response): boolean {\n        const typeHeader = response.headers.get('content-type');\n        return typeHeader != null && typeHeader.indexOf('application/json') > -1;\n    }\n\n    private isTextResponse(response: Response): boolean {\n        const typeHeader = response.headers.get('content-type');\n        return typeHeader != null && typeHeader.indexOf('text') > -1;\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { PlanResponse } from './planResponse';\n\nimport { PlanType } from '../../enums/planType';\n\nexport class OrganizationResponse extends BaseResponse {\n    id: string;\n    identifier: string;\n    name: string;\n    businessName: string;\n    businessAddress1: string;\n    businessAddress2: string;\n    businessAddress3: string;\n    businessCountry: string;\n    businessTaxNumber: string;\n    billingEmail: string;\n    plan: PlanResponse;\n    planType: PlanType;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb: number;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useResetPassword: boolean;\n    hasPublicAndPrivateKeys: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.name = this.getResponseProperty('Name');\n        this.businessName = this.getResponseProperty('BusinessName');\n        this.businessAddress1 = this.getResponseProperty('BusinessAddress1');\n        this.businessAddress2 = this.getResponseProperty('BusinessAddress2');\n        this.businessAddress3 = this.getResponseProperty('BusinessAddress3');\n        this.businessCountry = this.getResponseProperty('BusinessCountry');\n        this.businessTaxNumber = this.getResponseProperty('BusinessTaxNumber');\n        this.billingEmail = this.getResponseProperty('BillingEmail');\n        const plan = this.getResponseProperty('Plan');\n        this.plan = plan == null ? null : new PlanResponse(plan);\n        this.planType = this.getResponseProperty('PlanType');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.useResetPassword = this.getResponseProperty('UseResetPassword');\n        this.hasPublicAndPrivateKeys = this.getResponseProperty('HasPublicAndPrivateKeys');\n    }\n}\n","import { PlanType } from '../../enums/planType';\nimport { ProductType } from '../../enums/productType';\n\nimport { BaseResponse } from './baseResponse';\n\nexport class PlanResponse extends BaseResponse {\n    type: PlanType;\n    product: ProductType;\n    name: string;\n    isAnnual: boolean;\n    nameLocalizationKey: string;\n    descriptionLocalizationKey: string;\n    canBeUsedByBusiness: boolean;\n    baseSeats: number;\n    baseStorageGb: number;\n    maxCollections: number;\n    maxUsers: number;\n\n    hasAdditionalSeatsOption: boolean;\n    maxAdditionalSeats: number;\n    hasAdditionalStorageOption: boolean;\n    maxAdditionalStorage: number;\n    hasPremiumAccessOption: boolean;\n    trialPeriodDays: number;\n\n    hasSelfHost: boolean;\n    hasPolicies: boolean;\n    hasGroups: boolean;\n    hasDirectory: boolean;\n    hasEvents: boolean;\n    hasTotp: boolean;\n    has2fa: boolean;\n    hasApi: boolean;\n    hasSso: boolean;\n    hasResetPassword: boolean;\n    usersGetPremium: boolean;\n\n    upgradeSortOrder: number;\n    displaySortOrder: number;\n    legacyYear: number;\n    disabled: boolean;\n\n    stripePlanId: string;\n    stripeSeatPlanId: string;\n    stripeStoragePlanId: string;\n    stripePremiumAccessPlanId: string;\n    basePrice: number;\n    seatPrice: number;\n    additionalStoragePricePerGb: number;\n    premiumAccessOptionPrice: number;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.product = this.getResponseProperty('Product');\n        this.name = this.getResponseProperty('Name');\n        this.isAnnual = this.getResponseProperty('IsAnnual');\n        this.nameLocalizationKey = this.getResponseProperty('NameLocalizationKey');\n        this.descriptionLocalizationKey = this.getResponseProperty('DescriptionLocalizationKey');\n        this.canBeUsedByBusiness = this.getResponseProperty('CanBeUsedByBusiness');\n        this.baseSeats = this.getResponseProperty('BaseSeats');\n        this.baseStorageGb = this.getResponseProperty('BaseStorageGb');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxUsers = this.getResponseProperty('MaxUsers');\n        this.hasAdditionalSeatsOption = this.getResponseProperty('HasAdditionalSeatsOption');\n        this.maxAdditionalSeats = this.getResponseProperty('MaxAdditionalSeats');\n        this.hasAdditionalStorageOption = this.getResponseProperty('HasAdditionalStorageOption');\n        this.maxAdditionalStorage = this.getResponseProperty('MaxAdditionalStorage');\n        this.hasPremiumAccessOption = this.getResponseProperty('HasPremiumAccessOption');\n        this.trialPeriodDays = this.getResponseProperty('TrialPeriodDays');\n        this.hasSelfHost = this.getResponseProperty('HasSelfHost');\n        this.hasPolicies = this.getResponseProperty('HasPolicies');\n        this.hasGroups = this.getResponseProperty('HasGroups');\n        this.hasDirectory = this.getResponseProperty('HasDirectory');\n        this.hasEvents = this.getResponseProperty('HasEvents');\n        this.hasTotp = this.getResponseProperty('HasTotp');\n        this.has2fa = this.getResponseProperty('Has2fa');\n        this.hasApi = this.getResponseProperty('HasApi');\n        this.hasSso = this.getResponseProperty('HasSso');\n        this.hasResetPassword = this.getResponseProperty('HasResetPassword');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.upgradeSortOrder = this.getResponseProperty('UpgradeSortOrder');\n        this.displaySortOrder = this.getResponseProperty('SortOrder');\n        this.legacyYear = this.getResponseProperty('LegacyYear');\n        this.disabled = this.getResponseProperty('Disabled');\n        this.stripePlanId = this.getResponseProperty('StripePlanId');\n        this.stripeSeatPlanId = this.getResponseProperty('StripeSeatPlanId');\n        this.stripeStoragePlanId = this.getResponseProperty('StripeStoragePlanId');\n        this.stripePremiumAccessPlanId = this.getResponseProperty('StripePremiumAccessPlanId');\n        this.basePrice = this.getResponseProperty('BasePrice');\n        this.seatPrice = this.getResponseProperty('SeatPrice');\n        this.additionalStoragePricePerGb = this.getResponseProperty('AdditionalStoragePricePerGb');\n        this.premiumAccessOptionPrice = this.getResponseProperty('PremiumAccessOptionPrice');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SubscriptionResponse extends BaseResponse {\n    storageName: string;\n    storageGb: number;\n    maxStorageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    license: any;\n    expiration: string;\n    usingInAppPurchase: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.license = this.getResponseProperty('License');\n        this.expiration = this.getResponseProperty('Expiration');\n        this.usingInAppPurchase = this.getResponseProperty('UsingInAppPurchase');\n        const subscription = this.getResponseProperty('Subscription');\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n    trialStartDate: string;\n    trialEndDate: string;\n    periodStartDate: string;\n    periodEndDate: string;\n    cancelledDate: string;\n    cancelAtEndDate: boolean;\n    status: string;\n    cancelled: boolean;\n    items: BillingSubscriptionItemResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.trialEndDate = this.getResponseProperty('TrialStartDate');\n        this.trialEndDate = this.getResponseProperty('TrialEndDate');\n        this.periodStartDate = this.getResponseProperty('PeriodStartDate');\n        this.periodEndDate = this.getResponseProperty('PeriodEndDate');\n        this.cancelledDate = this.getResponseProperty('CancelledDate');\n        this.cancelAtEndDate = this.getResponseProperty('CancelAtEndDate');\n        this.status = this.getResponseProperty('Status');\n        this.cancelled = this.getResponseProperty('Cancelled');\n        const items = this.getResponseProperty('Items');\n        if (items != null) {\n            this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n        }\n    }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n    name: string;\n    amount: number;\n    quantity: number;\n    interval: string;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.amount = this.getResponseProperty('Amount');\n        this.quantity = this.getResponseProperty('Quantity');\n        this.interval = this.getResponseProperty('Interval');\n    }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    key: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.key = this.getResponseProperty('Key');\n    }\n}\n","import { Utils } from '../../misc/utils';\nimport { BaseResponse } from './baseResponse';\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n    enabled: boolean;\n    keys: KeyResponse[];\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        const keys = this.getResponseProperty('Keys');\n        this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n    }\n}\n\nexport class KeyResponse extends BaseResponse {\n    name: string;\n    id: number;\n    migrated: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.id = this.getResponseProperty('Id');\n        this.migrated = this.getResponseProperty('Migrated');\n    }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n    attestation?: AttestationConveyancePreference;\n    authenticatorSelection?: AuthenticatorSelectionCriteria;\n    challenge: BufferSource;\n    excludeCredentials?: PublicKeyCredentialDescriptor[];\n    extensions?: AuthenticationExtensionsClientInputs;\n    pubKeyCredParams: PublicKeyCredentialParameters[];\n    rp: PublicKeyCredentialRpEntity;\n    timeout?: number;\n    user: PublicKeyCredentialUserEntity;\n\n    constructor(response: any) {\n        super(response);\n        this.attestation = this.getResponseProperty('attestation');\n        this.authenticatorSelection = this.getResponseProperty('authenticatorSelection');\n        this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty('challenge'));\n        this.excludeCredentials = this.getResponseProperty('excludeCredentials').map((c: any) => {\n            c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n            return c;\n        });\n        this.extensions = this.getResponseProperty('extensions');\n        this.pubKeyCredParams = this.getResponseProperty('pubKeyCredParams');\n        this.rp = this.getResponseProperty('rp');\n        this.timeout = this.getResponseProperty('timeout');\n\n        const user = this.getResponseProperty('user');\n        user.id = Utils.fromUrlB64ToArray(user.id);\n\n        this.user = user;\n    }\n}\n","import { Utils } from '../misc/utils';\n\nimport { AppIdService as AppIdServiceAbstraction } from '../abstractions/appId.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class AppIdService implements AppIdServiceAbstraction {\n    constructor(private storageService: StorageService) {\n    }\n\n    getAppId(): Promise<string> {\n        return this.makeAndGetAppId('appId');\n    }\n\n    getAnonymousAppId(): Promise<string> {\n        return this.makeAndGetAppId('anonymousAppId');\n    }\n\n    private async makeAndGetAppId(key: string) {\n        const existingId = await this.storageService.get<string>(key);\n        if (existingId != null) {\n            return existingId;\n        }\n\n        const guid = Utils.newGuid();\n        await this.storageService.save(key, guid);\n        return guid;\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { AuditService as AuditServiceAbstraction } from '../abstractions/audit.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\n\nimport { throttle } from '../misc/throttle';\nimport { Utils } from '../misc/utils';\n\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nconst PwnedPasswordsApi = 'https://api.pwnedpasswords.com/range/';\n\nexport class AuditService implements AuditServiceAbstraction {\n    constructor(private cryptoFunctionService: CryptoFunctionService, private apiService: ApiService) { }\n\n    @throttle(100, () => 'passwordLeaked')\n    async passwordLeaked(password: string): Promise<number> {\n        const hashBytes = await this.cryptoFunctionService.hash(password, 'sha1');\n        const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n        const hashStart = hash.substr(0, 5);\n        const hashEnding = hash.substr(5);\n\n        const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n        const leakedHashes = await response.text();\n        const match = leakedHashes.split(/\\r?\\n/).find(v => {\n            return v.split(':')[0] === hashEnding;\n        });\n\n        return match != null ? parseInt(match.split(':')[1], 10) : 0;\n    }\n\n    async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n        try {\n            return await this.apiService.getHibpBreach(username);\n        } catch (e) {\n            const error = e as ErrorResponse;\n            if (error.statusCode === 404) {\n                return [];\n            }\n            throw new Error();\n        }\n    }\n}\n","import { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Attachment } from '../models/domain/attachment';\nimport { Card } from '../models/domain/card';\nimport { Cipher } from '../models/domain/cipher';\nimport Domain from '../models/domain/domainBase';\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { Field } from '../models/domain/field';\nimport { Identity } from '../models/domain/identity';\nimport { Login } from '../models/domain/login';\nimport { LoginUri } from '../models/domain/loginUri';\nimport { Password } from '../models/domain/password';\nimport { SecureNote } from '../models/domain/secureNote';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { AttachmentRequest } from '../models/request/attachmentRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nimport { AttachmentView } from '../models/view/attachmentView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\nimport { PasswordHistoryView } from '../models/view/passwordHistoryView';\nimport { View } from '../models/view/view';\n\nimport { SortedCiphersCache } from '../models/domain/sortedCiphersCache';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService as CipherServiceAbstraction } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FileUploadService } from '../abstractions/fileUpload.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    ciphersPrefix: 'ciphers_',\n    localData: 'sitesLocalData',\n    neverDomains: 'neverDomains',\n};\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n    ['google.com', new Set(['script.google.com'])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n    // tslint:disable-next-line\n    _decryptedCipherCache: CipherView[];\n\n    private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(this.sortCiphersByLastUsed);\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private settingsService: SettingsService, private apiService: ApiService,\n        private fileUploadService: FileUploadService, private storageService: StorageService,\n        private i18nService: I18nService, private searchService: () => SearchService) {\n    }\n\n    get decryptedCipherCache() {\n        return this._decryptedCipherCache;\n    }\n    set decryptedCipherCache(value: CipherView[]) {\n        this._decryptedCipherCache = value;\n        if (this.searchService != null) {\n            if (value == null) {\n                this.searchService().clearIndex();\n            } else {\n                this.searchService().indexCiphers();\n            }\n        }\n    }\n\n    clearCache(): void {\n        this.decryptedCipherCache = null;\n        this.sortedCiphersCache.clear();\n    }\n\n    async encrypt(model: CipherView, key?: SymmetricCryptoKey, originalCipher: Cipher = null): Promise<Cipher> {\n        // Adjust password history\n        if (model.id != null) {\n            if (originalCipher == null) {\n                originalCipher = await this.get(model.id);\n            }\n            if (originalCipher != null) {\n                const existingCipher = await originalCipher.decrypt();\n                model.passwordHistory = existingCipher.passwordHistory || [];\n                if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n                    if (existingCipher.login.password != null && existingCipher.login.password !== '' &&\n                        existingCipher.login.password !== model.login.password) {\n                        const ph = new PasswordHistoryView();\n                        ph.password = existingCipher.login.password;\n                        ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n                        model.passwordHistory.splice(0, 0, ph);\n                    } else {\n                        model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n                    }\n                }\n                if (existingCipher.hasFields) {\n                    const existingHiddenFields = existingCipher.fields.filter(f => f.type === FieldType.Hidden &&\n                        f.name != null && f.name !== '' && f.value != null && f.value !== '');\n                    const hiddenFields = model.fields == null ? [] :\n                        model.fields.filter(f => f.type === FieldType.Hidden && f.name != null && f.name !== '');\n                    existingHiddenFields.forEach(ef => {\n                        const matchedField = hiddenFields.find(f => f.name === ef.name);\n                        if (matchedField == null || matchedField.value !== ef.value) {\n                            const ph = new PasswordHistoryView();\n                            ph.password = ef.name + ': ' + ef.value;\n                            ph.lastUsedDate = new Date();\n                            model.passwordHistory.splice(0, 0, ph);\n                        }\n                    });\n                }\n            }\n            if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n                model.passwordHistory = null;\n            } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n                // only save last 5 history\n                model.passwordHistory = model.passwordHistory.slice(0, 5);\n            }\n        }\n\n        const cipher = new Cipher();\n        cipher.id = model.id;\n        cipher.folderId = model.folderId;\n        cipher.favorite = model.favorite;\n        cipher.organizationId = model.organizationId;\n        cipher.type = model.type;\n        cipher.collectionIds = model.collectionIds;\n        cipher.revisionDate = model.revisionDate;\n        cipher.reprompt = model.reprompt;\n\n        if (key == null && cipher.organizationId != null) {\n            key = await this.cryptoService.getOrgKey(cipher.organizationId);\n            if (key == null) {\n                throw new Error('Cannot encrypt cipher for organization. No key.');\n            }\n        }\n        await Promise.all([\n            this.encryptObjProperty(model, cipher, {\n                name: null,\n                notes: null,\n            }, key),\n            this.encryptCipherData(cipher, model, key),\n            this.encryptFields(model.fields, key).then(fields => {\n                cipher.fields = fields;\n            }),\n            this.encryptPasswordHistories(model.passwordHistory, key).then(ph => {\n                cipher.passwordHistory = ph;\n            }),\n            this.encryptAttachments(model.attachments, key).then(attachments => {\n                cipher.attachments = attachments;\n            }),\n        ]);\n\n        return cipher;\n    }\n\n    async encryptAttachments(attachmentsModel: AttachmentView[], key: SymmetricCryptoKey): Promise<Attachment[]> {\n        if (attachmentsModel == null || attachmentsModel.length === 0) {\n            return null;\n        }\n\n        const promises: Promise<any>[] = [];\n        const encAttachments: Attachment[] = [];\n        attachmentsModel.forEach(async model => {\n            const attachment = new Attachment();\n            attachment.id = model.id;\n            attachment.size = model.size;\n            attachment.sizeName = model.sizeName;\n            attachment.url = model.url;\n            const promise = this.encryptObjProperty(model, attachment, {\n                fileName: null,\n            }, key).then(async () => {\n                if (model.key != null) {\n                    attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n                }\n                encAttachments.push(attachment);\n            });\n            promises.push(promise);\n        });\n\n        await Promise.all(promises);\n        return encAttachments;\n    }\n\n    async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n        if (!fieldsModel || !fieldsModel.length) {\n            return null;\n        }\n\n        const self = this;\n        const encFields: Field[] = [];\n        await fieldsModel.reduce((promise, field) => {\n            return promise.then(() => {\n                return self.encryptField(field, key);\n            }).then((encField: Field) => {\n                encFields.push(encField);\n            });\n        }, Promise.resolve());\n\n        return encFields;\n    }\n\n    async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n        const field = new Field();\n        field.type = fieldModel.type;\n        // normalize boolean type field values\n        if (fieldModel.type === FieldType.Boolean && fieldModel.value !== 'true') {\n            fieldModel.value = 'false';\n        }\n\n        await this.encryptObjProperty(fieldModel, field, {\n            name: null,\n            value: null,\n        }, key);\n\n        return field;\n    }\n\n    async encryptPasswordHistories(phModels: PasswordHistoryView[], key: SymmetricCryptoKey): Promise<Password[]> {\n        if (!phModels || !phModels.length) {\n            return null;\n        }\n\n        const self = this;\n        const encPhs: Password[] = [];\n        await phModels.reduce((promise, ph) => {\n            return promise.then(() => {\n                return self.encryptPasswordHistory(ph, key);\n            }).then((encPh: Password) => {\n                encPhs.push(encPh);\n            });\n        }, Promise.resolve());\n\n        return encPhs;\n    }\n\n    async encryptPasswordHistory(phModel: PasswordHistoryView, key: SymmetricCryptoKey): Promise<Password> {\n        const ph = new Password();\n        ph.lastUsedDate = phModel.lastUsedDate;\n\n        await this.encryptObjProperty(phModel, ph, {\n            password: null,\n        }, key);\n\n        return ph;\n    }\n\n    async get(id: string): Promise<Cipher> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n    }\n\n    async getAll(): Promise<Cipher[]> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        const response: Cipher[] = [];\n        for (const id in ciphers) {\n            if (ciphers.hasOwnProperty(id)) {\n                response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n            }\n        }\n        return response;\n    }\n\n    @sequentialize(() => 'getAllDecrypted')\n    async getAllDecrypted(): Promise<CipherView[]> {\n        if (this.decryptedCipherCache != null) {\n            const userId = await this.userService.getUserId();\n            if (this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId)\n            {\n                await this.searchService().indexCiphers(userId, this.decryptedCipherCache);\n            }\n            return this.decryptedCipherCache;\n        }\n\n        const decCiphers: CipherView[] = [];\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const promises: any[] = [];\n        const ciphers = await this.getAll();\n        ciphers.forEach(cipher => {\n            promises.push(cipher.decrypt().then(c => decCiphers.push(c)));\n        });\n\n        await Promise.all(promises);\n        decCiphers.sort(this.getLocaleSortingFunction());\n        this.decryptedCipherCache = decCiphers;\n        return this.decryptedCipherCache;\n    }\n\n    async getAllDecryptedForGrouping(groupingId: string, folder: boolean = true): Promise<CipherView[]> {\n        const ciphers = await this.getAllDecrypted();\n\n        return ciphers.filter(cipher => {\n            if (cipher.isDeleted) {\n                return false;\n            }\n            if (folder && cipher.folderId === groupingId) {\n                return true;\n            } else if (!folder && cipher.collectionIds != null && cipher.collectionIds.indexOf(groupingId) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n\n    async getAllDecryptedForUrl(url: string, includeOtherTypes?: CipherType[],\n        defaultMatch: UriMatchType = null): Promise<CipherView[]> {\n        if (url == null && includeOtherTypes == null) {\n            return Promise.resolve([]);\n        }\n\n        const domain = Utils.getDomain(url);\n        const eqDomainsPromise = domain == null ? Promise.resolve([]) :\n            this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n                let matches: any[] = [];\n                eqDomains.forEach(eqDomain => {\n                    if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                        matches = matches.concat(eqDomain);\n                    }\n                });\n\n                if (!matches.length) {\n                    matches.push(domain);\n                }\n\n                return matches;\n            });\n\n        const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n        const matchingDomains = result[0];\n        const ciphers = result[1];\n\n        if (defaultMatch == null) {\n            defaultMatch = await this.storageService.get<UriMatchType>(ConstantsService.defaultUriMatch);\n            if (defaultMatch == null) {\n                defaultMatch = UriMatchType.Domain;\n            }\n        }\n\n        return ciphers.filter(cipher => {\n            if (cipher.deletedDate != null) {\n                return false;\n            }\n            if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n                return true;\n            }\n\n            if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n                for (let i = 0; i < cipher.login.uris.length; i++) {\n                    const u = cipher.login.uris[i];\n                    if (u.uri == null) {\n                        continue;\n                    }\n\n                    const match = u.match == null ? defaultMatch : u.match;\n                    switch (match) {\n                        case UriMatchType.Domain:\n                            if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                                if (DomainMatchBlacklist.has(u.domain)) {\n                                    const domainUrlHost = Utils.getHost(url);\n                                    if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                                        return true;\n                                    }\n                                } else {\n                                    return true;\n                                }\n                            }\n                            break;\n                        case UriMatchType.Host:\n                            const urlHost = Utils.getHost(url);\n                            if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.Exact:\n                            if (url === u.uri) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.StartsWith:\n                            if (url.startsWith(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.RegularExpression:\n                            try {\n                                const regex = new RegExp(u.uri, 'i');\n                                if (regex.test(url)) {\n                                    return true;\n                                }\n                            } catch { }\n                            break;\n                        case UriMatchType.Never:\n                        default:\n                            break;\n                    }\n                }\n            }\n\n            return false;\n        });\n    }\n\n    async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n        const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n        if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n            const decCiphers: CipherView[] = [];\n            const promises: any[] = [];\n            ciphers.data.forEach(r => {\n                const data = new CipherData(r);\n                const cipher = new Cipher(data);\n                promises.push(cipher.decrypt().then(c => decCiphers.push(c)));\n            });\n            await Promise.all(promises);\n            decCiphers.sort(this.getLocaleSortingFunction());\n            return decCiphers;\n        } else {\n            return [];\n        }\n    }\n\n    async getLastUsedForUrl(url: string, autofillOnPageLoad: boolean = false): Promise<CipherView> {\n        return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n    }\n\n    async getLastLaunchedForUrl(url: string, autofillOnPageLoad: boolean = false): Promise<CipherView> {\n        return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n    }\n\n    async getNextCipherForUrl(url: string): Promise<CipherView> {\n        return this.getCipherForUrl(url, false, false, false);\n    }\n\n    updateLastUsedIndexForUrl(url: string) {\n        this.sortedCiphersCache.updateLastUsedIndex(url);\n    }\n\n    async updateLastUsedDate(id: string): Promise<void> {\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\n        if (!ciphersLocalData) {\n            ciphersLocalData = {};\n        }\n\n        if (ciphersLocalData[id]) {\n            ciphersLocalData[id].lastUsedDate = new Date().getTime();\n        } else {\n            ciphersLocalData[id] = {\n                lastUsedDate: new Date().getTime(),\n            };\n        }\n\n        await this.storageService.save(Keys.localData, ciphersLocalData);\n\n        if (this.decryptedCipherCache == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\n            const cached = this.decryptedCipherCache[i];\n            if (cached.id === id) {\n                cached.localData = ciphersLocalData[id];\n                break;\n            }\n        }\n    }\n\n    async updateLastLaunchedDate(id: string): Promise<void> {\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\n        if (!ciphersLocalData) {\n            ciphersLocalData = {};\n        }\n\n        if (ciphersLocalData[id]) {\n            ciphersLocalData[id].lastLaunched = new Date().getTime();\n        } else {\n            ciphersLocalData[id] = {\n                lastUsedDate: new Date().getTime(),\n            };\n        }\n\n        await this.storageService.save(Keys.localData, ciphersLocalData);\n\n        if (this.decryptedCipherCache == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\n            const cached = this.decryptedCipherCache[i];\n            if (cached.id === id) {\n                cached.localData = ciphersLocalData[id];\n                break;\n            }\n        }\n    }\n\n    async saveNeverDomain(domain: string): Promise<void> {\n        if (domain == null) {\n            return;\n        }\n\n        let domains = await this.storageService.get<{ [id: string]: any; }>(Keys.neverDomains);\n        if (!domains) {\n            domains = {};\n        }\n        domains[domain] = null;\n        await this.storageService.save(Keys.neverDomains, domains);\n    }\n\n    async saveWithServer(cipher: Cipher): Promise<any> {\n        let response: CipherResponse;\n        if (cipher.id == null) {\n            if (cipher.collectionIds != null) {\n                const request = new CipherCreateRequest(cipher);\n                response = await this.apiService.postCipherCreate(request);\n            } else {\n                const request = new CipherRequest(cipher);\n                response = await this.apiService.postCipher(request);\n            }\n            cipher.id = response.id;\n        } else {\n            const request = new CipherRequest(cipher);\n            response = await this.apiService.putCipher(cipher.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, cipher.collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareWithServer(cipher: CipherView, organizationId: string, collectionIds: string[]): Promise<any> {\n        const attachmentPromises: Promise<any>[] = [];\n        if (cipher.attachments != null) {\n            cipher.attachments.forEach(attachment => {\n                if (attachment.key == null) {\n                    attachmentPromises.push(this.shareAttachmentWithServer(attachment, cipher.id, organizationId));\n                }\n            });\n        }\n        await Promise.all(attachmentPromises);\n\n        cipher.organizationId = organizationId;\n        cipher.collectionIds = collectionIds;\n        const encCipher = await this.encrypt(cipher);\n        const request = new CipherShareRequest(encCipher);\n        const response = await this.apiService.putShareCipher(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareManyWithServer(ciphers: CipherView[], organizationId: string, collectionIds: string[]): Promise<any> {\n        const promises: Promise<any>[] = [];\n        const encCiphers: Cipher[] = [];\n        for (const cipher of ciphers) {\n            cipher.organizationId = organizationId;\n            cipher.collectionIds = collectionIds;\n            promises.push(this.encrypt(cipher).then(c => {\n                encCiphers.push(c);\n            }));\n        }\n        await Promise.all(promises);\n        const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n        await this.apiService.putShareCiphers(request);\n        const userId = await this.userService.getUserId();\n        await this.upsert(encCiphers.map(c => c.toCipherData(userId)));\n    }\n\n    saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(unencryptedFile);\n            reader.onload = async (evt: any) => {\n                try {\n                    const cData = await this.saveAttachmentRawWithServer(cipher,\n                        unencryptedFile.name, evt.target.result, admin);\n                    resolve(cData);\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            reader.onerror = evt => {\n                reject('Error reading file.');\n            };\n        });\n    }\n\n    async saveAttachmentRawWithServer(cipher: Cipher, filename: string,\n        data: ArrayBuffer, admin = false): Promise<Cipher> {\n        const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n        const encFileName = await this.cryptoService.encrypt(filename, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n        const request: AttachmentRequest = {\n            key: dataEncKey[1].encryptedString,\n            fileName: encFileName.encryptedString,\n            fileSize: encData.buffer.byteLength,\n            adminRequest: admin,\n        };\n\n        let response: CipherResponse;\n        try {\n            const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n            response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n            await this.fileUploadService.uploadCipherAttachment(admin, uploadDataResponse, encFileName, encData);\n        } catch (e) {\n            if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404 || (e as ErrorResponse).statusCode === 405) {\n                response = await this.legacyServerAttachmentFileUpload(admin, cipher.id, encFileName, encData, dataEncKey[1]);\n            } else if (e instanceof ErrorResponse) {\n                throw new Error((e as ErrorResponse).getSingleMessage());\n            } else {\n                throw e;\n            }\n        }\n\n        const userId = await this.userService.getUserId();\n        const cData = new CipherData(response, userId, cipher.collectionIds);\n        if (!admin) {\n            await this.upsert(cData);\n        }\n        return new Cipher(cData);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async legacyServerAttachmentFileUpload(admin: boolean, cipherId: string, encFileName: EncString,\n        encData: EncArrayBuffer, key: EncString) {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData.buffer], { type: 'application/octet-stream' });\n            fd.append('key', key.encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', key.encryptedString);\n                fd.append('data', Buffer.from(encData.buffer) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        let response: CipherResponse;\n        try {\n            if (admin) {\n                response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n            } else {\n                response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n            }\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n\n        return response;\n    }\n\n    async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n        const request = new CipherCollectionsRequest(cipher.collectionIds);\n        await this.apiService.putCipherCollections(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = cipher.toCipherData(userId);\n        await this.upsert(data);\n    }\n\n    async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        if (cipher instanceof CipherData) {\n            const c = cipher as CipherData;\n            ciphers[c.id] = c;\n        } else {\n            (cipher as CipherData[]).forEach(c => {\n                ciphers[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async replace(ciphers: { [id: string]: CipherData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.ciphersPrefix + userId);\n        this.clearCache();\n    }\n\n    async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n        await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        ids.forEach(id => {\n            if (ciphers.hasOwnProperty(id)) {\n                ciphers[id].folderId = folderId;\n            }\n        });\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (ciphers[id] == null) {\n                return;\n            }\n            delete ciphers[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete ciphers[i];\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteCipher(id);\n        await this.delete(id);\n    }\n\n    async deleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.delete(ids);\n    }\n\n    async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n\n        if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n            return;\n        }\n\n        for (let i = 0; i < ciphers[id].attachments.length; i++) {\n            if (ciphers[id].attachments[i].id === attachmentId) {\n                ciphers[id].attachments.splice(i, 1);\n            }\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n        try {\n            await this.apiService.deleteCipherAttachment(id, attachmentId);\n        } catch (e) {\n            return Promise.reject((e as ErrorResponse).getSingleMessage());\n        }\n        await this.deleteAttachment(id, attachmentId);\n    }\n\n    sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n        const aLastUsed = a.localData && a.localData.lastUsedDate ? a.localData.lastUsedDate as number : null;\n        const bLastUsed = b.localData && b.localData.lastUsedDate ? b.localData.lastUsedDate as number : null;\n\n        const bothNotNull = aLastUsed != null && bLastUsed != null;\n        if (bothNotNull && aLastUsed < bLastUsed) {\n            return 1;\n        }\n        if (aLastUsed != null && bLastUsed == null) {\n            return -1;\n        }\n\n        if (bothNotNull && aLastUsed > bLastUsed) {\n            return -1;\n        }\n        if (bLastUsed != null && aLastUsed == null) {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n        const result = this.sortCiphersByLastUsed(a, b);\n        if (result !== 0) {\n            return result;\n        }\n\n        return this.getLocaleSortingFunction()(a, b);\n    }\n\n    getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n        return (a, b) => {\n            let aName = a.name;\n            let bName = b.name;\n\n            if (aName == null && bName != null) {\n                return -1;\n            }\n            if (aName != null && bName == null) {\n                return 1;\n            }\n            if (aName == null && bName == null) {\n                return 0;\n            }\n\n            const result = this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n\n            if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n                return result;\n            }\n\n            if (a.login.username != null) {\n                aName += a.login.username;\n            }\n\n            if (b.login.username != null) {\n                bName += b.login.username;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n        };\n    }\n\n    async softDelete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        const setDeletedDate = (cipherId: string) => {\n            if (ciphers[cipherId] == null) {\n                return;\n            }\n            ciphers[cipherId].deletedDate = new Date().toISOString();\n        };\n\n        if (typeof id === 'string') {\n            setDeletedDate(id);\n        } else {\n            (id as string[]).forEach(setDeletedDate);\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async softDeleteWithServer(id: string): Promise<any> {\n        await this.apiService.putDeleteCipher(id);\n        await this.softDelete(id);\n    }\n\n    async softDeleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.softDelete(ids);\n    }\n\n    async restore(cipher: { id: string, revisionDate: string; } | { id: string, revisionDate: string; }[]) {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        const clearDeletedDate = (c: { id: string, revisionDate: string; }) => {\n            if (ciphers[c.id] == null) {\n                return;\n            }\n            ciphers[c.id].deletedDate = null;\n            ciphers[c.id].revisionDate = c.revisionDate;\n        };\n\n\n        if (cipher.constructor.name === 'Array') {\n            (cipher as { id: string, revisionDate: string; }[]).forEach(clearDeletedDate);\n        } else {\n            clearDeletedDate(cipher as { id: string, revisionDate: string; });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async restoreWithServer(id: string): Promise<any> {\n        const response = await this.apiService.putRestoreCipher(id);\n        await this.restore({ id: id, revisionDate: response.revisionDate });\n    }\n\n    async restoreManyWithServer(ids: string[]): Promise<any> {\n        const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n        const restores: { id: string, revisionDate: string; }[] = [];\n        for (const cipher of response.data) {\n            restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n        }\n        await this.restore(restores);\n    }\n\n    // Helpers\n\n    private async shareAttachmentWithServer(attachmentView: AttachmentView, cipherId: string,\n        organizationId: string): Promise<any> {\n        const attachmentResponse = await this.apiService.nativeFetch(\n            new Request(attachmentView.url, { cache: 'no-store' }));\n        if (attachmentResponse.status !== 200) {\n            throw Error('Failed to download attachment: ' + attachmentResponse.status.toString());\n        }\n\n        const buf = await attachmentResponse.arrayBuffer();\n        const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n        const key = await this.cryptoService.getOrgKey(organizationId);\n        const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData.buffer], { type: 'application/octet-stream' });\n            fd.append('key', dataEncKey[1].encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', dataEncKey[1].encryptedString);\n                fd.append('data', Buffer.from(encData.buffer) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        try {\n            await this.apiService.postShareCipherAttachment(cipherId, attachmentView.id, fd, organizationId);\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n    }\n\n    private async encryptObjProperty<V extends View, D extends Domain>(model: V, obj: D,\n        map: any, key: SymmetricCryptoKey): Promise<void> {\n        const promises = [];\n        const self = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp, theObj) {\n                const p = Promise.resolve().then(() => {\n                    const modelProp = (model as any)[(map[theProp] || theProp)];\n                    if (modelProp && modelProp !== '') {\n                        return self.cryptoService.encrypt(modelProp, key);\n                    }\n                    return null;\n                }).then((val: EncString) => {\n                    (theObj as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop, obj);\n        }\n\n        await Promise.all(promises);\n    }\n\n    private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n        switch (cipher.type) {\n            case CipherType.Login:\n                cipher.login = new Login();\n                cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n                cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n                await this.encryptObjProperty(model.login, cipher.login, {\n                    username: null,\n                    password: null,\n                    totp: null,\n                }, key);\n\n                if (model.login.uris != null) {\n                    cipher.login.uris = [];\n                    for (let i = 0; i < model.login.uris.length; i++) {\n                        const loginUri = new LoginUri();\n                        loginUri.match = model.login.uris[i].match;\n                        await this.encryptObjProperty(model.login.uris[i], loginUri, {\n                            uri: null,\n                        }, key);\n                        cipher.login.uris.push(loginUri);\n                    }\n                }\n                return;\n            case CipherType.SecureNote:\n                cipher.secureNote = new SecureNote();\n                cipher.secureNote.type = model.secureNote.type;\n                return;\n            case CipherType.Card:\n                cipher.card = new Card();\n                await this.encryptObjProperty(model.card, cipher.card, {\n                    cardholderName: null,\n                    brand: null,\n                    number: null,\n                    expMonth: null,\n                    expYear: null,\n                    code: null,\n                }, key);\n                return;\n            case CipherType.Identity:\n                cipher.identity = new Identity();\n                await this.encryptObjProperty(model.identity, cipher.identity, {\n                    title: null,\n                    firstName: null,\n                    middleName: null,\n                    lastName: null,\n                    address1: null,\n                    address2: null,\n                    address3: null,\n                    city: null,\n                    state: null,\n                    postalCode: null,\n                    country: null,\n                    company: null,\n                    email: null,\n                    phone: null,\n                    ssn: null,\n                    username: null,\n                    passportNumber: null,\n                    licenseNumber: null,\n                }, key);\n                return;\n            default:\n                throw new Error('Unknown cipher type.');\n        }\n    }\n\n    private async getCipherForUrl(url: string, lastUsed: boolean, lastLaunched: boolean, autofillOnPageLoad: boolean): Promise<CipherView> {\n        const cacheKey = autofillOnPageLoad ? 'autofillOnPageLoad-' + url : url;\n\n        if (!this.sortedCiphersCache.isCached(cacheKey)) {\n            let ciphers = await this.getAllDecryptedForUrl(url);\n            if (!ciphers) {\n                return null;\n            }\n\n            if (autofillOnPageLoad) {\n                const autofillOnPageLoadDefault = await this.storageService.get(ConstantsService.autoFillOnPageLoadDefaultKey);\n                ciphers = ciphers.filter(cipher => cipher.login.autofillOnPageLoad ||\n                    (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false));\n                if (ciphers.length === 0) {\n                    return null;\n                }\n            }\n\n            this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n        }\n\n        if (lastLaunched) {\n            return this.sortedCiphersCache.getLastLaunched(cacheKey);\n        } else if (lastUsed) {\n            return this.sortedCiphersCache.getLastUsed(cacheKey);\n        } else {\n            return this.sortedCiphersCache.getNext(cacheKey);\n        }\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n    return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n        const originalMethod: () => Promise<any> = descriptor.value;\n        const caches = new Map<any, Map<string, Promise<any>>>();\n\n        const getCache = (obj: any) => {\n            let cache = caches.get(obj);\n            if (cache != null) {\n                return cache;\n            }\n            cache = new Map<string, Promise<any>>();\n            caches.set(obj, cache);\n            return cache;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const cache = getCache(this);\n                const argsCacheKey = cacheKey(args);\n                let response = cache.get(argsCacheKey);\n                if (response != null) {\n                    return response;\n                }\n\n                const onFinally = () => {\n                    cache.delete(argsCacheKey);\n                    if (cache.size === 0) {\n                        caches.delete(this);\n                    }\n                };\n                response = originalMethod.apply(this, args).then((val: any) => {\n                    onFinally();\n                    return val;\n                }).catch((err: any) => {\n                    onFinally();\n                    throw err;\n                });\n\n                cache.set(argsCacheKey, response);\n                return response;\n            },\n        };\n    };\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nimport { CollectionService as CollectionServiceAbstraction } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    collectionsPrefix: 'collections_',\n};\nconst NestingDelimiter = '/';\n\nexport class CollectionService implements CollectionServiceAbstraction {\n    decryptedCollectionCache: CollectionView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private storageService: StorageService, private i18nService: I18nService) {\n    }\n\n    clearCache(): void {\n        this.decryptedCollectionCache = null;\n    }\n\n    async encrypt(model: CollectionView): Promise<Collection> {\n        if (model.organizationId == null) {\n            throw new Error('Collection has no organization id.');\n        }\n        const key = await this.cryptoService.getOrgKey(model.organizationId);\n        if (key == null) {\n            throw new Error('No key for this collection\\'s organization.');\n        }\n        const collection = new Collection();\n        collection.id = model.id;\n        collection.organizationId = model.organizationId;\n        collection.readOnly = model.readOnly;\n        collection.name = await this.cryptoService.encrypt(model.name, key);\n        return collection;\n    }\n\n    async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n        if (collections == null) {\n            return [];\n        }\n        const decCollections: CollectionView[] = [];\n        const promises: Promise<any>[] = [];\n        collections.forEach(collection => {\n            promises.push(collection.decrypt().then(c => decCollections.push(c)));\n        });\n        await Promise.all(promises);\n        return decCollections.sort(Utils.getSortFunction(this.i18nService, 'name'));\n    }\n\n    async get(id: string): Promise<Collection> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null || !collections.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Collection(collections[id]);\n    }\n\n    async getAll(): Promise<Collection[]> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        const response: Collection[] = [];\n        for (const id in collections) {\n            if (collections.hasOwnProperty(id)) {\n                response.push(new Collection(collections[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<CollectionView[]> {\n        if (this.decryptedCollectionCache != null) {\n            return this.decryptedCollectionCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const collections = await this.getAll();\n        this.decryptedCollectionCache = await this.decryptMany(collections);\n        return this.decryptedCollectionCache;\n    }\n\n    async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n        if (collections == null) {\n            collections = await this.getAllDecrypted();\n        }\n        const nodes: TreeNode<CollectionView>[] = [];\n        collections.forEach(c => {\n            const collectionCopy = new CollectionView();\n            collectionCopy.id = c.id;\n            collectionCopy.organizationId = c.organizationId;\n            const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<CollectionView>> {\n        const collections = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n    }\n\n    async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            collections = {};\n        }\n\n        if (collection instanceof CollectionData) {\n            const c = collection as CollectionData;\n            collections[c.id] = c;\n        } else {\n            (collection as CollectionData[]).forEach(c => {\n                collections[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async replace(collections: { [id: string]: CollectionData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.collectionsPrefix + userId);\n        this.decryptedCollectionCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            const i = id as string;\n            delete collections[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete collections[i];\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n}\n","import {\n    ITreeNodeObject,\n    TreeNode,\n} from '../models/domain/treeNode';\n\nexport class ServiceUtils {\n    static nestedTraverse(nodeTree: TreeNode<ITreeNodeObject>[], partIndex: number, parts: string[],\n        obj: ITreeNodeObject, parent: ITreeNodeObject, delimiter: string) {\n        if (parts.length <= partIndex) {\n            return;\n        }\n\n        const end = partIndex === parts.length - 1;\n        const partName = parts[partIndex];\n\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.name !== parts[partIndex]) {\n                continue;\n            }\n            if (end && nodeTree[i].node.id !== obj.id) {\n                // Another node with the same name.\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            ServiceUtils.nestedTraverse(nodeTree[i].children, partIndex + 1, parts,\n                obj, nodeTree[i].node, delimiter);\n            return;\n        }\n\n        if (nodeTree.filter(n => n.node.name === partName).length === 0) {\n            if (end) {\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n            ServiceUtils.nestedTraverse(nodeTree, 0, [newPartName, ...parts.slice(partIndex + 2)],\n                obj, parent, delimiter);\n        }\n    }\n\n    static getTreeNodeObject(nodeTree: TreeNode<ITreeNodeObject>[], id: string): TreeNode<ITreeNodeObject> {\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.id === id) {\n                return nodeTree[i];\n            } else if (nodeTree[i].children != null) {\n                const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n                if (node !== null) {\n                    return node;\n                }\n            }\n        }\n        return null;\n    }\n}\n","import { CryptoService } from '../abstractions/crypto.service';\n\nexport class ContainerService {\n    constructor(private cryptoService: CryptoService) {\n    }\n\n    // deprecated, use attachToGlobal instead\n    attachToWindow(win: any) {\n        this.attachToGlobal(win);\n    }\n\n    attachToGlobal(global: any) {\n        if (!global.bitwardenContainerService) {\n            global.bitwardenContainerService = this;\n        }\n    }\n\n    getCryptoService(): CryptoService {\n        return this.cryptoService;\n    }\n}\n","import * as bigInt from 'big-integer';\n\nimport { EncryptionType } from '../enums/encryptionType';\nimport { HashPurpose } from '../enums/hashPurpose';\nimport { KdfType } from '../enums/kdfType';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncryptedObject } from '../models/domain/encryptedObject';\nimport { EncString } from '../models/domain/encString';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\n\nimport { CryptoService as CryptoServiceAbstraction } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { LogService } from '../abstractions/log.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport {\n    KeySuffixOptions,\n    StorageService,\n} from '../abstractions/storage.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\nimport { EEFLongWordList } from '../misc/wordlist';\nimport { ProfileProviderOrganizationResponse } from '../models/response/profileProviderOrganizationResponse';\nimport { ProfileProviderResponse } from '../models/response/profileProviderResponse';\n\nexport const Keys = {\n    key: 'key', // Master Key\n    encOrgKeys: 'encOrgKeys',\n    encProviderKeys: 'encProviderKeys',\n    encPrivateKey: 'encPrivateKey',\n    encKey: 'encKey', // Generated Symmetric Key\n    keyHash: 'keyHash',\n};\n\nexport class CryptoService implements CryptoServiceAbstraction {\n    private key: SymmetricCryptoKey;\n    private encKey: SymmetricCryptoKey;\n    private legacyEtmKey: SymmetricCryptoKey;\n    private keyHash: string;\n    private publicKey: ArrayBuffer;\n    private privateKey: ArrayBuffer;\n    private orgKeys: Map<string, SymmetricCryptoKey>;\n    private providerKeys: Map<string, SymmetricCryptoKey>;\n\n    constructor(private storageService: StorageService, protected secureStorageService: StorageService,\n        private cryptoFunctionService: CryptoFunctionService, protected platformUtilService: PlatformUtilsService,\n        protected logService: LogService) {\n    }\n\n    async setKey(key: SymmetricCryptoKey): Promise<any> {\n        this.key = key;\n\n        await this.storeKey(key);\n    }\n\n    setKeyHash(keyHash: string): Promise<{}> {\n        this.keyHash = keyHash;\n        return this.storageService.save(Keys.keyHash, keyHash);\n    }\n\n    async setEncKey(encKey: string): Promise<{}> {\n        if (encKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encKey, encKey);\n        this.encKey = null;\n    }\n\n    async setEncPrivateKey(encPrivateKey: string): Promise<{}> {\n        if (encPrivateKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encPrivateKey, encPrivateKey);\n        this.privateKey = null;\n    }\n\n    async setOrgKeys(orgs: ProfileOrganizationResponse[], providerOrgs: ProfileProviderOrganizationResponse[]): Promise<{}> {\n        const orgKeys: any = {};\n        orgs.forEach(org => {\n            orgKeys[org.id] = org.key;\n        });\n\n        for (const providerOrg of providerOrgs) {\n            // Convert provider encrypted keys to user encrypted.\n            const providerKey = await this.getProviderKey(providerOrg.providerId);\n            const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n            orgKeys[providerOrg.id] = await (await this.rsaEncrypt(decValue)).encryptedString;\n        }\n\n        this.orgKeys = null;\n        return this.storageService.save(Keys.encOrgKeys, orgKeys);\n    }\n\n    setProviderKeys(providers: ProfileProviderResponse[]): Promise<{}> {\n        const providerKeys: any = {};\n        providers.forEach(provider => {\n            providerKeys[provider.id] = provider.key;\n        });\n\n        this.providerKeys = null;\n        return this.storageService.save(Keys.encProviderKeys, providerKeys);\n    }\n\n    async getKey(keySuffix?: KeySuffixOptions): Promise<SymmetricCryptoKey> {\n        if (this.key != null) {\n            return this.key;\n        }\n\n        keySuffix ||= 'auto';\n        const symmetricKey = await this.getKeyFromStorage(keySuffix);\n\n        if (symmetricKey != null) {\n            this.setKey(symmetricKey);\n        }\n\n        return symmetricKey;\n    }\n\n    async getKeyFromStorage(keySuffix: KeySuffixOptions): Promise<SymmetricCryptoKey> {\n        const key = await this.retrieveKeyFromStorage(keySuffix);\n        if (key != null) {\n\n            const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n            if (!await this.validateKey(symmetricKey)) {\n                this.logService.warning('Wrong key, throwing away stored key');\n                this.secureStorageService.remove(Keys.key, { keySuffix: keySuffix });\n                return null;\n            }\n\n            return symmetricKey;\n        }\n        return null;\n    }\n\n    async getKeyHash(): Promise<string> {\n        if (this.keyHash != null) {\n            return this.keyHash;\n        }\n\n        const keyHash = await this.storageService.get<string>(Keys.keyHash);\n        if (keyHash != null) {\n            this.keyHash = keyHash;\n        }\n\n        return keyHash == null ? null : this.keyHash;\n    }\n\n    async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n        const storedKeyHash = await this.getKeyHash();\n        if (masterPassword != null && storedKeyHash != null) {\n            const localKeyHash = await this.hashPassword(masterPassword, key, HashPurpose.LocalAuthorization);\n            if (localKeyHash != null && storedKeyHash === localKeyHash) {\n                return true;\n            }\n\n            // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n            const serverKeyHash = await this.hashPassword(masterPassword, key, HashPurpose.ServerAuthorization);\n            if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n                await this.setKeyHash(localKeyHash);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    @sequentialize(() => 'getEncKey')\n    async getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n        if (this.encKey != null) {\n            return this.encKey;\n        }\n\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        if (encKey == null) {\n            return null;\n        }\n\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (key == null) {\n            return null;\n        }\n\n        let decEncKey: ArrayBuffer;\n        const encKeyCipher = new EncString(encKey);\n        if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n            decEncKey = await this.decryptToBytes(encKeyCipher, key);\n        } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n            const newKey = await this.stretchKey(key);\n            decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n        } else {\n            throw new Error('Unsupported encKey type.');\n        }\n\n        if (decEncKey == null) {\n            return null;\n        }\n        this.encKey = new SymmetricCryptoKey(decEncKey);\n        return this.encKey;\n    }\n\n    async getPublicKey(): Promise<ArrayBuffer> {\n        if (this.publicKey != null) {\n            return this.publicKey;\n        }\n\n        const privateKey = await this.getPrivateKey();\n        if (privateKey == null) {\n            return null;\n        }\n\n        this.publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n        return this.publicKey;\n    }\n\n    async getPrivateKey(): Promise<ArrayBuffer> {\n        if (this.privateKey != null) {\n            return this.privateKey;\n        }\n\n        const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\n        if (encPrivateKey == null) {\n            return null;\n        }\n\n        this.privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n        return this.privateKey;\n    }\n\n    async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey === null) {\n            throw new Error('No public key available.');\n        }\n        const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, 'sha256');\n        const userFingerprint = await this.cryptoFunctionService.hkdfExpand(keyFingerprint, userId, 32, 'sha256');\n        return this.hashPhrase(userFingerprint);\n    }\n\n    @sequentialize(() => 'getOrgKeys')\n    async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n        if (this.orgKeys != null && this.orgKeys.size > 0) {\n            return this.orgKeys;\n        }\n\n        const encOrgKeys = await this.storageService.get<any>(Keys.encOrgKeys);\n        if (encOrgKeys == null) {\n            return null;\n        }\n\n        const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n        let setKey = false;\n\n        for (const orgId in encOrgKeys) {\n            if (!encOrgKeys.hasOwnProperty(orgId)) {\n                continue;\n            }\n\n            const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n            orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n            setKey = true;\n        }\n\n        if (setKey) {\n            this.orgKeys = orgKeys;\n        }\n\n        return this.orgKeys;\n    }\n\n    async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n        if (orgId == null) {\n            return null;\n        }\n\n        const orgKeys = await this.getOrgKeys();\n        if (orgKeys == null || !orgKeys.has(orgId)) {\n            return null;\n        }\n\n        return orgKeys.get(orgId);\n    }\n\n    @sequentialize(() => 'getProviderKeys')\n    async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n        if (this.providerKeys != null && this.providerKeys.size > 0) {\n            return this.providerKeys;\n        }\n\n        const encProviderKeys = await this.storageService.get<any>(Keys.encProviderKeys);\n        if (encProviderKeys == null) {\n            return null;\n        }\n\n        const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n        let setKey = false;\n\n        for (const orgId in encProviderKeys) {\n            if (!encProviderKeys.hasOwnProperty(orgId)) {\n                continue;\n            }\n\n            const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n            providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n            setKey = true;\n        }\n\n        if (setKey) {\n            this.providerKeys = providerKeys;\n        }\n\n        return this.providerKeys;\n    }\n\n    async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n        if (providerId == null) {\n            return null;\n        }\n\n        const providerKeys = await this.getProviderKeys();\n        if (providerKeys == null || !providerKeys.has(providerId)) {\n            return null;\n        }\n\n        return providerKeys.get(providerId);\n    }\n\n    async hasKey(): Promise<boolean> {\n        return this.hasKeyInMemory() || await this.hasKeyStored('auto') || await this.hasKeyStored('biometric');\n    }\n\n    hasKeyInMemory(): boolean {\n        return this.key != null;\n    }\n\n    hasKeyStored(keySuffix: KeySuffixOptions): Promise<boolean> {\n        return this.secureStorageService.has(Keys.key, { keySuffix: keySuffix });\n    }\n\n    async hasEncKey(): Promise<boolean> {\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        return encKey != null;\n    }\n\n    async clearKey(clearSecretStorage: boolean = true): Promise<any> {\n        this.key = this.legacyEtmKey = null;\n        if (clearSecretStorage) {\n            this.clearStoredKey('auto');\n            this.clearStoredKey('biometric');\n        }\n    }\n\n    async clearStoredKey(keySuffix: KeySuffixOptions) {\n        await this.secureStorageService.remove(Keys.key, { keySuffix: keySuffix });\n    }\n\n    clearKeyHash(): Promise<any> {\n        this.keyHash = null;\n        return this.storageService.remove(Keys.keyHash);\n    }\n\n    clearEncKey(memoryOnly?: boolean): Promise<any> {\n        this.encKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encKey);\n    }\n\n    clearKeyPair(memoryOnly?: boolean): Promise<any> {\n        this.privateKey = null;\n        this.publicKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encPrivateKey);\n    }\n\n    clearOrgKeys(memoryOnly?: boolean): Promise<any> {\n        this.orgKeys = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encOrgKeys);\n    }\n\n    clearProviderKeys(memoryOnly?: boolean): Promise<any> {\n        this.providerKeys = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encOrgKeys);\n    }\n\n    clearPinProtectedKey(): Promise<any> {\n        return this.storageService.remove(ConstantsService.pinProtectedKey);\n    }\n\n    async clearKeys(): Promise<any> {\n        await this.clearKey();\n        await this.clearKeyHash();\n        await this.clearOrgKeys();\n        await this.clearProviderKeys();\n        await this.clearEncKey();\n        await this.clearKeyPair();\n        await this.clearPinProtectedKey();\n    }\n\n    async toggleKey(): Promise<any> {\n        const key = await this.getKey();\n\n        await this.setKey(key);\n    }\n\n    async makeKey(password: string, salt: string, kdf: KdfType, kdfIterations: number):\n        Promise<SymmetricCryptoKey> {\n        let key: ArrayBuffer = null;\n        if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n            if (kdfIterations == null) {\n                kdfIterations = 5000;\n            } else if (kdfIterations < 5000) {\n                throw new Error('PBKDF2 iteration minimum is 5000.');\n            }\n            key = await this.cryptoFunctionService.pbkdf2(password, salt, 'sha256', kdfIterations);\n        } else {\n            throw new Error('Unknown Kdf.');\n        }\n        return new SymmetricCryptoKey(key);\n    }\n\n    async makeKeyFromPin(pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs: EncString = null):\n        Promise<SymmetricCryptoKey> {\n        if (protectedKeyCs == null) {\n            const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n            if (pinProtectedKey == null) {\n                throw new Error('No PIN protected key found.');\n            }\n            protectedKeyCs = new EncString(pinProtectedKey);\n        }\n        const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n        const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n        return new SymmetricCryptoKey(decKey);\n    }\n\n    async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n        const shareKey = await this.cryptoFunctionService.randomBytes(64);\n        const publicKey = await this.getPublicKey();\n        const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n        return [encShareKey, new SymmetricCryptoKey(shareKey)];\n    }\n\n    async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n        const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n        const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n        const privateEnc = await this.encrypt(keyPair[1], key);\n        return [publicB64, privateEnc];\n    }\n\n    async makePinKey(pin: string, salt: string, kdf: KdfType, kdfIterations: number): Promise<SymmetricCryptoKey> {\n        const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n        return await this.stretchKey(pinKey);\n    }\n\n    async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n        const sendKey = await this.cryptoFunctionService.hkdf(keyMaterial, 'bitwarden-send', 'send', 64, 'sha256');\n        return new SymmetricCryptoKey(sendKey);\n    }\n\n    async hashPassword(password: string, key: SymmetricCryptoKey, hashPurpose?: HashPurpose): Promise<string> {\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (password == null || key == null) {\n            throw new Error('Invalid parameters.');\n        }\n\n        const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n        const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, 'sha256', iterations);\n        return Utils.fromBufferToB64(hash);\n    }\n\n    async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n        const theKey = await this.getKeyForEncryption(key);\n        const encKey = await this.cryptoFunctionService.randomBytes(64);\n        return this.buildEncKey(theKey, encKey);\n    }\n\n    async remakeEncKey(key: SymmetricCryptoKey, encKey?: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n        if (encKey == null) {\n            encKey = await this.getEncKey();\n        }\n        return this.buildEncKey(key, encKey.key);\n    }\n\n    async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n        if (plainValue == null) {\n            return Promise.resolve(null);\n        }\n\n        let plainBuf: ArrayBuffer;\n        if (typeof (plainValue) === 'string') {\n            plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n        } else {\n            plainBuf = plainValue;\n        }\n\n        const encObj = await this.aesEncrypt(plainBuf, key);\n        const iv = Utils.fromBufferToB64(encObj.iv);\n        const data = Utils.fromBufferToB64(encObj.data);\n        const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n        return new EncString(encObj.key.encType, data, iv, mac);\n    }\n\n    async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n        const encValue = await this.aesEncrypt(plainValue, key);\n        let macLen = 0;\n        if (encValue.mac != null) {\n            macLen = encValue.mac.byteLength;\n        }\n\n        const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n        encBytes.set([encValue.key.encType]);\n        encBytes.set(new Uint8Array(encValue.iv), 1);\n        if (encValue.mac != null) {\n            encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n        }\n\n        encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n        return new EncArrayBuffer(encBytes.buffer);\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey == null) {\n            throw new Error('Public key unavailable.');\n        }\n\n        const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, 'sha1');\n        return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n    }\n\n    async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n        const headerPieces = encValue.split('.');\n        let encType: EncryptionType = null;\n        let encPieces: string[];\n\n        if (headerPieces.length === 1) {\n            encType = EncryptionType.Rsa2048_OaepSha256_B64;\n            encPieces = [headerPieces[0]];\n        } else if (headerPieces.length === 2) {\n            try {\n                encType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) { }\n        }\n\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            // HmacSha256 types are deprecated\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        if (encPieces == null || encPieces.length <= 0) {\n            throw new Error('encPieces unavailable.');\n        }\n\n        const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n        const privateKey = privateKeyValue ?? await this.getPrivateKey();\n        if (privateKey == null) {\n            throw new Error('No private key.');\n        }\n\n        let alg: 'sha1' | 'sha256' = 'sha1';\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n                alg = 'sha256';\n                break;\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n    }\n\n    async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const iv = Utils.fromB64ToArray(encString.iv).buffer;\n        const data = Utils.fromB64ToArray(encString.data).buffer;\n        const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n        const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n        if (decipher == null) {\n            return null;\n        }\n\n        return decipher;\n    }\n\n    async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n        return await this.aesDecryptToUtf8(encString.encryptionType, encString.data,\n            encString.iv, encString.mac, key);\n    }\n\n    async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        if (encBuf == null) {\n            throw new Error('no encBuf.');\n        }\n\n        const encBytes = new Uint8Array(encBuf);\n        const encType = encBytes[0];\n        let ctBytes: Uint8Array = null;\n        let ivBytes: Uint8Array = null;\n        let macBytes: Uint8Array = null;\n\n        switch (encType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encBytes.length <= 49) { // 1 + 16 + 32 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                macBytes = encBytes.slice(17, 49);\n                ctBytes = encBytes.slice(49);\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encBytes.length <= 17) { // 1 + 16 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                ctBytes = encBytes.slice(17);\n                break;\n            default:\n                return null;\n        }\n\n        return await this.aesDecryptToBytes(encType, ctBytes.buffer, ivBytes.buffer,\n            macBytes != null ? macBytes.buffer : null, key);\n    }\n\n    // EFForg/OpenWireless\n    // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n    async randomNumber(min: number, max: number): Promise<number> {\n        let rval = 0;\n        const range = max - min + 1;\n        const bitsNeeded = Math.ceil(Math.log2(range));\n        if (bitsNeeded > 53) {\n            throw new Error('We cannot generate numbers larger than 53 bits.');\n        }\n\n        const bytesNeeded = Math.ceil(bitsNeeded / 8);\n        const mask = Math.pow(2, bitsNeeded) - 1;\n        // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n        // Fill a byte array with N random numbers\n        const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n        let p = (bytesNeeded - 1) * 8;\n        for (let i = 0; i < bytesNeeded; i++) {\n            rval += byteArray[i] * Math.pow(2, p);\n            p -= 8;\n        }\n\n        // Use & to apply the mask and reduce the number of recursive lookups\n        // tslint:disable-next-line\n        rval = rval & mask;\n\n        if (rval >= range) {\n            // Integer out of acceptable range\n            return this.randomNumber(min, max);\n        }\n\n        // Return an integer that falls within the range\n        return min + rval;\n    }\n\n    async validateKey(key: SymmetricCryptoKey) {\n        try {\n            const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\n            const encKey = await this.getEncKey(key);\n            if (encPrivateKey == null || encKey == null) {\n                return false;\n            }\n\n            const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n            await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n        } catch (e) {\n            return false;\n        }\n\n        return true;\n    }\n\n    // Helpers\n\n    protected async storeKey(key: SymmetricCryptoKey) {\n        if (await this.shouldStoreKey('auto') || await this.shouldStoreKey('biometric')) {\n            this.secureStorageService.save(Keys.key, key.keyB64);\n        } else {\n            this.secureStorageService.remove(Keys.key);\n        }\n    }\n\n    protected async shouldStoreKey(keySuffix: KeySuffixOptions) {\n        let shouldStoreKey = false;\n        if (keySuffix === 'auto') {\n            const vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n            shouldStoreKey = vaultTimeout == null;\n        } else if (keySuffix === 'biometric') {\n            const biometricUnlock = await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\n            shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n        }\n        return shouldStoreKey;\n    }\n\n    protected retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n        return this.secureStorageService.get<string>(Keys.key, { keySuffix: keySuffix });\n    }\n\n    private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n        const obj = new EncryptedObject();\n        obj.key = await this.getKeyForEncryption(key);\n        obj.iv = await this.cryptoFunctionService.randomBytes(16);\n        obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n        if (obj.key.macKey != null) {\n            const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n            macData.set(new Uint8Array(obj.iv), 0);\n            macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n            obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, 'sha256');\n        }\n\n        return obj;\n    }\n\n    private async aesDecryptToUtf8(encType: EncryptionType, data: string, iv: string, mac: string,\n        key: SymmetricCryptoKey): Promise<string> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            this.logService.error('mac required.');\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            this.logService.error('encType unavailable.');\n            return null;\n        }\n\n        const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n        if (fastParams.macKey != null && fastParams.mac != null) {\n            const computedMac = await this.cryptoFunctionService.hmacFast(fastParams.macData,\n                fastParams.macKey, 'sha256');\n            const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n            if (!macsEqual) {\n                this.logService.error('mac failed.');\n                return null;\n            }\n        }\n\n        return this.cryptoFunctionService.aesDecryptFast(fastParams);\n    }\n\n    private async aesDecryptToBytes(encType: EncryptionType, data: ArrayBuffer, iv: ArrayBuffer,\n        mac: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            return null;\n        }\n\n        if (theKey.macKey != null && mac != null) {\n            const macData = new Uint8Array(iv.byteLength + data.byteLength);\n            macData.set(new Uint8Array(iv), 0);\n            macData.set(new Uint8Array(data), iv.byteLength);\n            const computedMac = await this.cryptoFunctionService.hmac(macData.buffer, theKey.macKey, 'sha256');\n            if (computedMac === null) {\n                return null;\n            }\n\n            const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n            if (!macsMatch) {\n                this.logService.error('mac failed.');\n                return null;\n            }\n        }\n\n        return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n    }\n\n    private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        if (key != null) {\n            return key;\n        }\n\n        const encKey = await this.getEncKey();\n        if (encKey != null) {\n            return encKey;\n        }\n\n        return await this.getKey();\n    }\n\n    private resolveLegacyKey(encType: EncryptionType, key: SymmetricCryptoKey): SymmetricCryptoKey {\n        if (encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n            key.encType === EncryptionType.AesCbc256_B64) {\n            // Old encrypt-then-mac scheme, make a new key\n            if (this.legacyEtmKey == null) {\n                this.legacyEtmKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n            }\n            return this.legacyEtmKey;\n        }\n\n        return key;\n    }\n\n    private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        const newKey = new Uint8Array(64);\n        const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, 'enc', 32, 'sha256');\n        const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, 'mac', 32, 'sha256');\n        newKey.set(new Uint8Array(encKey));\n        newKey.set(new Uint8Array(macKey), 32);\n        return new SymmetricCryptoKey(newKey.buffer);\n    }\n\n    private async hashPhrase(hash: ArrayBuffer, minimumEntropy: number = 64) {\n        const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n        let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n        const hashArr = Array.from(new Uint8Array(hash));\n        const entropyAvailable = hashArr.length * 4;\n        if (numWords * entropyPerWord > entropyAvailable) {\n            throw new Error('Output entropy of hash function is too small');\n        }\n\n        const phrase: string[] = [];\n        let hashNumber = bigInt.fromArray(hashArr, 256);\n        while (numWords--) {\n            const remainder = hashNumber.mod(EEFLongWordList.length);\n            hashNumber = hashNumber.divide(EEFLongWordList.length);\n            phrase.push(EEFLongWordList[remainder as any]);\n        }\n        return phrase;\n    }\n\n    private async buildEncKey(key: SymmetricCryptoKey, encKey: ArrayBuffer)\n        : Promise<[SymmetricCryptoKey, EncString]> {\n        let encKeyEnc: EncString = null;\n        if (key.key.byteLength === 32) {\n            const newKey = await this.stretchKey(key);\n            encKeyEnc = await this.encrypt(encKey, newKey);\n        } else if (key.key.byteLength === 64) {\n            encKeyEnc = await this.encrypt(encKey, key);\n        } else {\n            throw new Error('Invalid key size.');\n        }\n        return [new SymmetricCryptoKey(encKey), encKeyEnc];\n    }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n    'abacus',\n    'abdomen',\n    'abdominal',\n    'abide',\n    'abiding',\n    'ability',\n    'ablaze',\n    'able',\n    'abnormal',\n    'abrasion',\n    'abrasive',\n    'abreast',\n    'abridge',\n    'abroad',\n    'abruptly',\n    'absence',\n    'absentee',\n    'absently',\n    'absinthe',\n    'absolute',\n    'absolve',\n    'abstain',\n    'abstract',\n    'absurd',\n    'accent',\n    'acclaim',\n    'acclimate',\n    'accompany',\n    'account',\n    'accuracy',\n    'accurate',\n    'accustom',\n    'acetone',\n    'achiness',\n    'aching',\n    'acid',\n    'acorn',\n    'acquaint',\n    'acquire',\n    'acre',\n    'acrobat',\n    'acronym',\n    'acting',\n    'action',\n    'activate',\n    'activator',\n    'active',\n    'activism',\n    'activist',\n    'activity',\n    'actress',\n    'acts',\n    'acutely',\n    'acuteness',\n    'aeration',\n    'aerobics',\n    'aerosol',\n    'aerospace',\n    'afar',\n    'affair',\n    'affected',\n    'affecting',\n    'affection',\n    'affidavit',\n    'affiliate',\n    'affirm',\n    'affix',\n    'afflicted',\n    'affluent',\n    'afford',\n    'affront',\n    'aflame',\n    'afloat',\n    'aflutter',\n    'afoot',\n    'afraid',\n    'afterglow',\n    'afterlife',\n    'aftermath',\n    'aftermost',\n    'afternoon',\n    'aged',\n    'ageless',\n    'agency',\n    'agenda',\n    'agent',\n    'aggregate',\n    'aghast',\n    'agile',\n    'agility',\n    'aging',\n    'agnostic',\n    'agonize',\n    'agonizing',\n    'agony',\n    'agreeable',\n    'agreeably',\n    'agreed',\n    'agreeing',\n    'agreement',\n    'aground',\n    'ahead',\n    'ahoy',\n    'aide',\n    'aids',\n    'aim',\n    'ajar',\n    'alabaster',\n    'alarm',\n    'albatross',\n    'album',\n    'alfalfa',\n    'algebra',\n    'algorithm',\n    'alias',\n    'alibi',\n    'alienable',\n    'alienate',\n    'aliens',\n    'alike',\n    'alive',\n    'alkaline',\n    'alkalize',\n    'almanac',\n    'almighty',\n    'almost',\n    'aloe',\n    'aloft',\n    'aloha',\n    'alone',\n    'alongside',\n    'aloof',\n    'alphabet',\n    'alright',\n    'although',\n    'altitude',\n    'alto',\n    'aluminum',\n    'alumni',\n    'always',\n    'amaretto',\n    'amaze',\n    'amazingly',\n    'amber',\n    'ambiance',\n    'ambiguity',\n    'ambiguous',\n    'ambition',\n    'ambitious',\n    'ambulance',\n    'ambush',\n    'amendable',\n    'amendment',\n    'amends',\n    'amenity',\n    'amiable',\n    'amicably',\n    'amid',\n    'amigo',\n    'amino',\n    'amiss',\n    'ammonia',\n    'ammonium',\n    'amnesty',\n    'amniotic',\n    'among',\n    'amount',\n    'amperage',\n    'ample',\n    'amplifier',\n    'amplify',\n    'amply',\n    'amuck',\n    'amulet',\n    'amusable',\n    'amused',\n    'amusement',\n    'amuser',\n    'amusing',\n    'anaconda',\n    'anaerobic',\n    'anagram',\n    'anatomist',\n    'anatomy',\n    'anchor',\n    'anchovy',\n    'ancient',\n    'android',\n    'anemia',\n    'anemic',\n    'aneurism',\n    'anew',\n    'angelfish',\n    'angelic',\n    'anger',\n    'angled',\n    'angler',\n    'angles',\n    'angling',\n    'angrily',\n    'angriness',\n    'anguished',\n    'angular',\n    'animal',\n    'animate',\n    'animating',\n    'animation',\n    'animator',\n    'anime',\n    'animosity',\n    'ankle',\n    'annex',\n    'annotate',\n    'announcer',\n    'annoying',\n    'annually',\n    'annuity',\n    'anointer',\n    'another',\n    'answering',\n    'antacid',\n    'antarctic',\n    'anteater',\n    'antelope',\n    'antennae',\n    'anthem',\n    'anthill',\n    'anthology',\n    'antibody',\n    'antics',\n    'antidote',\n    'antihero',\n    'antiquely',\n    'antiques',\n    'antiquity',\n    'antirust',\n    'antitoxic',\n    'antitrust',\n    'antiviral',\n    'antivirus',\n    'antler',\n    'antonym',\n    'antsy',\n    'anvil',\n    'anybody',\n    'anyhow',\n    'anymore',\n    'anyone',\n    'anyplace',\n    'anything',\n    'anytime',\n    'anyway',\n    'anywhere',\n    'aorta',\n    'apache',\n    'apostle',\n    'appealing',\n    'appear',\n    'appease',\n    'appeasing',\n    'appendage',\n    'appendix',\n    'appetite',\n    'appetizer',\n    'applaud',\n    'applause',\n    'apple',\n    'appliance',\n    'applicant',\n    'applied',\n    'apply',\n    'appointee',\n    'appraisal',\n    'appraiser',\n    'apprehend',\n    'approach',\n    'approval',\n    'approve',\n    'apricot',\n    'april',\n    'apron',\n    'aptitude',\n    'aptly',\n    'aqua',\n    'aqueduct',\n    'arbitrary',\n    'arbitrate',\n    'ardently',\n    'area',\n    'arena',\n    'arguable',\n    'arguably',\n    'argue',\n    'arise',\n    'armadillo',\n    'armband',\n    'armchair',\n    'armed',\n    'armful',\n    'armhole',\n    'arming',\n    'armless',\n    'armoire',\n    'armored',\n    'armory',\n    'armrest',\n    'army',\n    'aroma',\n    'arose',\n    'around',\n    'arousal',\n    'arrange',\n    'array',\n    'arrest',\n    'arrival',\n    'arrive',\n    'arrogance',\n    'arrogant',\n    'arson',\n    'art',\n    'ascend',\n    'ascension',\n    'ascent',\n    'ascertain',\n    'ashamed',\n    'ashen',\n    'ashes',\n    'ashy',\n    'aside',\n    'askew',\n    'asleep',\n    'asparagus',\n    'aspect',\n    'aspirate',\n    'aspire',\n    'aspirin',\n    'astonish',\n    'astound',\n    'astride',\n    'astrology',\n    'astronaut',\n    'astronomy',\n    'astute',\n    'atlantic',\n    'atlas',\n    'atom',\n    'atonable',\n    'atop',\n    'atrium',\n    'atrocious',\n    'atrophy',\n    'attach',\n    'attain',\n    'attempt',\n    'attendant',\n    'attendee',\n    'attention',\n    'attentive',\n    'attest',\n    'attic',\n    'attire',\n    'attitude',\n    'attractor',\n    'attribute',\n    'atypical',\n    'auction',\n    'audacious',\n    'audacity',\n    'audible',\n    'audibly',\n    'audience',\n    'audio',\n    'audition',\n    'augmented',\n    'august',\n    'authentic',\n    'author',\n    'autism',\n    'autistic',\n    'autograph',\n    'automaker',\n    'automated',\n    'automatic',\n    'autopilot',\n    'available',\n    'avalanche',\n    'avatar',\n    'avenge',\n    'avenging',\n    'avenue',\n    'average',\n    'aversion',\n    'avert',\n    'aviation',\n    'aviator',\n    'avid',\n    'avoid',\n    'await',\n    'awaken',\n    'award',\n    'aware',\n    'awhile',\n    'awkward',\n    'awning',\n    'awoke',\n    'awry',\n    'axis',\n    'babble',\n    'babbling',\n    'babied',\n    'baboon',\n    'backache',\n    'backboard',\n    'backboned',\n    'backdrop',\n    'backed',\n    'backer',\n    'backfield',\n    'backfire',\n    'backhand',\n    'backing',\n    'backlands',\n    'backlash',\n    'backless',\n    'backlight',\n    'backlit',\n    'backlog',\n    'backpack',\n    'backpedal',\n    'backrest',\n    'backroom',\n    'backshift',\n    'backside',\n    'backslid',\n    'backspace',\n    'backspin',\n    'backstab',\n    'backstage',\n    'backtalk',\n    'backtrack',\n    'backup',\n    'backward',\n    'backwash',\n    'backwater',\n    'backyard',\n    'bacon',\n    'bacteria',\n    'bacterium',\n    'badass',\n    'badge',\n    'badland',\n    'badly',\n    'badness',\n    'baffle',\n    'baffling',\n    'bagel',\n    'bagful',\n    'baggage',\n    'bagged',\n    'baggie',\n    'bagginess',\n    'bagging',\n    'baggy',\n    'bagpipe',\n    'baguette',\n    'baked',\n    'bakery',\n    'bakeshop',\n    'baking',\n    'balance',\n    'balancing',\n    'balcony',\n    'balmy',\n    'balsamic',\n    'bamboo',\n    'banana',\n    'banish',\n    'banister',\n    'banjo',\n    'bankable',\n    'bankbook',\n    'banked',\n    'banker',\n    'banking',\n    'banknote',\n    'bankroll',\n    'banner',\n    'bannister',\n    'banshee',\n    'banter',\n    'barbecue',\n    'barbed',\n    'barbell',\n    'barber',\n    'barcode',\n    'barge',\n    'bargraph',\n    'barista',\n    'baritone',\n    'barley',\n    'barmaid',\n    'barman',\n    'barn',\n    'barometer',\n    'barrack',\n    'barracuda',\n    'barrel',\n    'barrette',\n    'barricade',\n    'barrier',\n    'barstool',\n    'bartender',\n    'barterer',\n    'bash',\n    'basically',\n    'basics',\n    'basil',\n    'basin',\n    'basis',\n    'basket',\n    'batboy',\n    'batch',\n    'bath',\n    'baton',\n    'bats',\n    'battalion',\n    'battered',\n    'battering',\n    'battery',\n    'batting',\n    'battle',\n    'bauble',\n    'bazooka',\n    'blabber',\n    'bladder',\n    'blade',\n    'blah',\n    'blame',\n    'blaming',\n    'blanching',\n    'blandness',\n    'blank',\n    'blaspheme',\n    'blasphemy',\n    'blast',\n    'blatancy',\n    'blatantly',\n    'blazer',\n    'blazing',\n    'bleach',\n    'bleak',\n    'bleep',\n    'blemish',\n    'blend',\n    'bless',\n    'blighted',\n    'blimp',\n    'bling',\n    'blinked',\n    'blinker',\n    'blinking',\n    'blinks',\n    'blip',\n    'blissful',\n    'blitz',\n    'blizzard',\n    'bloated',\n    'bloating',\n    'blob',\n    'blog',\n    'bloomers',\n    'blooming',\n    'blooper',\n    'blot',\n    'blouse',\n    'blubber',\n    'bluff',\n    'bluish',\n    'blunderer',\n    'blunt',\n    'blurb',\n    'blurred',\n    'blurry',\n    'blurt',\n    'blush',\n    'blustery',\n    'boaster',\n    'boastful',\n    'boasting',\n    'boat',\n    'bobbed',\n    'bobbing',\n    'bobble',\n    'bobcat',\n    'bobsled',\n    'bobtail',\n    'bodacious',\n    'body',\n    'bogged',\n    'boggle',\n    'bogus',\n    'boil',\n    'bok',\n    'bolster',\n    'bolt',\n    'bonanza',\n    'bonded',\n    'bonding',\n    'bondless',\n    'boned',\n    'bonehead',\n    'boneless',\n    'bonelike',\n    'boney',\n    'bonfire',\n    'bonnet',\n    'bonsai',\n    'bonus',\n    'bony',\n    'boogeyman',\n    'boogieman',\n    'book',\n    'boondocks',\n    'booted',\n    'booth',\n    'bootie',\n    'booting',\n    'bootlace',\n    'bootleg',\n    'boots',\n    'boozy',\n    'borax',\n    'boring',\n    'borough',\n    'borrower',\n    'borrowing',\n    'boss',\n    'botanical',\n    'botanist',\n    'botany',\n    'botch',\n    'both',\n    'bottle',\n    'bottling',\n    'bottom',\n    'bounce',\n    'bouncing',\n    'bouncy',\n    'bounding',\n    'boundless',\n    'bountiful',\n    'bovine',\n    'boxcar',\n    'boxer',\n    'boxing',\n    'boxlike',\n    'boxy',\n    'breach',\n    'breath',\n    'breeches',\n    'breeching',\n    'breeder',\n    'breeding',\n    'breeze',\n    'breezy',\n    'brethren',\n    'brewery',\n    'brewing',\n    'briar',\n    'bribe',\n    'brick',\n    'bride',\n    'bridged',\n    'brigade',\n    'bright',\n    'brilliant',\n    'brim',\n    'bring',\n    'brink',\n    'brisket',\n    'briskly',\n    'briskness',\n    'bristle',\n    'brittle',\n    'broadband',\n    'broadcast',\n    'broaden',\n    'broadly',\n    'broadness',\n    'broadside',\n    'broadways',\n    'broiler',\n    'broiling',\n    'broken',\n    'broker',\n    'bronchial',\n    'bronco',\n    'bronze',\n    'bronzing',\n    'brook',\n    'broom',\n    'brought',\n    'browbeat',\n    'brownnose',\n    'browse',\n    'browsing',\n    'bruising',\n    'brunch',\n    'brunette',\n    'brunt',\n    'brush',\n    'brussels',\n    'brute',\n    'brutishly',\n    'bubble',\n    'bubbling',\n    'bubbly',\n    'buccaneer',\n    'bucked',\n    'bucket',\n    'buckle',\n    'buckshot',\n    'buckskin',\n    'bucktooth',\n    'buckwheat',\n    'buddhism',\n    'buddhist',\n    'budding',\n    'buddy',\n    'budget',\n    'buffalo',\n    'buffed',\n    'buffer',\n    'buffing',\n    'buffoon',\n    'buggy',\n    'bulb',\n    'bulge',\n    'bulginess',\n    'bulgur',\n    'bulk',\n    'bulldog',\n    'bulldozer',\n    'bullfight',\n    'bullfrog',\n    'bullhorn',\n    'bullion',\n    'bullish',\n    'bullpen',\n    'bullring',\n    'bullseye',\n    'bullwhip',\n    'bully',\n    'bunch',\n    'bundle',\n    'bungee',\n    'bunion',\n    'bunkbed',\n    'bunkhouse',\n    'bunkmate',\n    'bunny',\n    'bunt',\n    'busboy',\n    'bush',\n    'busily',\n    'busload',\n    'bust',\n    'busybody',\n    'buzz',\n    'cabana',\n    'cabbage',\n    'cabbie',\n    'cabdriver',\n    'cable',\n    'caboose',\n    'cache',\n    'cackle',\n    'cacti',\n    'cactus',\n    'caddie',\n    'caddy',\n    'cadet',\n    'cadillac',\n    'cadmium',\n    'cage',\n    'cahoots',\n    'cake',\n    'calamari',\n    'calamity',\n    'calcium',\n    'calculate',\n    'calculus',\n    'caliber',\n    'calibrate',\n    'calm',\n    'caloric',\n    'calorie',\n    'calzone',\n    'camcorder',\n    'cameo',\n    'camera',\n    'camisole',\n    'camper',\n    'campfire',\n    'camping',\n    'campsite',\n    'campus',\n    'canal',\n    'canary',\n    'cancel',\n    'candied',\n    'candle',\n    'candy',\n    'cane',\n    'canine',\n    'canister',\n    'cannabis',\n    'canned',\n    'canning',\n    'cannon',\n    'cannot',\n    'canola',\n    'canon',\n    'canopener',\n    'canopy',\n    'canteen',\n    'canyon',\n    'capable',\n    'capably',\n    'capacity',\n    'cape',\n    'capillary',\n    'capital',\n    'capitol',\n    'capped',\n    'capricorn',\n    'capsize',\n    'capsule',\n    'caption',\n    'captivate',\n    'captive',\n    'captivity',\n    'capture',\n    'caramel',\n    'carat',\n    'caravan',\n    'carbon',\n    'cardboard',\n    'carded',\n    'cardiac',\n    'cardigan',\n    'cardinal',\n    'cardstock',\n    'carefully',\n    'caregiver',\n    'careless',\n    'caress',\n    'caretaker',\n    'cargo',\n    'caring',\n    'carless',\n    'carload',\n    'carmaker',\n    'carnage',\n    'carnation',\n    'carnival',\n    'carnivore',\n    'carol',\n    'carpenter',\n    'carpentry',\n    'carpool',\n    'carport',\n    'carried',\n    'carrot',\n    'carrousel',\n    'carry',\n    'cartel',\n    'cartload',\n    'carton',\n    'cartoon',\n    'cartridge',\n    'cartwheel',\n    'carve',\n    'carving',\n    'carwash',\n    'cascade',\n    'case',\n    'cash',\n    'casing',\n    'casino',\n    'casket',\n    'cassette',\n    'casually',\n    'casualty',\n    'catacomb',\n    'catalog',\n    'catalyst',\n    'catalyze',\n    'catapult',\n    'cataract',\n    'catatonic',\n    'catcall',\n    'catchable',\n    'catcher',\n    'catching',\n    'catchy',\n    'caterer',\n    'catering',\n    'catfight',\n    'catfish',\n    'cathedral',\n    'cathouse',\n    'catlike',\n    'catnap',\n    'catnip',\n    'catsup',\n    'cattail',\n    'cattishly',\n    'cattle',\n    'catty',\n    'catwalk',\n    'caucasian',\n    'caucus',\n    'causal',\n    'causation',\n    'cause',\n    'causing',\n    'cauterize',\n    'caution',\n    'cautious',\n    'cavalier',\n    'cavalry',\n    'caviar',\n    'cavity',\n    'cedar',\n    'celery',\n    'celestial',\n    'celibacy',\n    'celibate',\n    'celtic',\n    'cement',\n    'census',\n    'ceramics',\n    'ceremony',\n    'certainly',\n    'certainty',\n    'certified',\n    'certify',\n    'cesarean',\n    'cesspool',\n    'chafe',\n    'chaffing',\n    'chain',\n    'chair',\n    'chalice',\n    'challenge',\n    'chamber',\n    'chamomile',\n    'champion',\n    'chance',\n    'change',\n    'channel',\n    'chant',\n    'chaos',\n    'chaperone',\n    'chaplain',\n    'chapped',\n    'chaps',\n    'chapter',\n    'character',\n    'charbroil',\n    'charcoal',\n    'charger',\n    'charging',\n    'chariot',\n    'charity',\n    'charm',\n    'charred',\n    'charter',\n    'charting',\n    'chase',\n    'chasing',\n    'chaste',\n    'chastise',\n    'chastity',\n    'chatroom',\n    'chatter',\n    'chatting',\n    'chatty',\n    'cheating',\n    'cheddar',\n    'cheek',\n    'cheer',\n    'cheese',\n    'cheesy',\n    'chef',\n    'chemicals',\n    'chemist',\n    'chemo',\n    'cherisher',\n    'cherub',\n    'chess',\n    'chest',\n    'chevron',\n    'chevy',\n    'chewable',\n    'chewer',\n    'chewing',\n    'chewy',\n    'chief',\n    'chihuahua',\n    'childcare',\n    'childhood',\n    'childish',\n    'childless',\n    'childlike',\n    'chili',\n    'chill',\n    'chimp',\n    'chip',\n    'chirping',\n    'chirpy',\n    'chitchat',\n    'chivalry',\n    'chive',\n    'chloride',\n    'chlorine',\n    'choice',\n    'chokehold',\n    'choking',\n    'chomp',\n    'chooser',\n    'choosing',\n    'choosy',\n    'chop',\n    'chosen',\n    'chowder',\n    'chowtime',\n    'chrome',\n    'chubby',\n    'chuck',\n    'chug',\n    'chummy',\n    'chump',\n    'chunk',\n    'churn',\n    'chute',\n    'cider',\n    'cilantro',\n    'cinch',\n    'cinema',\n    'cinnamon',\n    'circle',\n    'circling',\n    'circular',\n    'circulate',\n    'circus',\n    'citable',\n    'citadel',\n    'citation',\n    'citizen',\n    'citric',\n    'citrus',\n    'city',\n    'civic',\n    'civil',\n    'clad',\n    'claim',\n    'clambake',\n    'clammy',\n    'clamor',\n    'clamp',\n    'clamshell',\n    'clang',\n    'clanking',\n    'clapped',\n    'clapper',\n    'clapping',\n    'clarify',\n    'clarinet',\n    'clarity',\n    'clash',\n    'clasp',\n    'class',\n    'clatter',\n    'clause',\n    'clavicle',\n    'claw',\n    'clay',\n    'clean',\n    'clear',\n    'cleat',\n    'cleaver',\n    'cleft',\n    'clench',\n    'clergyman',\n    'clerical',\n    'clerk',\n    'clever',\n    'clicker',\n    'client',\n    'climate',\n    'climatic',\n    'cling',\n    'clinic',\n    'clinking',\n    'clip',\n    'clique',\n    'cloak',\n    'clobber',\n    'clock',\n    'clone',\n    'cloning',\n    'closable',\n    'closure',\n    'clothes',\n    'clothing',\n    'cloud',\n    'clover',\n    'clubbed',\n    'clubbing',\n    'clubhouse',\n    'clump',\n    'clumsily',\n    'clumsy',\n    'clunky',\n    'clustered',\n    'clutch',\n    'clutter',\n    'coach',\n    'coagulant',\n    'coastal',\n    'coaster',\n    'coasting',\n    'coastland',\n    'coastline',\n    'coat',\n    'coauthor',\n    'cobalt',\n    'cobbler',\n    'cobweb',\n    'cocoa',\n    'coconut',\n    'cod',\n    'coeditor',\n    'coerce',\n    'coexist',\n    'coffee',\n    'cofounder',\n    'cognition',\n    'cognitive',\n    'cogwheel',\n    'coherence',\n    'coherent',\n    'cohesive',\n    'coil',\n    'coke',\n    'cola',\n    'cold',\n    'coleslaw',\n    'coliseum',\n    'collage',\n    'collapse',\n    'collar',\n    'collected',\n    'collector',\n    'collide',\n    'collie',\n    'collision',\n    'colonial',\n    'colonist',\n    'colonize',\n    'colony',\n    'colossal',\n    'colt',\n    'coma',\n    'come',\n    'comfort',\n    'comfy',\n    'comic',\n    'coming',\n    'comma',\n    'commence',\n    'commend',\n    'comment',\n    'commerce',\n    'commode',\n    'commodity',\n    'commodore',\n    'common',\n    'commotion',\n    'commute',\n    'commuting',\n    'compacted',\n    'compacter',\n    'compactly',\n    'compactor',\n    'companion',\n    'company',\n    'compare',\n    'compel',\n    'compile',\n    'comply',\n    'component',\n    'composed',\n    'composer',\n    'composite',\n    'compost',\n    'composure',\n    'compound',\n    'compress',\n    'comprised',\n    'computer',\n    'computing',\n    'comrade',\n    'concave',\n    'conceal',\n    'conceded',\n    'concept',\n    'concerned',\n    'concert',\n    'conch',\n    'concierge',\n    'concise',\n    'conclude',\n    'concrete',\n    'concur',\n    'condense',\n    'condiment',\n    'condition',\n    'condone',\n    'conducive',\n    'conductor',\n    'conduit',\n    'cone',\n    'confess',\n    'confetti',\n    'confidant',\n    'confident',\n    'confider',\n    'confiding',\n    'configure',\n    'confined',\n    'confining',\n    'confirm',\n    'conflict',\n    'conform',\n    'confound',\n    'confront',\n    'confused',\n    'confusing',\n    'confusion',\n    'congenial',\n    'congested',\n    'congrats',\n    'congress',\n    'conical',\n    'conjoined',\n    'conjure',\n    'conjuror',\n    'connected',\n    'connector',\n    'consensus',\n    'consent',\n    'console',\n    'consoling',\n    'consonant',\n    'constable',\n    'constant',\n    'constrain',\n    'constrict',\n    'construct',\n    'consult',\n    'consumer',\n    'consuming',\n    'contact',\n    'container',\n    'contempt',\n    'contend',\n    'contented',\n    'contently',\n    'contents',\n    'contest',\n    'context',\n    'contort',\n    'contour',\n    'contrite',\n    'control',\n    'contusion',\n    'convene',\n    'convent',\n    'copartner',\n    'cope',\n    'copied',\n    'copier',\n    'copilot',\n    'coping',\n    'copious',\n    'copper',\n    'copy',\n    'coral',\n    'cork',\n    'cornball',\n    'cornbread',\n    'corncob',\n    'cornea',\n    'corned',\n    'corner',\n    'cornfield',\n    'cornflake',\n    'cornhusk',\n    'cornmeal',\n    'cornstalk',\n    'corny',\n    'coronary',\n    'coroner',\n    'corporal',\n    'corporate',\n    'corral',\n    'correct',\n    'corridor',\n    'corrode',\n    'corroding',\n    'corrosive',\n    'corsage',\n    'corset',\n    'cortex',\n    'cosigner',\n    'cosmetics',\n    'cosmic',\n    'cosmos',\n    'cosponsor',\n    'cost',\n    'cottage',\n    'cotton',\n    'couch',\n    'cough',\n    'could',\n    'countable',\n    'countdown',\n    'counting',\n    'countless',\n    'country',\n    'county',\n    'courier',\n    'covenant',\n    'cover',\n    'coveted',\n    'coveting',\n    'coyness',\n    'cozily',\n    'coziness',\n    'cozy',\n    'crabbing',\n    'crabgrass',\n    'crablike',\n    'crabmeat',\n    'cradle',\n    'cradling',\n    'crafter',\n    'craftily',\n    'craftsman',\n    'craftwork',\n    'crafty',\n    'cramp',\n    'cranberry',\n    'crane',\n    'cranial',\n    'cranium',\n    'crank',\n    'crate',\n    'crave',\n    'craving',\n    'crawfish',\n    'crawlers',\n    'crawling',\n    'crayfish',\n    'crayon',\n    'crazed',\n    'crazily',\n    'craziness',\n    'crazy',\n    'creamed',\n    'creamer',\n    'creamlike',\n    'crease',\n    'creasing',\n    'creatable',\n    'create',\n    'creation',\n    'creative',\n    'creature',\n    'credible',\n    'credibly',\n    'credit',\n    'creed',\n    'creme',\n    'creole',\n    'crepe',\n    'crept',\n    'crescent',\n    'crested',\n    'cresting',\n    'crestless',\n    'crevice',\n    'crewless',\n    'crewman',\n    'crewmate',\n    'crib',\n    'cricket',\n    'cried',\n    'crier',\n    'crimp',\n    'crimson',\n    'cringe',\n    'cringing',\n    'crinkle',\n    'crinkly',\n    'crisped',\n    'crisping',\n    'crisply',\n    'crispness',\n    'crispy',\n    'criteria',\n    'critter',\n    'croak',\n    'crock',\n    'crook',\n    'croon',\n    'crop',\n    'cross',\n    'crouch',\n    'crouton',\n    'crowbar',\n    'crowd',\n    'crown',\n    'crucial',\n    'crudely',\n    'crudeness',\n    'cruelly',\n    'cruelness',\n    'cruelty',\n    'crumb',\n    'crummiest',\n    'crummy',\n    'crumpet',\n    'crumpled',\n    'cruncher',\n    'crunching',\n    'crunchy',\n    'crusader',\n    'crushable',\n    'crushed',\n    'crusher',\n    'crushing',\n    'crust',\n    'crux',\n    'crying',\n    'cryptic',\n    'crystal',\n    'cubbyhole',\n    'cube',\n    'cubical',\n    'cubicle',\n    'cucumber',\n    'cuddle',\n    'cuddly',\n    'cufflink',\n    'culinary',\n    'culminate',\n    'culpable',\n    'culprit',\n    'cultivate',\n    'cultural',\n    'culture',\n    'cupbearer',\n    'cupcake',\n    'cupid',\n    'cupped',\n    'cupping',\n    'curable',\n    'curator',\n    'curdle',\n    'cure',\n    'curfew',\n    'curing',\n    'curled',\n    'curler',\n    'curliness',\n    'curling',\n    'curly',\n    'curry',\n    'curse',\n    'cursive',\n    'cursor',\n    'curtain',\n    'curtly',\n    'curtsy',\n    'curvature',\n    'curve',\n    'curvy',\n    'cushy',\n    'cusp',\n    'cussed',\n    'custard',\n    'custodian',\n    'custody',\n    'customary',\n    'customer',\n    'customize',\n    'customs',\n    'cut',\n    'cycle',\n    'cyclic',\n    'cycling',\n    'cyclist',\n    'cylinder',\n    'cymbal',\n    'cytoplasm',\n    'cytoplast',\n    'dab',\n    'dad',\n    'daffodil',\n    'dagger',\n    'daily',\n    'daintily',\n    'dainty',\n    'dairy',\n    'daisy',\n    'dallying',\n    'dance',\n    'dancing',\n    'dandelion',\n    'dander',\n    'dandruff',\n    'dandy',\n    'danger',\n    'dangle',\n    'dangling',\n    'daredevil',\n    'dares',\n    'daringly',\n    'darkened',\n    'darkening',\n    'darkish',\n    'darkness',\n    'darkroom',\n    'darling',\n    'darn',\n    'dart',\n    'darwinism',\n    'dash',\n    'dastardly',\n    'data',\n    'datebook',\n    'dating',\n    'daughter',\n    'daunting',\n    'dawdler',\n    'dawn',\n    'daybed',\n    'daybreak',\n    'daycare',\n    'daydream',\n    'daylight',\n    'daylong',\n    'dayroom',\n    'daytime',\n    'dazzler',\n    'dazzling',\n    'deacon',\n    'deafening',\n    'deafness',\n    'dealer',\n    'dealing',\n    'dealmaker',\n    'dealt',\n    'dean',\n    'debatable',\n    'debate',\n    'debating',\n    'debit',\n    'debrief',\n    'debtless',\n    'debtor',\n    'debug',\n    'debunk',\n    'decade',\n    'decaf',\n    'decal',\n    'decathlon',\n    'decay',\n    'deceased',\n    'deceit',\n    'deceiver',\n    'deceiving',\n    'december',\n    'decency',\n    'decent',\n    'deception',\n    'deceptive',\n    'decibel',\n    'decidable',\n    'decimal',\n    'decimeter',\n    'decipher',\n    'deck',\n    'declared',\n    'decline',\n    'decode',\n    'decompose',\n    'decorated',\n    'decorator',\n    'decoy',\n    'decrease',\n    'decree',\n    'dedicate',\n    'dedicator',\n    'deduce',\n    'deduct',\n    'deed',\n    'deem',\n    'deepen',\n    'deeply',\n    'deepness',\n    'deface',\n    'defacing',\n    'defame',\n    'default',\n    'defeat',\n    'defection',\n    'defective',\n    'defendant',\n    'defender',\n    'defense',\n    'defensive',\n    'deferral',\n    'deferred',\n    'defiance',\n    'defiant',\n    'defile',\n    'defiling',\n    'define',\n    'definite',\n    'deflate',\n    'deflation',\n    'deflator',\n    'deflected',\n    'deflector',\n    'defog',\n    'deforest',\n    'defraud',\n    'defrost',\n    'deftly',\n    'defuse',\n    'defy',\n    'degraded',\n    'degrading',\n    'degrease',\n    'degree',\n    'dehydrate',\n    'deity',\n    'dejected',\n    'delay',\n    'delegate',\n    'delegator',\n    'delete',\n    'deletion',\n    'delicacy',\n    'delicate',\n    'delicious',\n    'delighted',\n    'delirious',\n    'delirium',\n    'deliverer',\n    'delivery',\n    'delouse',\n    'delta',\n    'deluge',\n    'delusion',\n    'deluxe',\n    'demanding',\n    'demeaning',\n    'demeanor',\n    'demise',\n    'democracy',\n    'democrat',\n    'demote',\n    'demotion',\n    'demystify',\n    'denatured',\n    'deniable',\n    'denial',\n    'denim',\n    'denote',\n    'dense',\n    'density',\n    'dental',\n    'dentist',\n    'denture',\n    'deny',\n    'deodorant',\n    'deodorize',\n    'departed',\n    'departure',\n    'depict',\n    'deplete',\n    'depletion',\n    'deplored',\n    'deploy',\n    'deport',\n    'depose',\n    'depraved',\n    'depravity',\n    'deprecate',\n    'depress',\n    'deprive',\n    'depth',\n    'deputize',\n    'deputy',\n    'derail',\n    'deranged',\n    'derby',\n    'derived',\n    'desecrate',\n    'deserve',\n    'deserving',\n    'designate',\n    'designed',\n    'designer',\n    'designing',\n    'deskbound',\n    'desktop',\n    'deskwork',\n    'desolate',\n    'despair',\n    'despise',\n    'despite',\n    'destiny',\n    'destitute',\n    'destruct',\n    'detached',\n    'detail',\n    'detection',\n    'detective',\n    'detector',\n    'detention',\n    'detergent',\n    'detest',\n    'detonate',\n    'detonator',\n    'detoxify',\n    'detract',\n    'deuce',\n    'devalue',\n    'deviancy',\n    'deviant',\n    'deviate',\n    'deviation',\n    'deviator',\n    'device',\n    'devious',\n    'devotedly',\n    'devotee',\n    'devotion',\n    'devourer',\n    'devouring',\n    'devoutly',\n    'dexterity',\n    'dexterous',\n    'diabetes',\n    'diabetic',\n    'diabolic',\n    'diagnoses',\n    'diagnosis',\n    'diagram',\n    'dial',\n    'diameter',\n    'diaper',\n    'diaphragm',\n    'diary',\n    'dice',\n    'dicing',\n    'dictate',\n    'dictation',\n    'dictator',\n    'difficult',\n    'diffused',\n    'diffuser',\n    'diffusion',\n    'diffusive',\n    'dig',\n    'dilation',\n    'diligence',\n    'diligent',\n    'dill',\n    'dilute',\n    'dime',\n    'diminish',\n    'dimly',\n    'dimmed',\n    'dimmer',\n    'dimness',\n    'dimple',\n    'diner',\n    'dingbat',\n    'dinghy',\n    'dinginess',\n    'dingo',\n    'dingy',\n    'dining',\n    'dinner',\n    'diocese',\n    'dioxide',\n    'diploma',\n    'dipped',\n    'dipper',\n    'dipping',\n    'directed',\n    'direction',\n    'directive',\n    'directly',\n    'directory',\n    'direness',\n    'dirtiness',\n    'disabled',\n    'disagree',\n    'disallow',\n    'disarm',\n    'disarray',\n    'disaster',\n    'disband',\n    'disbelief',\n    'disburse',\n    'discard',\n    'discern',\n    'discharge',\n    'disclose',\n    'discolor',\n    'discount',\n    'discourse',\n    'discover',\n    'discuss',\n    'disdain',\n    'disengage',\n    'disfigure',\n    'disgrace',\n    'dish',\n    'disinfect',\n    'disjoin',\n    'disk',\n    'dislike',\n    'disliking',\n    'dislocate',\n    'dislodge',\n    'disloyal',\n    'dismantle',\n    'dismay',\n    'dismiss',\n    'dismount',\n    'disobey',\n    'disorder',\n    'disown',\n    'disparate',\n    'disparity',\n    'dispatch',\n    'dispense',\n    'dispersal',\n    'dispersed',\n    'disperser',\n    'displace',\n    'display',\n    'displease',\n    'disposal',\n    'dispose',\n    'disprove',\n    'dispute',\n    'disregard',\n    'disrupt',\n    'dissuade',\n    'distance',\n    'distant',\n    'distaste',\n    'distill',\n    'distinct',\n    'distort',\n    'distract',\n    'distress',\n    'district',\n    'distrust',\n    'ditch',\n    'ditto',\n    'ditzy',\n    'dividable',\n    'divided',\n    'dividend',\n    'dividers',\n    'dividing',\n    'divinely',\n    'diving',\n    'divinity',\n    'divisible',\n    'divisibly',\n    'division',\n    'divisive',\n    'divorcee',\n    'dizziness',\n    'dizzy',\n    'doable',\n    'docile',\n    'dock',\n    'doctrine',\n    'document',\n    'dodge',\n    'dodgy',\n    'doily',\n    'doing',\n    'dole',\n    'dollar',\n    'dollhouse',\n    'dollop',\n    'dolly',\n    'dolphin',\n    'domain',\n    'domelike',\n    'domestic',\n    'dominion',\n    'dominoes',\n    'donated',\n    'donation',\n    'donator',\n    'donor',\n    'donut',\n    'doodle',\n    'doorbell',\n    'doorframe',\n    'doorknob',\n    'doorman',\n    'doormat',\n    'doornail',\n    'doorpost',\n    'doorstep',\n    'doorstop',\n    'doorway',\n    'doozy',\n    'dork',\n    'dormitory',\n    'dorsal',\n    'dosage',\n    'dose',\n    'dotted',\n    'doubling',\n    'douche',\n    'dove',\n    'down',\n    'dowry',\n    'doze',\n    'drab',\n    'dragging',\n    'dragonfly',\n    'dragonish',\n    'dragster',\n    'drainable',\n    'drainage',\n    'drained',\n    'drainer',\n    'drainpipe',\n    'dramatic',\n    'dramatize',\n    'drank',\n    'drapery',\n    'drastic',\n    'draw',\n    'dreaded',\n    'dreadful',\n    'dreadlock',\n    'dreamboat',\n    'dreamily',\n    'dreamland',\n    'dreamless',\n    'dreamlike',\n    'dreamt',\n    'dreamy',\n    'drearily',\n    'dreary',\n    'drench',\n    'dress',\n    'drew',\n    'dribble',\n    'dried',\n    'drier',\n    'drift',\n    'driller',\n    'drilling',\n    'drinkable',\n    'drinking',\n    'dripping',\n    'drippy',\n    'drivable',\n    'driven',\n    'driver',\n    'driveway',\n    'driving',\n    'drizzle',\n    'drizzly',\n    'drone',\n    'drool',\n    'droop',\n    'drop-down',\n    'dropbox',\n    'dropkick',\n    'droplet',\n    'dropout',\n    'dropper',\n    'drove',\n    'drown',\n    'drowsily',\n    'drudge',\n    'drum',\n    'dry',\n    'dubbed',\n    'dubiously',\n    'duchess',\n    'duckbill',\n    'ducking',\n    'duckling',\n    'ducktail',\n    'ducky',\n    'duct',\n    'dude',\n    'duffel',\n    'dugout',\n    'duh',\n    'duke',\n    'duller',\n    'dullness',\n    'duly',\n    'dumping',\n    'dumpling',\n    'dumpster',\n    'duo',\n    'dupe',\n    'duplex',\n    'duplicate',\n    'duplicity',\n    'durable',\n    'durably',\n    'duration',\n    'duress',\n    'during',\n    'dusk',\n    'dust',\n    'dutiful',\n    'duty',\n    'duvet',\n    'dwarf',\n    'dweeb',\n    'dwelled',\n    'dweller',\n    'dwelling',\n    'dwindle',\n    'dwindling',\n    'dynamic',\n    'dynamite',\n    'dynasty',\n    'dyslexia',\n    'dyslexic',\n    'each',\n    'eagle',\n    'earache',\n    'eardrum',\n    'earflap',\n    'earful',\n    'earlobe',\n    'early',\n    'earmark',\n    'earmuff',\n    'earphone',\n    'earpiece',\n    'earplugs',\n    'earring',\n    'earshot',\n    'earthen',\n    'earthlike',\n    'earthling',\n    'earthly',\n    'earthworm',\n    'earthy',\n    'earwig',\n    'easeful',\n    'easel',\n    'easiest',\n    'easily',\n    'easiness',\n    'easing',\n    'eastbound',\n    'eastcoast',\n    'easter',\n    'eastward',\n    'eatable',\n    'eaten',\n    'eatery',\n    'eating',\n    'eats',\n    'ebay',\n    'ebony',\n    'ebook',\n    'ecard',\n    'eccentric',\n    'echo',\n    'eclair',\n    'eclipse',\n    'ecologist',\n    'ecology',\n    'economic',\n    'economist',\n    'economy',\n    'ecosphere',\n    'ecosystem',\n    'edge',\n    'edginess',\n    'edging',\n    'edgy',\n    'edition',\n    'editor',\n    'educated',\n    'education',\n    'educator',\n    'eel',\n    'effective',\n    'effects',\n    'efficient',\n    'effort',\n    'eggbeater',\n    'egging',\n    'eggnog',\n    'eggplant',\n    'eggshell',\n    'egomaniac',\n    'egotism',\n    'egotistic',\n    'either',\n    'eject',\n    'elaborate',\n    'elastic',\n    'elated',\n    'elbow',\n    'eldercare',\n    'elderly',\n    'eldest',\n    'electable',\n    'election',\n    'elective',\n    'elephant',\n    'elevate',\n    'elevating',\n    'elevation',\n    'elevator',\n    'eleven',\n    'elf',\n    'eligible',\n    'eligibly',\n    'eliminate',\n    'elite',\n    'elitism',\n    'elixir',\n    'elk',\n    'ellipse',\n    'elliptic',\n    'elm',\n    'elongated',\n    'elope',\n    'eloquence',\n    'eloquent',\n    'elsewhere',\n    'elude',\n    'elusive',\n    'elves',\n    'email',\n    'embargo',\n    'embark',\n    'embassy',\n    'embattled',\n    'embellish',\n    'ember',\n    'embezzle',\n    'emblaze',\n    'emblem',\n    'embody',\n    'embolism',\n    'emboss',\n    'embroider',\n    'emcee',\n    'emerald',\n    'emergency',\n    'emission',\n    'emit',\n    'emote',\n    'emoticon',\n    'emotion',\n    'empathic',\n    'empathy',\n    'emperor',\n    'emphases',\n    'emphasis',\n    'emphasize',\n    'emphatic',\n    'empirical',\n    'employed',\n    'employee',\n    'employer',\n    'emporium',\n    'empower',\n    'emptier',\n    'emptiness',\n    'empty',\n    'emu',\n    'enable',\n    'enactment',\n    'enamel',\n    'enchanted',\n    'enchilada',\n    'encircle',\n    'enclose',\n    'enclosure',\n    'encode',\n    'encore',\n    'encounter',\n    'encourage',\n    'encroach',\n    'encrust',\n    'encrypt',\n    'endanger',\n    'endeared',\n    'endearing',\n    'ended',\n    'ending',\n    'endless',\n    'endnote',\n    'endocrine',\n    'endorphin',\n    'endorse',\n    'endowment',\n    'endpoint',\n    'endurable',\n    'endurance',\n    'enduring',\n    'energetic',\n    'energize',\n    'energy',\n    'enforced',\n    'enforcer',\n    'engaged',\n    'engaging',\n    'engine',\n    'engorge',\n    'engraved',\n    'engraver',\n    'engraving',\n    'engross',\n    'engulf',\n    'enhance',\n    'enigmatic',\n    'enjoyable',\n    'enjoyably',\n    'enjoyer',\n    'enjoying',\n    'enjoyment',\n    'enlarged',\n    'enlarging',\n    'enlighten',\n    'enlisted',\n    'enquirer',\n    'enrage',\n    'enrich',\n    'enroll',\n    'enslave',\n    'ensnare',\n    'ensure',\n    'entail',\n    'entangled',\n    'entering',\n    'entertain',\n    'enticing',\n    'entire',\n    'entitle',\n    'entity',\n    'entomb',\n    'entourage',\n    'entrap',\n    'entree',\n    'entrench',\n    'entrust',\n    'entryway',\n    'entwine',\n    'enunciate',\n    'envelope',\n    'enviable',\n    'enviably',\n    'envious',\n    'envision',\n    'envoy',\n    'envy',\n    'enzyme',\n    'epic',\n    'epidemic',\n    'epidermal',\n    'epidermis',\n    'epidural',\n    'epilepsy',\n    'epileptic',\n    'epilogue',\n    'epiphany',\n    'episode',\n    'equal',\n    'equate',\n    'equation',\n    'equator',\n    'equinox',\n    'equipment',\n    'equity',\n    'equivocal',\n    'eradicate',\n    'erasable',\n    'erased',\n    'eraser',\n    'erasure',\n    'ergonomic',\n    'errand',\n    'errant',\n    'erratic',\n    'error',\n    'erupt',\n    'escalate',\n    'escalator',\n    'escapable',\n    'escapade',\n    'escapist',\n    'escargot',\n    'eskimo',\n    'esophagus',\n    'espionage',\n    'espresso',\n    'esquire',\n    'essay',\n    'essence',\n    'essential',\n    'establish',\n    'estate',\n    'esteemed',\n    'estimate',\n    'estimator',\n    'estranged',\n    'estrogen',\n    'etching',\n    'eternal',\n    'eternity',\n    'ethanol',\n    'ether',\n    'ethically',\n    'ethics',\n    'euphemism',\n    'evacuate',\n    'evacuee',\n    'evade',\n    'evaluate',\n    'evaluator',\n    'evaporate',\n    'evasion',\n    'evasive',\n    'even',\n    'everglade',\n    'evergreen',\n    'everybody',\n    'everyday',\n    'everyone',\n    'evict',\n    'evidence',\n    'evident',\n    'evil',\n    'evoke',\n    'evolution',\n    'evolve',\n    'exact',\n    'exalted',\n    'example',\n    'excavate',\n    'excavator',\n    'exceeding',\n    'exception',\n    'excess',\n    'exchange',\n    'excitable',\n    'exciting',\n    'exclaim',\n    'exclude',\n    'excluding',\n    'exclusion',\n    'exclusive',\n    'excretion',\n    'excretory',\n    'excursion',\n    'excusable',\n    'excusably',\n    'excuse',\n    'exemplary',\n    'exemplify',\n    'exemption',\n    'exerciser',\n    'exert',\n    'exes',\n    'exfoliate',\n    'exhale',\n    'exhaust',\n    'exhume',\n    'exile',\n    'existing',\n    'exit',\n    'exodus',\n    'exonerate',\n    'exorcism',\n    'exorcist',\n    'expand',\n    'expanse',\n    'expansion',\n    'expansive',\n    'expectant',\n    'expedited',\n    'expediter',\n    'expel',\n    'expend',\n    'expenses',\n    'expensive',\n    'expert',\n    'expire',\n    'expiring',\n    'explain',\n    'expletive',\n    'explicit',\n    'explode',\n    'exploit',\n    'explore',\n    'exploring',\n    'exponent',\n    'exporter',\n    'exposable',\n    'expose',\n    'exposure',\n    'express',\n    'expulsion',\n    'exquisite',\n    'extended',\n    'extending',\n    'extent',\n    'extenuate',\n    'exterior',\n    'external',\n    'extinct',\n    'extortion',\n    'extradite',\n    'extras',\n    'extrovert',\n    'extrude',\n    'extruding',\n    'exuberant',\n    'fable',\n    'fabric',\n    'fabulous',\n    'facebook',\n    'facecloth',\n    'facedown',\n    'faceless',\n    'facelift',\n    'faceplate',\n    'faceted',\n    'facial',\n    'facility',\n    'facing',\n    'facsimile',\n    'faction',\n    'factoid',\n    'factor',\n    'factsheet',\n    'factual',\n    'faculty',\n    'fade',\n    'fading',\n    'failing',\n    'falcon',\n    'fall',\n    'false',\n    'falsify',\n    'fame',\n    'familiar',\n    'family',\n    'famine',\n    'famished',\n    'fanatic',\n    'fancied',\n    'fanciness',\n    'fancy',\n    'fanfare',\n    'fang',\n    'fanning',\n    'fantasize',\n    'fantastic',\n    'fantasy',\n    'fascism',\n    'fastball',\n    'faster',\n    'fasting',\n    'fastness',\n    'faucet',\n    'favorable',\n    'favorably',\n    'favored',\n    'favoring',\n    'favorite',\n    'fax',\n    'feast',\n    'federal',\n    'fedora',\n    'feeble',\n    'feed',\n    'feel',\n    'feisty',\n    'feline',\n    'felt-tip',\n    'feminine',\n    'feminism',\n    'feminist',\n    'feminize',\n    'femur',\n    'fence',\n    'fencing',\n    'fender',\n    'ferment',\n    'fernlike',\n    'ferocious',\n    'ferocity',\n    'ferret',\n    'ferris',\n    'ferry',\n    'fervor',\n    'fester',\n    'festival',\n    'festive',\n    'festivity',\n    'fetal',\n    'fetch',\n    'fever',\n    'fiber',\n    'fiction',\n    'fiddle',\n    'fiddling',\n    'fidelity',\n    'fidgeting',\n    'fidgety',\n    'fifteen',\n    'fifth',\n    'fiftieth',\n    'fifty',\n    'figment',\n    'figure',\n    'figurine',\n    'filing',\n    'filled',\n    'filler',\n    'filling',\n    'film',\n    'filter',\n    'filth',\n    'filtrate',\n    'finale',\n    'finalist',\n    'finalize',\n    'finally',\n    'finance',\n    'financial',\n    'finch',\n    'fineness',\n    'finer',\n    'finicky',\n    'finished',\n    'finisher',\n    'finishing',\n    'finite',\n    'finless',\n    'finlike',\n    'fiscally',\n    'fit',\n    'five',\n    'flaccid',\n    'flagman',\n    'flagpole',\n    'flagship',\n    'flagstick',\n    'flagstone',\n    'flail',\n    'flakily',\n    'flaky',\n    'flame',\n    'flammable',\n    'flanked',\n    'flanking',\n    'flannels',\n    'flap',\n    'flaring',\n    'flashback',\n    'flashbulb',\n    'flashcard',\n    'flashily',\n    'flashing',\n    'flashy',\n    'flask',\n    'flatbed',\n    'flatfoot',\n    'flatly',\n    'flatness',\n    'flatten',\n    'flattered',\n    'flatterer',\n    'flattery',\n    'flattop',\n    'flatware',\n    'flatworm',\n    'flavored',\n    'flavorful',\n    'flavoring',\n    'flaxseed',\n    'fled',\n    'fleshed',\n    'fleshy',\n    'flick',\n    'flier',\n    'flight',\n    'flinch',\n    'fling',\n    'flint',\n    'flip',\n    'flirt',\n    'float',\n    'flock',\n    'flogging',\n    'flop',\n    'floral',\n    'florist',\n    'floss',\n    'flounder',\n    'flyable',\n    'flyaway',\n    'flyer',\n    'flying',\n    'flyover',\n    'flypaper',\n    'foam',\n    'foe',\n    'fog',\n    'foil',\n    'folic',\n    'folk',\n    'follicle',\n    'follow',\n    'fondling',\n    'fondly',\n    'fondness',\n    'fondue',\n    'font',\n    'food',\n    'fool',\n    'footage',\n    'football',\n    'footbath',\n    'footboard',\n    'footer',\n    'footgear',\n    'foothill',\n    'foothold',\n    'footing',\n    'footless',\n    'footman',\n    'footnote',\n    'footpad',\n    'footpath',\n    'footprint',\n    'footrest',\n    'footsie',\n    'footsore',\n    'footwear',\n    'footwork',\n    'fossil',\n    'foster',\n    'founder',\n    'founding',\n    'fountain',\n    'fox',\n    'foyer',\n    'fraction',\n    'fracture',\n    'fragile',\n    'fragility',\n    'fragment',\n    'fragrance',\n    'fragrant',\n    'frail',\n    'frame',\n    'framing',\n    'frantic',\n    'fraternal',\n    'frayed',\n    'fraying',\n    'frays',\n    'freckled',\n    'freckles',\n    'freebase',\n    'freebee',\n    'freebie',\n    'freedom',\n    'freefall',\n    'freehand',\n    'freeing',\n    'freeload',\n    'freely',\n    'freemason',\n    'freeness',\n    'freestyle',\n    'freeware',\n    'freeway',\n    'freewill',\n    'freezable',\n    'freezing',\n    'freight',\n    'french',\n    'frenzied',\n    'frenzy',\n    'frequency',\n    'frequent',\n    'fresh',\n    'fretful',\n    'fretted',\n    'friction',\n    'friday',\n    'fridge',\n    'fried',\n    'friend',\n    'frighten',\n    'frightful',\n    'frigidity',\n    'frigidly',\n    'frill',\n    'fringe',\n    'frisbee',\n    'frisk',\n    'fritter',\n    'frivolous',\n    'frolic',\n    'from',\n    'front',\n    'frostbite',\n    'frosted',\n    'frostily',\n    'frosting',\n    'frostlike',\n    'frosty',\n    'froth',\n    'frown',\n    'frozen',\n    'fructose',\n    'frugality',\n    'frugally',\n    'fruit',\n    'frustrate',\n    'frying',\n    'gab',\n    'gaffe',\n    'gag',\n    'gainfully',\n    'gaining',\n    'gains',\n    'gala',\n    'gallantly',\n    'galleria',\n    'gallery',\n    'galley',\n    'gallon',\n    'gallows',\n    'gallstone',\n    'galore',\n    'galvanize',\n    'gambling',\n    'game',\n    'gaming',\n    'gamma',\n    'gander',\n    'gangly',\n    'gangrene',\n    'gangway',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'gargle',\n    'garland',\n    'garlic',\n    'garment',\n    'garnet',\n    'garnish',\n    'garter',\n    'gas',\n    'gatherer',\n    'gathering',\n    'gating',\n    'gauging',\n    'gauntlet',\n    'gauze',\n    'gave',\n    'gawk',\n    'gazing',\n    'gear',\n    'gecko',\n    'geek',\n    'geiger',\n    'gem',\n    'gender',\n    'generic',\n    'generous',\n    'genetics',\n    'genre',\n    'gentile',\n    'gentleman',\n    'gently',\n    'gents',\n    'geography',\n    'geologic',\n    'geologist',\n    'geology',\n    'geometric',\n    'geometry',\n    'geranium',\n    'gerbil',\n    'geriatric',\n    'germicide',\n    'germinate',\n    'germless',\n    'germproof',\n    'gestate',\n    'gestation',\n    'gesture',\n    'getaway',\n    'getting',\n    'getup',\n    'giant',\n    'gibberish',\n    'giblet',\n    'giddily',\n    'giddiness',\n    'giddy',\n    'gift',\n    'gigabyte',\n    'gigahertz',\n    'gigantic',\n    'giggle',\n    'giggling',\n    'giggly',\n    'gigolo',\n    'gilled',\n    'gills',\n    'gimmick',\n    'girdle',\n    'giveaway',\n    'given',\n    'giver',\n    'giving',\n    'gizmo',\n    'gizzard',\n    'glacial',\n    'glacier',\n    'glade',\n    'gladiator',\n    'gladly',\n    'glamorous',\n    'glamour',\n    'glance',\n    'glancing',\n    'glandular',\n    'glare',\n    'glaring',\n    'glass',\n    'glaucoma',\n    'glazing',\n    'gleaming',\n    'gleeful',\n    'glider',\n    'gliding',\n    'glimmer',\n    'glimpse',\n    'glisten',\n    'glitch',\n    'glitter',\n    'glitzy',\n    'gloater',\n    'gloating',\n    'gloomily',\n    'gloomy',\n    'glorified',\n    'glorifier',\n    'glorify',\n    'glorious',\n    'glory',\n    'gloss',\n    'glove',\n    'glowing',\n    'glowworm',\n    'glucose',\n    'glue',\n    'gluten',\n    'glutinous',\n    'glutton',\n    'gnarly',\n    'gnat',\n    'goal',\n    'goatskin',\n    'goes',\n    'goggles',\n    'going',\n    'goldfish',\n    'goldmine',\n    'goldsmith',\n    'golf',\n    'goliath',\n    'gonad',\n    'gondola',\n    'gone',\n    'gong',\n    'good',\n    'gooey',\n    'goofball',\n    'goofiness',\n    'goofy',\n    'google',\n    'goon',\n    'gopher',\n    'gore',\n    'gorged',\n    'gorgeous',\n    'gory',\n    'gosling',\n    'gossip',\n    'gothic',\n    'gotten',\n    'gout',\n    'gown',\n    'grab',\n    'graceful',\n    'graceless',\n    'gracious',\n    'gradation',\n    'graded',\n    'grader',\n    'gradient',\n    'grading',\n    'gradually',\n    'graduate',\n    'graffiti',\n    'grafted',\n    'grafting',\n    'grain',\n    'granddad',\n    'grandkid',\n    'grandly',\n    'grandma',\n    'grandpa',\n    'grandson',\n    'granite',\n    'granny',\n    'granola',\n    'grant',\n    'granular',\n    'grape',\n    'graph',\n    'grapple',\n    'grappling',\n    'grasp',\n    'grass',\n    'gratified',\n    'gratify',\n    'grating',\n    'gratitude',\n    'gratuity',\n    'gravel',\n    'graveness',\n    'graves',\n    'graveyard',\n    'gravitate',\n    'gravity',\n    'gravy',\n    'gray',\n    'grazing',\n    'greasily',\n    'greedily',\n    'greedless',\n    'greedy',\n    'green',\n    'greeter',\n    'greeting',\n    'grew',\n    'greyhound',\n    'grid',\n    'grief',\n    'grievance',\n    'grieving',\n    'grievous',\n    'grill',\n    'grimace',\n    'grimacing',\n    'grime',\n    'griminess',\n    'grimy',\n    'grinch',\n    'grinning',\n    'grip',\n    'gristle',\n    'grit',\n    'groggily',\n    'groggy',\n    'groin',\n    'groom',\n    'groove',\n    'grooving',\n    'groovy',\n    'grope',\n    'ground',\n    'grouped',\n    'grout',\n    'grove',\n    'grower',\n    'growing',\n    'growl',\n    'grub',\n    'grudge',\n    'grudging',\n    'grueling',\n    'gruffly',\n    'grumble',\n    'grumbling',\n    'grumbly',\n    'grumpily',\n    'grunge',\n    'grunt',\n    'guacamole',\n    'guidable',\n    'guidance',\n    'guide',\n    'guiding',\n    'guileless',\n    'guise',\n    'gulf',\n    'gullible',\n    'gully',\n    'gulp',\n    'gumball',\n    'gumdrop',\n    'gumminess',\n    'gumming',\n    'gummy',\n    'gurgle',\n    'gurgling',\n    'guru',\n    'gush',\n    'gusto',\n    'gusty',\n    'gutless',\n    'guts',\n    'gutter',\n    'guy',\n    'guzzler',\n    'gyration',\n    'habitable',\n    'habitant',\n    'habitat',\n    'habitual',\n    'hacked',\n    'hacker',\n    'hacking',\n    'hacksaw',\n    'had',\n    'haggler',\n    'haiku',\n    'half',\n    'halogen',\n    'halt',\n    'halved',\n    'halves',\n    'hamburger',\n    'hamlet',\n    'hammock',\n    'hamper',\n    'hamster',\n    'hamstring',\n    'handbag',\n    'handball',\n    'handbook',\n    'handbrake',\n    'handcart',\n    'handclap',\n    'handclasp',\n    'handcraft',\n    'handcuff',\n    'handed',\n    'handful',\n    'handgrip',\n    'handgun',\n    'handheld',\n    'handiness',\n    'handiwork',\n    'handlebar',\n    'handled',\n    'handler',\n    'handling',\n    'handmade',\n    'handoff',\n    'handpick',\n    'handprint',\n    'handrail',\n    'handsaw',\n    'handset',\n    'handsfree',\n    'handshake',\n    'handstand',\n    'handwash',\n    'handwork',\n    'handwoven',\n    'handwrite',\n    'handyman',\n    'hangnail',\n    'hangout',\n    'hangover',\n    'hangup',\n    'hankering',\n    'hankie',\n    'hanky',\n    'haphazard',\n    'happening',\n    'happier',\n    'happiest',\n    'happily',\n    'happiness',\n    'happy',\n    'harbor',\n    'hardcopy',\n    'hardcore',\n    'hardcover',\n    'harddisk',\n    'hardened',\n    'hardener',\n    'hardening',\n    'hardhat',\n    'hardhead',\n    'hardiness',\n    'hardly',\n    'hardness',\n    'hardship',\n    'hardware',\n    'hardwired',\n    'hardwood',\n    'hardy',\n    'harmful',\n    'harmless',\n    'harmonica',\n    'harmonics',\n    'harmonize',\n    'harmony',\n    'harness',\n    'harpist',\n    'harsh',\n    'harvest',\n    'hash',\n    'hassle',\n    'haste',\n    'hastily',\n    'hastiness',\n    'hasty',\n    'hatbox',\n    'hatchback',\n    'hatchery',\n    'hatchet',\n    'hatching',\n    'hatchling',\n    'hate',\n    'hatless',\n    'hatred',\n    'haunt',\n    'haven',\n    'hazard',\n    'hazelnut',\n    'hazily',\n    'haziness',\n    'hazing',\n    'hazy',\n    'headache',\n    'headband',\n    'headboard',\n    'headcount',\n    'headdress',\n    'headed',\n    'header',\n    'headfirst',\n    'headgear',\n    'heading',\n    'headlamp',\n    'headless',\n    'headlock',\n    'headphone',\n    'headpiece',\n    'headrest',\n    'headroom',\n    'headscarf',\n    'headset',\n    'headsman',\n    'headstand',\n    'headstone',\n    'headway',\n    'headwear',\n    'heap',\n    'heat',\n    'heave',\n    'heavily',\n    'heaviness',\n    'heaving',\n    'hedge',\n    'hedging',\n    'heftiness',\n    'hefty',\n    'helium',\n    'helmet',\n    'helper',\n    'helpful',\n    'helping',\n    'helpless',\n    'helpline',\n    'hemlock',\n    'hemstitch',\n    'hence',\n    'henchman',\n    'henna',\n    'herald',\n    'herbal',\n    'herbicide',\n    'herbs',\n    'heritage',\n    'hermit',\n    'heroics',\n    'heroism',\n    'herring',\n    'herself',\n    'hertz',\n    'hesitancy',\n    'hesitant',\n    'hesitate',\n    'hexagon',\n    'hexagram',\n    'hubcap',\n    'huddle',\n    'huddling',\n    'huff',\n    'hug',\n    'hula',\n    'hulk',\n    'hull',\n    'human',\n    'humble',\n    'humbling',\n    'humbly',\n    'humid',\n    'humiliate',\n    'humility',\n    'humming',\n    'hummus',\n    'humongous',\n    'humorist',\n    'humorless',\n    'humorous',\n    'humpback',\n    'humped',\n    'humvee',\n    'hunchback',\n    'hundredth',\n    'hunger',\n    'hungrily',\n    'hungry',\n    'hunk',\n    'hunter',\n    'hunting',\n    'huntress',\n    'huntsman',\n    'hurdle',\n    'hurled',\n    'hurler',\n    'hurling',\n    'hurray',\n    'hurricane',\n    'hurried',\n    'hurry',\n    'hurt',\n    'husband',\n    'hush',\n    'husked',\n    'huskiness',\n    'hut',\n    'hybrid',\n    'hydrant',\n    'hydrated',\n    'hydration',\n    'hydrogen',\n    'hydroxide',\n    'hyperlink',\n    'hypertext',\n    'hyphen',\n    'hypnoses',\n    'hypnosis',\n    'hypnotic',\n    'hypnotism',\n    'hypnotist',\n    'hypnotize',\n    'hypocrisy',\n    'hypocrite',\n    'ibuprofen',\n    'ice',\n    'iciness',\n    'icing',\n    'icky',\n    'icon',\n    'icy',\n    'idealism',\n    'idealist',\n    'idealize',\n    'ideally',\n    'idealness',\n    'identical',\n    'identify',\n    'identity',\n    'ideology',\n    'idiocy',\n    'idiom',\n    'idly',\n    'igloo',\n    'ignition',\n    'ignore',\n    'iguana',\n    'illicitly',\n    'illusion',\n    'illusive',\n    'image',\n    'imaginary',\n    'imagines',\n    'imaging',\n    'imbecile',\n    'imitate',\n    'imitation',\n    'immature',\n    'immerse',\n    'immersion',\n    'imminent',\n    'immobile',\n    'immodest',\n    'immorally',\n    'immortal',\n    'immovable',\n    'immovably',\n    'immunity',\n    'immunize',\n    'impaired',\n    'impale',\n    'impart',\n    'impatient',\n    'impeach',\n    'impeding',\n    'impending',\n    'imperfect',\n    'imperial',\n    'impish',\n    'implant',\n    'implement',\n    'implicate',\n    'implicit',\n    'implode',\n    'implosion',\n    'implosive',\n    'imply',\n    'impolite',\n    'important',\n    'importer',\n    'impose',\n    'imposing',\n    'impotence',\n    'impotency',\n    'impotent',\n    'impound',\n    'imprecise',\n    'imprint',\n    'imprison',\n    'impromptu',\n    'improper',\n    'improve',\n    'improving',\n    'improvise',\n    'imprudent',\n    'impulse',\n    'impulsive',\n    'impure',\n    'impurity',\n    'iodine',\n    'iodize',\n    'ion',\n    'ipad',\n    'iphone',\n    'ipod',\n    'irate',\n    'irk',\n    'iron',\n    'irregular',\n    'irrigate',\n    'irritable',\n    'irritably',\n    'irritant',\n    'irritate',\n    'islamic',\n    'islamist',\n    'isolated',\n    'isolating',\n    'isolation',\n    'isotope',\n    'issue',\n    'issuing',\n    'italicize',\n    'italics',\n    'item',\n    'itinerary',\n    'itunes',\n    'ivory',\n    'ivy',\n    'jab',\n    'jackal',\n    'jacket',\n    'jackknife',\n    'jackpot',\n    'jailbird',\n    'jailbreak',\n    'jailer',\n    'jailhouse',\n    'jalapeno',\n    'jam',\n    'janitor',\n    'january',\n    'jargon',\n    'jarring',\n    'jasmine',\n    'jaundice',\n    'jaunt',\n    'java',\n    'jawed',\n    'jawless',\n    'jawline',\n    'jaws',\n    'jaybird',\n    'jaywalker',\n    'jazz',\n    'jeep',\n    'jeeringly',\n    'jellied',\n    'jelly',\n    'jersey',\n    'jester',\n    'jet',\n    'jiffy',\n    'jigsaw',\n    'jimmy',\n    'jingle',\n    'jingling',\n    'jinx',\n    'jitters',\n    'jittery',\n    'job',\n    'jockey',\n    'jockstrap',\n    'jogger',\n    'jogging',\n    'john',\n    'joining',\n    'jokester',\n    'jokingly',\n    'jolliness',\n    'jolly',\n    'jolt',\n    'jot',\n    'jovial',\n    'joyfully',\n    'joylessly',\n    'joyous',\n    'joyride',\n    'joystick',\n    'jubilance',\n    'jubilant',\n    'judge',\n    'judgingly',\n    'judicial',\n    'judiciary',\n    'judo',\n    'juggle',\n    'juggling',\n    'jugular',\n    'juice',\n    'juiciness',\n    'juicy',\n    'jujitsu',\n    'jukebox',\n    'july',\n    'jumble',\n    'jumbo',\n    'jump',\n    'junction',\n    'juncture',\n    'june',\n    'junior',\n    'juniper',\n    'junkie',\n    'junkman',\n    'junkyard',\n    'jurist',\n    'juror',\n    'jury',\n    'justice',\n    'justifier',\n    'justify',\n    'justly',\n    'justness',\n    'juvenile',\n    'kabob',\n    'kangaroo',\n    'karaoke',\n    'karate',\n    'karma',\n    'kebab',\n    'keenly',\n    'keenness',\n    'keep',\n    'keg',\n    'kelp',\n    'kennel',\n    'kept',\n    'kerchief',\n    'kerosene',\n    'kettle',\n    'kick',\n    'kiln',\n    'kilobyte',\n    'kilogram',\n    'kilometer',\n    'kilowatt',\n    'kilt',\n    'kimono',\n    'kindle',\n    'kindling',\n    'kindly',\n    'kindness',\n    'kindred',\n    'kinetic',\n    'kinfolk',\n    'king',\n    'kinship',\n    'kinsman',\n    'kinswoman',\n    'kissable',\n    'kisser',\n    'kissing',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kitty',\n    'kiwi',\n    'kleenex',\n    'knapsack',\n    'knee',\n    'knelt',\n    'knickers',\n    'knoll',\n    'koala',\n    'kooky',\n    'kosher',\n    'krypton',\n    'kudos',\n    'kung',\n    'labored',\n    'laborer',\n    'laboring',\n    'laborious',\n    'labrador',\n    'ladder',\n    'ladies',\n    'ladle',\n    'ladybug',\n    'ladylike',\n    'lagged',\n    'lagging',\n    'lagoon',\n    'lair',\n    'lake',\n    'lance',\n    'landed',\n    'landfall',\n    'landfill',\n    'landing',\n    'landlady',\n    'landless',\n    'landline',\n    'landlord',\n    'landmark',\n    'landmass',\n    'landmine',\n    'landowner',\n    'landscape',\n    'landside',\n    'landslide',\n    'language',\n    'lankiness',\n    'lanky',\n    'lantern',\n    'lapdog',\n    'lapel',\n    'lapped',\n    'lapping',\n    'laptop',\n    'lard',\n    'large',\n    'lark',\n    'lash',\n    'lasso',\n    'last',\n    'latch',\n    'late',\n    'lather',\n    'latitude',\n    'latrine',\n    'latter',\n    'latticed',\n    'launch',\n    'launder',\n    'laundry',\n    'laurel',\n    'lavender',\n    'lavish',\n    'laxative',\n    'lazily',\n    'laziness',\n    'lazy',\n    'lecturer',\n    'left',\n    'legacy',\n    'legal',\n    'legend',\n    'legged',\n    'leggings',\n    'legible',\n    'legibly',\n    'legislate',\n    'lego',\n    'legroom',\n    'legume',\n    'legwarmer',\n    'legwork',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'lent',\n    'leotard',\n    'lesser',\n    'letdown',\n    'lethargic',\n    'lethargy',\n    'letter',\n    'lettuce',\n    'level',\n    'leverage',\n    'levers',\n    'levitate',\n    'levitator',\n    'liability',\n    'liable',\n    'liberty',\n    'librarian',\n    'library',\n    'licking',\n    'licorice',\n    'lid',\n    'life',\n    'lifter',\n    'lifting',\n    'liftoff',\n    'ligament',\n    'likely',\n    'likeness',\n    'likewise',\n    'liking',\n    'lilac',\n    'lilly',\n    'lily',\n    'limb',\n    'limeade',\n    'limelight',\n    'limes',\n    'limit',\n    'limping',\n    'limpness',\n    'line',\n    'lingo',\n    'linguini',\n    'linguist',\n    'lining',\n    'linked',\n    'linoleum',\n    'linseed',\n    'lint',\n    'lion',\n    'lip',\n    'liquefy',\n    'liqueur',\n    'liquid',\n    'lisp',\n    'list',\n    'litigate',\n    'litigator',\n    'litmus',\n    'litter',\n    'little',\n    'livable',\n    'lived',\n    'lively',\n    'liver',\n    'livestock',\n    'lividly',\n    'living',\n    'lizard',\n    'lubricant',\n    'lubricate',\n    'lucid',\n    'luckily',\n    'luckiness',\n    'luckless',\n    'lucrative',\n    'ludicrous',\n    'lugged',\n    'lukewarm',\n    'lullaby',\n    'lumber',\n    'luminance',\n    'luminous',\n    'lumpiness',\n    'lumping',\n    'lumpish',\n    'lunacy',\n    'lunar',\n    'lunchbox',\n    'luncheon',\n    'lunchroom',\n    'lunchtime',\n    'lung',\n    'lurch',\n    'lure',\n    'luridness',\n    'lurk',\n    'lushly',\n    'lushness',\n    'luster',\n    'lustfully',\n    'lustily',\n    'lustiness',\n    'lustrous',\n    'lusty',\n    'luxurious',\n    'luxury',\n    'lying',\n    'lyrically',\n    'lyricism',\n    'lyricist',\n    'lyrics',\n    'macarena',\n    'macaroni',\n    'macaw',\n    'mace',\n    'machine',\n    'machinist',\n    'magazine',\n    'magenta',\n    'maggot',\n    'magical',\n    'magician',\n    'magma',\n    'magnesium',\n    'magnetic',\n    'magnetism',\n    'magnetize',\n    'magnifier',\n    'magnify',\n    'magnitude',\n    'magnolia',\n    'mahogany',\n    'maimed',\n    'majestic',\n    'majesty',\n    'majorette',\n    'majority',\n    'makeover',\n    'maker',\n    'makeshift',\n    'making',\n    'malformed',\n    'malt',\n    'mama',\n    'mammal',\n    'mammary',\n    'mammogram',\n    'manager',\n    'managing',\n    'manatee',\n    'mandarin',\n    'mandate',\n    'mandatory',\n    'mandolin',\n    'manger',\n    'mangle',\n    'mango',\n    'mangy',\n    'manhandle',\n    'manhole',\n    'manhood',\n    'manhunt',\n    'manicotti',\n    'manicure',\n    'manifesto',\n    'manila',\n    'mankind',\n    'manlike',\n    'manliness',\n    'manly',\n    'manmade',\n    'manned',\n    'mannish',\n    'manor',\n    'manpower',\n    'mantis',\n    'mantra',\n    'manual',\n    'many',\n    'map',\n    'marathon',\n    'marauding',\n    'marbled',\n    'marbles',\n    'marbling',\n    'march',\n    'mardi',\n    'margarine',\n    'margarita',\n    'margin',\n    'marigold',\n    'marina',\n    'marine',\n    'marital',\n    'maritime',\n    'marlin',\n    'marmalade',\n    'maroon',\n    'married',\n    'marrow',\n    'marry',\n    'marshland',\n    'marshy',\n    'marsupial',\n    'marvelous',\n    'marxism',\n    'mascot',\n    'masculine',\n    'mashed',\n    'mashing',\n    'massager',\n    'masses',\n    'massive',\n    'mastiff',\n    'matador',\n    'matchbook',\n    'matchbox',\n    'matcher',\n    'matching',\n    'matchless',\n    'material',\n    'maternal',\n    'maternity',\n    'math',\n    'mating',\n    'matriarch',\n    'matrimony',\n    'matrix',\n    'matron',\n    'matted',\n    'matter',\n    'maturely',\n    'maturing',\n    'maturity',\n    'mauve',\n    'maverick',\n    'maximize',\n    'maximum',\n    'maybe',\n    'mayday',\n    'mayflower',\n    'moaner',\n    'moaning',\n    'mobile',\n    'mobility',\n    'mobilize',\n    'mobster',\n    'mocha',\n    'mocker',\n    'mockup',\n    'modified',\n    'modify',\n    'modular',\n    'modulator',\n    'module',\n    'moisten',\n    'moistness',\n    'moisture',\n    'molar',\n    'molasses',\n    'mold',\n    'molecular',\n    'molecule',\n    'molehill',\n    'mollusk',\n    'mom',\n    'monastery',\n    'monday',\n    'monetary',\n    'monetize',\n    'moneybags',\n    'moneyless',\n    'moneywise',\n    'mongoose',\n    'mongrel',\n    'monitor',\n    'monkhood',\n    'monogamy',\n    'monogram',\n    'monologue',\n    'monopoly',\n    'monorail',\n    'monotone',\n    'monotype',\n    'monoxide',\n    'monsieur',\n    'monsoon',\n    'monstrous',\n    'monthly',\n    'monument',\n    'moocher',\n    'moodiness',\n    'moody',\n    'mooing',\n    'moonbeam',\n    'mooned',\n    'moonlight',\n    'moonlike',\n    'moonlit',\n    'moonrise',\n    'moonscape',\n    'moonshine',\n    'moonstone',\n    'moonwalk',\n    'mop',\n    'morale',\n    'morality',\n    'morally',\n    'morbidity',\n    'morbidly',\n    'morphine',\n    'morphing',\n    'morse',\n    'mortality',\n    'mortally',\n    'mortician',\n    'mortified',\n    'mortify',\n    'mortuary',\n    'mosaic',\n    'mossy',\n    'most',\n    'mothball',\n    'mothproof',\n    'motion',\n    'motivate',\n    'motivator',\n    'motive',\n    'motocross',\n    'motor',\n    'motto',\n    'mountable',\n    'mountain',\n    'mounted',\n    'mounting',\n    'mourner',\n    'mournful',\n    'mouse',\n    'mousiness',\n    'moustache',\n    'mousy',\n    'mouth',\n    'movable',\n    'move',\n    'movie',\n    'moving',\n    'mower',\n    'mowing',\n    'much',\n    'muck',\n    'mud',\n    'mug',\n    'mulberry',\n    'mulch',\n    'mule',\n    'mulled',\n    'mullets',\n    'multiple',\n    'multiply',\n    'multitask',\n    'multitude',\n    'mumble',\n    'mumbling',\n    'mumbo',\n    'mummified',\n    'mummify',\n    'mummy',\n    'mumps',\n    'munchkin',\n    'mundane',\n    'municipal',\n    'muppet',\n    'mural',\n    'murkiness',\n    'murky',\n    'murmuring',\n    'muscular',\n    'museum',\n    'mushily',\n    'mushiness',\n    'mushroom',\n    'mushy',\n    'music',\n    'musket',\n    'muskiness',\n    'musky',\n    'mustang',\n    'mustard',\n    'muster',\n    'mustiness',\n    'musty',\n    'mutable',\n    'mutate',\n    'mutation',\n    'mute',\n    'mutilated',\n    'mutilator',\n    'mutiny',\n    'mutt',\n    'mutual',\n    'muzzle',\n    'myself',\n    'myspace',\n    'mystified',\n    'mystify',\n    'myth',\n    'nacho',\n    'nag',\n    'nail',\n    'name',\n    'naming',\n    'nanny',\n    'nanometer',\n    'nape',\n    'napkin',\n    'napped',\n    'napping',\n    'nappy',\n    'narrow',\n    'nastily',\n    'nastiness',\n    'national',\n    'native',\n    'nativity',\n    'natural',\n    'nature',\n    'naturist',\n    'nautical',\n    'navigate',\n    'navigator',\n    'navy',\n    'nearby',\n    'nearest',\n    'nearly',\n    'nearness',\n    'neatly',\n    'neatness',\n    'nebula',\n    'nebulizer',\n    'nectar',\n    'negate',\n    'negation',\n    'negative',\n    'neglector',\n    'negligee',\n    'negligent',\n    'negotiate',\n    'nemeses',\n    'nemesis',\n    'neon',\n    'nephew',\n    'nerd',\n    'nervous',\n    'nervy',\n    'nest',\n    'net',\n    'neurology',\n    'neuron',\n    'neurosis',\n    'neurotic',\n    'neuter',\n    'neutron',\n    'never',\n    'next',\n    'nibble',\n    'nickname',\n    'nicotine',\n    'niece',\n    'nifty',\n    'nimble',\n    'nimbly',\n    'nineteen',\n    'ninetieth',\n    'ninja',\n    'nintendo',\n    'ninth',\n    'nuclear',\n    'nuclei',\n    'nucleus',\n    'nugget',\n    'nullify',\n    'number',\n    'numbing',\n    'numbly',\n    'numbness',\n    'numeral',\n    'numerate',\n    'numerator',\n    'numeric',\n    'numerous',\n    'nuptials',\n    'nursery',\n    'nursing',\n    'nurture',\n    'nutcase',\n    'nutlike',\n    'nutmeg',\n    'nutrient',\n    'nutshell',\n    'nuttiness',\n    'nutty',\n    'nuzzle',\n    'nylon',\n    'oaf',\n    'oak',\n    'oasis',\n    'oat',\n    'obedience',\n    'obedient',\n    'obituary',\n    'object',\n    'obligate',\n    'obliged',\n    'oblivion',\n    'oblivious',\n    'oblong',\n    'obnoxious',\n    'oboe',\n    'obscure',\n    'obscurity',\n    'observant',\n    'observer',\n    'observing',\n    'obsessed',\n    'obsession',\n    'obsessive',\n    'obsolete',\n    'obstacle',\n    'obstinate',\n    'obstruct',\n    'obtain',\n    'obtrusive',\n    'obtuse',\n    'obvious',\n    'occultist',\n    'occupancy',\n    'occupant',\n    'occupier',\n    'occupy',\n    'ocean',\n    'ocelot',\n    'octagon',\n    'octane',\n    'october',\n    'octopus',\n    'ogle',\n    'oil',\n    'oink',\n    'ointment',\n    'okay',\n    'old',\n    'olive',\n    'olympics',\n    'omega',\n    'omen',\n    'ominous',\n    'omission',\n    'omit',\n    'omnivore',\n    'onboard',\n    'oncoming',\n    'ongoing',\n    'onion',\n    'online',\n    'onlooker',\n    'only',\n    'onscreen',\n    'onset',\n    'onshore',\n    'onslaught',\n    'onstage',\n    'onto',\n    'onward',\n    'onyx',\n    'oops',\n    'ooze',\n    'oozy',\n    'opacity',\n    'opal',\n    'open',\n    'operable',\n    'operate',\n    'operating',\n    'operation',\n    'operative',\n    'operator',\n    'opium',\n    'opossum',\n    'opponent',\n    'oppose',\n    'opposing',\n    'opposite',\n    'oppressed',\n    'oppressor',\n    'opt',\n    'opulently',\n    'osmosis',\n    'other',\n    'otter',\n    'ouch',\n    'ought',\n    'ounce',\n    'outage',\n    'outback',\n    'outbid',\n    'outboard',\n    'outbound',\n    'outbreak',\n    'outburst',\n    'outcast',\n    'outclass',\n    'outcome',\n    'outdated',\n    'outdoors',\n    'outer',\n    'outfield',\n    'outfit',\n    'outflank',\n    'outgoing',\n    'outgrow',\n    'outhouse',\n    'outing',\n    'outlast',\n    'outlet',\n    'outline',\n    'outlook',\n    'outlying',\n    'outmatch',\n    'outmost',\n    'outnumber',\n    'outplayed',\n    'outpost',\n    'outpour',\n    'output',\n    'outrage',\n    'outrank',\n    'outreach',\n    'outright',\n    'outscore',\n    'outsell',\n    'outshine',\n    'outshoot',\n    'outsider',\n    'outskirts',\n    'outsmart',\n    'outsource',\n    'outspoken',\n    'outtakes',\n    'outthink',\n    'outward',\n    'outweigh',\n    'outwit',\n    'oval',\n    'ovary',\n    'oven',\n    'overact',\n    'overall',\n    'overarch',\n    'overbid',\n    'overbill',\n    'overbite',\n    'overblown',\n    'overboard',\n    'overbook',\n    'overbuilt',\n    'overcast',\n    'overcoat',\n    'overcome',\n    'overcook',\n    'overcrowd',\n    'overdraft',\n    'overdrawn',\n    'overdress',\n    'overdrive',\n    'overdue',\n    'overeager',\n    'overeater',\n    'overexert',\n    'overfed',\n    'overfeed',\n    'overfill',\n    'overflow',\n    'overfull',\n    'overgrown',\n    'overhand',\n    'overhang',\n    'overhaul',\n    'overhead',\n    'overhear',\n    'overheat',\n    'overhung',\n    'overjoyed',\n    'overkill',\n    'overlabor',\n    'overlaid',\n    'overlap',\n    'overlay',\n    'overload',\n    'overlook',\n    'overlord',\n    'overlying',\n    'overnight',\n    'overpass',\n    'overpay',\n    'overplant',\n    'overplay',\n    'overpower',\n    'overprice',\n    'overrate',\n    'overreach',\n    'overreact',\n    'override',\n    'overripe',\n    'overrule',\n    'overrun',\n    'overshoot',\n    'overshot',\n    'oversight',\n    'oversized',\n    'oversleep',\n    'oversold',\n    'overspend',\n    'overstate',\n    'overstay',\n    'overstep',\n    'overstock',\n    'overstuff',\n    'oversweet',\n    'overtake',\n    'overthrow',\n    'overtime',\n    'overtly',\n    'overtone',\n    'overture',\n    'overturn',\n    'overuse',\n    'overvalue',\n    'overview',\n    'overwrite',\n    'owl',\n    'oxford',\n    'oxidant',\n    'oxidation',\n    'oxidize',\n    'oxidizing',\n    'oxygen',\n    'oxymoron',\n    'oyster',\n    'ozone',\n    'paced',\n    'pacemaker',\n    'pacific',\n    'pacifier',\n    'pacifism',\n    'pacifist',\n    'pacify',\n    'padded',\n    'padding',\n    'paddle',\n    'paddling',\n    'padlock',\n    'pagan',\n    'pager',\n    'paging',\n    'pajamas',\n    'palace',\n    'palatable',\n    'palm',\n    'palpable',\n    'palpitate',\n    'paltry',\n    'pampered',\n    'pamperer',\n    'pampers',\n    'pamphlet',\n    'panama',\n    'pancake',\n    'pancreas',\n    'panda',\n    'pandemic',\n    'pang',\n    'panhandle',\n    'panic',\n    'panning',\n    'panorama',\n    'panoramic',\n    'panther',\n    'pantomime',\n    'pantry',\n    'pants',\n    'pantyhose',\n    'paparazzi',\n    'papaya',\n    'paper',\n    'paprika',\n    'papyrus',\n    'parabola',\n    'parachute',\n    'parade',\n    'paradox',\n    'paragraph',\n    'parakeet',\n    'paralegal',\n    'paralyses',\n    'paralysis',\n    'paralyze',\n    'paramedic',\n    'parameter',\n    'paramount',\n    'parasail',\n    'parasite',\n    'parasitic',\n    'parcel',\n    'parched',\n    'parchment',\n    'pardon',\n    'parish',\n    'parka',\n    'parking',\n    'parkway',\n    'parlor',\n    'parmesan',\n    'parole',\n    'parrot',\n    'parsley',\n    'parsnip',\n    'partake',\n    'parted',\n    'parting',\n    'partition',\n    'partly',\n    'partner',\n    'partridge',\n    'party',\n    'passable',\n    'passably',\n    'passage',\n    'passcode',\n    'passenger',\n    'passerby',\n    'passing',\n    'passion',\n    'passive',\n    'passivism',\n    'passover',\n    'passport',\n    'password',\n    'pasta',\n    'pasted',\n    'pastel',\n    'pastime',\n    'pastor',\n    'pastrami',\n    'pasture',\n    'pasty',\n    'patchwork',\n    'patchy',\n    'paternal',\n    'paternity',\n    'path',\n    'patience',\n    'patient',\n    'patio',\n    'patriarch',\n    'patriot',\n    'patrol',\n    'patronage',\n    'patronize',\n    'pauper',\n    'pavement',\n    'paver',\n    'pavestone',\n    'pavilion',\n    'paving',\n    'pawing',\n    'payable',\n    'payback',\n    'paycheck',\n    'payday',\n    'payee',\n    'payer',\n    'paying',\n    'payment',\n    'payphone',\n    'payroll',\n    'pebble',\n    'pebbly',\n    'pecan',\n    'pectin',\n    'peculiar',\n    'peddling',\n    'pediatric',\n    'pedicure',\n    'pedigree',\n    'pedometer',\n    'pegboard',\n    'pelican',\n    'pellet',\n    'pelt',\n    'pelvis',\n    'penalize',\n    'penalty',\n    'pencil',\n    'pendant',\n    'pending',\n    'penholder',\n    'penknife',\n    'pennant',\n    'penniless',\n    'penny',\n    'penpal',\n    'pension',\n    'pentagon',\n    'pentagram',\n    'pep',\n    'perceive',\n    'percent',\n    'perch',\n    'percolate',\n    'perennial',\n    'perfected',\n    'perfectly',\n    'perfume',\n    'periscope',\n    'perish',\n    'perjurer',\n    'perjury',\n    'perkiness',\n    'perky',\n    'perm',\n    'peroxide',\n    'perpetual',\n    'perplexed',\n    'persecute',\n    'persevere',\n    'persuaded',\n    'persuader',\n    'pesky',\n    'peso',\n    'pessimism',\n    'pessimist',\n    'pester',\n    'pesticide',\n    'petal',\n    'petite',\n    'petition',\n    'petri',\n    'petroleum',\n    'petted',\n    'petticoat',\n    'pettiness',\n    'petty',\n    'petunia',\n    'phantom',\n    'phobia',\n    'phoenix',\n    'phonebook',\n    'phoney',\n    'phonics',\n    'phoniness',\n    'phony',\n    'phosphate',\n    'photo',\n    'phrase',\n    'phrasing',\n    'placard',\n    'placate',\n    'placidly',\n    'plank',\n    'planner',\n    'plant',\n    'plasma',\n    'plaster',\n    'plastic',\n    'plated',\n    'platform',\n    'plating',\n    'platinum',\n    'platonic',\n    'platter',\n    'platypus',\n    'plausible',\n    'plausibly',\n    'playable',\n    'playback',\n    'player',\n    'playful',\n    'playgroup',\n    'playhouse',\n    'playing',\n    'playlist',\n    'playmaker',\n    'playmate',\n    'playoff',\n    'playpen',\n    'playroom',\n    'playset',\n    'plaything',\n    'playtime',\n    'plaza',\n    'pleading',\n    'pleat',\n    'pledge',\n    'plentiful',\n    'plenty',\n    'plethora',\n    'plexiglas',\n    'pliable',\n    'plod',\n    'plop',\n    'plot',\n    'plow',\n    'ploy',\n    'pluck',\n    'plug',\n    'plunder',\n    'plunging',\n    'plural',\n    'plus',\n    'plutonium',\n    'plywood',\n    'poach',\n    'pod',\n    'poem',\n    'poet',\n    'pogo',\n    'pointed',\n    'pointer',\n    'pointing',\n    'pointless',\n    'pointy',\n    'poise',\n    'poison',\n    'poker',\n    'poking',\n    'polar',\n    'police',\n    'policy',\n    'polio',\n    'polish',\n    'politely',\n    'polka',\n    'polo',\n    'polyester',\n    'polygon',\n    'polygraph',\n    'polymer',\n    'poncho',\n    'pond',\n    'pony',\n    'popcorn',\n    'pope',\n    'poplar',\n    'popper',\n    'poppy',\n    'popsicle',\n    'populace',\n    'popular',\n    'populate',\n    'porcupine',\n    'pork',\n    'porous',\n    'porridge',\n    'portable',\n    'portal',\n    'portfolio',\n    'porthole',\n    'portion',\n    'portly',\n    'portside',\n    'poser',\n    'posh',\n    'posing',\n    'possible',\n    'possibly',\n    'possum',\n    'postage',\n    'postal',\n    'postbox',\n    'postcard',\n    'posted',\n    'poster',\n    'posting',\n    'postnasal',\n    'posture',\n    'postwar',\n    'pouch',\n    'pounce',\n    'pouncing',\n    'pound',\n    'pouring',\n    'pout',\n    'powdered',\n    'powdering',\n    'powdery',\n    'power',\n    'powwow',\n    'pox',\n    'praising',\n    'prance',\n    'prancing',\n    'pranker',\n    'prankish',\n    'prankster',\n    'prayer',\n    'praying',\n    'preacher',\n    'preaching',\n    'preachy',\n    'preamble',\n    'precinct',\n    'precise',\n    'precision',\n    'precook',\n    'precut',\n    'predator',\n    'predefine',\n    'predict',\n    'preface',\n    'prefix',\n    'preflight',\n    'preformed',\n    'pregame',\n    'pregnancy',\n    'pregnant',\n    'preheated',\n    'prelaunch',\n    'prelaw',\n    'prelude',\n    'premiere',\n    'premises',\n    'premium',\n    'prenatal',\n    'preoccupy',\n    'preorder',\n    'prepaid',\n    'prepay',\n    'preplan',\n    'preppy',\n    'preschool',\n    'prescribe',\n    'preseason',\n    'preset',\n    'preshow',\n    'president',\n    'presoak',\n    'press',\n    'presume',\n    'presuming',\n    'preteen',\n    'pretended',\n    'pretender',\n    'pretense',\n    'pretext',\n    'pretty',\n    'pretzel',\n    'prevail',\n    'prevalent',\n    'prevent',\n    'preview',\n    'previous',\n    'prewar',\n    'prewashed',\n    'prideful',\n    'pried',\n    'primal',\n    'primarily',\n    'primary',\n    'primate',\n    'primer',\n    'primp',\n    'princess',\n    'print',\n    'prior',\n    'prism',\n    'prison',\n    'prissy',\n    'pristine',\n    'privacy',\n    'private',\n    'privatize',\n    'prize',\n    'proactive',\n    'probable',\n    'probably',\n    'probation',\n    'probe',\n    'probing',\n    'probiotic',\n    'problem',\n    'procedure',\n    'process',\n    'proclaim',\n    'procreate',\n    'procurer',\n    'prodigal',\n    'prodigy',\n    'produce',\n    'product',\n    'profane',\n    'profanity',\n    'professed',\n    'professor',\n    'profile',\n    'profound',\n    'profusely',\n    'progeny',\n    'prognosis',\n    'program',\n    'progress',\n    'projector',\n    'prologue',\n    'prolonged',\n    'promenade',\n    'prominent',\n    'promoter',\n    'promotion',\n    'prompter',\n    'promptly',\n    'prone',\n    'prong',\n    'pronounce',\n    'pronto',\n    'proofing',\n    'proofread',\n    'proofs',\n    'propeller',\n    'properly',\n    'property',\n    'proponent',\n    'proposal',\n    'propose',\n    'props',\n    'prorate',\n    'protector',\n    'protegee',\n    'proton',\n    'prototype',\n    'protozoan',\n    'protract',\n    'protrude',\n    'proud',\n    'provable',\n    'proved',\n    'proven',\n    'provided',\n    'provider',\n    'providing',\n    'province',\n    'proving',\n    'provoke',\n    'provoking',\n    'provolone',\n    'prowess',\n    'prowler',\n    'prowling',\n    'proximity',\n    'proxy',\n    'prozac',\n    'prude',\n    'prudishly',\n    'prune',\n    'pruning',\n    'pry',\n    'psychic',\n    'public',\n    'publisher',\n    'pucker',\n    'pueblo',\n    'pug',\n    'pull',\n    'pulmonary',\n    'pulp',\n    'pulsate',\n    'pulse',\n    'pulverize',\n    'puma',\n    'pumice',\n    'pummel',\n    'punch',\n    'punctual',\n    'punctuate',\n    'punctured',\n    'pungent',\n    'punisher',\n    'punk',\n    'pupil',\n    'puppet',\n    'puppy',\n    'purchase',\n    'pureblood',\n    'purebred',\n    'purely',\n    'pureness',\n    'purgatory',\n    'purge',\n    'purging',\n    'purifier',\n    'purify',\n    'purist',\n    'puritan',\n    'purity',\n    'purple',\n    'purplish',\n    'purposely',\n    'purr',\n    'purse',\n    'pursuable',\n    'pursuant',\n    'pursuit',\n    'purveyor',\n    'pushcart',\n    'pushchair',\n    'pusher',\n    'pushiness',\n    'pushing',\n    'pushover',\n    'pushpin',\n    'pushup',\n    'pushy',\n    'putdown',\n    'putt',\n    'puzzle',\n    'puzzling',\n    'pyramid',\n    'pyromania',\n    'python',\n    'quack',\n    'quadrant',\n    'quail',\n    'quaintly',\n    'quake',\n    'quaking',\n    'qualified',\n    'qualifier',\n    'qualify',\n    'quality',\n    'qualm',\n    'quantum',\n    'quarrel',\n    'quarry',\n    'quartered',\n    'quarterly',\n    'quarters',\n    'quartet',\n    'quench',\n    'query',\n    'quicken',\n    'quickly',\n    'quickness',\n    'quicksand',\n    'quickstep',\n    'quiet',\n    'quill',\n    'quilt',\n    'quintet',\n    'quintuple',\n    'quirk',\n    'quit',\n    'quiver',\n    'quizzical',\n    'quotable',\n    'quotation',\n    'quote',\n    'rabid',\n    'race',\n    'racing',\n    'racism',\n    'rack',\n    'racoon',\n    'radar',\n    'radial',\n    'radiance',\n    'radiantly',\n    'radiated',\n    'radiation',\n    'radiator',\n    'radio',\n    'radish',\n    'raffle',\n    'raft',\n    'rage',\n    'ragged',\n    'raging',\n    'ragweed',\n    'raider',\n    'railcar',\n    'railing',\n    'railroad',\n    'railway',\n    'raisin',\n    'rake',\n    'raking',\n    'rally',\n    'ramble',\n    'rambling',\n    'ramp',\n    'ramrod',\n    'ranch',\n    'rancidity',\n    'random',\n    'ranged',\n    'ranger',\n    'ranging',\n    'ranked',\n    'ranking',\n    'ransack',\n    'ranting',\n    'rants',\n    'rare',\n    'rarity',\n    'rascal',\n    'rash',\n    'rasping',\n    'ravage',\n    'raven',\n    'ravine',\n    'raving',\n    'ravioli',\n    'ravishing',\n    'reabsorb',\n    'reach',\n    'reacquire',\n    'reaction',\n    'reactive',\n    'reactor',\n    'reaffirm',\n    'ream',\n    'reanalyze',\n    'reappear',\n    'reapply',\n    'reappoint',\n    'reapprove',\n    'rearrange',\n    'rearview',\n    'reason',\n    'reassign',\n    'reassure',\n    'reattach',\n    'reawake',\n    'rebalance',\n    'rebate',\n    'rebel',\n    'rebirth',\n    'reboot',\n    'reborn',\n    'rebound',\n    'rebuff',\n    'rebuild',\n    'rebuilt',\n    'reburial',\n    'rebuttal',\n    'recall',\n    'recant',\n    'recapture',\n    'recast',\n    'recede',\n    'recent',\n    'recess',\n    'recharger',\n    'recipient',\n    'recital',\n    'recite',\n    'reckless',\n    'reclaim',\n    'recliner',\n    'reclining',\n    'recluse',\n    'reclusive',\n    'recognize',\n    'recoil',\n    'recollect',\n    'recolor',\n    'reconcile',\n    'reconfirm',\n    'reconvene',\n    'recopy',\n    'record',\n    'recount',\n    'recoup',\n    'recovery',\n    'recreate',\n    'rectal',\n    'rectangle',\n    'rectified',\n    'rectify',\n    'recycled',\n    'recycler',\n    'recycling',\n    'reemerge',\n    'reenact',\n    'reenter',\n    'reentry',\n    'reexamine',\n    'referable',\n    'referee',\n    'reference',\n    'refill',\n    'refinance',\n    'refined',\n    'refinery',\n    'refining',\n    'refinish',\n    'reflected',\n    'reflector',\n    'reflex',\n    'reflux',\n    'refocus',\n    'refold',\n    'reforest',\n    'reformat',\n    'reformed',\n    'reformer',\n    'reformist',\n    'refract',\n    'refrain',\n    'refreeze',\n    'refresh',\n    'refried',\n    'refueling',\n    'refund',\n    'refurbish',\n    'refurnish',\n    'refusal',\n    'refuse',\n    'refusing',\n    'refutable',\n    'refute',\n    'regain',\n    'regalia',\n    'regally',\n    'reggae',\n    'regime',\n    'region',\n    'register',\n    'registrar',\n    'registry',\n    'regress',\n    'regretful',\n    'regroup',\n    'regular',\n    'regulate',\n    'regulator',\n    'rehab',\n    'reheat',\n    'rehire',\n    'rehydrate',\n    'reimburse',\n    'reissue',\n    'reiterate',\n    'rejoice',\n    'rejoicing',\n    'rejoin',\n    'rekindle',\n    'relapse',\n    'relapsing',\n    'relatable',\n    'related',\n    'relation',\n    'relative',\n    'relax',\n    'relay',\n    'relearn',\n    'release',\n    'relenting',\n    'reliable',\n    'reliably',\n    'reliance',\n    'reliant',\n    'relic',\n    'relieve',\n    'relieving',\n    'relight',\n    'relish',\n    'relive',\n    'reload',\n    'relocate',\n    'relock',\n    'reluctant',\n    'rely',\n    'remake',\n    'remark',\n    'remarry',\n    'rematch',\n    'remedial',\n    'remedy',\n    'remember',\n    'reminder',\n    'remindful',\n    'remission',\n    'remix',\n    'remnant',\n    'remodeler',\n    'remold',\n    'remorse',\n    'remote',\n    'removable',\n    'removal',\n    'removed',\n    'remover',\n    'removing',\n    'rename',\n    'renderer',\n    'rendering',\n    'rendition',\n    'renegade',\n    'renewable',\n    'renewably',\n    'renewal',\n    'renewed',\n    'renounce',\n    'renovate',\n    'renovator',\n    'rentable',\n    'rental',\n    'rented',\n    'renter',\n    'reoccupy',\n    'reoccur',\n    'reopen',\n    'reorder',\n    'repackage',\n    'repacking',\n    'repaint',\n    'repair',\n    'repave',\n    'repaying',\n    'repayment',\n    'repeal',\n    'repeated',\n    'repeater',\n    'repent',\n    'rephrase',\n    'replace',\n    'replay',\n    'replica',\n    'reply',\n    'reporter',\n    'repose',\n    'repossess',\n    'repost',\n    'repressed',\n    'reprimand',\n    'reprint',\n    'reprise',\n    'reproach',\n    'reprocess',\n    'reproduce',\n    'reprogram',\n    'reps',\n    'reptile',\n    'reptilian',\n    'repugnant',\n    'repulsion',\n    'repulsive',\n    'repurpose',\n    'reputable',\n    'reputably',\n    'request',\n    'require',\n    'requisite',\n    'reroute',\n    'rerun',\n    'resale',\n    'resample',\n    'rescuer',\n    'reseal',\n    'research',\n    'reselect',\n    'reseller',\n    'resemble',\n    'resend',\n    'resent',\n    'reset',\n    'reshape',\n    'reshoot',\n    'reshuffle',\n    'residence',\n    'residency',\n    'resident',\n    'residual',\n    'residue',\n    'resigned',\n    'resilient',\n    'resistant',\n    'resisting',\n    'resize',\n    'resolute',\n    'resolved',\n    'resonant',\n    'resonate',\n    'resort',\n    'resource',\n    'respect',\n    'resubmit',\n    'result',\n    'resume',\n    'resupply',\n    'resurface',\n    'resurrect',\n    'retail',\n    'retainer',\n    'retaining',\n    'retake',\n    'retaliate',\n    'retention',\n    'rethink',\n    'retinal',\n    'retired',\n    'retiree',\n    'retiring',\n    'retold',\n    'retool',\n    'retorted',\n    'retouch',\n    'retrace',\n    'retract',\n    'retrain',\n    'retread',\n    'retreat',\n    'retrial',\n    'retrieval',\n    'retriever',\n    'retry',\n    'return',\n    'retying',\n    'retype',\n    'reunion',\n    'reunite',\n    'reusable',\n    'reuse',\n    'reveal',\n    'reveler',\n    'revenge',\n    'revenue',\n    'reverb',\n    'revered',\n    'reverence',\n    'reverend',\n    'reversal',\n    'reverse',\n    'reversing',\n    'reversion',\n    'revert',\n    'revisable',\n    'revise',\n    'revision',\n    'revisit',\n    'revivable',\n    'revival',\n    'reviver',\n    'reviving',\n    'revocable',\n    'revoke',\n    'revolt',\n    'revolver',\n    'revolving',\n    'reward',\n    'rewash',\n    'rewind',\n    'rewire',\n    'reword',\n    'rework',\n    'rewrap',\n    'rewrite',\n    'rhyme',\n    'ribbon',\n    'ribcage',\n    'rice',\n    'riches',\n    'richly',\n    'richness',\n    'rickety',\n    'ricotta',\n    'riddance',\n    'ridden',\n    'ride',\n    'riding',\n    'rifling',\n    'rift',\n    'rigging',\n    'rigid',\n    'rigor',\n    'rimless',\n    'rimmed',\n    'rind',\n    'rink',\n    'rinse',\n    'rinsing',\n    'riot',\n    'ripcord',\n    'ripeness',\n    'ripening',\n    'ripping',\n    'ripple',\n    'rippling',\n    'riptide',\n    'rise',\n    'rising',\n    'risk',\n    'risotto',\n    'ritalin',\n    'ritzy',\n    'rival',\n    'riverbank',\n    'riverbed',\n    'riverboat',\n    'riverside',\n    'riveter',\n    'riveting',\n    'roamer',\n    'roaming',\n    'roast',\n    'robbing',\n    'robe',\n    'robin',\n    'robotics',\n    'robust',\n    'rockband',\n    'rocker',\n    'rocket',\n    'rockfish',\n    'rockiness',\n    'rocking',\n    'rocklike',\n    'rockslide',\n    'rockstar',\n    'rocky',\n    'rogue',\n    'roman',\n    'romp',\n    'rope',\n    'roping',\n    'roster',\n    'rosy',\n    'rotten',\n    'rotting',\n    'rotunda',\n    'roulette',\n    'rounding',\n    'roundish',\n    'roundness',\n    'roundup',\n    'roundworm',\n    'routine',\n    'routing',\n    'rover',\n    'roving',\n    'royal',\n    'rubbed',\n    'rubber',\n    'rubbing',\n    'rubble',\n    'rubdown',\n    'ruby',\n    'ruckus',\n    'rudder',\n    'rug',\n    'ruined',\n    'rule',\n    'rumble',\n    'rumbling',\n    'rummage',\n    'rumor',\n    'runaround',\n    'rundown',\n    'runner',\n    'running',\n    'runny',\n    'runt',\n    'runway',\n    'rupture',\n    'rural',\n    'ruse',\n    'rush',\n    'rust',\n    'rut',\n    'sabbath',\n    'sabotage',\n    'sacrament',\n    'sacred',\n    'sacrifice',\n    'sadden',\n    'saddlebag',\n    'saddled',\n    'saddling',\n    'sadly',\n    'sadness',\n    'safari',\n    'safeguard',\n    'safehouse',\n    'safely',\n    'safeness',\n    'saffron',\n    'saga',\n    'sage',\n    'sagging',\n    'saggy',\n    'said',\n    'saint',\n    'sake',\n    'salad',\n    'salami',\n    'salaried',\n    'salary',\n    'saline',\n    'salon',\n    'saloon',\n    'salsa',\n    'salt',\n    'salutary',\n    'salute',\n    'salvage',\n    'salvaging',\n    'salvation',\n    'same',\n    'sample',\n    'sampling',\n    'sanction',\n    'sanctity',\n    'sanctuary',\n    'sandal',\n    'sandbag',\n    'sandbank',\n    'sandbar',\n    'sandblast',\n    'sandbox',\n    'sanded',\n    'sandfish',\n    'sanding',\n    'sandlot',\n    'sandpaper',\n    'sandpit',\n    'sandstone',\n    'sandstorm',\n    'sandworm',\n    'sandy',\n    'sanitary',\n    'sanitizer',\n    'sank',\n    'santa',\n    'sapling',\n    'sappiness',\n    'sappy',\n    'sarcasm',\n    'sarcastic',\n    'sardine',\n    'sash',\n    'sasquatch',\n    'sassy',\n    'satchel',\n    'satiable',\n    'satin',\n    'satirical',\n    'satisfied',\n    'satisfy',\n    'saturate',\n    'saturday',\n    'sauciness',\n    'saucy',\n    'sauna',\n    'savage',\n    'savanna',\n    'saved',\n    'savings',\n    'savior',\n    'savor',\n    'saxophone',\n    'say',\n    'scabbed',\n    'scabby',\n    'scalded',\n    'scalding',\n    'scale',\n    'scaling',\n    'scallion',\n    'scallop',\n    'scalping',\n    'scam',\n    'scandal',\n    'scanner',\n    'scanning',\n    'scant',\n    'scapegoat',\n    'scarce',\n    'scarcity',\n    'scarecrow',\n    'scared',\n    'scarf',\n    'scarily',\n    'scariness',\n    'scarring',\n    'scary',\n    'scavenger',\n    'scenic',\n    'schedule',\n    'schematic',\n    'scheme',\n    'scheming',\n    'schilling',\n    'schnapps',\n    'scholar',\n    'science',\n    'scientist',\n    'scion',\n    'scoff',\n    'scolding',\n    'scone',\n    'scoop',\n    'scooter',\n    'scope',\n    'scorch',\n    'scorebook',\n    'scorecard',\n    'scored',\n    'scoreless',\n    'scorer',\n    'scoring',\n    'scorn',\n    'scorpion',\n    'scotch',\n    'scoundrel',\n    'scoured',\n    'scouring',\n    'scouting',\n    'scouts',\n    'scowling',\n    'scrabble',\n    'scraggly',\n    'scrambled',\n    'scrambler',\n    'scrap',\n    'scratch',\n    'scrawny',\n    'screen',\n    'scribble',\n    'scribe',\n    'scribing',\n    'scrimmage',\n    'script',\n    'scroll',\n    'scrooge',\n    'scrounger',\n    'scrubbed',\n    'scrubber',\n    'scruffy',\n    'scrunch',\n    'scrutiny',\n    'scuba',\n    'scuff',\n    'sculptor',\n    'sculpture',\n    'scurvy',\n    'scuttle',\n    'secluded',\n    'secluding',\n    'seclusion',\n    'second',\n    'secrecy',\n    'secret',\n    'sectional',\n    'sector',\n    'secular',\n    'securely',\n    'security',\n    'sedan',\n    'sedate',\n    'sedation',\n    'sedative',\n    'sediment',\n    'seduce',\n    'seducing',\n    'segment',\n    'seismic',\n    'seizing',\n    'seldom',\n    'selected',\n    'selection',\n    'selective',\n    'selector',\n    'self',\n    'seltzer',\n    'semantic',\n    'semester',\n    'semicolon',\n    'semifinal',\n    'seminar',\n    'semisoft',\n    'semisweet',\n    'senate',\n    'senator',\n    'send',\n    'senior',\n    'senorita',\n    'sensation',\n    'sensitive',\n    'sensitize',\n    'sensually',\n    'sensuous',\n    'sepia',\n    'september',\n    'septic',\n    'septum',\n    'sequel',\n    'sequence',\n    'sequester',\n    'series',\n    'sermon',\n    'serotonin',\n    'serpent',\n    'serrated',\n    'serve',\n    'service',\n    'serving',\n    'sesame',\n    'sessions',\n    'setback',\n    'setting',\n    'settle',\n    'settling',\n    'setup',\n    'sevenfold',\n    'seventeen',\n    'seventh',\n    'seventy',\n    'severity',\n    'shabby',\n    'shack',\n    'shaded',\n    'shadily',\n    'shadiness',\n    'shading',\n    'shadow',\n    'shady',\n    'shaft',\n    'shakable',\n    'shakily',\n    'shakiness',\n    'shaking',\n    'shaky',\n    'shale',\n    'shallot',\n    'shallow',\n    'shame',\n    'shampoo',\n    'shamrock',\n    'shank',\n    'shanty',\n    'shape',\n    'shaping',\n    'share',\n    'sharpener',\n    'sharper',\n    'sharpie',\n    'sharply',\n    'sharpness',\n    'shawl',\n    'sheath',\n    'shed',\n    'sheep',\n    'sheet',\n    'shelf',\n    'shell',\n    'shelter',\n    'shelve',\n    'shelving',\n    'sherry',\n    'shield',\n    'shifter',\n    'shifting',\n    'shiftless',\n    'shifty',\n    'shimmer',\n    'shimmy',\n    'shindig',\n    'shine',\n    'shingle',\n    'shininess',\n    'shining',\n    'shiny',\n    'ship',\n    'shirt',\n    'shivering',\n    'shock',\n    'shone',\n    'shoplift',\n    'shopper',\n    'shopping',\n    'shoptalk',\n    'shore',\n    'shortage',\n    'shortcake',\n    'shortcut',\n    'shorten',\n    'shorter',\n    'shorthand',\n    'shortlist',\n    'shortly',\n    'shortness',\n    'shorts',\n    'shortwave',\n    'shorty',\n    'shout',\n    'shove',\n    'showbiz',\n    'showcase',\n    'showdown',\n    'shower',\n    'showgirl',\n    'showing',\n    'showman',\n    'shown',\n    'showoff',\n    'showpiece',\n    'showplace',\n    'showroom',\n    'showy',\n    'shrank',\n    'shrapnel',\n    'shredder',\n    'shredding',\n    'shrewdly',\n    'shriek',\n    'shrill',\n    'shrimp',\n    'shrine',\n    'shrink',\n    'shrivel',\n    'shrouded',\n    'shrubbery',\n    'shrubs',\n    'shrug',\n    'shrunk',\n    'shucking',\n    'shudder',\n    'shuffle',\n    'shuffling',\n    'shun',\n    'shush',\n    'shut',\n    'shy',\n    'siamese',\n    'siberian',\n    'sibling',\n    'siding',\n    'sierra',\n    'siesta',\n    'sift',\n    'sighing',\n    'silenced',\n    'silencer',\n    'silent',\n    'silica',\n    'silicon',\n    'silk',\n    'silliness',\n    'silly',\n    'silo',\n    'silt',\n    'silver',\n    'similarly',\n    'simile',\n    'simmering',\n    'simple',\n    'simplify',\n    'simply',\n    'sincere',\n    'sincerity',\n    'singer',\n    'singing',\n    'single',\n    'singular',\n    'sinister',\n    'sinless',\n    'sinner',\n    'sinuous',\n    'sip',\n    'siren',\n    'sister',\n    'sitcom',\n    'sitter',\n    'sitting',\n    'situated',\n    'situation',\n    'sixfold',\n    'sixteen',\n    'sixth',\n    'sixties',\n    'sixtieth',\n    'sixtyfold',\n    'sizable',\n    'sizably',\n    'size',\n    'sizing',\n    'sizzle',\n    'sizzling',\n    'skater',\n    'skating',\n    'skedaddle',\n    'skeletal',\n    'skeleton',\n    'skeptic',\n    'sketch',\n    'skewed',\n    'skewer',\n    'skid',\n    'skied',\n    'skier',\n    'skies',\n    'skiing',\n    'skilled',\n    'skillet',\n    'skillful',\n    'skimmed',\n    'skimmer',\n    'skimming',\n    'skimpily',\n    'skincare',\n    'skinhead',\n    'skinless',\n    'skinning',\n    'skinny',\n    'skintight',\n    'skipper',\n    'skipping',\n    'skirmish',\n    'skirt',\n    'skittle',\n    'skydiver',\n    'skylight',\n    'skyline',\n    'skype',\n    'skyrocket',\n    'skyward',\n    'slab',\n    'slacked',\n    'slacker',\n    'slacking',\n    'slackness',\n    'slacks',\n    'slain',\n    'slam',\n    'slander',\n    'slang',\n    'slapping',\n    'slapstick',\n    'slashed',\n    'slashing',\n    'slate',\n    'slather',\n    'slaw',\n    'sled',\n    'sleek',\n    'sleep',\n    'sleet',\n    'sleeve',\n    'slept',\n    'sliceable',\n    'sliced',\n    'slicer',\n    'slicing',\n    'slick',\n    'slider',\n    'slideshow',\n    'sliding',\n    'slighted',\n    'slighting',\n    'slightly',\n    'slimness',\n    'slimy',\n    'slinging',\n    'slingshot',\n    'slinky',\n    'slip',\n    'slit',\n    'sliver',\n    'slobbery',\n    'slogan',\n    'sloped',\n    'sloping',\n    'sloppily',\n    'sloppy',\n    'slot',\n    'slouching',\n    'slouchy',\n    'sludge',\n    'slug',\n    'slum',\n    'slurp',\n    'slush',\n    'sly',\n    'small',\n    'smartly',\n    'smartness',\n    'smasher',\n    'smashing',\n    'smashup',\n    'smell',\n    'smelting',\n    'smile',\n    'smilingly',\n    'smirk',\n    'smite',\n    'smith',\n    'smitten',\n    'smock',\n    'smog',\n    'smoked',\n    'smokeless',\n    'smokiness',\n    'smoking',\n    'smoky',\n    'smolder',\n    'smooth',\n    'smother',\n    'smudge',\n    'smudgy',\n    'smuggler',\n    'smuggling',\n    'smugly',\n    'smugness',\n    'snack',\n    'snagged',\n    'snaking',\n    'snap',\n    'snare',\n    'snarl',\n    'snazzy',\n    'sneak',\n    'sneer',\n    'sneeze',\n    'sneezing',\n    'snide',\n    'sniff',\n    'snippet',\n    'snipping',\n    'snitch',\n    'snooper',\n    'snooze',\n    'snore',\n    'snoring',\n    'snorkel',\n    'snort',\n    'snout',\n    'snowbird',\n    'snowboard',\n    'snowbound',\n    'snowcap',\n    'snowdrift',\n    'snowdrop',\n    'snowfall',\n    'snowfield',\n    'snowflake',\n    'snowiness',\n    'snowless',\n    'snowman',\n    'snowplow',\n    'snowshoe',\n    'snowstorm',\n    'snowsuit',\n    'snowy',\n    'snub',\n    'snuff',\n    'snuggle',\n    'snugly',\n    'snugness',\n    'speak',\n    'spearfish',\n    'spearhead',\n    'spearman',\n    'spearmint',\n    'species',\n    'specimen',\n    'specked',\n    'speckled',\n    'specks',\n    'spectacle',\n    'spectator',\n    'spectrum',\n    'speculate',\n    'speech',\n    'speed',\n    'spellbind',\n    'speller',\n    'spelling',\n    'spendable',\n    'spender',\n    'spending',\n    'spent',\n    'spew',\n    'sphere',\n    'spherical',\n    'sphinx',\n    'spider',\n    'spied',\n    'spiffy',\n    'spill',\n    'spilt',\n    'spinach',\n    'spinal',\n    'spindle',\n    'spinner',\n    'spinning',\n    'spinout',\n    'spinster',\n    'spiny',\n    'spiral',\n    'spirited',\n    'spiritism',\n    'spirits',\n    'spiritual',\n    'splashed',\n    'splashing',\n    'splashy',\n    'splatter',\n    'spleen',\n    'splendid',\n    'splendor',\n    'splice',\n    'splicing',\n    'splinter',\n    'splotchy',\n    'splurge',\n    'spoilage',\n    'spoiled',\n    'spoiler',\n    'spoiling',\n    'spoils',\n    'spoken',\n    'spokesman',\n    'sponge',\n    'spongy',\n    'sponsor',\n    'spoof',\n    'spookily',\n    'spooky',\n    'spool',\n    'spoon',\n    'spore',\n    'sporting',\n    'sports',\n    'sporty',\n    'spotless',\n    'spotlight',\n    'spotted',\n    'spotter',\n    'spotting',\n    'spotty',\n    'spousal',\n    'spouse',\n    'spout',\n    'sprain',\n    'sprang',\n    'sprawl',\n    'spray',\n    'spree',\n    'sprig',\n    'spring',\n    'sprinkled',\n    'sprinkler',\n    'sprint',\n    'sprite',\n    'sprout',\n    'spruce',\n    'sprung',\n    'spry',\n    'spud',\n    'spur',\n    'sputter',\n    'spyglass',\n    'squabble',\n    'squad',\n    'squall',\n    'squander',\n    'squash',\n    'squatted',\n    'squatter',\n    'squatting',\n    'squeak',\n    'squealer',\n    'squealing',\n    'squeamish',\n    'squeegee',\n    'squeeze',\n    'squeezing',\n    'squid',\n    'squiggle',\n    'squiggly',\n    'squint',\n    'squire',\n    'squirt',\n    'squishier',\n    'squishy',\n    'stability',\n    'stabilize',\n    'stable',\n    'stack',\n    'stadium',\n    'staff',\n    'stage',\n    'staging',\n    'stagnant',\n    'stagnate',\n    'stainable',\n    'stained',\n    'staining',\n    'stainless',\n    'stalemate',\n    'staleness',\n    'stalling',\n    'stallion',\n    'stamina',\n    'stammer',\n    'stamp',\n    'stand',\n    'stank',\n    'staple',\n    'stapling',\n    'starboard',\n    'starch',\n    'stardom',\n    'stardust',\n    'starfish',\n    'stargazer',\n    'staring',\n    'stark',\n    'starless',\n    'starlet',\n    'starlight',\n    'starlit',\n    'starring',\n    'starry',\n    'starship',\n    'starter',\n    'starting',\n    'startle',\n    'startling',\n    'startup',\n    'starved',\n    'starving',\n    'stash',\n    'state',\n    'static',\n    'statistic',\n    'statue',\n    'stature',\n    'status',\n    'statute',\n    'statutory',\n    'staunch',\n    'stays',\n    'steadfast',\n    'steadier',\n    'steadily',\n    'steadying',\n    'steam',\n    'steed',\n    'steep',\n    'steerable',\n    'steering',\n    'steersman',\n    'stegosaur',\n    'stellar',\n    'stem',\n    'stench',\n    'stencil',\n    'step',\n    'stereo',\n    'sterile',\n    'sterility',\n    'sterilize',\n    'sterling',\n    'sternness',\n    'sternum',\n    'stew',\n    'stick',\n    'stiffen',\n    'stiffly',\n    'stiffness',\n    'stifle',\n    'stifling',\n    'stillness',\n    'stilt',\n    'stimulant',\n    'stimulate',\n    'stimuli',\n    'stimulus',\n    'stinger',\n    'stingily',\n    'stinging',\n    'stingray',\n    'stingy',\n    'stinking',\n    'stinky',\n    'stipend',\n    'stipulate',\n    'stir',\n    'stitch',\n    'stock',\n    'stoic',\n    'stoke',\n    'stole',\n    'stomp',\n    'stonewall',\n    'stoneware',\n    'stonework',\n    'stoning',\n    'stony',\n    'stood',\n    'stooge',\n    'stool',\n    'stoop',\n    'stoplight',\n    'stoppable',\n    'stoppage',\n    'stopped',\n    'stopper',\n    'stopping',\n    'stopwatch',\n    'storable',\n    'storage',\n    'storeroom',\n    'storewide',\n    'storm',\n    'stout',\n    'stove',\n    'stowaway',\n    'stowing',\n    'straddle',\n    'straggler',\n    'strained',\n    'strainer',\n    'straining',\n    'strangely',\n    'stranger',\n    'strangle',\n    'strategic',\n    'strategy',\n    'stratus',\n    'straw',\n    'stray',\n    'streak',\n    'stream',\n    'street',\n    'strength',\n    'strenuous',\n    'strep',\n    'stress',\n    'stretch',\n    'strewn',\n    'stricken',\n    'strict',\n    'stride',\n    'strife',\n    'strike',\n    'striking',\n    'strive',\n    'striving',\n    'strobe',\n    'strode',\n    'stroller',\n    'strongbox',\n    'strongly',\n    'strongman',\n    'struck',\n    'structure',\n    'strudel',\n    'struggle',\n    'strum',\n    'strung',\n    'strut',\n    'stubbed',\n    'stubble',\n    'stubbly',\n    'stubborn',\n    'stucco',\n    'stuck',\n    'student',\n    'studied',\n    'studio',\n    'study',\n    'stuffed',\n    'stuffing',\n    'stuffy',\n    'stumble',\n    'stumbling',\n    'stump',\n    'stung',\n    'stunned',\n    'stunner',\n    'stunning',\n    'stunt',\n    'stupor',\n    'sturdily',\n    'sturdy',\n    'styling',\n    'stylishly',\n    'stylist',\n    'stylized',\n    'stylus',\n    'suave',\n    'subarctic',\n    'subatomic',\n    'subdivide',\n    'subdued',\n    'subduing',\n    'subfloor',\n    'subgroup',\n    'subheader',\n    'subject',\n    'sublease',\n    'sublet',\n    'sublevel',\n    'sublime',\n    'submarine',\n    'submerge',\n    'submersed',\n    'submitter',\n    'subpanel',\n    'subpar',\n    'subplot',\n    'subprime',\n    'subscribe',\n    'subscript',\n    'subsector',\n    'subside',\n    'subsiding',\n    'subsidize',\n    'subsidy',\n    'subsoil',\n    'subsonic',\n    'substance',\n    'subsystem',\n    'subtext',\n    'subtitle',\n    'subtly',\n    'subtotal',\n    'subtract',\n    'subtype',\n    'suburb',\n    'subway',\n    'subwoofer',\n    'subzero',\n    'succulent',\n    'such',\n    'suction',\n    'sudden',\n    'sudoku',\n    'suds',\n    'sufferer',\n    'suffering',\n    'suffice',\n    'suffix',\n    'suffocate',\n    'suffrage',\n    'sugar',\n    'suggest',\n    'suing',\n    'suitable',\n    'suitably',\n    'suitcase',\n    'suitor',\n    'sulfate',\n    'sulfide',\n    'sulfite',\n    'sulfur',\n    'sulk',\n    'sullen',\n    'sulphate',\n    'sulphuric',\n    'sultry',\n    'superbowl',\n    'superglue',\n    'superhero',\n    'superior',\n    'superjet',\n    'superman',\n    'supermom',\n    'supernova',\n    'supervise',\n    'supper',\n    'supplier',\n    'supply',\n    'support',\n    'supremacy',\n    'supreme',\n    'surcharge',\n    'surely',\n    'sureness',\n    'surface',\n    'surfacing',\n    'surfboard',\n    'surfer',\n    'surgery',\n    'surgical',\n    'surging',\n    'surname',\n    'surpass',\n    'surplus',\n    'surprise',\n    'surreal',\n    'surrender',\n    'surrogate',\n    'surround',\n    'survey',\n    'survival',\n    'survive',\n    'surviving',\n    'survivor',\n    'sushi',\n    'suspect',\n    'suspend',\n    'suspense',\n    'sustained',\n    'sustainer',\n    'swab',\n    'swaddling',\n    'swagger',\n    'swampland',\n    'swan',\n    'swapping',\n    'swarm',\n    'sway',\n    'swear',\n    'sweat',\n    'sweep',\n    'swell',\n    'swept',\n    'swerve',\n    'swifter',\n    'swiftly',\n    'swiftness',\n    'swimmable',\n    'swimmer',\n    'swimming',\n    'swimsuit',\n    'swimwear',\n    'swinger',\n    'swinging',\n    'swipe',\n    'swirl',\n    'switch',\n    'swivel',\n    'swizzle',\n    'swooned',\n    'swoop',\n    'swoosh',\n    'swore',\n    'sworn',\n    'swung',\n    'sycamore',\n    'sympathy',\n    'symphonic',\n    'symphony',\n    'symptom',\n    'synapse',\n    'syndrome',\n    'synergy',\n    'synopses',\n    'synopsis',\n    'synthesis',\n    'synthetic',\n    'syrup',\n    'system',\n    't-shirt',\n    'tabasco',\n    'tabby',\n    'tableful',\n    'tables',\n    'tablet',\n    'tableware',\n    'tabloid',\n    'tackiness',\n    'tacking',\n    'tackle',\n    'tackling',\n    'tacky',\n    'taco',\n    'tactful',\n    'tactical',\n    'tactics',\n    'tactile',\n    'tactless',\n    'tadpole',\n    'taekwondo',\n    'tag',\n    'tainted',\n    'take',\n    'taking',\n    'talcum',\n    'talisman',\n    'tall',\n    'talon',\n    'tamale',\n    'tameness',\n    'tamer',\n    'tamper',\n    'tank',\n    'tanned',\n    'tannery',\n    'tanning',\n    'tantrum',\n    'tapeless',\n    'tapered',\n    'tapering',\n    'tapestry',\n    'tapioca',\n    'tapping',\n    'taps',\n    'tarantula',\n    'target',\n    'tarmac',\n    'tarnish',\n    'tarot',\n    'tartar',\n    'tartly',\n    'tartness',\n    'task',\n    'tassel',\n    'taste',\n    'tastiness',\n    'tasting',\n    'tasty',\n    'tattered',\n    'tattle',\n    'tattling',\n    'tattoo',\n    'taunt',\n    'tavern',\n    'thank',\n    'that',\n    'thaw',\n    'theater',\n    'theatrics',\n    'thee',\n    'theft',\n    'theme',\n    'theology',\n    'theorize',\n    'thermal',\n    'thermos',\n    'thesaurus',\n    'these',\n    'thesis',\n    'thespian',\n    'thicken',\n    'thicket',\n    'thickness',\n    'thieving',\n    'thievish',\n    'thigh',\n    'thimble',\n    'thing',\n    'think',\n    'thinly',\n    'thinner',\n    'thinness',\n    'thinning',\n    'thirstily',\n    'thirsting',\n    'thirsty',\n    'thirteen',\n    'thirty',\n    'thong',\n    'thorn',\n    'those',\n    'thousand',\n    'thrash',\n    'thread',\n    'threaten',\n    'threefold',\n    'thrift',\n    'thrill',\n    'thrive',\n    'thriving',\n    'throat',\n    'throbbing',\n    'throng',\n    'throttle',\n    'throwaway',\n    'throwback',\n    'thrower',\n    'throwing',\n    'thud',\n    'thumb',\n    'thumping',\n    'thursday',\n    'thus',\n    'thwarting',\n    'thyself',\n    'tiara',\n    'tibia',\n    'tidal',\n    'tidbit',\n    'tidiness',\n    'tidings',\n    'tidy',\n    'tiger',\n    'tighten',\n    'tightly',\n    'tightness',\n    'tightrope',\n    'tightwad',\n    'tigress',\n    'tile',\n    'tiling',\n    'till',\n    'tilt',\n    'timid',\n    'timing',\n    'timothy',\n    'tinderbox',\n    'tinfoil',\n    'tingle',\n    'tingling',\n    'tingly',\n    'tinker',\n    'tinkling',\n    'tinsel',\n    'tinsmith',\n    'tint',\n    'tinwork',\n    'tiny',\n    'tipoff',\n    'tipped',\n    'tipper',\n    'tipping',\n    'tiptoeing',\n    'tiptop',\n    'tiring',\n    'tissue',\n    'trace',\n    'tracing',\n    'track',\n    'traction',\n    'tractor',\n    'trade',\n    'trading',\n    'tradition',\n    'traffic',\n    'tragedy',\n    'trailing',\n    'trailside',\n    'train',\n    'traitor',\n    'trance',\n    'tranquil',\n    'transfer',\n    'transform',\n    'translate',\n    'transpire',\n    'transport',\n    'transpose',\n    'trapdoor',\n    'trapeze',\n    'trapezoid',\n    'trapped',\n    'trapper',\n    'trapping',\n    'traps',\n    'trash',\n    'travel',\n    'traverse',\n    'travesty',\n    'tray',\n    'treachery',\n    'treading',\n    'treadmill',\n    'treason',\n    'treat',\n    'treble',\n    'tree',\n    'trekker',\n    'tremble',\n    'trembling',\n    'tremor',\n    'trench',\n    'trend',\n    'trespass',\n    'triage',\n    'trial',\n    'triangle',\n    'tribesman',\n    'tribunal',\n    'tribune',\n    'tributary',\n    'tribute',\n    'triceps',\n    'trickery',\n    'trickily',\n    'tricking',\n    'trickle',\n    'trickster',\n    'tricky',\n    'tricolor',\n    'tricycle',\n    'trident',\n    'tried',\n    'trifle',\n    'trifocals',\n    'trillion',\n    'trilogy',\n    'trimester',\n    'trimmer',\n    'trimming',\n    'trimness',\n    'trinity',\n    'trio',\n    'tripod',\n    'tripping',\n    'triumph',\n    'trivial',\n    'trodden',\n    'trolling',\n    'trombone',\n    'trophy',\n    'tropical',\n    'tropics',\n    'trouble',\n    'troubling',\n    'trough',\n    'trousers',\n    'trout',\n    'trowel',\n    'truce',\n    'truck',\n    'truffle',\n    'trump',\n    'trunks',\n    'trustable',\n    'trustee',\n    'trustful',\n    'trusting',\n    'trustless',\n    'truth',\n    'try',\n    'tubby',\n    'tubeless',\n    'tubular',\n    'tucking',\n    'tuesday',\n    'tug',\n    'tuition',\n    'tulip',\n    'tumble',\n    'tumbling',\n    'tummy',\n    'turban',\n    'turbine',\n    'turbofan',\n    'turbojet',\n    'turbulent',\n    'turf',\n    'turkey',\n    'turmoil',\n    'turret',\n    'turtle',\n    'tusk',\n    'tutor',\n    'tutu',\n    'tux',\n    'tweak',\n    'tweed',\n    'tweet',\n    'tweezers',\n    'twelve',\n    'twentieth',\n    'twenty',\n    'twerp',\n    'twice',\n    'twiddle',\n    'twiddling',\n    'twig',\n    'twilight',\n    'twine',\n    'twins',\n    'twirl',\n    'twistable',\n    'twisted',\n    'twister',\n    'twisting',\n    'twisty',\n    'twitch',\n    'twitter',\n    'tycoon',\n    'tying',\n    'tyke',\n    'udder',\n    'ultimate',\n    'ultimatum',\n    'ultra',\n    'umbilical',\n    'umbrella',\n    'umpire',\n    'unabashed',\n    'unable',\n    'unadorned',\n    'unadvised',\n    'unafraid',\n    'unaired',\n    'unaligned',\n    'unaltered',\n    'unarmored',\n    'unashamed',\n    'unaudited',\n    'unawake',\n    'unaware',\n    'unbaked',\n    'unbalance',\n    'unbeaten',\n    'unbend',\n    'unbent',\n    'unbiased',\n    'unbitten',\n    'unblended',\n    'unblessed',\n    'unblock',\n    'unbolted',\n    'unbounded',\n    'unboxed',\n    'unbraided',\n    'unbridle',\n    'unbroken',\n    'unbuckled',\n    'unbundle',\n    'unburned',\n    'unbutton',\n    'uncanny',\n    'uncapped',\n    'uncaring',\n    'uncertain',\n    'unchain',\n    'unchanged',\n    'uncharted',\n    'uncheck',\n    'uncivil',\n    'unclad',\n    'unclaimed',\n    'unclamped',\n    'unclasp',\n    'uncle',\n    'unclip',\n    'uncloak',\n    'unclog',\n    'unclothed',\n    'uncoated',\n    'uncoiled',\n    'uncolored',\n    'uncombed',\n    'uncommon',\n    'uncooked',\n    'uncork',\n    'uncorrupt',\n    'uncounted',\n    'uncouple',\n    'uncouth',\n    'uncover',\n    'uncross',\n    'uncrown',\n    'uncrushed',\n    'uncured',\n    'uncurious',\n    'uncurled',\n    'uncut',\n    'undamaged',\n    'undated',\n    'undaunted',\n    'undead',\n    'undecided',\n    'undefined',\n    'underage',\n    'underarm',\n    'undercoat',\n    'undercook',\n    'undercut',\n    'underdog',\n    'underdone',\n    'underfed',\n    'underfeed',\n    'underfoot',\n    'undergo',\n    'undergrad',\n    'underhand',\n    'underline',\n    'underling',\n    'undermine',\n    'undermost',\n    'underpaid',\n    'underpass',\n    'underpay',\n    'underrate',\n    'undertake',\n    'undertone',\n    'undertook',\n    'undertow',\n    'underuse',\n    'underwear',\n    'underwent',\n    'underwire',\n    'undesired',\n    'undiluted',\n    'undivided',\n    'undocked',\n    'undoing',\n    'undone',\n    'undrafted',\n    'undress',\n    'undrilled',\n    'undusted',\n    'undying',\n    'unearned',\n    'unearth',\n    'unease',\n    'uneasily',\n    'uneasy',\n    'uneatable',\n    'uneaten',\n    'unedited',\n    'unelected',\n    'unending',\n    'unengaged',\n    'unenvied',\n    'unequal',\n    'unethical',\n    'uneven',\n    'unexpired',\n    'unexposed',\n    'unfailing',\n    'unfair',\n    'unfasten',\n    'unfazed',\n    'unfeeling',\n    'unfiled',\n    'unfilled',\n    'unfitted',\n    'unfitting',\n    'unfixable',\n    'unfixed',\n    'unflawed',\n    'unfocused',\n    'unfold',\n    'unfounded',\n    'unframed',\n    'unfreeze',\n    'unfrosted',\n    'unfrozen',\n    'unfunded',\n    'unglazed',\n    'ungloved',\n    'unglue',\n    'ungodly',\n    'ungraded',\n    'ungreased',\n    'unguarded',\n    'unguided',\n    'unhappily',\n    'unhappy',\n    'unharmed',\n    'unhealthy',\n    'unheard',\n    'unhearing',\n    'unheated',\n    'unhelpful',\n    'unhidden',\n    'unhinge',\n    'unhitched',\n    'unholy',\n    'unhook',\n    'unicorn',\n    'unicycle',\n    'unified',\n    'unifier',\n    'uniformed',\n    'uniformly',\n    'unify',\n    'unimpeded',\n    'uninjured',\n    'uninstall',\n    'uninsured',\n    'uninvited',\n    'union',\n    'uniquely',\n    'unisexual',\n    'unison',\n    'unissued',\n    'unit',\n    'universal',\n    'universe',\n    'unjustly',\n    'unkempt',\n    'unkind',\n    'unknotted',\n    'unknowing',\n    'unknown',\n    'unlaced',\n    'unlatch',\n    'unlawful',\n    'unleaded',\n    'unlearned',\n    'unleash',\n    'unless',\n    'unleveled',\n    'unlighted',\n    'unlikable',\n    'unlimited',\n    'unlined',\n    'unlinked',\n    'unlisted',\n    'unlit',\n    'unlivable',\n    'unloaded',\n    'unloader',\n    'unlocked',\n    'unlocking',\n    'unlovable',\n    'unloved',\n    'unlovely',\n    'unloving',\n    'unluckily',\n    'unlucky',\n    'unmade',\n    'unmanaged',\n    'unmanned',\n    'unmapped',\n    'unmarked',\n    'unmasked',\n    'unmasking',\n    'unmatched',\n    'unmindful',\n    'unmixable',\n    'unmixed',\n    'unmolded',\n    'unmoral',\n    'unmovable',\n    'unmoved',\n    'unmoving',\n    'unnamable',\n    'unnamed',\n    'unnatural',\n    'unneeded',\n    'unnerve',\n    'unnerving',\n    'unnoticed',\n    'unopened',\n    'unopposed',\n    'unpack',\n    'unpadded',\n    'unpaid',\n    'unpainted',\n    'unpaired',\n    'unpaved',\n    'unpeeled',\n    'unpicked',\n    'unpiloted',\n    'unpinned',\n    'unplanned',\n    'unplanted',\n    'unpleased',\n    'unpledged',\n    'unplowed',\n    'unplug',\n    'unpopular',\n    'unproven',\n    'unquote',\n    'unranked',\n    'unrated',\n    'unraveled',\n    'unreached',\n    'unread',\n    'unreal',\n    'unreeling',\n    'unrefined',\n    'unrelated',\n    'unrented',\n    'unrest',\n    'unretired',\n    'unrevised',\n    'unrigged',\n    'unripe',\n    'unrivaled',\n    'unroasted',\n    'unrobed',\n    'unroll',\n    'unruffled',\n    'unruly',\n    'unrushed',\n    'unsaddle',\n    'unsafe',\n    'unsaid',\n    'unsalted',\n    'unsaved',\n    'unsavory',\n    'unscathed',\n    'unscented',\n    'unscrew',\n    'unsealed',\n    'unseated',\n    'unsecured',\n    'unseeing',\n    'unseemly',\n    'unseen',\n    'unselect',\n    'unselfish',\n    'unsent',\n    'unsettled',\n    'unshackle',\n    'unshaken',\n    'unshaved',\n    'unshaven',\n    'unsheathe',\n    'unshipped',\n    'unsightly',\n    'unsigned',\n    'unskilled',\n    'unsliced',\n    'unsmooth',\n    'unsnap',\n    'unsocial',\n    'unsoiled',\n    'unsold',\n    'unsolved',\n    'unsorted',\n    'unspoiled',\n    'unspoken',\n    'unstable',\n    'unstaffed',\n    'unstamped',\n    'unsteady',\n    'unsterile',\n    'unstirred',\n    'unstitch',\n    'unstopped',\n    'unstuck',\n    'unstuffed',\n    'unstylish',\n    'unsubtle',\n    'unsubtly',\n    'unsuited',\n    'unsure',\n    'unsworn',\n    'untagged',\n    'untainted',\n    'untaken',\n    'untamed',\n    'untangled',\n    'untapped',\n    'untaxed',\n    'unthawed',\n    'unthread',\n    'untidy',\n    'untie',\n    'until',\n    'untimed',\n    'untimely',\n    'untitled',\n    'untoasted',\n    'untold',\n    'untouched',\n    'untracked',\n    'untrained',\n    'untreated',\n    'untried',\n    'untrimmed',\n    'untrue',\n    'untruth',\n    'unturned',\n    'untwist',\n    'untying',\n    'unusable',\n    'unused',\n    'unusual',\n    'unvalued',\n    'unvaried',\n    'unvarying',\n    'unveiled',\n    'unveiling',\n    'unvented',\n    'unviable',\n    'unvisited',\n    'unvocal',\n    'unwanted',\n    'unwarlike',\n    'unwary',\n    'unwashed',\n    'unwatched',\n    'unweave',\n    'unwed',\n    'unwelcome',\n    'unwell',\n    'unwieldy',\n    'unwilling',\n    'unwind',\n    'unwired',\n    'unwitting',\n    'unwomanly',\n    'unworldly',\n    'unworn',\n    'unworried',\n    'unworthy',\n    'unwound',\n    'unwoven',\n    'unwrapped',\n    'unwritten',\n    'unzip',\n    'upbeat',\n    'upchuck',\n    'upcoming',\n    'upcountry',\n    'update',\n    'upfront',\n    'upgrade',\n    'upheaval',\n    'upheld',\n    'uphill',\n    'uphold',\n    'uplifted',\n    'uplifting',\n    'upload',\n    'upon',\n    'upper',\n    'upright',\n    'uprising',\n    'upriver',\n    'uproar',\n    'uproot',\n    'upscale',\n    'upside',\n    'upstage',\n    'upstairs',\n    'upstart',\n    'upstate',\n    'upstream',\n    'upstroke',\n    'upswing',\n    'uptake',\n    'uptight',\n    'uptown',\n    'upturned',\n    'upward',\n    'upwind',\n    'uranium',\n    'urban',\n    'urchin',\n    'urethane',\n    'urgency',\n    'urgent',\n    'urging',\n    'urologist',\n    'urology',\n    'usable',\n    'usage',\n    'useable',\n    'used',\n    'uselessly',\n    'user',\n    'usher',\n    'usual',\n    'utensil',\n    'utility',\n    'utilize',\n    'utmost',\n    'utopia',\n    'utter',\n    'vacancy',\n    'vacant',\n    'vacate',\n    'vacation',\n    'vagabond',\n    'vagrancy',\n    'vagrantly',\n    'vaguely',\n    'vagueness',\n    'valiant',\n    'valid',\n    'valium',\n    'valley',\n    'valuables',\n    'value',\n    'vanilla',\n    'vanish',\n    'vanity',\n    'vanquish',\n    'vantage',\n    'vaporizer',\n    'variable',\n    'variably',\n    'varied',\n    'variety',\n    'various',\n    'varmint',\n    'varnish',\n    'varsity',\n    'varying',\n    'vascular',\n    'vaseline',\n    'vastly',\n    'vastness',\n    'veal',\n    'vegan',\n    'veggie',\n    'vehicular',\n    'velcro',\n    'velocity',\n    'velvet',\n    'vendetta',\n    'vending',\n    'vendor',\n    'veneering',\n    'vengeful',\n    'venomous',\n    'ventricle',\n    'venture',\n    'venue',\n    'venus',\n    'verbalize',\n    'verbally',\n    'verbose',\n    'verdict',\n    'verify',\n    'verse',\n    'version',\n    'versus',\n    'vertebrae',\n    'vertical',\n    'vertigo',\n    'very',\n    'vessel',\n    'vest',\n    'veteran',\n    'veto',\n    'vexingly',\n    'viability',\n    'viable',\n    'vibes',\n    'vice',\n    'vicinity',\n    'victory',\n    'video',\n    'viewable',\n    'viewer',\n    'viewing',\n    'viewless',\n    'viewpoint',\n    'vigorous',\n    'village',\n    'villain',\n    'vindicate',\n    'vineyard',\n    'vintage',\n    'violate',\n    'violation',\n    'violator',\n    'violet',\n    'violin',\n    'viper',\n    'viral',\n    'virtual',\n    'virtuous',\n    'virus',\n    'visa',\n    'viscosity',\n    'viscous',\n    'viselike',\n    'visible',\n    'visibly',\n    'vision',\n    'visiting',\n    'visitor',\n    'visor',\n    'vista',\n    'vitality',\n    'vitalize',\n    'vitally',\n    'vitamins',\n    'vivacious',\n    'vividly',\n    'vividness',\n    'vixen',\n    'vocalist',\n    'vocalize',\n    'vocally',\n    'vocation',\n    'voice',\n    'voicing',\n    'void',\n    'volatile',\n    'volley',\n    'voltage',\n    'volumes',\n    'voter',\n    'voting',\n    'voucher',\n    'vowed',\n    'vowel',\n    'voyage',\n    'wackiness',\n    'wad',\n    'wafer',\n    'waffle',\n    'waged',\n    'wager',\n    'wages',\n    'waggle',\n    'wagon',\n    'wake',\n    'waking',\n    'walk',\n    'walmart',\n    'walnut',\n    'walrus',\n    'waltz',\n    'wand',\n    'wannabe',\n    'wanted',\n    'wanting',\n    'wasabi',\n    'washable',\n    'washbasin',\n    'washboard',\n    'washbowl',\n    'washcloth',\n    'washday',\n    'washed',\n    'washer',\n    'washhouse',\n    'washing',\n    'washout',\n    'washroom',\n    'washstand',\n    'washtub',\n    'wasp',\n    'wasting',\n    'watch',\n    'water',\n    'waviness',\n    'waving',\n    'wavy',\n    'whacking',\n    'whacky',\n    'wham',\n    'wharf',\n    'wheat',\n    'whenever',\n    'whiff',\n    'whimsical',\n    'whinny',\n    'whiny',\n    'whisking',\n    'whoever',\n    'whole',\n    'whomever',\n    'whoopee',\n    'whooping',\n    'whoops',\n    'why',\n    'wick',\n    'widely',\n    'widen',\n    'widget',\n    'widow',\n    'width',\n    'wieldable',\n    'wielder',\n    'wife',\n    'wifi',\n    'wikipedia',\n    'wildcard',\n    'wildcat',\n    'wilder',\n    'wildfire',\n    'wildfowl',\n    'wildland',\n    'wildlife',\n    'wildly',\n    'wildness',\n    'willed',\n    'willfully',\n    'willing',\n    'willow',\n    'willpower',\n    'wilt',\n    'wimp',\n    'wince',\n    'wincing',\n    'wind',\n    'wing',\n    'winking',\n    'winner',\n    'winnings',\n    'winter',\n    'wipe',\n    'wired',\n    'wireless',\n    'wiring',\n    'wiry',\n    'wisdom',\n    'wise',\n    'wish',\n    'wisplike',\n    'wispy',\n    'wistful',\n    'wizard',\n    'wobble',\n    'wobbling',\n    'wobbly',\n    'wok',\n    'wolf',\n    'wolverine',\n    'womanhood',\n    'womankind',\n    'womanless',\n    'womanlike',\n    'womanly',\n    'womb',\n    'woof',\n    'wooing',\n    'wool',\n    'woozy',\n    'word',\n    'work',\n    'worried',\n    'worrier',\n    'worrisome',\n    'worry',\n    'worsening',\n    'worshiper',\n    'worst',\n    'wound',\n    'woven',\n    'wow',\n    'wrangle',\n    'wrath',\n    'wreath',\n    'wreckage',\n    'wrecker',\n    'wrecking',\n    'wrench',\n    'wriggle',\n    'wriggly',\n    'wrinkle',\n    'wrinkly',\n    'wrist',\n    'writing',\n    'written',\n    'wrongdoer',\n    'wronged',\n    'wrongful',\n    'wrongly',\n    'wrongness',\n    'wrought',\n    'xbox',\n    'xerox',\n    'yahoo',\n    'yam',\n    'yanking',\n    'yapping',\n    'yard',\n    'yarn',\n    'yeah',\n    'yearbook',\n    'yearling',\n    'yearly',\n    'yearning',\n    'yeast',\n    'yelling',\n    'yelp',\n    'yen',\n    'yesterday',\n    'yiddish',\n    'yield',\n    'yin',\n    'yippee',\n    'yo-yo',\n    'yodel',\n    'yoga',\n    'yogurt',\n    'yonder',\n    'yoyo',\n    'yummy',\n    'zap',\n    'zealous',\n    'zebra',\n    'zen',\n    'zeppelin',\n    'zero',\n    'zestfully',\n    'zesty',\n    'zigzagged',\n    'zipfile',\n    'zipping',\n    'zippy',\n    'zips',\n    'zit',\n    'zodiac',\n    'zombie',\n    'zone',\n    'zoning',\n    'zookeeper',\n    'zoologist',\n    'zoology',\n    'zoom',\n];\n","import { Observable, Subject } from 'rxjs';\n\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { ConstantsService } from './constants.service';\n\nimport { EnvironmentService as EnvironmentServiceAbstraction, Urls } from '../abstractions/environment.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n\n    private readonly urlsSubject = new Subject<Urls>();\n    urls: Observable<Urls> = this.urlsSubject; // tslint:disable-line\n\n    private baseUrl: string;\n    private webVaultUrl: string;\n    private apiUrl: string;\n    private identityUrl: string;\n    private iconsUrl: string;\n    private notificationsUrl: string;\n    private eventsUrl: string;\n    private enterpriseUrl: string;\n\n    constructor(private storageService: StorageService) {}\n\n    hasBaseUrl() {\n        return this.baseUrl != null;\n    }\n\n    getNotificationsUrl() {\n        if (this.notificationsUrl != null) {\n            return this.notificationsUrl;\n        }\n\n        if (this.baseUrl != null) {\n            return this.baseUrl + '/notifications';\n        }\n\n        return 'https://notifications.bitwarden.com';\n    }\n\n    getEnterpriseUrl() {\n        if (this.enterpriseUrl != null) {\n            return this.enterpriseUrl;\n        }\n\n        if (this.baseUrl != null) {\n            return this.baseUrl + '/portal';\n        }\n\n        return 'https://portal.bitwarden.com';\n    }\n\n    getWebVaultUrl() {\n        if (this.webVaultUrl != null) {\n            return this.webVaultUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl;\n        }\n        return 'https://vault.bitwarden.com';\n    }\n\n    getSendUrl() {\n        return this.getWebVaultUrl() === 'https://vault.bitwarden.com'\n            ? 'https://send.bitwarden.com/#'\n            : this.getWebVaultUrl() + '/#/send/';\n    }\n\n    getIconsUrl() {\n        if (this.iconsUrl != null) {\n            return this.iconsUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/icons';\n        }\n\n        return 'https://icons.bitwarden.net';\n    }\n\n    getApiUrl() {\n        if (this.apiUrl != null) {\n            return this.apiUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/api';\n        }\n\n        return 'https://api.bitwarden.com';\n    }\n\n    getIdentityUrl() {\n        if (this.identityUrl != null) {\n            return this.identityUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/identity';\n        }\n\n        return 'https://identity.bitwarden.com';\n    }\n\n    getEventsUrl() {\n        if (this.eventsUrl != null) {\n            return this.eventsUrl;\n        }\n\n        if (this.baseUrl) {\n            return this.baseUrl + '/events';\n        }\n\n        return 'https://events.bitwarden.com';\n    }\n\n    async setUrlsFromStorage(): Promise<void> {\n        const urlsObj: any = await this.storageService.get(ConstantsService.environmentUrlsKey);\n        const urls = urlsObj || {\n            base: null,\n            api: null,\n            identity: null,\n            icons: null,\n            notifications: null,\n            events: null,\n            webVault: null,\n            enterprise: null,\n        };\n\n        const envUrls = new EnvironmentUrls();\n\n        if (urls.base) {\n            this.baseUrl = envUrls.base = urls.base;\n            return;\n        }\n\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = envUrls.api = urls.api;\n        this.identityUrl = envUrls.identity = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = envUrls.events = urls.events;\n        this.enterpriseUrl = urls.enterprise;\n    }\n\n    async setUrls(urls: Urls, saveSettings: boolean = true): Promise<any> {\n        urls.base = this.formatUrl(urls.base);\n        urls.webVault = this.formatUrl(urls.webVault);\n        urls.api = this.formatUrl(urls.api);\n        urls.identity = this.formatUrl(urls.identity);\n        urls.icons = this.formatUrl(urls.icons);\n        urls.notifications = this.formatUrl(urls.notifications);\n        urls.events = this.formatUrl(urls.events);\n        urls.enterprise = this.formatUrl(urls.enterprise);\n\n        if (saveSettings) {\n            await this.storageService.save(ConstantsService.environmentUrlsKey, {\n                base: urls.base,\n                api: urls.api,\n                identity: urls.identity,\n                webVault: urls.webVault,\n                icons: urls.icons,\n                notifications: urls.notifications,\n                events: urls.events,\n                enterprise: urls.enterprise,\n            });\n        }\n\n        this.baseUrl = urls.base;\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = urls.api;\n        this.identityUrl = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = urls.events;\n        this.enterpriseUrl = urls.enterprise;\n\n        this.urlsSubject.next(urls);\n\n        return urls;\n    }\n\n    getUrls() {\n        return {\n            base: this.baseUrl,\n            webVault: this.webVaultUrl,\n            api: this.apiUrl,\n            identity: this.identityUrl,\n            icons: this.iconsUrl,\n            notifications: this.notificationsUrl,\n            events: this.eventsUrl,\n            enterprise: this.enterpriseUrl,\n        };\n    }\n\n    private formatUrl(url: string): string {\n        if (url == null || url === '') {\n            return null;\n        }\n\n        url = url.replace(/\\/+$/g, '');\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\n            url = 'https://' + url;\n        }\n\n        return url.trim();\n    }\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderRequest } from '../models/request/folderRequest';\n\nimport { FolderResponse } from '../models/response/folderResponse';\n\nimport { FolderView } from '../models/view/folderView';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService as FolderServiceAbstraction } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\nimport { CipherData } from '../models/data/cipherData';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    foldersPrefix: 'folders_',\n    ciphersPrefix: 'ciphers_',\n};\nconst NestingDelimiter = '/';\n\nexport class FolderService implements FolderServiceAbstraction {\n    decryptedFolderCache: FolderView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private apiService: ApiService, private storageService: StorageService,\n        private i18nService: I18nService, private cipherService: CipherService) { }\n\n    clearCache(): void {\n        this.decryptedFolderCache = null;\n    }\n\n    async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n        const folder = new Folder();\n        folder.id = model.id;\n        folder.name = await this.cryptoService.encrypt(model.name, key);\n        return folder;\n    }\n\n    async get(id: string): Promise<Folder> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null || !folders.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Folder(folders[id]);\n    }\n\n    async getAll(): Promise<Folder[]> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        const response: Folder[] = [];\n        for (const id in folders) {\n            if (folders.hasOwnProperty(id)) {\n                response.push(new Folder(folders[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<FolderView[]> {\n        if (this.decryptedFolderCache != null) {\n            return this.decryptedFolderCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const decFolders: FolderView[] = [];\n        const promises: Promise<any>[] = [];\n        const folders = await this.getAll();\n        folders.forEach(folder => {\n            promises.push(folder.decrypt().then(f => decFolders.push(f)));\n        });\n\n        await Promise.all(promises);\n        decFolders.sort(Utils.getSortFunction(this.i18nService, 'name'));\n\n        const noneFolder = new FolderView();\n        noneFolder.name = this.i18nService.t('noneFolder');\n        decFolders.push(noneFolder);\n\n        this.decryptedFolderCache = decFolders;\n        return this.decryptedFolderCache;\n    }\n\n    async getAllNested(): Promise<TreeNode<FolderView>[]> {\n        const folders = await this.getAllDecrypted();\n        const nodes: TreeNode<FolderView>[] = [];\n        folders.forEach(f => {\n            const folderCopy = new FolderView();\n            folderCopy.id = f.id;\n            folderCopy.revisionDate = f.revisionDate;\n            const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<FolderView>> {\n        const folders = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n    }\n\n    async saveWithServer(folder: Folder): Promise<any> {\n        const request = new FolderRequest(folder);\n\n        let response: FolderResponse;\n        if (folder.id == null) {\n            response = await this.apiService.postFolder(request);\n            folder.id = response.id;\n        } else {\n            response = await this.apiService.putFolder(folder.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new FolderData(response, userId);\n        await this.upsert(data);\n    }\n\n    async upsert(folder: FolderData | FolderData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            folders = {};\n        }\n\n        if (folder instanceof FolderData) {\n            const f = folder as FolderData;\n            folders[f.id] = f;\n        } else {\n            (folder as FolderData[]).forEach(f => {\n                folders[f.id] = f;\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async replace(folders: { [id: string]: FolderData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.foldersPrefix + userId);\n        this.decryptedFolderCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (folders[id] == null) {\n                return;\n            }\n            delete folders[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete folders[i];\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n\n        // Items in a deleted folder are re-assigned to \"No Folder\"\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(Keys.ciphersPrefix + userId);\n        if (ciphers != null) {\n            const updates: CipherData[] = [];\n            for (const cId in ciphers) {\n                if (ciphers[cId].folderId === id) {\n                    ciphers[cId].folderId = null;\n                    updates.push(ciphers[cId]);\n                }\n            }\n            if (updates.length > 0) {\n                this.cipherService.upsert(updates);\n            }\n        }\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteFolder(id);\n        await this.delete(id);\n    }\n}\n","import { I18nService as I18nServiceAbstraction } from '../abstractions/i18n.service';\n\nexport class I18nService implements I18nServiceAbstraction {\n    locale: string;\n    // First locale is the default (English)\n    supportedTranslationLocales: string[] = ['en'];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames = new Map<string, string>([\n        ['af', 'Afrikaans'],\n        ['be', 'Беларуская'],\n        ['bg', 'български'],\n        ['ca', 'català'],\n        ['cs', 'čeština'],\n        ['da', 'dansk'],\n        ['de', 'Deutsch'],\n        ['el', 'Ελληνικά'],\n        ['en', 'English'],\n        ['en-GB', 'English (British)'],\n        ['eo', 'Esperanto'],\n        ['es', 'español'],\n        ['et', 'eesti'],\n        ['fa', 'فارسی'],\n        ['fi', 'suomi'],\n        ['fr', 'français'],\n        ['he', 'עברית'],\n        ['hi', 'हिन्दी'],\n        ['hr', 'hrvatski'],\n        ['hu', 'magyar'],\n        ['id', 'Bahasa Indonesia'],\n        ['it', 'italiano'],\n        ['ja', '日本語'],\n        ['ko', '한국어'],\n        ['lv', 'Latvietis'],\n        ['ml', 'മലയാളം'],\n        ['nb', 'norsk (bokmål)'],\n        ['nl', 'Nederlands'],\n        ['pl', 'polski'],\n        ['pt-BR', 'português do Brasil'],\n        ['pt-PT', 'português'],\n        ['ro', 'română'],\n        ['ru', 'русский'],\n        ['sk', 'slovenčina'],\n        ['sr', 'Српски'],\n        ['sv', 'svenska'],\n        ['th', 'ไทย'],\n        ['tr', 'Türkçe'],\n        ['uk', 'українська'],\n        ['vi', 'Tiếng Việt'],\n        ['zh-CN', '中文（中国大陆）'],\n        ['zh-TW', '中文（台灣）'],\n    ]);\n\n    protected inited: boolean;\n    protected defaultMessages: any = {};\n    protected localeMessages: any = {};\n\n    constructor(protected systemLanguage: string, protected localesDirectory: string,\n        protected getLocalesJson: (formattedLocale: string) => Promise<any>) {\n        this.systemLanguage = systemLanguage.replace('_', '-');\n    }\n\n    async init(locale?: string) {\n        if (this.inited) {\n            throw new Error('i18n already initialized.');\n        }\n        if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n            throw new Error('supportedTranslationLocales not set.');\n        }\n\n        this.inited = true;\n        this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n        try {\n            this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: 'base' });\n        } catch {\n            this.collator = null;\n        }\n\n        if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n            this.translationLocale = this.translationLocale.slice(0, 2);\n\n            if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n                this.translationLocale = this.supportedTranslationLocales[0];\n            }\n        }\n\n        if (this.localesDirectory != null) {\n            await this.loadMessages(this.translationLocale, this.localeMessages);\n            if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n                await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n            }\n        }\n    }\n\n    t(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.translate(id, p1, p2, p3);\n    }\n\n    translate(id: string, p1?: string, p2?: string, p3?: string): string {\n        let result: string;\n        if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n            result = this.localeMessages[id];\n        } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n            result = this.defaultMessages[id];\n        } else {\n            result = '';\n        }\n\n        if (result !== '') {\n            if (p1 != null) {\n                result = result.split('__$1__').join(p1);\n            }\n            if (p2 != null) {\n                result = result.split('__$2__').join(p2);\n            }\n            if (p3 != null) {\n                result = result.split('__$3__').join(p3);\n            }\n        }\n\n        return result;\n    }\n\n    private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n        const formattedLocale = locale.replace('-', '_');\n        const locales = await this.getLocalesJson(formattedLocale);\n        for (const prop in locales) {\n            if (!locales.hasOwnProperty(prop)) {\n                continue;\n            }\n            messagesObj[prop] = locales[prop].message;\n\n            if (locales[prop].placeholders) {\n                for (const placeProp in locales[prop].placeholders) {\n                    if (!locales[prop].placeholders.hasOwnProperty(placeProp) ||\n                        !locales[prop].placeholders[placeProp].content) {\n                        continue;\n                    }\n\n                    const replaceToken = '\\\\$' + placeProp.toUpperCase() + '\\\\$';\n                    let replaceContent = locales[prop].placeholders[placeProp].content;\n                    if (replaceContent === '$1' || replaceContent === '$2' || replaceContent === '$3') {\n                        replaceContent = '__$' + replaceContent + '__';\n                    }\n                    messagesObj[prop] = messagesObj[prop].replace(new RegExp(replaceToken, 'g'), replaceContent);\n                }\n            }\n        }\n    }\n\n}\n","import * as zxcvbn from 'zxcvbn';\n\nimport { EncString } from '../models/domain/encString';\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\nimport { Policy } from '../models/domain/policy';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from '../abstractions/passwordGeneration.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { EEFLongWordList } from '../misc/wordlist';\n\nimport { PolicyType } from '../enums/policyType';\n\nconst DefaultOptions = {\n    length: 14,\n    ambiguous: false,\n    number: true,\n    minNumber: 1,\n    uppercase: true,\n    minUppercase: 0,\n    lowercase: true,\n    minLowercase: 0,\n    special: false,\n    minSpecial: 1,\n    type: 'password',\n    numWords: 3,\n    wordSeparator: '-',\n    capitalize: false,\n    includeNumber: false,\n};\n\nconst Keys = {\n    options: 'passwordGenerationOptions',\n    history: 'generatedPasswordHistory',\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n    private optionsCache: any;\n    private history: GeneratedPasswordHistory[];\n\n    constructor(private cryptoService: CryptoService, private storageService: StorageService,\n        private policyService: PolicyService) { }\n\n    async generatePassword(options: any): Promise<string> {\n        // overload defaults with given options\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.type === 'passphrase') {\n            return this.generatePassphrase(options);\n        }\n\n        // sanitize\n        this.sanitizePasswordLength(o, true);\n\n        const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n        if (o.length < minLength) {\n            o.length = minLength;\n        }\n\n        const positions: string[] = [];\n        if (o.lowercase && o.minLowercase > 0) {\n            for (let i = 0; i < o.minLowercase; i++) {\n                positions.push('l');\n            }\n        }\n        if (o.uppercase && o.minUppercase > 0) {\n            for (let i = 0; i < o.minUppercase; i++) {\n                positions.push('u');\n            }\n        }\n        if (o.number && o.minNumber > 0) {\n            for (let i = 0; i < o.minNumber; i++) {\n                positions.push('n');\n            }\n        }\n        if (o.special && o.minSpecial > 0) {\n            for (let i = 0; i < o.minSpecial; i++) {\n                positions.push('s');\n            }\n        }\n        while (positions.length < o.length) {\n            positions.push('a');\n        }\n\n        // shuffle\n        await this.shuffleArray(positions);\n\n        // build out the char sets\n        let allCharSet = '';\n\n        let lowercaseCharSet = 'abcdefghijkmnopqrstuvwxyz';\n        if (o.ambiguous) {\n            lowercaseCharSet += 'l';\n        }\n        if (o.lowercase) {\n            allCharSet += lowercaseCharSet;\n        }\n\n        let uppercaseCharSet = 'ABCDEFGHJKLMNPQRSTUVWXYZ';\n        if (o.ambiguous) {\n            uppercaseCharSet += 'IO';\n        }\n        if (o.uppercase) {\n            allCharSet += uppercaseCharSet;\n        }\n\n        let numberCharSet = '23456789';\n        if (o.ambiguous) {\n            numberCharSet += '01';\n        }\n        if (o.number) {\n            allCharSet += numberCharSet;\n        }\n\n        const specialCharSet = '!@#$%^&*';\n        if (o.special) {\n            allCharSet += specialCharSet;\n        }\n\n        let password = '';\n        for (let i = 0; i < o.length; i++) {\n            let positionChars: string;\n            switch (positions[i]) {\n                case 'l':\n                    positionChars = lowercaseCharSet;\n                    break;\n                case 'u':\n                    positionChars = uppercaseCharSet;\n                    break;\n                case 'n':\n                    positionChars = numberCharSet;\n                    break;\n                case 's':\n                    positionChars = specialCharSet;\n                    break;\n                case 'a':\n                    positionChars = allCharSet;\n                    break;\n                default:\n                    break;\n            }\n\n            const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n            password += positionChars.charAt(randomCharIndex);\n        }\n\n        return password;\n    }\n\n    async generatePassphrase(options: any): Promise<string> {\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.numWords == null || o.numWords <= 2) {\n            o.numWords = DefaultOptions.numWords;\n        }\n        if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n            o.wordSeparator = ' ';\n        }\n        if (o.capitalize == null) {\n            o.capitalize = false;\n        }\n        if (o.includeNumber == null) {\n            o.includeNumber = false;\n        }\n\n        const listLength = EEFLongWordList.length - 1;\n        const wordList = new Array(o.numWords);\n        for (let i = 0; i < o.numWords; i++) {\n            const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n            if (o.capitalize) {\n                wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n            } else {\n                wordList[i] = EEFLongWordList[wordIndex];\n            }\n        }\n\n        if (o.includeNumber) {\n            await this.appendRandomNumberToRandomWord(wordList);\n        }\n        return wordList.join(o.wordSeparator);\n    }\n\n    async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n        if (this.optionsCache == null) {\n            const options = await this.storageService.get(Keys.options);\n            if (options == null) {\n                this.optionsCache = DefaultOptions;\n            } else {\n                this.optionsCache = Object.assign({}, DefaultOptions, options);\n            }\n        }\n        const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(this.optionsCache);\n        this.optionsCache = enforcedOptions[0];\n        return [this.optionsCache, enforcedOptions[1]];\n    }\n\n    async enforcePasswordGeneratorPoliciesOnOptions(options: any): Promise<[any, PasswordGeneratorPolicyOptions]> {\n        let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n        if (enforcedPolicyOptions != null) {\n            if (options.length < enforcedPolicyOptions.minLength) {\n                options.length = enforcedPolicyOptions.minLength;\n            }\n\n            if (enforcedPolicyOptions.useUppercase) {\n                options.uppercase = true;\n            }\n\n            if (enforcedPolicyOptions.useLowercase) {\n                options.lowercase = true;\n            }\n\n            if (enforcedPolicyOptions.useNumbers) {\n                options.number = true;\n            }\n\n            if (options.minNumber < enforcedPolicyOptions.numberCount) {\n                options.minNumber = enforcedPolicyOptions.numberCount;\n            }\n\n            if (enforcedPolicyOptions.useSpecial) {\n                options.special = true;\n            }\n\n            if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n                options.minSpecial = enforcedPolicyOptions.specialCount;\n            }\n\n            // Must normalize these fields because the receiving call expects all options to pass the current rules\n            if (options.minSpecial + options.minNumber > options.length) {\n                options.minSpecial = options.length - options.minNumber;\n            }\n\n            if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n                options.numWords = enforcedPolicyOptions.minNumberWords;\n            }\n\n            if (enforcedPolicyOptions.capitalize) {\n                options.capitalize = true;\n            }\n\n            if (enforcedPolicyOptions.includeNumber) {\n                options.includeNumber = true;\n            }\n\n            // Force default type if password/passphrase selected via policy\n            if (enforcedPolicyOptions.defaultType === 'password' ||\n                enforcedPolicyOptions.defaultType === 'passphrase') {\n                options.type = enforcedPolicyOptions.defaultType;\n            }\n        } else { // UI layer expects an instantiated object to prevent more explicit null checks\n            enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n        }\n        return [options, enforcedPolicyOptions];\n    }\n\n    async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n        const policies: Policy[] = this.policyService == null ? null :\n            await this.policyService.getAll(PolicyType.PasswordGenerator);\n        let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n        if (policies == null || policies.length === 0) {\n            return enforcedOptions;\n        }\n\n        policies.forEach(currentPolicy => {\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\n                return;\n            }\n\n            if (enforcedOptions == null) {\n                enforcedOptions = new PasswordGeneratorPolicyOptions();\n            }\n\n            // Password wins in multi-org collisions\n            if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== 'password') {\n                enforcedOptions.defaultType = currentPolicy.data.defaultType;\n            }\n\n            if (currentPolicy.data.minLength != null\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\n                enforcedOptions.minLength = currentPolicy.data.minLength;\n            }\n\n            if (currentPolicy.data.useUpper) {\n                enforcedOptions.useUppercase = true;\n            }\n\n            if (currentPolicy.data.useLower) {\n                enforcedOptions.useLowercase = true;\n            }\n\n            if (currentPolicy.data.useNumbers) {\n                enforcedOptions.useNumbers = true;\n            }\n\n            if (currentPolicy.data.minNumbers != null\n                && currentPolicy.data.minNumbers > enforcedOptions.numberCount) {\n                enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n            }\n\n            if (currentPolicy.data.useSpecial) {\n                enforcedOptions.useSpecial = true;\n            }\n\n            if (currentPolicy.data.minSpecial != null\n                && currentPolicy.data.minSpecial > enforcedOptions.specialCount) {\n                enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n            }\n\n            if (currentPolicy.data.minNumberWords != null\n                && currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords) {\n                enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n            }\n\n            if (currentPolicy.data.capitalize) {\n                enforcedOptions.capitalize = true;\n            }\n\n            if (currentPolicy.data.includeNumber) {\n                enforcedOptions.includeNumber = true;\n            }\n        });\n\n        return enforcedOptions;\n    }\n\n    async saveOptions(options: any) {\n        await this.storageService.save(Keys.options, options);\n        this.optionsCache = options;\n    }\n\n    async getHistory(): Promise<GeneratedPasswordHistory[]> {\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return new Array<GeneratedPasswordHistory>();\n        }\n\n        if (!this.history) {\n            const encrypted = await this.storageService.get<GeneratedPasswordHistory[]>(Keys.history);\n            this.history = await this.decryptHistory(encrypted);\n        }\n\n        return this.history || new Array<GeneratedPasswordHistory>();\n    }\n\n    async addHistory(password: string): Promise<any> {\n        // Cannot add new history if no key is available\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return;\n        }\n\n        const currentHistory = await this.getHistory();\n\n        // Prevent duplicates\n        if (this.matchesPrevious(password, currentHistory)) {\n            return;\n        }\n\n        currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n        // Remove old items.\n        if (currentHistory.length > MaxPasswordsInHistory) {\n            currentHistory.pop();\n        }\n\n        const newHistory = await this.encryptHistory(currentHistory);\n        return await this.storageService.save(Keys.history, newHistory);\n    }\n\n    async clear(): Promise<any> {\n        this.history = [];\n        return await this.storageService.remove(Keys.history);\n    }\n\n    passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n        if (password == null || password.length === 0) {\n            return null;\n        }\n        let globalUserInputs = ['bitwarden', 'bit', 'warden'];\n        if (userInputs != null && userInputs.length > 0) {\n            globalUserInputs = globalUserInputs.concat(userInputs);\n        }\n        // Use a hash set to get rid of any duplicate user inputs\n        const finalUserInputs = Array.from(new Set(globalUserInputs));\n        const result = zxcvbn(password, finalUserInputs);\n        return result;\n    }\n\n    normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n        options.minLowercase = 0;\n        options.minUppercase = 0;\n\n        if (!options.length || options.length < 5) {\n            options.length = 5;\n        } else if (options.length > 128) {\n            options.length = 128;\n        }\n\n        if (options.length < enforcedPolicyOptions.minLength) {\n            options.length = enforcedPolicyOptions.minLength;\n        }\n\n        if (!options.minNumber) {\n            options.minNumber = 0;\n        } else if (options.minNumber > options.length) {\n            options.minNumber = options.length;\n        } else if (options.minNumber > 9) {\n            options.minNumber = 9;\n        }\n\n        if (options.minNumber < enforcedPolicyOptions.numberCount) {\n            options.minNumber = enforcedPolicyOptions.numberCount;\n        }\n\n        if (!options.minSpecial) {\n            options.minSpecial = 0;\n        } else if (options.minSpecial > options.length) {\n            options.minSpecial = options.length;\n        } else if (options.minSpecial > 9) {\n            options.minSpecial = 9;\n        }\n\n        if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n            options.minSpecial = enforcedPolicyOptions.specialCount;\n        }\n\n        if (options.minSpecial + options.minNumber > options.length) {\n            options.minSpecial = options.length - options.minNumber;\n        }\n\n        if (options.numWords == null || options.length < 3) {\n            options.numWords = 3;\n        } else if (options.numWords > 20) {\n            options.numWords = 20;\n        }\n\n        if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n            options.numWords = enforcedPolicyOptions.minNumberWords;\n        }\n\n        if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n            options.wordSeparator = options.wordSeparator[0];\n        }\n\n        this.sanitizePasswordLength(options, false);\n    }\n\n    private capitalize(str: string) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    private async appendRandomNumberToRandomWord(wordList: string[]) {\n        if (wordList == null || wordList.length <= 0) {\n            return;\n        }\n        const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n        const num = await this.cryptoService.randomNumber(0, 9);\n        wordList[index] = wordList[index] + num;\n    }\n\n    private async encryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async item => {\n            const encrypted = await this.cryptoService.encrypt(item.password);\n            return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private async decryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async item => {\n            const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n            return new GeneratedPasswordHistory(decrypted, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n        if (history == null || history.length === 0) {\n            return false;\n        }\n\n        return history[history.length - 1].password === password;\n    }\n\n    // ref: https://stackoverflow.com/a/12646864/1090359\n    private async shuffleArray(array: string[]) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = await this.cryptoService.randomNumber(0, i);\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    private sanitizePasswordLength(options: any, forGeneration: boolean) {\n        let minUppercaseCalc = 0;\n        let minLowercaseCalc = 0;\n        let minNumberCalc: number = options.minNumber;\n        let minSpecialCalc: number = options.minSpecial;\n\n        if (options.uppercase && options.minUppercase <= 0) {\n            minUppercaseCalc = 1;\n        } else if (!options.uppercase) {\n            minUppercaseCalc = 0;\n        }\n\n        if (options.lowercase && options.minLowercase <= 0) {\n            minLowercaseCalc = 1;\n        } else if (!options.lowercase) {\n            minLowercaseCalc = 0;\n        }\n\n        if (options.number && options.minNumber <= 0) {\n            minNumberCalc = 1;\n        } else if (!options.number) {\n            minNumberCalc = 0;\n        }\n\n        if (options.special && options.minSpecial <= 0) {\n            minSpecialCalc = 1;\n        } else if (!options.special) {\n            minSpecialCalc = 0;\n        }\n\n        // This should never happen but is a final safety net\n        if (!options.length || options.length < 1) {\n            options.length = 10;\n        }\n\n        const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n        // Normalize and Generation both require this modification\n        if (options.length < minLength) {\n            options.length = minLength;\n        }\n\n        // Apply other changes if the options object passed in is for generation\n        if (forGeneration) {\n            options.minUppercase = minUppercaseCalc;\n            options.minLowercase = minLowercaseCalc;\n            options.minNumber = minNumberCalc;\n            options.minSpecial = minSpecialCalc;\n        }\n    }\n}\n","import { SettingsService as SettingsServiceAbstraction } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nconst Keys = {\n    settingsPrefix: 'settings_',\n    equivalentDomains: 'equivalentDomains',\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n    private settingsCache: any;\n\n    constructor(private userService: UserService, private storageService: StorageService) {\n    }\n\n    clearCache(): void {\n        this.settingsCache = null;\n    }\n\n    getEquivalentDomains(): Promise<any> {\n        return this.getSettingsKey(Keys.equivalentDomains);\n    }\n\n    async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n        await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n    }\n\n    async clear(userId: string): Promise<void> {\n        await this.storageService.remove(Keys.settingsPrefix + userId);\n        this.clearCache();\n    }\n\n    // Helpers\n\n    private async getSettings(): Promise<any> {\n        if (this.settingsCache == null) {\n            const userId = await this.userService.getUserId();\n            this.settingsCache = this.storageService.get(Keys.settingsPrefix + userId);\n        }\n        return this.settingsCache;\n    }\n\n    private async getSettingsKey(key: string): Promise<any> {\n        const settings = await this.getSettings();\n        if (settings != null && settings[key]) {\n            return settings[key];\n        }\n        return null;\n    }\n\n    private async setSettingsKey(key: string, value: any): Promise<void> {\n        const userId = await this.userService.getUserId();\n        let settings = await this.getSettings();\n        if (!settings) {\n            settings = {};\n        }\n\n        settings[key] = value;\n        await this.storageService.save(Keys.settingsPrefix + userId, settings);\n        this.settingsCache = settings;\n    }\n}\n","import { StateService as StateServiceAbstraction } from '../abstractions/state.service';\n\nexport class StateService implements StateServiceAbstraction {\n    private state: any = {};\n\n    get<T>(key: string): Promise<T> {\n        if (this.state.hasOwnProperty(key)) {\n            return Promise.resolve(this.state[key]);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        this.state[key] = obj;\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        delete this.state[key];\n        return Promise.resolve();\n    }\n\n    purge(): Promise<any> {\n        this.state = {};\n        return Promise.resolve();\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { SendService } from '../abstractions/send.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { FolderData } from '../models/data/folderData';\nimport { OrganizationData } from '../models/data/organizationData';\nimport { PolicyData } from '../models/data/policyData';\nimport { ProviderData } from '../models/data/providerData';\nimport { SendData } from '../models/data/sendData';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SendResponse } from '../models/response/sendResponse';\n\nconst Keys = {\n    lastSyncPrefix: 'lastSync_',\n};\n\nexport class SyncService implements SyncServiceAbstraction {\n    syncInProgress: boolean = false;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private settingsService: SettingsService, private folderService: FolderService,\n        private cipherService: CipherService, private cryptoService: CryptoService,\n        private collectionService: CollectionService, private storageService: StorageService,\n        private messagingService: MessagingService, private policyService: PolicyService,\n        private sendService: SendService, private logoutCallback: (expired: boolean) => Promise<void>) {\n    }\n\n    async getLastSync(): Promise<Date> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return null;\n        }\n\n        const lastSync = await this.storageService.get<any>(Keys.lastSyncPrefix + userId);\n        if (lastSync) {\n            return new Date(lastSync);\n        }\n\n        return null;\n    }\n\n    async setLastSync(date: Date): Promise<any> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.lastSyncPrefix + userId, date.toJSON());\n    }\n\n    async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n        this.syncStarted();\n        const isAuthenticated = await this.userService.isAuthenticated();\n        if (!isAuthenticated) {\n            return this.syncCompleted(false);\n        }\n\n        const now = new Date();\n        let needsSync = false;\n        try {\n            needsSync = await this.needsSyncing(forceSync);\n        } catch (e) {\n            if (allowThrowOnError) {\n                throw e;\n            }\n        }\n\n        if (!needsSync) {\n            await this.setLastSync(now);\n            return this.syncCompleted(false);\n        }\n\n        const userId = await this.userService.getUserId();\n        try {\n            await this.apiService.refreshIdentityToken();\n            const response = await this.apiService.getSync();\n\n            await this.syncProfile(response.profile);\n            await this.syncFolders(userId, response.folders);\n            await this.syncCollections(response.collections);\n            await this.syncCiphers(userId, response.ciphers);\n            await this.syncSends(userId, response.sends);\n            await this.syncSettings(userId, response.domains);\n            await this.syncPolicies(response.policies);\n\n            await this.setLastSync(now);\n            return this.syncCompleted(true);\n        } catch (e) {\n            if (allowThrowOnError) {\n                throw e;\n            } else {\n                return this.syncCompleted(false);\n            }\n        }\n    }\n\n    async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                const localFolder = await this.folderService.get(notification.id);\n                if ((!isEdit && localFolder == null) ||\n                    (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)) {\n                    const remoteFolder = await this.apiService.getFolder(notification.id);\n                    if (remoteFolder != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.folderService.upsert(new FolderData(remoteFolder, userId));\n                        this.messagingService.send('syncedUpsertedFolder', { folderId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch { }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.folderService.delete(notification.id);\n            this.messagingService.send('syncedDeletedFolder', { folderId: notification.id });\n            this.syncCompleted(true);\n            return true;\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                let shouldUpdate = true;\n                const localCipher = await this.cipherService.get(notification.id);\n                if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n                    shouldUpdate = false;\n                }\n\n                let checkCollections = false;\n                if (shouldUpdate) {\n                    if (isEdit) {\n                        shouldUpdate = localCipher != null;\n                        checkCollections = true;\n                    } else {\n                        if (notification.collectionIds == null || notification.organizationId == null) {\n                            shouldUpdate = localCipher == null;\n                        } else {\n                            shouldUpdate = false;\n                            checkCollections = true;\n                        }\n                    }\n                }\n\n                if (!shouldUpdate && checkCollections && notification.organizationId != null &&\n                    notification.collectionIds != null && notification.collectionIds.length > 0) {\n                    const collections = await this.collectionService.getAll();\n                    if (collections != null) {\n                        for (let i = 0; i < collections.length; i++) {\n                            if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                                shouldUpdate = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (shouldUpdate) {\n                    const remoteCipher = await this.apiService.getCipher(notification.id);\n                    if (remoteCipher != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n                        this.messagingService.send('syncedUpsertedCipher', { cipherId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch (e) {\n                if (e != null && e.statusCode === 404 && isEdit) {\n                    await this.cipherService.delete(notification.id);\n                    this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n                    return this.syncCompleted(true);\n                }\n            }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.cipherService.delete(notification.id);\n            this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n            return this.syncCompleted(true);\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                const localSend = await this.sendService.get(notification.id);\n                if ((!isEdit && localSend == null) ||\n                    (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)) {\n                    const remoteSend = await this.apiService.getSend(notification.id);\n                    if (remoteSend != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.sendService.upsert(new SendData(remoteSend, userId));\n                        this.messagingService.send('syncedUpsertedSend', { sendId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch { }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.sendService.delete(notification.id);\n            this.messagingService.send('syncedDeletedSend', { sendId: notification.id });\n            this.syncCompleted(true);\n            return true;\n        }\n        return this.syncCompleted(false);\n    }\n\n    // Helpers\n\n    private syncStarted() {\n        this.syncInProgress = true;\n        this.messagingService.send('syncStarted');\n    }\n\n    private syncCompleted(successfully: boolean): boolean {\n        this.syncInProgress = false;\n        this.messagingService.send('syncCompleted', { successfully: successfully });\n        return successfully;\n    }\n\n    private async needsSyncing(forceSync: boolean) {\n        if (forceSync) {\n            return true;\n        }\n\n        const lastSync = await this.getLastSync();\n        if (lastSync == null || lastSync.getTime() === 0) {\n            return true;\n        }\n\n        const response = await this.apiService.getAccountRevisionDate();\n        if (new Date(response) <= lastSync) {\n            return false;\n        }\n        return true;\n    }\n\n    private async syncProfile(response: ProfileResponse) {\n        const stamp = await this.userService.getSecurityStamp();\n        if (stamp != null && stamp !== response.securityStamp) {\n            if (this.logoutCallback != null) {\n                await this.logoutCallback(true);\n            }\n\n            throw new Error('Stamp has changed');\n        }\n\n        await this.cryptoService.setEncKey(response.key);\n        await this.cryptoService.setEncPrivateKey(response.privateKey);\n        await this.cryptoService.setProviderKeys(response.providers);\n        await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n        await this.userService.setSecurityStamp(response.securityStamp);\n        await this.userService.setEmailVerified(response.emailVerified);\n        await this.userService.setForcePasswordReset(response.forcePasswordReset);\n\n        const organizations: { [id: string]: OrganizationData; } = {};\n        response.organizations.forEach(o => {\n            organizations[o.id] = new OrganizationData(o);\n        });\n\n        const providers: { [id: string]: ProviderData; } = {};\n        response.providers.forEach(p => {\n            providers[p.id] = new ProviderData(p);\n        });\n\n        response.providerOrganizations.forEach(o => {\n            if (organizations[o.id] == null) {\n                organizations[o.id] = new OrganizationData(o);\n                organizations[o.id].isProviderUser = true;\n            }\n        });\n        return Promise.all([\n            this.userService.replaceOrganizations(organizations),\n            this.userService.replaceProviders(providers),\n        ]);\n    }\n\n    private async syncFolders(userId: string, response: FolderResponse[]) {\n        const folders: { [id: string]: FolderData; } = {};\n        response.forEach(f => {\n            folders[f.id] = new FolderData(f, userId);\n        });\n        return await this.folderService.replace(folders);\n    }\n\n    private async syncCollections(response: CollectionDetailsResponse[]) {\n        const collections: { [id: string]: CollectionData; } = {};\n        response.forEach(c => {\n            collections[c.id] = new CollectionData(c);\n        });\n        return await this.collectionService.replace(collections);\n    }\n\n    private async syncCiphers(userId: string, response: CipherResponse[]) {\n        const ciphers: { [id: string]: CipherData; } = {};\n        response.forEach(c => {\n            ciphers[c.id] = new CipherData(c, userId);\n        });\n        return await this.cipherService.replace(ciphers);\n    }\n\n    private async syncSends(userId: string, response: SendResponse[]) {\n        const sends: { [id: string]: SendData; } = {};\n        response.forEach(s => {\n            sends[s.id] = new SendData(s, userId);\n        });\n        return await this.sendService.replace(sends);\n    }\n\n    private async syncSettings(userId: string, response: DomainsResponse) {\n        let eqDomains: string[][] = [];\n        if (response != null && response.equivalentDomains != null) {\n            eqDomains = eqDomains.concat(response.equivalentDomains);\n        }\n\n        if (response != null && response.globalEquivalentDomains != null) {\n            response.globalEquivalentDomains.forEach(global => {\n                if (global.domains.length > 0) {\n                    eqDomains.push(global.domains);\n                }\n            });\n        }\n\n        return this.settingsService.setEquivalentDomains(eqDomains);\n    }\n\n    private async syncPolicies(response: PolicyResponse[]) {\n        const policies: { [id: string]: PolicyData; } = {};\n        if (response != null) {\n            response.forEach(p => {\n                policies[p.id] = new PolicyData(p);\n            });\n        }\n        return await this.policyService.replace(policies);\n    }\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendFileData } from './sendFileData';\nimport { SendTextData } from './sendTextData';\n\nimport { SendResponse } from '../response/sendResponse';\n\nexport class SendData {\n    id: string;\n    accessId: string;\n    userId: string;\n    type: SendType;\n    name: string;\n    notes: string;\n    file: SendFileData;\n    text: SendTextData;\n    key: string;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: string;\n    expirationDate: string;\n    deletionDate: string;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(response?: SendResponse, userId?: string) {\n        if (response == null) {\n            return;\n        }\n\n        this.id = response.id;\n        this.accessId = response.accessId;\n        this.userId = userId;\n        this.type = response.type;\n        this.name = response.name;\n        this.notes = response.notes;\n        this.key = response.key;\n        this.maxAccessCount = response.maxAccessCount;\n        this.accessCount = response.accessCount;\n        this.revisionDate = response.revisionDate;\n        this.expirationDate = response.expirationDate;\n        this.deletionDate = response.deletionDate;\n        this.password = response.password;\n        this.disabled = response.disable;\n        this.hideEmail = response.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendTextData(response.text);\n                break;\n            case SendType.File:\n                this.file = new SendFileData(response.file);\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService as TokenServiceAbstraction } from '../abstractions/token.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    accessToken: 'accessToken',\n    refreshToken: 'refreshToken',\n    twoFactorTokenPrefix: 'twoFactorToken_',\n    clientId: 'apikey_clientId',\n    clientSecret: 'apikey_clientSecret',\n};\n\nexport class TokenService implements TokenServiceAbstraction {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n    clientId: string;\n    clientSecret: string;\n\n    constructor(private storageService: StorageService) {\n    }\n\n    async setTokens(accessToken: string, refreshToken: string, clientIdClientSecret: [string, string]): Promise<any> {\n        await this.setToken(accessToken);\n        await this.setRefreshToken(refreshToken);\n        if (clientIdClientSecret != null) {\n            await this.setClientId(clientIdClientSecret[0]);\n            await this.setClientSecret(clientIdClientSecret[1]);\n        }\n    }\n\n    async setClientId(clientId: string): Promise<any> {\n        this.clientId = clientId;\n        return this.storeTokenValue(Keys.clientId, clientId);\n    }\n\n    async getClientId(): Promise<string> {\n        if (this.clientId != null) {\n            return this.clientId;\n        }\n\n        this.clientId = await this.storageService.get<string>(Keys.clientId);\n        return this.clientId;\n    }\n\n    async setClientSecret(clientSecret: string): Promise<any> {\n        this.clientSecret = clientSecret;\n        return this.storeTokenValue(Keys.clientSecret, clientSecret);\n    }\n\n    async getClientSecret(): Promise<string> {\n        if (this.clientSecret != null) {\n            return this.clientSecret;\n        }\n\n        this.clientSecret = await this.storageService.get<string>(Keys.clientSecret);\n        return this.clientSecret;\n    }\n\n    async setToken(token: string): Promise<any> {\n        this.token = token;\n        this.decodedToken = null;\n        return this.storeTokenValue(Keys.accessToken, token);\n    }\n\n    async getToken(): Promise<string> {\n        if (this.token != null) {\n            return this.token;\n        }\n\n        this.token = await this.storageService.get<string>(Keys.accessToken);\n        return this.token;\n    }\n\n    async setRefreshToken(refreshToken: string): Promise<any> {\n        this.refreshToken = refreshToken;\n        return this.storeTokenValue(Keys.refreshToken, refreshToken);\n    }\n\n    async getRefreshToken(): Promise<string> {\n        if (this.refreshToken != null) {\n            return this.refreshToken;\n        }\n\n        this.refreshToken = await this.storageService.get<string>(Keys.refreshToken);\n        return this.refreshToken;\n    }\n\n    async toggleTokens(): Promise<any> {\n        const token = await this.getToken();\n        const refreshToken = await this.getRefreshToken();\n        const clientId = await this.getClientId();\n        const clientSecret = await this.getClientSecret();\n        const timeout = await this.storageService.get(ConstantsService.vaultTimeoutKey);\n        const action = await this.storageService.get(ConstantsService.vaultTimeoutActionKey);\n        if ((timeout != null || timeout === 0) && action === 'logOut') {\n            // if we have a vault timeout and the action is log out, reset tokens\n            await this.clearToken();\n            this.token = token;\n            this.refreshToken = refreshToken;\n            this.clientId = clientId;\n            this.clientSecret = clientSecret;\n            return;\n        }\n\n        await this.setToken(token);\n        await this.setRefreshToken(refreshToken);\n        await this.setClientId(clientId);\n        await this.setClientSecret(clientSecret);\n    }\n\n    setTwoFactorToken(token: string, email: string): Promise<any> {\n        return this.storageService.save(Keys.twoFactorTokenPrefix + email, token);\n    }\n\n    getTwoFactorToken(email: string): Promise<string> {\n        return this.storageService.get<string>(Keys.twoFactorTokenPrefix + email);\n    }\n\n    clearTwoFactorToken(email: string): Promise<any> {\n        return this.storageService.remove(Keys.twoFactorTokenPrefix + email);\n    }\n\n    async clearToken(): Promise<any> {\n        this.token = null;\n        this.decodedToken = null;\n        this.refreshToken = null;\n        this.clientId = null;\n        this.clientSecret = null;\n\n        await this.storageService.remove(Keys.accessToken);\n        await this.storageService.remove(Keys.refreshToken);\n        await this.storageService.remove(Keys.clientId);\n        await this.storageService.remove(Keys.clientSecret);\n    }\n\n    // jwthelper methods\n    // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n    decodeToken(): any {\n        if (this.decodedToken) {\n            return this.decodedToken;\n        }\n\n        if (this.token == null) {\n            throw new Error('Token not found.');\n        }\n\n        const parts = this.token.split('.');\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n        if (decoded == null) {\n            throw new Error('Cannot decode the token');\n        }\n\n        this.decodedToken = JSON.parse(decoded);\n        return this.decodedToken;\n    }\n\n    getTokenExpirationDate(): Date {\n        const decoded = this.decodeToken();\n        if (typeof decoded.exp === 'undefined') {\n            return null;\n        }\n\n        const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        d.setUTCSeconds(decoded.exp);\n        return d;\n    }\n\n    tokenSecondsRemaining(offsetSeconds: number = 0): number {\n        const d = this.getTokenExpirationDate();\n        if (d == null) {\n            return 0;\n        }\n\n        const msRemaining = d.valueOf() - (new Date().valueOf() + (offsetSeconds * 1000));\n        return Math.round(msRemaining / 1000);\n    }\n\n    tokenNeedsRefresh(minutes: number = 5): boolean {\n        const sRemaining = this.tokenSecondsRemaining();\n        return sRemaining < (60 * minutes);\n    }\n\n    getUserId(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.sub === 'undefined') {\n            throw new Error('No user id found');\n        }\n\n        return decoded.sub as string;\n    }\n\n    getEmail(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email === 'undefined') {\n            throw new Error('No email found');\n        }\n\n        return decoded.email as string;\n    }\n\n    getEmailVerified(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email_verified === 'undefined') {\n            throw new Error('No email verification found');\n        }\n\n        return decoded.email_verified as boolean;\n    }\n\n    getName(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.name === 'undefined') {\n            return null;\n        }\n\n        return decoded.name as string;\n    }\n\n    getPremium(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.premium === 'undefined') {\n            return false;\n        }\n\n        return decoded.premium as boolean;\n    }\n\n    getIssuer(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.iss === 'undefined') {\n            throw new Error('No issuer found');\n        }\n\n        return decoded.iss as string;\n    }\n\n    private async storeTokenValue(key: string, value: string) {\n        if (await this.skipTokenStorage()) {\n            // if we have a vault timeout and the action is log out, don't store token\n            return;\n        }\n\n        return this.storageService.save(key, value);\n    }\n\n    private async skipTokenStorage(): Promise<boolean> {\n        const timeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        const action = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n        return timeout != null && action === 'logOut';\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TotpService as TotpServiceAbstraction } from '../abstractions/totp.service';\n\nimport { Utils } from '../misc/utils';\n\nconst B32Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\nconst SteamChars = '23456789BCDFGHJKMNPQRTVWXY';\n\nexport class TotpService implements TotpServiceAbstraction {\n    constructor(private storageService: StorageService, private cryptoFunctionService: CryptoFunctionService) { }\n\n    async getCode(key: string): Promise<string> {\n        if (key == null) {\n            return null;\n        }\n        let period = 30;\n        let alg: 'sha1' | 'sha256' | 'sha512' = 'sha1';\n        let digits = 6;\n        let keyB32 = key;\n        const isOtpAuth = key.toLowerCase().indexOf('otpauth://') === 0;\n        const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf('steam://') === 0;\n        if (isOtpAuth) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('digits') && params.get('digits') != null) {\n                try {\n                    const digitParams = parseInt(params.get('digits').trim(), null);\n                    if (digitParams > 10) {\n                        digits = 10;\n                    } else if (digitParams > 0) {\n                        digits = digitParams;\n                    }\n                } catch { }\n            }\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    const periodParam = parseInt(params.get('period').trim(), null);\n                    if (periodParam > 0) {\n                        period = periodParam;\n                    }\n                } catch { }\n            }\n            if (params.has('secret') && params.get('secret') != null) {\n                keyB32 = params.get('secret');\n            }\n            if (params.has('algorithm') && params.get('algorithm') != null) {\n                const algParam = params.get('algorithm').toLowerCase();\n                if (algParam === 'sha1' || algParam === 'sha256' || algParam === 'sha512') {\n                    alg = algParam;\n                }\n            }\n        } else if (isSteamAuth) {\n            keyB32 = key.substr('steam://'.length);\n            digits = 5;\n        }\n\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, '0');\n        const timeBytes = Utils.fromHexToArray(timeHex);\n        const keyBytes = this.b32ToBytes(keyB32);\n\n        if (!keyBytes.length || !timeBytes.length) {\n            return null;\n        }\n\n        const hash = await this.sign(keyBytes, timeBytes, alg);\n        if (hash.length === 0) {\n            return null;\n        }\n\n        /* tslint:disable */\n        const offset = (hash[hash.length - 1] & 0xf);\n        const binary = ((hash[offset] & 0x7f) << 24) | ((hash[offset + 1] & 0xff) << 16) |\n            ((hash[offset + 2] & 0xff) << 8) | (hash[offset + 3] & 0xff);\n        /* tslint:enable */\n\n        let otp = '';\n        if (isSteamAuth) {\n            // tslint:disable-next-line\n            let fullCode = binary & 0x7fffffff;\n            for (let i = 0; i < digits; i++) {\n                otp += SteamChars[fullCode % SteamChars.length];\n                fullCode = Math.trunc(fullCode / SteamChars.length);\n            }\n        } else {\n            otp = (binary % Math.pow(10, digits)).toString();\n            otp = this.leftPad(otp, digits, '0');\n        }\n\n        return otp;\n    }\n\n    getTimeInterval(key: string): number {\n        let period = 30;\n        if (key != null && key.toLowerCase().indexOf('otpauth://') === 0) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    period = parseInt(params.get('period').trim(), null);\n                } catch { }\n            }\n        }\n        return period;\n    }\n\n    async isAutoCopyEnabled(): Promise<boolean> {\n        return !(await this.storageService.get<boolean>(ConstantsService.disableAutoTotpCopyKey));\n    }\n\n    // Helpers\n\n    private leftPad(s: string, l: number, p: string): string {\n        if (l + 1 >= s.length) {\n            s = Array(l + 1 - s.length).join(p) + s;\n        }\n        return s;\n    }\n\n    private decToHex(d: number): string {\n        return (d < 15.5 ? '0' : '') + Math.round(d).toString(16);\n    }\n\n    private b32ToHex(s: string): string {\n        s = s.toUpperCase();\n        let cleanedInput = '';\n\n        for (let i = 0; i < s.length; i++) {\n            if (B32Chars.indexOf(s[i]) < 0) {\n                continue;\n            }\n\n            cleanedInput += s[i];\n        }\n        s = cleanedInput;\n\n        let bits = '';\n        let hex = '';\n        for (let i = 0; i < s.length; i++) {\n            const byteIndex = B32Chars.indexOf(s.charAt(i));\n            if (byteIndex < 0) {\n                continue;\n            }\n            bits += this.leftPad(byteIndex.toString(2), 5, '0');\n        }\n        for (let i = 0; i + 4 <= bits.length; i += 4) {\n            const chunk = bits.substr(i, 4);\n            hex = hex + parseInt(chunk, 2).toString(16);\n        }\n        return hex;\n    }\n\n    private b32ToBytes(s: string): Uint8Array {\n        return Utils.fromHexToArray(this.b32ToHex(s));\n    }\n\n    private async sign(keyBytes: Uint8Array, timeBytes: Uint8Array, alg: 'sha1' | 'sha256' | 'sha512') {\n        const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n        return new Uint8Array(signature);\n    }\n}\n","import { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService as UserServiceAbstraction } from '../abstractions/user.service';\n\nimport { OrganizationData } from '../models/data/organizationData';\nimport { Organization } from '../models/domain/organization';\n\nimport { KdfType } from '../enums/kdfType';\nimport { ProviderData } from '../models/data/providerData';\nimport { Provider } from '../models/domain/provider';\n\nconst Keys = {\n    userId: 'userId',\n    userEmail: 'userEmail',\n    stamp: 'securityStamp',\n    kdf: 'kdf',\n    kdfIterations: 'kdfIterations',\n    organizationsPrefix: 'organizations_',\n    providersPrefix: 'providers_',\n    emailVerified: 'emailVerified',\n    forcePasswordReset: 'forcePasswordReset',\n};\n\nexport class UserService implements UserServiceAbstraction {\n    private userId: string;\n    private email: string;\n    private stamp: string;\n    private kdf: KdfType;\n    private kdfIterations: number;\n    private emailVerified: boolean;\n    private forcePasswordReset: boolean;\n\n    constructor(private tokenService: TokenService, private storageService: StorageService) { }\n\n    async setInformation(userId: string, email: string, kdf: KdfType, kdfIterations: number): Promise<any> {\n        this.email = email;\n        this.userId = userId;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n\n        await this.storageService.save(Keys.userEmail, email);\n        await this.storageService.save(Keys.userId, userId);\n        await this.storageService.save(Keys.kdf, kdf);\n        await this.storageService.save(Keys.kdfIterations, kdfIterations);\n    }\n\n    setSecurityStamp(stamp: string): Promise<any> {\n        this.stamp = stamp;\n        return this.storageService.save(Keys.stamp, stamp);\n    }\n\n    setEmailVerified(emailVerified: boolean) {\n        this.emailVerified = emailVerified;\n        return this.storageService.save(Keys.emailVerified, emailVerified);\n    }\n\n    setForcePasswordReset(forcePasswordReset: boolean) {\n        this.forcePasswordReset = forcePasswordReset;\n        return this.storageService.save(Keys.forcePasswordReset, forcePasswordReset);\n    }\n\n    async getUserId(): Promise<string> {\n        if (this.userId == null) {\n            this.userId = await this.storageService.get<string>(Keys.userId);\n        }\n        return this.userId;\n    }\n\n    async getEmail(): Promise<string> {\n        if (this.email == null) {\n            this.email = await this.storageService.get<string>(Keys.userEmail);\n        }\n        return this.email;\n    }\n\n    async getSecurityStamp(): Promise<string> {\n        if (this.stamp == null) {\n            this.stamp = await this.storageService.get<string>(Keys.stamp);\n        }\n        return this.stamp;\n    }\n\n    async getKdf(): Promise<KdfType> {\n        if (this.kdf == null) {\n            this.kdf = await this.storageService.get<KdfType>(Keys.kdf);\n        }\n        return this.kdf;\n    }\n\n    async getKdfIterations(): Promise<number> {\n        if (this.kdfIterations == null) {\n            this.kdfIterations = await this.storageService.get<number>(Keys.kdfIterations);\n        }\n        return this.kdfIterations;\n    }\n\n    async getEmailVerified(): Promise<boolean> {\n        if (this.emailVerified == null) {\n            this.emailVerified = await this.storageService.get<boolean>(Keys.emailVerified);\n        }\n        return this.emailVerified;\n    }\n\n    async getForcePasswordReset(): Promise<boolean> {\n        if (this.forcePasswordReset == null) {\n            this.forcePasswordReset = await this.storageService.get<boolean>(Keys.forcePasswordReset);\n        }\n        return this.forcePasswordReset;\n    }\n\n    async clear(): Promise<any> {\n        const userId = await this.getUserId();\n\n        await this.storageService.remove(Keys.userId);\n        await this.storageService.remove(Keys.userEmail);\n        await this.storageService.remove(Keys.stamp);\n        await this.storageService.remove(Keys.kdf);\n        await this.storageService.remove(Keys.kdfIterations);\n        await this.storageService.remove(Keys.forcePasswordReset);\n        await this.clearOrganizations(userId);\n        await this.clearProviders(userId);\n\n        this.userId = this.email = this.stamp = null;\n        this.kdf = null;\n        this.kdfIterations = null;\n    }\n\n    async isAuthenticated(): Promise<boolean> {\n        const token = await this.tokenService.getToken();\n        if (token == null) {\n            return false;\n        }\n\n        const userId = await this.getUserId();\n        return userId != null;\n    }\n\n    async canAccessPremium(): Promise<boolean> {\n        const authed = await this.isAuthenticated();\n        if (!authed) {\n            return false;\n        }\n\n        const tokenPremium = this.tokenService.getPremium();\n        if (tokenPremium) {\n            return true;\n        }\n\n        const orgs = await this.getAllOrganizations();\n        for (let i = 0; i < orgs.length; i++) {\n            if (orgs[i].usersGetPremium && orgs[i].enabled) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    async getOrganization(id: string): Promise<Organization> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        if (organizations == null || !organizations.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Organization(organizations[id]);\n    }\n\n    async getAllOrganizations(): Promise<Organization[]> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        const response: Organization[] = [];\n        for (const id in organizations) {\n            if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n                response.push(new Organization(organizations[id]));\n            }\n        }\n        return response;\n    }\n\n    async replaceOrganizations(organizations: { [id: string]: OrganizationData; }): Promise<any> {\n        const userId = await this.getUserId();\n        await this.storageService.save(Keys.organizationsPrefix + userId, organizations);\n    }\n\n    async clearOrganizations(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.organizationsPrefix + userId);\n    }\n\n    async getProvider(id: string): Promise<Provider> {\n        const userId = await this.getUserId();\n        const providers = await this.storageService.get<{ [id: string]: ProviderData; }>(\n            Keys.providersPrefix + userId);\n        if (providers == null || !providers.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Provider(providers[id]);\n    }\n\n    async getAllProviders(): Promise<Provider[]> {\n        const userId = await this.getUserId();\n        const providers = await this.storageService.get<{ [id: string]: ProviderData; }>(\n            Keys.providersPrefix + userId);\n        const response: Provider[] = [];\n        for (const id in providers) {\n            if (providers.hasOwnProperty(id)) {\n                response.push(new Provider(providers[id]));\n            }\n        }\n        return response;\n    }\n\n    async replaceProviders(providers: { [id: string]: ProviderData; }): Promise<any> {\n        const userId = await this.getUserId();\n        await this.storageService.save(Keys.providersPrefix + userId, providers);\n    }\n\n    async clearProviders(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.providersPrefix + userId);\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from '../abstractions/vaultTimeout.service';\n\nimport { EncString } from '../models/domain/encString';\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n    pinProtectedKey: EncString = null;\n    biometricLocked: boolean = true;\n    everBeenUnlocked: boolean = false;\n\n    private inited = false;\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private collectionService: CollectionService, private cryptoService: CryptoService,\n        protected platformUtilsService: PlatformUtilsService, private storageService: StorageService,\n        private messagingService: MessagingService, private searchService: SearchService,\n        private userService: UserService, private tokenService: TokenService,\n        private lockedCallback: () => Promise<void> = null, private loggedOutCallback: () => Promise<void> = null) {\n    }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.startCheck();\n        }\n    }\n\n    startCheck() {\n        this.checkVaultTimeout();\n        setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n\n    // Keys aren't stored for a device that is locked or logged out.\n    async isLocked(): Promise<boolean> {\n        // Handle never lock startup situation\n        if (await this.cryptoService.hasKeyStored('auto') && !this.everBeenUnlocked) {\n            await this.cryptoService.getKey('auto');\n        }\n\n        return !this.cryptoService.hasKeyInMemory();\n    }\n\n    async checkVaultTimeout(): Promise<void> {\n        if (await this.platformUtilsService.isViewOpen()) {\n            // Do not lock\n            return;\n        }\n\n        // \"is logged out check\" - similar to isLocked, below\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        if (await this.isLocked()) {\n            return;\n        }\n\n        // This has the potential to be removed. Evaluate after all platforms complete with auto-logout\n        let vaultTimeout = this.platformUtilsService.lockTimeout();\n        if (vaultTimeout == null) {\n            vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        }\n\n        if (vaultTimeout == null || vaultTimeout < 0) {\n            return;\n        }\n\n        const lastActive = await this.storageService.get<number>(ConstantsService.lastActiveKey);\n        if (lastActive == null) {\n            return;\n        }\n\n        const vaultTimeoutSeconds = vaultTimeout * 60;\n        const diffSeconds = ((new Date()).getTime() - lastActive) / 1000;\n        if (diffSeconds >= vaultTimeoutSeconds) {\n            // Pivot based on the saved vault timeout action\n            const timeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n            timeoutAction === 'logOut' ? await this.logOut() : await this.lock(true);\n        }\n    }\n\n    async lock(allowSoftLock = false): Promise<void> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        this.biometricLocked = true;\n        this.everBeenUnlocked = true;\n        await this.cryptoService.clearKey(false);\n        await this.cryptoService.clearOrgKeys(true);\n        await this.cryptoService.clearKeyPair(true);\n        await this.cryptoService.clearEncKey(true);\n\n        this.folderService.clearCache();\n        this.cipherService.clearCache();\n        this.collectionService.clearCache();\n        this.searchService.clearIndex();\n        this.messagingService.send('locked');\n        if (this.lockedCallback != null) {\n            await this.lockedCallback();\n        }\n    }\n\n    async logOut(): Promise<void> {\n        if (this.loggedOutCallback != null) {\n            await this.loggedOutCallback();\n        }\n    }\n\n    async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n        await this.storageService.save(ConstantsService.vaultTimeoutKey, timeout);\n        await this.storageService.save(ConstantsService.vaultTimeoutActionKey, action);\n        await this.cryptoService.toggleKey();\n        await this.tokenService.toggleTokens();\n    }\n\n    async isPinLockSet(): Promise<[boolean, boolean]> {\n        const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n        const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n        return [protectedPin != null, pinProtectedKey != null];\n    }\n\n    async isBiometricLockSet(): Promise<boolean> {\n        return await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\n    }\n\n    clear(): Promise<any> {\n        this.everBeenUnlocked = false;\n        this.pinProtectedKey = null;\n        return this.storageService.remove(ConstantsService.protectedPin);\n    }\n}\n","import { LogLevelType } from '../enums/logLevelType';\n\nimport { LogService as LogServiceAbstraction } from '../abstractions/log.service';\n\nimport * as hrtime from 'browser-hrtime';\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n    protected timersMap: Map<string, [number, number]> = new Map();\n\n    constructor(protected isDev: boolean, protected filter: (level: LogLevelType) => boolean = null) { }\n\n    debug(message: string) {\n        if (!this.isDev) {\n            return;\n        }\n        this.write(LogLevelType.Debug, message);\n    }\n\n    info(message: string) {\n        this.write(LogLevelType.Info, message);\n    }\n\n    warning(message: string) {\n        this.write(LogLevelType.Warning, message);\n    }\n\n    error(message: string) {\n        this.write(LogLevelType.Error, message);\n    }\n\n    write(level: LogLevelType, message: string) {\n        if (this.filter != null && this.filter(level)) {\n            return;\n        }\n\n        switch (level) {\n            case LogLevelType.Debug:\n                // tslint:disable-next-line\n                console.log(message);\n                break;\n            case LogLevelType.Info:\n                // tslint:disable-next-line\n                console.log(message);\n                break;\n            case LogLevelType.Warning:\n                // tslint:disable-next-line\n                console.warn(message);\n                break;\n            case LogLevelType.Error:\n                // tslint:disable-next-line\n                console.error(message);\n                break;\n            default:\n                break;\n        }\n    }\n\n    time(label: string = 'default') {\n        if (!this.timersMap.has(label)) {\n            this.timersMap.set(label, hrtime());\n        }\n    }\n\n    timeEnd(label: string = 'default'): [number, number] {\n        const elapsed = hrtime(this.timersMap.get(label));\n        this.timersMap.delete(label);\n        this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n        return elapsed;\n    }\n}\n","export enum LogLevelType {\n    Debug,\n    Info,\n    Warning,\n    Error,\n}\n","import { Cipher } from './cipher';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Cipher as CipherDomain } from '../domain/cipher';\n\nexport class CipherWithIds extends Cipher {\n    id: string;\n    collectionIds: string[];\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView | CipherDomain) {\n        this.id = o.id;\n        super.build(o);\n        this.collectionIds = o.collectionIds;\n    }\n}\n","import { Collection } from './collection';\n\nimport { CollectionView } from '../view/collectionView';\n\nimport { Collection as CollectionDomain } from '../domain/collection';\n\nexport class CollectionWithId extends Collection {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView | CollectionDomain) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","import { Folder } from './folder';\n\nimport { FolderView } from '../view/folderView';\n\nimport { Folder as FolderDomain } from '../domain/folder';\n\nexport class FolderWithId extends Folder {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView | FolderDomain) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","import { ImportResult } from '../../models/domain/importResult';\nimport { BaseImporter } from '../baseImporter';\nimport { Importer } from '../importer';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { FieldType } from '../../enums/fieldType';\nimport { CipherView } from '../../models/view';\nimport { CipherImportContext } from './cipherImportContext';\n\nexport const IgnoredProperties = ['ainfo', 'autosubmit', 'notesplain', 'ps', 'scope', 'tags', 'title', 'uuid', 'notes'];\n\nexport abstract class OnePasswordCsvImporter extends BaseImporter implements Importer {\n    protected loginPropertyParsers = [this.setLoginUsername, this.setLoginPassword, this.setLoginUris];\n    protected creditCardPropertyParsers = [this.setCreditCardNumber, this.setCreditCardVerification, this.setCreditCardCardholderName, this.setCreditCardExpiry];\n    protected identityPropertyParsers = [this.setIdentityFirstName, this.setIdentityInitial, this.setIdentityLastName, this.setIdentityUserName, this.setIdentityEmail, this.setIdentityPhone, this.setIdentityCompany];\n\n    abstract setCipherType(value: any, cipher: CipherView): void;\n\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true, {\n            quoteChar: '\"',\n            escapeChar: '\\\\',\n        });\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(this.getProp(value, 'title'))) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.getProp(value, 'title'), '--');\n\n            this.setNotes(value, cipher);\n\n            this.setCipherType(value, cipher);\n\n            let altUsername: string = null;\n            for (const property in value) {\n                if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n                    continue;\n                }\n\n                const context = new CipherImportContext(value, property, cipher);\n                if (cipher.type === CipherType.Login && this.setKnownLoginValue(context)) {\n                    continue;\n                } else if (cipher.type === CipherType.Card && this.setKnownCreditCardValue(context)) {\n                    continue;\n                } else if (cipher.type === CipherType.Identity && this.setKnownIdentityValue(context)) {\n                    continue;\n                }\n\n                altUsername = this.setUnknownValue(context, altUsername);\n            }\n\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(altUsername) &&\n                this.isNullOrWhitespace(cipher.login.username) && altUsername.indexOf('://') === -1) {\n                cipher.login.username = altUsername;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    protected getProp(obj: any, name: string): any {\n        const lowerObj = Object.entries(obj).reduce((agg: any, entry: [string, any]) => {\n            agg[entry[0].toLowerCase()] = entry[1];\n            return agg;\n        }, {});\n        return lowerObj[name.toLowerCase()];\n    }\n\n    protected getPropByRegexp(obj: any, regexp: RegExp): any {\n        const matchingKeys = Object.keys(obj).reduce((agg: string[], key: string) => {\n            if (key.match(regexp)) {\n                agg.push(key);\n            }\n            return agg;\n        }, []);\n        if (matchingKeys.length === 0) {\n            return null;\n        } else {\n            return obj[matchingKeys[0]];\n        }\n    }\n\n    protected getPropIncluding(obj: any, name: string): any {\n        const includesMap = Object.keys(obj).reduce((agg: string[], entry: string) => {\n            if (entry.toLowerCase().includes(name.toLowerCase())) {\n                agg.push(entry);\n            }\n            return agg;\n        }, []);\n        if (includesMap.length === 0) {\n            return null;\n        } else {\n            return obj[includesMap[0]];\n        }\n    }\n\n    protected setNotes(importRecord: any, cipher: CipherView) {\n        cipher.notes = this.getValueOrDefault(this.getProp(importRecord, 'notesPlain'), '') + '\\n' +\n            this.getValueOrDefault(this.getProp(importRecord, 'notes'), '') + '\\n';\n        cipher.notes.trim();\n\n    }\n\n    protected setKnownLoginValue(context: CipherImportContext): boolean {\n        return this.loginPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setKnownCreditCardValue(context: CipherImportContext): boolean {\n        return this.creditCardPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setKnownIdentityValue(context: CipherImportContext): boolean {\n        return this.identityPropertyParsers.reduce((agg: boolean, func) => {\n            if (!agg) {\n                agg = func.bind(this)(context);\n            }\n            return agg;\n        }, false);\n    }\n\n    protected setUnknownValue(context: CipherImportContext, altUsername: string): string {\n        if (IgnoredProperties.indexOf(context.lowerProperty) === -1 && !context.lowerProperty.startsWith('section:') &&\n            !context.lowerProperty.startsWith('section ')) {\n            if (altUsername == null && context.lowerProperty === 'email') {\n                return context.importRecord[context.property];\n            }\n            else if (context.lowerProperty === 'created date' || context.lowerProperty === 'modified date') {\n                const readableDate = new Date(parseInt(context.importRecord[context.property], 10) * 1000).toUTCString();\n                this.processKvp(context.cipher, '1Password ' + context.property, readableDate);\n                return null;\n            }\n            if (context.lowerProperty.includes('password') || context.lowerProperty.includes('key') || context.lowerProperty.includes('secret')) {\n                this.processKvp(context.cipher, context.property, context.importRecord[context.property], FieldType.Hidden);\n            } else {\n                this.processKvp(context.cipher, context.property, context.importRecord[context.property]);\n            }\n        }\n        return null;\n    }\n\n    protected setIdentityFirstName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.firstName) && context.lowerProperty.includes('first name')) {\n            context.cipher.identity.firstName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityInitial(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.middleName) && context.lowerProperty.includes('initial')) {\n            context.cipher.identity.middleName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityLastName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.lastName) && context.lowerProperty.includes('last name')) {\n            context.cipher.identity.lastName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityUserName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.username) && context.lowerProperty.includes('username')) {\n            context.cipher.identity.username = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityCompany(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.company) && context.lowerProperty.includes('company')) {\n            context.cipher.identity.company = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityPhone(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.phone) && context.lowerProperty.includes('default phone')) {\n            context.cipher.identity.phone = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setIdentityEmail(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.identity.email) && context.lowerProperty.includes('email')) {\n            context.cipher.identity.email = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardNumber(context: CipherImportContext): boolean {\n        if (this.isNullOrWhitespace(context.cipher.card.number) && context.lowerProperty.includes('number')) {\n            context.cipher.card.number = context.importRecord[context.property];\n            context.cipher.card.brand = this.getCardBrand(context.cipher.card.number);\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardVerification(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.code) && context.lowerProperty.includes('verification number')) {\n            context.cipher.card.code = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardCardholderName(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.cardholderName) && context.lowerProperty.includes('cardholder name')) {\n            context.cipher.card.cardholderName = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setCreditCardExpiry(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.expiration) && context.lowerProperty.includes('expiry date') &&\n            context.importRecord[context.property].length === 7) {\n            context.cipher.card.expMonth = (context.importRecord[context.property] as string).substr(0, 2);\n            if (context.cipher.card.expMonth[0] === '0') {\n                context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n            }\n            context.cipher.card.expYear = (context.importRecord[context.property] as string).substr(3, 4);\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginPassword(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.login.password) && context.lowerProperty === 'password') {\n            context.cipher.login.password = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginUsername(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.login.username) && context.lowerProperty === 'username') {\n            context.cipher.login.username = context.importRecord[context.property];\n            return true;\n        }\n        return false;\n    }\n\n    protected setLoginUris(context: CipherImportContext) {\n        if ((context.cipher.login.uris == null || context.cipher.login.uris.length === 0) && context.lowerProperty === 'urls') {\n            const urls = context.importRecord[context.property].split(this.newLineRegex);\n            context.cipher.login.uris = this.makeUriArray(urls);\n            return true;\n        } else if ((context.lowerProperty === 'url')) {\n            if (context.cipher.login.uris == null) {\n                context.cipher.login.uris = [];\n            }\n            context.cipher.login.uris.concat(this.makeUriArray(context.importRecord[context.property]));\n            return true;\n        }\n        return false;\n    }\n}\n","export { AttachmentView } from './attachmentView';\nexport { CardView } from './cardView';\nexport { CipherView } from './cipherView';\nexport { FieldView } from './fieldView';\nexport { IdentityView } from './identityView';\nexport { LoginUriView } from './loginUriView';\nexport { LoginView } from './loginView';\nexport { SecureNoteView } from './secureNoteView';\nexport { View } from './view';\n","export enum NotificationType {\n    SyncCipherUpdate = 0,\n    SyncCipherCreate = 1,\n    SyncLoginDelete = 2,\n    SyncFolderDelete = 3,\n    SyncCiphers = 4,\n\n    SyncVault = 5,\n    SyncOrgKeys = 6,\n    SyncFolderCreate = 7,\n    SyncFolderUpdate = 8,\n    SyncCipherDelete = 9,\n    SyncSettings = 10,\n\n    LogOut = 11,\n\n    SyncSendCreate = 12,\n    SyncSendUpdate = 13,\n    SyncSendDelete = 14,\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'bootstrap';\nimport 'jquery';\nimport 'popper.js';\n\n// tslint:disable-next-line\nrequire('src/scss/styles.scss');\n\nimport { AppModule } from './app.module';\n\nif (process.env.NODE_ENV === 'production') {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","// extracted by mini-css-extract-plugin\nexport {};","import { ToasterModule } from 'angular2-toaster';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from 'src/app/app.component';\nimport { OssRoutingModule } from 'src/app/oss-routing.module';\nimport { OssModule } from 'src/app/oss.module';\nimport { ServicesModule } from 'src/app/services/services.module';\n\n@NgModule({\n    imports: [\n        OssModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ServicesModule,\n        ToasterModule.forRoot(),\n        InfiniteScrollModule,\n        DragDropModule,\n        AppRoutingModule,\n        OssRoutingModule,\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: 'providers',\n        loadChildren: async () => (await import('./providers/providers.module')).ProvidersModule,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ProviderGuardService } from './services/provider-guard.service';\nimport { ProviderTypeGuardService } from './services/provider-type-guard.service';\nimport { ProviderService } from './services/provider.service';\n\nimport { ProvidersLayoutComponent } from './providers-layout.component';\nimport { ProvidersRoutingModule } from './providers-routing.module';\n\nimport { AddOrganizationComponent } from './clients/add-organization.component';\nimport { ClientsComponent } from './clients/clients.component';\nimport { CreateOrganizationComponent } from './clients/create-organization.component';\n\nimport { AcceptProviderComponent } from './manage/accept-provider.component';\nimport { BulkConfirmComponent } from './manage/bulk/bulk-confirm.component';\nimport { BulkRemoveComponent } from './manage/bulk/bulk-remove.component';\nimport { EventsComponent } from './manage/events.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { PeopleComponent } from './manage/people.component';\nimport { UserAddEditComponent } from './manage/user-add-edit.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { SettingsComponent } from './settings/settings.component';\n\nimport { SetupProviderComponent } from './setup/setup-provider.component';\nimport { SetupComponent } from './setup/setup.component';\n\nimport { OssModule } from 'src/app/oss.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        OssModule,\n        ProvidersRoutingModule,\n    ],\n    declarations: [\n        AcceptProviderComponent,\n        AccountComponent,\n        AddOrganizationComponent,\n        BulkConfirmComponent,\n        BulkRemoveComponent,\n        ClientsComponent,\n        CreateOrganizationComponent,\n        EventsComponent,\n        ManageComponent,\n        PeopleComponent,\n        ProvidersLayoutComponent,\n        SettingsComponent,\n        SetupComponent,\n        SetupProviderComponent,\n        UserAddEditComponent,\n    ],\n    providers: [\n        ProviderService,\n        ProviderGuardService,\n        ProviderTypeGuardService,\n    ],\n})\nexport class ProvidersModule {}\n","export class ProviderAddOrganizationRequest {\n    organizationId: string;\n    key: string;\n}\n","export function getDomain(host: string): string | null {\n    return null;\n}\n\nexport function isValid(host: string): boolean {\n    return true;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\nimport { Permissions } from 'jslib-common/enums/permissions';\n\nimport { AddOrganizationComponent } from './clients/add-organization.component';\nimport { ClientsComponent } from './clients/clients.component';\nimport { CreateOrganizationComponent } from './clients/create-organization.component';\nimport { AcceptProviderComponent } from './manage/accept-provider.component';\nimport { EventsComponent } from './manage/events.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { PeopleComponent } from './manage/people.component';\nimport { ProvidersLayoutComponent } from './providers-layout.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { SetupProviderComponent } from './setup/setup-provider.component';\nimport { SetupComponent } from './setup/setup.component';\n\nimport { FrontendLayoutComponent } from 'src/app/layouts/frontend-layout.component';\n\nimport { ProvidersComponent } from 'src/app/providers/providers.component';\nimport { ProviderGuardService } from './services/provider-guard.service';\nimport { ProviderTypeGuardService } from './services/provider-type-guard.service';\nimport { AccountComponent } from './settings/account.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        canActivate: [AuthGuardService],\n        component: ProvidersComponent,\n    },\n    {\n        path: '',\n        component: FrontendLayoutComponent,\n        children: [\n            {\n                path: 'setup-provider',\n                component: SetupProviderComponent,\n                data: { titleId: 'setupProvider' },\n            },\n            {\n                path: 'accept-provider',\n                component: AcceptProviderComponent,\n                data: { titleId: 'acceptProvider' },\n            },\n        ],\n    },\n    {\n        path: '',\n        canActivate: [AuthGuardService],\n        children: [\n            {\n                path: 'setup',\n                component: SetupComponent,\n            },\n            {\n                path: ':providerId',\n                component: ProvidersLayoutComponent,\n                canActivate: [ProviderGuardService],\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'clients' },\n                    { path: 'clients/create', component: CreateOrganizationComponent },\n                    { path: 'clients', component: ClientsComponent, data: { titleId: 'clients' } },\n                    {\n                        path: 'manage',\n                        component: ManageComponent,\n                        children: [\n                            {\n                                path: '',\n                                pathMatch: 'full',\n                                redirectTo: 'people',\n                            },\n                            {\n                                path: 'people',\n                                component: PeopleComponent,\n                                canActivate: [ProviderTypeGuardService],\n                                data: {\n                                    titleId: 'people',\n                                    permissions: [Permissions.ManageUsers],\n                                },\n                            },\n                            {\n                                path: 'events',\n                                component: EventsComponent,\n                                canActivate: [ProviderTypeGuardService],\n                                data: {\n                                    titleId: 'eventLogs',\n                                    permissions: [Permissions.AccessEventLogs],\n                                },\n                            },\n                        ],\n                    },\n                    {\n                        path: 'settings',\n                        component: SettingsComponent,\n                        children: [\n                            {\n                                path: '',\n                                pathMatch: 'full',\n                                redirectTo: 'account',\n                            },\n                            {\n                                path: 'account',\n                                component: AccountComponent,\n                                canActivate: [ProviderTypeGuardService],\n                                data: {\n                                    titleId: 'myProvider',\n                                    permissions: [Permissions.ManageProvider],\n                                },\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class ProvidersRoutingModule { }\n","import {\n    Component,\n    ComponentFactoryResolver,\n    EventEmitter,\n    OnDestroy,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\n@Component({\n    selector: 'app-modal',\n    template: `<ng-template #container></ng-template>`,\n})\nexport class ModalComponent implements OnDestroy {\n    @Output() onClose = new EventEmitter();\n    @Output() onClosed = new EventEmitter();\n    @Output() onShow = new EventEmitter();\n    @Output() onShown = new EventEmitter();\n    @ViewChild('container', { read: ViewContainerRef, static: true }) container: ViewContainerRef;\n    parentContainer: ViewContainerRef = null;\n    fade: boolean = true;\n\n    constructor(protected componentFactoryResolver: ComponentFactoryResolver,\n        protected messagingService: MessagingService) { }\n\n    ngOnDestroy() {\n        document.body.classList.remove('modal-open');\n        document.body.removeChild(document.querySelector('.modal-backdrop'));\n    }\n\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true,\n        setComponentParameters: (component: T) => void = null): T {\n        this.onShow.emit();\n        this.messagingService.send('modalShow');\n        this.parentContainer = parentContainer;\n        this.fade = fade;\n\n        document.body.classList.add('modal-open');\n        const backdrop = document.createElement('div');\n        backdrop.className = 'modal-backdrop' + (this.fade ? ' fade' : '');\n        document.body.appendChild(backdrop);\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\n        const componentRef = this.container.createComponent<T>(factory);\n        if (setComponentParameters != null) {\n            setComponentParameters(componentRef.instance);\n        }\n\n        document.querySelector('.modal-dialog').addEventListener('click', (e: Event) => {\n            e.stopPropagation();\n        });\n\n        const modals = Array.from(document.querySelectorAll('.modal, .modal *[data-dismiss=\"modal\"]'));\n        for (const closeElement of modals) {\n            closeElement.addEventListener('click', event => {\n                this.close();\n            });\n        }\n\n        this.onShown.emit();\n        this.messagingService.send('modalShown');\n        return componentRef.instance;\n    }\n\n    close() {\n        this.onClose.emit();\n        this.messagingService.send('modalClose');\n        this.onClosed.emit();\n        this.messagingService.send('modalClosed');\n        if (this.parentContainer != null) {\n            this.parentContainer.clear();\n        }\n    }\n}\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { PlanType } from '../../enums/planType';\n\nimport { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationCreateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n    planType: PlanType;\n    key: string;\n    keys: OrganizationKeysRequest;\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n    additionalSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n    collectionName: string;\n    taxIdNumber: string;\n    billingAddressLine1: string;\n    billingAddressLine2: string;\n    billingAddressCity: string;\n    billingAddressState: string;\n    billingAddressPostalCode: string;\n    billingAddressCountry: string;\n}\n","import { PlanType } from '../../enums/planType';\n\nimport { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationUpgradeRequest {\n    businessName: string;\n    planType: PlanType;\n    additionalSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n    billingAddressCountry: string;\n    billingAddressPostalCode: string;\n    keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from '../organizationCreateRequest';\n\nexport class ProviderOrganizationCreateRequest {\n    constructor(public clientOwnerEmail: string, public organizationCreateRequest: OrganizationCreateRequest) { }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class PasswordHistoryResponse extends BaseResponse {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.password = this.getResponseProperty('Password');\n        this.lastUsedDate = this.getResponseProperty('LastUsedDate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { DeviceType } from '../../enums/deviceType';\n\nexport class DeviceResponse extends BaseResponse {\n    id: string;\n    name: number;\n    identifier: string;\n    type: DeviceType;\n    creationDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.type = this.getResponseProperty('Type');\n        this.creationDate = this.getResponseProperty('CreationDate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class ProfileProviderOrganizationResponse extends BaseResponse {\n    id: string;\n    name: string;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useBusinessPortal: boolean;\n    useSso: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    key: string;\n    hasPublicAndPrivateKeys: boolean;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    providerId: string;\n    providerName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.usePolicies = this.getResponseProperty('UsePolicies');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.useBusinessPortal = this.getResponseProperty('UseBusinessPortal');\n        this.useSso = this.getResponseProperty('UseSso');\n        this.useResetPassword = this.getResponseProperty('UseResetPassword');\n        this.selfHost = this.getResponseProperty('SelfHost');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.key = this.getResponseProperty('Key');\n        this.hasPublicAndPrivateKeys = this.getResponseProperty('HasPublicAndPrivateKeys');\n        this.status = this.getResponseProperty('Status');\n        this.type = this.getResponseProperty('Type');\n        this.enabled = this.getResponseProperty('Enabled');\n        this.ssoBound = this.getResponseProperty('SsoBound');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.permissions = new PermissionsApi(this.getResponseProperty('permissions'));\n        this.resetPasswordEnrolled = this.getResponseProperty('ResetPasswordEnrolled');\n        this.userId = this.getResponseProperty('UserId');\n        this.providerId = this.getResponseProperty('ProviderId');\n        this.providerName = this.getResponseProperty('ProviderName');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { ProviderUserStatusType } from '../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../enums/providerUserType';\n\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class ProfileProviderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    key: string;\n    status: ProviderUserStatusType;\n    type: ProviderUserType;\n    enabled: boolean;\n    permissions: PermissionsApi;\n    userId: string;\n    useEvents: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.key = this.getResponseProperty('Key');\n        this.status = this.getResponseProperty('Status');\n        this.type = this.getResponseProperty('Type');\n        this.enabled = this.getResponseProperty('Enabled');\n        this.permissions = new PermissionsApi(this.getResponseProperty('permissions'));\n        this.userId = this.getResponseProperty('UserId');\n        this.useEvents = this.getResponseProperty('UseEvents');\n    }\n}\n","export class ProviderUserAcceptRequest {\n    token: string;\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventView {\n    message: string;\n    humanReadableMessage: string;\n    appIcon: string;\n    appName: string;\n    userId: string;\n    userName: string;\n    userEmail: string;\n    date: string;\n    ip: string;\n    type: EventType;\n\n    constructor(data: Required<EventView>) {\n        this.message = data.message;\n        this.humanReadableMessage = data.humanReadableMessage;\n        this.appIcon = data.appIcon;\n        this.appName = data.appName;\n        this.userId = data.userId;\n        this.userName = data.userName;\n        this.userEmail = data.userEmail;\n        this.date = data.date;\n        this.ip = data.ip;\n        this.type = data.type;\n    }\n}\n","export abstract class AppIdService {\n    getAppId: () => Promise<string>;\n    getAnonymousAppId: () => Promise<string>;\n}\n","export class ProviderUserConfirmRequest {\n    key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n    id: string;\n    key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n    keys: ProviderUserBulkRequestEntry[];\n\n    constructor(keys: ProviderUserBulkRequestEntry[]) {\n        this.keys = keys;\n    }\n}\n","type OrganizationUserBulkRequestEntry = {\n    id: string;\n    key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n    keys: OrganizationUserBulkRequestEntry[];\n\n    constructor(keys: OrganizationUserBulkRequestEntry[]) {\n        this.keys = keys;\n    }\n}\n","import { ProviderUserType } from '../../../enums/providerUserType';\n\nexport class ProviderUserInviteRequest {\n    emails: string[] = [];\n    type: ProviderUserType;\n}\n","import { ProviderUserType } from '../../../enums/providerUserType';\n\nexport class ProviderUserUpdateRequest {\n    type: ProviderUserType;\n}\n","export class ProviderSetupRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n    token: string;\n    key: string;\n}\n","export class ProviderUpdateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from '../abstractions/broadcaster.service';\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n    subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n    send(message: any, id?: string) {\n        if (id != null) {\n            if (this.subscribers.has(id)) {\n                this.subscribers.get(id)(message);\n            }\n            return;\n        }\n\n        this.subscribers.forEach(value => {\n            value(message);\n        });\n    }\n\n    subscribe(id: string, messageCallback: (message: any) => any) {\n        this.subscribers.set(id, messageCallback);\n    }\n\n    unsubscribe(id: string) {\n        if (this.subscribers.has(id)) {\n            this.subscribers.delete(id);\n        }\n    }\n}\n","export class EmergencyAccessAcceptRequest {\n    token: string;\n}\n","export class OrganizationUserAcceptRequest {\n    token: string;\n}\n","import { Router } from '@angular/router';\n\nimport { PasswordHintRequest } from 'jslib-common/models/request/passwordHintRequest';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nexport class HintComponent {\n    email: string = '';\n    formPromise: Promise<any>;\n\n    protected successRoute = 'login';\n    protected onSuccessfulSubmit: () => void;\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected apiService: ApiService, protected platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('masterPassSent'));\n            if (this.onSuccessfulSubmit != null) {\n                this.onSuccessfulSubmit();\n            } else if (this.router != null) {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch { }\n    }\n}\n","export class PasswordHintRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { Directive, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib-common/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { PasswordVerificationRequest } from 'jslib-common/models/request/passwordVerificationRequest';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { HashPurpose } from 'jslib-common/enums/hashPurpose';\n\n@Directive()\nexport class LockComponent implements OnInit {\n    masterPassword: string = '';\n    pin: string = '';\n    showPassword: boolean = false;\n    email: string;\n    pinLock: boolean = false;\n    webVaultHostname: string = '';\n    formPromise: Promise<any>;\n    supportsBiometric: boolean;\n    biometricLock: boolean;\n    biometricText: string;\n\n    protected successRoute: string = 'vault';\n    protected onSuccessfulSubmit: () => void;\n\n    private invalidPinAttempts = 0;\n    private pinSet: [boolean, boolean];\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected messagingService: MessagingService,\n        protected userService: UserService, protected cryptoService: CryptoService,\n        protected storageService: StorageService, protected vaultTimeoutService: VaultTimeoutService,\n        protected environmentService: EnvironmentService, protected stateService: StateService,\n        protected apiService: ApiService) { }\n\n    async ngOnInit() {\n        this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n        this.pinLock = (this.pinSet[0] && this.vaultTimeoutService.pinProtectedKey != null) || this.pinSet[1];\n        this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n        this.biometricLock = await this.vaultTimeoutService.isBiometricLockSet() &&\n            (await this.cryptoService.hasKeyStored('biometric') || !this.platformUtilsService.supportsSecureStorage());\n        this.biometricText = await this.storageService.get(ConstantsService.biometricText);\n        this.email = await this.userService.getEmail();\n\n        const webVaultUrl = this.environmentService.getWebVaultUrl();\n        const vaultUrl = webVaultUrl === 'https://vault.bitwarden.com' ? 'https://bitwarden.com' : webVaultUrl;\n        this.webVaultHostname = Utils.getHostname(vaultUrl);\n    }\n\n    async submit() {\n        if (this.pinLock && (this.pin == null || this.pin === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('pinRequired'));\n            return;\n        }\n        if (!this.pinLock && (this.masterPassword == null || this.masterPassword === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const kdf = await this.userService.getKdf();\n        const kdfIterations = await this.userService.getKdfIterations();\n\n        if (this.pinLock) {\n            let failed = true;\n            try {\n                if (this.pinSet[0]) {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations,\n                        this.vaultTimeoutService.pinProtectedKey);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n                    failed = decPin !== this.pin;\n                    if (!failed) {\n                        await this.setKeyAndContinue(key);\n                    }\n                } else {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations);\n                    failed = false;\n                    await this.setKeyAndContinue(key);\n                }\n            } catch {\n                failed = true;\n            }\n\n            if (failed) {\n                this.invalidPinAttempts++;\n                if (this.invalidPinAttempts >= 5) {\n                    this.messagingService.send('logout');\n                    return;\n                }\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidPin'));\n            }\n        } else {\n            const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n            const storedKeyHash = await this.cryptoService.getKeyHash();\n\n            let passwordValid = false;\n\n            if (storedKeyHash != null) {\n                passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n            } else {\n                const request = new PasswordVerificationRequest();\n                const serverKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n                    HashPurpose.ServerAuthorization);\n                request.masterPasswordHash = serverKeyHash;\n                try {\n                    this.formPromise = this.apiService.postAccountVerifyPassword(request);\n                    await this.formPromise;\n                    passwordValid = true;\n                    const localKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n                        HashPurpose.LocalAuthorization);\n                    await this.cryptoService.setKeyHash(localKeyHash);\n                } catch { }\n            }\n\n            if (passwordValid) {\n                if (this.pinSet[0]) {\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n                    const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n                    this.vaultTimeoutService.pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n                }\n                this.setKeyAndContinue(key);\n            } else {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidMasterPassword'));\n            }\n        }\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    async unlockBiometric() {\n        if (!this.biometricLock) {\n            return;\n        }\n\n        const success = (await this.cryptoService.getKey('biometric')) != null;\n\n        if (success) {\n            await this.doContinue();\n        }\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById(this.pinLock ? 'pin' : 'masterPassword').focus();\n    }\n\n    private async setKeyAndContinue(key: SymmetricCryptoKey) {\n        await this.cryptoService.setKey(key);\n        this.doContinue();\n    }\n\n    private async doContinue() {\n        this.vaultTimeoutService.biometricLocked = false;\n        this.vaultTimeoutService.everBeenUnlocked = true;\n        const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n        this.messagingService.send('unlocked');\n        if (this.onSuccessfulSubmit != null) {\n            this.onSuccessfulSubmit();\n        } else if (this.router != null) {\n            this.router.navigate([this.successRoute]);\n        }\n    }\n}\n","import {\n    Directive,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { AuthResult } from 'jslib-common/models/domain/authResult';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\nimport { CaptchaProtectedComponent } from './captchaProtected.component';\n\nconst Keys = {\n    rememberedEmail: 'rememberedEmail',\n    rememberEmail: 'rememberEmail',\n};\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n    @Input() email: string = '';\n    @Input() rememberEmail = true;\n\n    masterPassword: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<AuthResult>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        platformUtilsService: PlatformUtilsService, i18nService: I18nService,\n        protected stateService: StateService, environmentService: EnvironmentService,\n        protected passwordGenerationService: PasswordGenerationService,\n        protected cryptoFunctionService: CryptoFunctionService, private storageService: StorageService) {\n        super(environmentService, i18nService, platformUtilsService);\n    }\n\n    async ngOnInit() {\n        if (this.email == null || this.email === '') {\n            this.email = await this.storageService.get<string>(Keys.rememberedEmail);\n            if (this.email == null) {\n                this.email = '';\n            }\n        }\n        this.rememberEmail = await this.storageService.get<boolean>(Keys.rememberEmail);\n        if (this.rememberEmail == null) {\n            this.rememberEmail = true;\n        }\n        if (Utils.isBrowser && !Utils.isNode) {\n            this.focusInput();\n        }\n    }\n\n    async submit() {\n        await this.setupCaptcha();\n\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.authService.logIn(this.email, this.masterPassword, this.captchaToken);\n            const response = await this.formPromise;\n            await this.storageService.save(Keys.rememberEmail, this.rememberEmail);\n            if (this.rememberEmail) {\n                await this.storageService.save(Keys.rememberedEmail, this.email);\n            } else {\n                await this.storageService.remove(Keys.rememberedEmail);\n            }\n            if (this.handleCaptchaRequired(response)) {\n                return;\n            } else if (response.twoFactor) {\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n                    this.onSuccessfulLoginTwoFactorNavigate();\n                } else {\n                    this.router.navigate([this.twoFactorRoute]);\n                }\n            } else {\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch { }\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n\n    async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n        // Generate necessary sso params\n        const passwordOptions: any = {\n            type: 'password',\n            length: 64,\n            uppercase: true,\n            lowercase: true,\n            numbers: true,\n            special: false,\n        };\n        const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n        const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n        const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, 'sha256');\n        const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n        // Save sso params\n        await this.storageService.save(ConstantsService.ssoStateKey, state);\n        await this.storageService.save(ConstantsService.ssoCodeVerifierKey, ssoCodeVerifier);\n\n        // Build URI\n        const webUrl = this.environmentService.getWebVaultUrl();\n\n        // Launch browser\n        this.platformUtilsService.launchUri(webUrl + '/#/sso?clientId=' + clientId +\n            '&redirectUri=' + encodeURIComponent(ssoRedirectUri) +\n            '&state=' + state + '&codeChallenge=' + codeChallenge);\n    }\n\n    protected focusInput() {\n        document.getElementById(this.email == null || this.email === '' ? 'email' : 'masterPassword').focus();\n    }\n}\n","import { I18nService } from '../abstractions/i18n.service';\nimport { IFrameComponent } from './iframe_component';\n\nexport class CaptchaIFrame extends IFrameComponent {\n    constructor(win: Window, webVaultUrl: string,\n        private i18nService: I18nService, successCallback: (message: string) => any, errorCallback: (message: string) => any,\n        infoCallback: (message: string) => any) {\n        super(win, webVaultUrl, 'captcha-connector.html', 'hcaptcha_iframe', successCallback, errorCallback, (message: string) => {\n            const parsedMessage = JSON.parse(message);\n            if (typeof (parsedMessage) !== 'string') {\n                this.iframe.height = (parsedMessage.height).toString();\n                this.iframe.width = (parsedMessage.width).toString();\n            } else {\n                infoCallback(parsedMessage);\n            }\n        });\n    }\n\n    init(siteKey: string): void {\n        super.initComponent(this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1));\n    }\n}\n","export class DeleteRecoverRequest {\n    email: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorRecoveryRequest extends PasswordVerificationRequest {\n    recoveryCode: string;\n    email: string;\n}\n","import { Directive, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { KeysRequest } from 'jslib-common/models/request/keysRequest';\nimport { ReferenceEventRequest } from 'jslib-common/models/request/referenceEventRequest';\nimport { RegisterRequest } from 'jslib-common/models/request/registerRequest';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\n\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\nimport { CaptchaProtectedComponent } from './captchaProtected.component';\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n    name: string = '';\n    email: string = '';\n    masterPassword: string = '';\n    confirmMasterPassword: string = '';\n    hint: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n    referenceData: ReferenceEventRequest;\n    showTerms = true;\n    acceptPolicies: boolean = false;\n\n    protected successRoute = 'login';\n    private masterPasswordStrengthTimeout: any;\n\n    constructor(protected authService: AuthService, protected router: Router,\n        i18nService: I18nService, protected cryptoService: CryptoService,\n        protected apiService: ApiService, protected stateService: StateService,\n        platformUtilsService: PlatformUtilsService,\n        protected passwordGenerationService: PasswordGenerationService, environmentService: EnvironmentService) {\n        super(environmentService, i18nService, platformUtilsService);\n        this.showTerms = !platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.setupCaptcha();\n    }\n\n    get masterPasswordScoreWidth() {\n        return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    }\n\n    get masterPasswordScoreColor() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return 'success';\n            case 3:\n                return 'primary';\n            case 2:\n                return 'warning';\n            default:\n                return 'danger';\n        }\n    }\n\n    get masterPasswordScoreText() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return this.i18nService.t('strong');\n            case 3:\n                return this.i18nService.t('good');\n            case 2:\n                return this.i18nService.t('weak');\n            default:\n                return this.masterPasswordScore != null ? this.i18nService.t('weak') : null;\n        }\n    }\n\n    async submit() {\n        if (!this.acceptPolicies && this.showTerms) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('acceptPoliciesError'));\n            return;\n        }\n\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n        if (this.masterPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return;\n        }\n        if (this.masterPassword !== this.confirmMasterPassword) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n            this.getPasswordStrengthUserInput());\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return;\n            }\n        }\n\n        if (this.hint === this.masterPassword) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), this.i18nService.t('hintEqualsPassword'));\n            return;\n        }\n\n        this.name = this.name === '' ? null : this.name;\n        this.email = this.email.trim().toLowerCase();\n        const kdf = KdfType.PBKDF2_SHA256;\n        const useLowerKdf = this.platformUtilsService.isIE();\n        const kdfIterations = useLowerKdf ? 10000 : 100000;\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        const request = new RegisterRequest(this.email, this.name, hashedPassword,\n            this.hint, encKey[1].encryptedString, kdf, kdfIterations, this.referenceData, this.captchaToken);\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n        const orgInvite = await this.stateService.get<any>('orgInvitation');\n        if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n            request.token = orgInvite.token;\n            request.organizationUserId = orgInvite.organizationUserId;\n        }\n\n        try {\n            this.formPromise = this.apiService.postRegister(request);\n            try {\n                await this.formPromise;\n            } catch (e) {\n                if (this.handleCaptchaRequired(e)) {\n                    return;\n                } else {\n                    throw e;\n                }\n            }\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('newAccountCreated'));\n            this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n        } catch { }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        if (this.name != null && this.name !== '') {\n            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));\n        }\n        return userInput;\n    }\n}\n","import { KeysRequest } from './keysRequest';\nimport { ReferenceEventRequest } from './referenceEventRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nimport { CaptchaProtectedRequest } from './captchaProtectedRequest';\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n    masterPasswordHint: string;\n    keys: KeysRequest;\n    token: string;\n    organizationUserId: string;\n\n\n    constructor(public email: string, public name: string, public masterPasswordHash: string,\n        masterPasswordHint: string, public key: string, public kdf: KdfType, public kdfIterations: number,\n        public referenceData: ReferenceEventRequest, public captchaResponse: string) {\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n    }\n}\n","export class ReferenceEventRequest {\n    id: string;\n    layout: string;\n    flow: string;\n}\n","import { Directive } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router\n} from '@angular/router';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SyncService } from 'jslib-common/abstractions/sync.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { KeysRequest } from 'jslib-common/models/request/keysRequest';\nimport { SetPasswordRequest } from 'jslib-common/models/request/setPasswordRequest';\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from './change-password.component';\n\nimport { HashPurpose } from 'jslib-common/enums/hashPurpose';\nimport { KdfType } from 'jslib-common/enums/kdfType';\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n    syncLoading: boolean = true;\n    showPassword: boolean = false;\n    hint: string = '';\n    identifier: string = null;\n\n    onSuccessfulChangePassword: () => Promise<any>;\n    successRoute = 'vault';\n\n    constructor(i18nService: I18nService, cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, protected router: Router,\n        private apiService: ApiService, private syncService: SyncService, private route: ActivatedRoute) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        await this.syncService.fullSync(true);\n        this.syncLoading = false;\n\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            }\n\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n\n        super.ngOnInit();\n    }\n\n    async setupSubmitActions() {\n        this.kdf = KdfType.PBKDF2_SHA256;\n        const useLowerKdf = this.platformUtilsService.isIE();\n        this.kdfIterations = useLowerKdf ? 10000 : 100000;\n        return true;\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, EncString]) {\n        const request = new SetPasswordRequest();\n        request.masterPasswordHash = masterPasswordHash;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHint = this.hint;\n        request.kdf = this.kdf;\n        request.kdfIterations = this.kdfIterations;\n        request.orgIdentifier = this.identifier;\n\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n\n        try {\n            this.formPromise = this.apiService.setPassword(request);\n            await this.formPromise;\n\n            await this.userService.setInformation(await this.userService.getUserId(), await this.userService.getEmail(),\n                this.kdf, this.kdfIterations);\n            await this.cryptoService.setKey(key);\n            await this.cryptoService.setEncKey(encKey[1].encryptedString);\n            await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n            const localKeyHash = await this.cryptoService.hashPassword(this.masterPassword, key,\n                HashPurpose.LocalAuthorization);\n            await this.cryptoService.setKeyHash(localKeyHash);\n\n            if (this.onSuccessfulChangePassword != null) {\n                this.onSuccessfulChangePassword();\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n}\n","import { KeysRequest } from './keysRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class SetPasswordRequest {\n    masterPasswordHash: string;\n    key: string;\n    masterPasswordHint: string;\n    keys: KeysRequest;\n    kdf: KdfType;\n    kdfIterations: number;\n    orgIdentifier: string;\n}\n","import {\n    Directive,\n    EventEmitter,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n    @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n    @Output() onRecoverSelected = new EventEmitter();\n\n    providers: any[] = [];\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected win: Window) { }\n\n    ngOnInit() {\n        this.providers = this.authService.getSupportedTwoFactorProviders(this.win);\n    }\n\n    choose(p: any) {\n        this.onProviderSelected.emit(p.type);\n    }\n\n    recover() {\n        this.platformUtilsService.launchUri('https://help.bitwarden.com/article/lost-two-step-device/');\n        this.onRecoverSelected.emit();\n    }\n}\n","import { Directive, OnDestroy, OnInit } from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { TwoFactorProviderType } from 'jslib-common/enums/twoFactorProviderType';\n\nimport { TwoFactorEmailRequest } from 'jslib-common/models/request/twoFactorEmailRequest';\n\nimport { AuthResult } from 'jslib-common/models/domain';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { AuthService } from 'jslib-common/abstractions/auth.service';\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\n\nimport { TwoFactorProviders } from 'jslib-common/services/auth.service';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\nimport * as DuoWebSDK from 'duo_web_sdk';\nimport { WebAuthnIFrame } from 'jslib-common/misc/webauthn_iframe';\n\n@Directive()\nexport class TwoFactorComponent implements OnInit, OnDestroy {\n    token: string = '';\n    remember: boolean = false;\n    webAuthnReady: boolean = false;\n    webAuthnNewTab: boolean = false;\n    providers = TwoFactorProviders;\n    providerType = TwoFactorProviderType;\n    selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n    webAuthnSupported: boolean = false;\n    webAuthn: WebAuthnIFrame = null;\n    title: string = '';\n    twoFactorEmail: string = null;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n    identifier: string = null;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n\n    get webAuthnAllow(): string {\n        return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n    }\n\n    protected loginRoute = 'login';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected apiService: ApiService,\n        protected platformUtilsService: PlatformUtilsService, protected win: Window,\n        protected environmentService: EnvironmentService, protected stateService: StateService,\n        protected storageService: StorageService, protected route: ActivatedRoute) {\n        this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n    }\n\n    async ngOnInit() {\n        if (!this.authing || this.authService.twoFactorProvidersData == null) {\n            this.router.navigate([this.loginRoute]);\n            return;\n        }\n\n        const queryParamsSub = this.route.queryParams.subscribe(async qParams => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            }\n\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n\n        if (this.needsLock) {\n            this.successRoute = 'lock';\n        }\n\n        if (this.win != null && this.webAuthnSupported) {\n            const webVaultUrl = this.environmentService.getWebVaultUrl();\n            this.webAuthn = new WebAuthnIFrame(this.win, webVaultUrl, this.webAuthnNewTab, this.platformUtilsService,\n                this.i18nService, (token: string) => {\n                    this.token = token;\n                    this.submit();\n                }, (error: string) => {\n                    this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);\n                }, (info: string) => {\n                    if (info === 'ready') {\n                        this.webAuthnReady = true;\n                    }\n                }\n            );\n        }\n\n        this.selectedProviderType = this.authService.getDefaultTwoFactorProvider(this.webAuthnSupported);\n        await this.init();\n    }\n\n    ngOnDestroy(): void {\n        this.cleanupWebAuthn();\n        this.webAuthn = null;\n    }\n\n    async init() {\n        if (this.selectedProviderType == null) {\n            this.title = this.i18nService.t('loginUnavailable');\n            return;\n        }\n\n        this.cleanupWebAuthn();\n        this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n        switch (this.selectedProviderType) {\n            case TwoFactorProviderType.WebAuthn:\n                if (!this.webAuthnNewTab) {\n                    setTimeout(() => {\n                        this.authWebAuthn();\n                    }, 500);\n                }\n                break;\n            case TwoFactorProviderType.Duo:\n            case TwoFactorProviderType.OrganizationDuo:\n                setTimeout(() => {\n                    DuoWebSDK.init({\n                        iframe: undefined,\n                        host: providerData.Host,\n                        sig_request: providerData.Signature,\n                        submit_callback: async (f: HTMLFormElement) => {\n                            const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n                            if (sig != null) {\n                                this.token = sig.value;\n                                await this.submit();\n                            }\n                        },\n                    });\n                }, 0);\n                break;\n            case TwoFactorProviderType.Email:\n                this.twoFactorEmail = providerData.Email;\n                if (this.authService.twoFactorProvidersData.size > 1) {\n                    await this.sendEmail(false);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    async submit() {\n        if (this.token == null || this.token === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('verificationCodeRequired'));\n            return;\n        }\n\n        if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n            if (this.webAuthn != null) {\n                this.webAuthn.stop();\n            } else {\n                return;\n            }\n        } else if (this.selectedProviderType === TwoFactorProviderType.Email ||\n            this.selectedProviderType === TwoFactorProviderType.Authenticator) {\n            this.token = this.token.replace(' ', '').trim();\n        }\n\n        try {\n            await this.doSubmit();\n        } catch {\n            if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n                this.webAuthn.start();\n            }\n        }\n    }\n\n    async doSubmit() {\n        this.formPromise = this.authService.logInTwoFactor(this.selectedProviderType, this.token, this.remember);\n        const response: AuthResult = await this.formPromise;\n        const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n            this.onSuccessfulLogin();\n        }\n        if (response.resetMasterPassword) {\n            this.successRoute = 'set-password';\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n            this.onSuccessfulLoginNavigate();\n        } else {\n            this.router.navigate([this.successRoute], {\n                queryParams: {\n                    identifier: this.identifier,\n                },\n            });\n        }\n    }\n\n    async sendEmail(doToast: boolean) {\n        if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n            return;\n        }\n\n        if (this.emailPromise != null) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorEmailRequest(this.authService.email, this.authService.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmail(request);\n            await this.emailPromise;\n            if (doToast) {\n                this.platformUtilsService.showToast('success', null,\n                    this.i18nService.t('verificationCodeEmailSent', this.twoFactorEmail));\n            }\n        } catch { }\n\n        this.emailPromise = null;\n    }\n\n    authWebAuthn() {\n        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n\n        if (!this.webAuthnSupported || this.webAuthn == null) {\n            return;\n        }\n\n        this.webAuthn.init(providerData);\n    }\n\n    private cleanupWebAuthn() {\n        if (this.webAuthn != null) {\n            this.webAuthn.stop();\n            this.webAuthn.cleanup();\n        }\n    }\n\n    get authing(): boolean {\n        return this.authService.authingWithPassword() || this.authService.authingWithSso() || this.authService.authingWithApiKey();\n    }\n\n    get needsLock(): boolean {\n        return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n    }\n}\n","import { DeviceType } from '../../enums/deviceType';\n\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class DeviceRequest {\n    type: DeviceType;\n    name: string;\n    identifier: string;\n    pushToken?: string;\n\n    constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n        this.type = platformUtilsService.getDevice();\n        this.name = platformUtilsService.getDeviceString();\n        this.identifier = appId;\n        this.pushToken = null;\n    }\n}\n","export class PreloginRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { CaptchaProtectedRequest } from './captchaProtectedRequest';\nimport { DeviceRequest } from './deviceRequest';\n\nimport { Utils } from '../../misc/utils';\n\nexport class TokenRequest implements CaptchaProtectedRequest {\n    email: string;\n    masterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    redirectUri: string;\n    clientId: string;\n    clientSecret: string;\n    device?: DeviceRequest;\n\n    constructor(credentials: string[], codes: string[], clientIdClientSecret: string[], public provider: TwoFactorProviderType,\n        public token: string, public remember: boolean, public captchaResponse: string, device?: DeviceRequest) {\n        if (credentials != null && credentials.length > 1) {\n            this.email = credentials[0];\n            this.masterPasswordHash = credentials[1];\n        } else if (codes != null && codes.length > 2) {\n            this.code = codes[0];\n            this.codeVerifier = codes[1];\n            this.redirectUri = codes[2];\n        } else if (clientIdClientSecret != null && clientIdClientSecret.length > 1) {\n            this.clientId = clientIdClientSecret[0];\n            this.clientSecret = clientIdClientSecret[1];\n        }\n        this.device = device != null ? device : null;\n    }\n\n    toIdentityToken(clientId: string) {\n        const obj: any = {\n            scope: 'api offline_access',\n            client_id: clientId,\n        };\n\n        if (this.clientSecret != null) {\n            obj.scope = clientId.startsWith('organization') ? 'api.organization' : 'api';\n            obj.grant_type = 'client_credentials';\n            obj.client_secret = this.clientSecret;\n        } else if (this.masterPasswordHash != null && this.email != null) {\n            obj.grant_type = 'password';\n            obj.username = this.email;\n            obj.password = this.masterPasswordHash;\n        } else if (this.code != null && this.codeVerifier != null && this.redirectUri != null) {\n            obj.grant_type = 'authorization_code';\n            obj.code = this.code;\n            obj.code_verifier = this.codeVerifier;\n            obj.redirect_uri = this.redirectUri;\n        } else {\n            throw new Error('must provide credentials or codes');\n        }\n\n        if (this.device) {\n            obj.deviceType = this.device.type;\n            obj.deviceIdentifier = this.device.identifier;\n            obj.deviceName = this.device.name;\n            // no push tokens for browser apps yet\n            // obj.devicePushToken = this.device.pushToken;\n        }\n\n        if (this.token && this.provider != null) {\n            obj.twoFactorToken = this.token;\n            obj.twoFactorProvider = this.provider;\n            obj.twoFactorRemember = this.remember ? '1' : '0';\n        }\n\n        if (this.captchaResponse != null) {\n            obj.captchaResponse = this.captchaResponse;\n        }\n\n\n        return obj;\n    }\n\n    alterIdentityTokenHeaders(headers: Headers) {\n        if (this.clientSecret == null && this.masterPasswordHash != null && this.email != null) {\n            headers.set('Auth-Email', Utils.fromUtf8ToUrlB64(this.email));\n        }\n    }\n}\n","import { I18nService } from '../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { IFrameComponent } from './iframe_component';\nimport { Utils } from './utils';\n\nexport class WebAuthnIFrame extends IFrameComponent {\n    constructor(win: Window, webVaultUrl: string, private webAuthnNewTab: boolean,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        successCallback: (message: string) => any, errorCallback: (message: string) => any,\n        infoCallback: (message: string) => any) {\n        super(win, webVaultUrl, 'webauthn-connector.html', 'webauthn_iframe', successCallback, errorCallback, infoCallback);\n    }\n\n\n    init(data: any): void {\n        const params = this.createParams({ data: JSON.stringify(data), btnText: this.i18nService.t('webAuthnAuthenticate') }, 2);\n\n        if (this.webAuthnNewTab) {\n            // Firefox fallback which opens the webauthn page in a new tab\n            params.append('locale', this.i18nService.translationLocale);\n            this.platformUtilsService.launchUri(`${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`);\n        } else {\n            super.initComponent(params);\n            if (Utils.isNullOrWhitespace(this.iframe.allow)) {\n                this.iframe.allow = 'publickey-credentials-get ' + new URL(this.webVaultUrl).origin;\n            }\n        }\n    }\n}\n","import { Directive } from '@angular/core';\n\nimport { ApiService } from 'jslib-common/abstractions/api.service';\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from './change-password.component';\n\nimport { EncString } from 'jslib-common/models/domain/encString';\nimport { MasterPasswordPolicyOptions } from 'jslib-common/models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from 'jslib-common/models/domain/symmetricCryptoKey';\n\nimport { UpdateTempPasswordRequest } from 'jslib-common/models/request/updateTempPasswordRequest';\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n    hint: string;\n    key: string;\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n    showPassword: boolean = false;\n\n    onSuccessfulChangePassword: () => Promise<any>;\n\n    constructor(i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService, policyService: PolicyService,\n        cryptoService: CryptoService, userService: UserService,\n        messagingService: MessagingService, private apiService: ApiService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n\n    async setupSubmitActions(): Promise<boolean> {\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n        this.email = await this.userService.getEmail();\n        this.kdf = await this.userService.getKdf();\n        this.kdfIterations = await this.userService.getKdfIterations();\n        return true;\n    }\n\n    async submit() {\n        // Validation\n        if (!await this.strongPassword()) {\n            return;\n        }\n\n        if (!await this.setupSubmitActions()) {\n            return;\n        }\n\n        try {\n            // Create new key and hash new password\n            const newKey = await this.cryptoService.makeKey(this.masterPassword, this.email.trim().toLowerCase(),\n                this.kdf, this.kdfIterations);\n            const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n            // Grab user's current enc key\n            const userEncKey = await this.cryptoService.getEncKey();\n\n            // Create new encKey for the User\n            const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n            await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n        } catch { }\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, EncString]) {\n        try {\n            // Create request\n            const request = new UpdateTempPasswordRequest();\n            request.key = encKey[1].encryptedString;\n            request.newMasterPasswordHash = masterPasswordHash;\n            request.masterPasswordHint = this.hint;\n\n            // Update user's password\n            this.formPromise = this.apiService.putUpdateTempPassword(request);\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('updatedMasterPassword'));\n\n            if (this.onSuccessfulChangePassword != null) {\n                this.onSuccessfulChangePassword();\n            } else {\n                this.messagingService.send('logout');\n            }\n        } catch { }\n    }\n}\n","import { OrganizationUserResetPasswordRequest } from './organizationUserResetPasswordRequest';\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n    masterPasswordHint: string;\n}\n","export class VerifyEmailRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","export class VerifyDeleteRecoverRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class GroupRequest {\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","export class OrganizationUserConfirmRequest {\n    key: string;\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationUserInviteRequest {\n    emails: string[] = [];\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n    permissions: PermissionsApi;\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationUserUpdateRequest {\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n    permissions: PermissionsApi;\n}\n","export class OrganizationUserUpdateGroupsRequest {\n    groupIds: string[] = [];\n}\n","import { PolicyType } from '../../enums/policyType';\n\nexport class PolicyRequest {\n    type: PolicyType;\n    enabled: boolean;\n    data: any;\n}\n","import { OrganizationKeysRequest } from './organizationKeysRequest';\n\nexport class OrganizationUpdateRequest {\n    name: string;\n    identifier: string;\n    businessName: string;\n    billingEmail: string;\n    keys: OrganizationKeysRequest;\n}\n","export class SeatRequest {\n    seatAdjustment: number;\n}\n","export enum TransactionType {\n    Charge = 0,\n    Credit = 1,\n    PromotionalCredit = 2,\n    ReferralCredit = 3,\n    Refund = 4,\n}\n","export class VerifyBankRequest {\n    amount1: number;\n    amount2: number;\n}\n","export class BitPayInvoiceRequest {\n    userId: string;\n    organizationId: string;\n    credit: boolean;\n    amount: number;\n    returnUrl: string;\n    name: string;\n    email: string;\n}\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { OrganizationTaxInfoUpdateRequest } from '../request/organizationTaxInfoUpdateRequest';\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n}\n","export class StorageRequest {\n    storageGbAdjustment: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorDuoRequest extends PasswordVerificationRequest {\n    integrationKey: string;\n    secretKey: string;\n    host: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderRequest extends PasswordVerificationRequest {\n    type: TwoFactorProviderType;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorAuthenticatorRequest extends PasswordVerificationRequest {\n    token: string;\n    key: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorEmailRequest extends PasswordVerificationRequest {\n    token: string;\n    email: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends PasswordVerificationRequest {\n    id: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorWebAuthnRequest extends PasswordVerificationRequest {\n    deviceResponse: PublicKeyCredential;\n    name: string;\n    id: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorYubioOtpRequest extends PasswordVerificationRequest {\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n}\n","import {\n    Directive,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CryptoService } from 'jslib-common/abstractions/crypto.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { ExportService } from 'jslib-common/abstractions/export.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { HashPurpose } from 'jslib-common/enums/hashPurpose';\n\n@Directive()\nexport class ExportComponent {\n    @Output() onSaved = new EventEmitter();\n\n    formPromise: Promise<string>;\n    masterPassword: string;\n    format: 'json' | 'encrypted_json' | 'csv' = 'json';\n    showPassword = false;\n\n    constructor(protected cryptoService: CryptoService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected exportService: ExportService,\n        protected eventService: EventService, protected win: Window) { }\n\n    get encryptedFormat() {\n        return this.format === 'encrypted_json';\n    }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n            return;\n        }\n\n        const acceptedWarning = await this.warningDialog();\n        if (!acceptedWarning) {\n            return;\n        }\n\n        const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null);\n        if (passwordValid) {\n            try {\n                this.formPromise = this.getExportData();\n                const data = await this.formPromise;\n                this.downloadFile(data);\n                this.saved();\n                await this.collectEvent();\n            } catch { }\n        } else {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n        }\n    }\n\n    async warningDialog() {\n        if (this.encryptedFormat) {\n            return await this.platformUtilsService.showDialog(\n                '<p>' + this.i18nService.t('encExportKeyWarningDesc') +\n                '<p>' + this.i18nService.t('encExportAccountWarningDesc'),\n                this.i18nService.t('confirmVaultExport'), this.i18nService.t('exportVault'),\n                this.i18nService.t('cancel'), 'warning',\n                true);\n        } else {\n            return await this.platformUtilsService.showDialog(\n                this.i18nService.t('exportWarningDesc'),\n                this.i18nService.t('confirmVaultExport'), this.i18nService.t('exportVault'),\n                this.i18nService.t('cancel'), 'warning');\n        }\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n\n    protected saved() {\n        this.onSaved.emit();\n    }\n\n    protected getExportData() {\n        return this.exportService.getExport(this.format);\n    }\n\n    protected getFileName(prefix?: string) {\n        let extension = this.format;\n        if (this.format === 'encrypted_json') {\n            if (prefix == null) {\n                prefix = 'encrypted';\n            } else {\n                prefix = 'encrypted_' + prefix;\n            }\n            extension = 'json';\n        }\n        return this.exportService.getFileName(prefix, extension);\n    }\n\n    protected async collectEvent(): Promise<any> {\n        await this.eventService.collect(EventType.User_ClientExportedVault);\n    }\n\n    private downloadFile(csv: string): void {\n        const fileName = this.getFileName();\n        this.platformUtilsService.saveFile(this.win, csv, { type: 'text/plain' }, fileName);\n    }\n}\n","export class AttachmentRequest {\n    fileName: string;\n    key: string;\n    fileSize: number;\n    adminRequest: boolean;\n}\n","import {\n    CdkDragDrop,\n    moveItemInArray,\n} from '@angular/cdk/drag-drop';\nimport {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherRepromptType } from 'jslib-common/enums/cipherRepromptType';\nimport { CipherType } from 'jslib-common/enums/cipherType';\nimport { EventType } from 'jslib-common/enums/eventType';\nimport { FieldType } from 'jslib-common/enums/fieldType';\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SecureNoteType } from 'jslib-common/enums/secureNoteType';\nimport { UriMatchType } from 'jslib-common/enums/uriMatchType';\n\nimport { AuditService } from 'jslib-common/abstractions/audit.service';\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { EventService } from 'jslib-common/abstractions/event.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { StateService } from 'jslib-common/abstractions/state.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\nimport { CardView } from 'jslib-common/models/view/cardView';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\nimport { FieldView } from 'jslib-common/models/view/fieldView';\nimport { FolderView } from 'jslib-common/models/view/folderView';\nimport { IdentityView } from 'jslib-common/models/view/identityView';\nimport { LoginUriView } from 'jslib-common/models/view/loginUriView';\nimport { LoginView } from 'jslib-common/models/view/loginView';\nimport { SecureNoteView } from 'jslib-common/models/view/secureNoteView';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n    @Input() cloneMode: boolean = false;\n    @Input() folderId: string = null;\n    @Input() cipherId: string;\n    @Input() type: CipherType;\n    @Input() collectionIds: string[];\n    @Input() organizationId: string = null;\n    @Output() onSavedCipher = new EventEmitter<CipherView>();\n    @Output() onDeletedCipher = new EventEmitter<CipherView>();\n    @Output() onRestoredCipher = new EventEmitter<CipherView>();\n    @Output() onCancelled = new EventEmitter<CipherView>();\n    @Output() onEditAttachments = new EventEmitter<CipherView>();\n    @Output() onShareCipher = new EventEmitter<CipherView>();\n    @Output() onEditCollections = new EventEmitter<CipherView>();\n    @Output() onGeneratePassword = new EventEmitter();\n\n    editMode: boolean = false;\n    cipher: CipherView;\n    folders: FolderView[];\n    collections: CollectionView[] = [];\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    restorePromise: Promise<any>;\n    checkPasswordPromise: Promise<number>;\n    showPassword: boolean = false;\n    showCardNumber: boolean = false;\n    showCardCode: boolean = false;\n    cipherType = CipherType;\n    fieldType = FieldType;\n    addFieldType: FieldType = FieldType.Text;\n    typeOptions: any[];\n    cardBrandOptions: any[];\n    cardExpMonthOptions: any[];\n    identityTitleOptions: any[];\n    addFieldTypeOptions: any[];\n    uriMatchOptions: any[];\n    ownershipOptions: any[] = [];\n    autofillOnPageLoadOptions: any[];\n    currentDate = new Date();\n    allowPersonal = true;\n    reprompt: boolean = false;\n\n    protected writeableCollections: CollectionView[];\n    private previousCipherId: string;\n\n    constructor(protected cipherService: CipherService, protected folderService: FolderService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected auditService: AuditService, protected stateService: StateService,\n        protected userService: UserService, protected collectionService: CollectionService,\n        protected messagingService: MessagingService, protected eventService: EventService,\n        protected policyService: PolicyService) {\n        this.typeOptions = [\n            { name: i18nService.t('typeLogin'), value: CipherType.Login },\n            { name: i18nService.t('typeCard'), value: CipherType.Card },\n            { name: i18nService.t('typeIdentity'), value: CipherType.Identity },\n            { name: i18nService.t('typeSecureNote'), value: CipherType.SecureNote },\n        ];\n        this.cardBrandOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: 'Visa', value: 'Visa' },\n            { name: 'Mastercard', value: 'Mastercard' },\n            { name: 'American Express', value: 'Amex' },\n            { name: 'Discover', value: 'Discover' },\n            { name: 'Diners Club', value: 'Diners Club' },\n            { name: 'JCB', value: 'JCB' },\n            { name: 'Maestro', value: 'Maestro' },\n            { name: 'UnionPay', value: 'UnionPay' },\n            { name: i18nService.t('other'), value: 'Other' },\n        ];\n        this.cardExpMonthOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: '01 - ' + i18nService.t('january'), value: '1' },\n            { name: '02 - ' + i18nService.t('february'), value: '2' },\n            { name: '03 - ' + i18nService.t('march'), value: '3' },\n            { name: '04 - ' + i18nService.t('april'), value: '4' },\n            { name: '05 - ' + i18nService.t('may'), value: '5' },\n            { name: '06 - ' + i18nService.t('june'), value: '6' },\n            { name: '07 - ' + i18nService.t('july'), value: '7' },\n            { name: '08 - ' + i18nService.t('august'), value: '8' },\n            { name: '09 - ' + i18nService.t('september'), value: '9' },\n            { name: '10 - ' + i18nService.t('october'), value: '10' },\n            { name: '11 - ' + i18nService.t('november'), value: '11' },\n            { name: '12 - ' + i18nService.t('december'), value: '12' },\n        ];\n        this.identityTitleOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('mr'), value: i18nService.t('mr') },\n            { name: i18nService.t('mrs'), value: i18nService.t('mrs') },\n            { name: i18nService.t('ms'), value: i18nService.t('ms') },\n            { name: i18nService.t('dr'), value: i18nService.t('dr') },\n        ];\n        this.addFieldTypeOptions = [\n            { name: i18nService.t('cfTypeText'), value: FieldType.Text },\n            { name: i18nService.t('cfTypeHidden'), value: FieldType.Hidden },\n            { name: i18nService.t('cfTypeBoolean'), value: FieldType.Boolean },\n        ];\n        this.uriMatchOptions = [\n            { name: i18nService.t('defaultMatchDetection'), value: null },\n            { name: i18nService.t('baseDomain'), value: UriMatchType.Domain },\n            { name: i18nService.t('host'), value: UriMatchType.Host },\n            { name: i18nService.t('startsWith'), value: UriMatchType.StartsWith },\n            { name: i18nService.t('regEx'), value: UriMatchType.RegularExpression },\n            { name: i18nService.t('exact'), value: UriMatchType.Exact },\n            { name: i18nService.t('never'), value: UriMatchType.Never },\n        ];\n        this.autofillOnPageLoadOptions = [\n            { name: i18nService.t('autoFillOnPageLoadUseDefault'), value: null },\n            { name: i18nService.t('autoFillOnPageLoadYes'), value: true },\n            { name: i18nService.t('autoFillOnPageLoadNo'), value: false },\n        ];\n    }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async init() {\n        const policies = await this.policyService.getAll(PolicyType.PersonalOwnership);\n        const myEmail = await this.userService.getEmail();\n        this.ownershipOptions.push({ name: myEmail, value: null });\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name')).forEach(o => {\n            if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n                this.ownershipOptions.push({ name: o.name, value: o.id });\n                if (policies != null && o.usePolicies && !o.canManagePolicies && this.allowPersonal) {\n                    for (const policy of policies) {\n                        if (policy.organizationId === o.id && policy.enabled) {\n                            this.allowPersonal = false;\n                            this.ownershipOptions.splice(0, 1);\n                            // Default to the organization who owns this policy for now (if necessary)\n                            if (this.organizationId == null) {\n                                this.organizationId = o.id;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n        this.writeableCollections = await this.loadCollections();\n    }\n\n    async load() {\n        this.editMode = this.cipherId != null;\n        if (this.editMode) {\n            this.editMode = true;\n            if (this.cloneMode) {\n                this.cloneMode = true;\n                this.title = this.i18nService.t('addItem');\n            } else {\n                this.title = this.i18nService.t('editItem');\n            }\n        } else {\n            this.title = this.i18nService.t('addItem');\n        }\n\n        const addEditCipherInfo: any = await this.stateService.get<any>('addEditCipherInfo');\n        if (addEditCipherInfo != null) {\n            this.cipher = addEditCipherInfo.cipher;\n            this.collectionIds = addEditCipherInfo.collectionIds;\n        }\n        await this.stateService.remove('addEditCipherInfo');\n\n        if (this.cipher == null) {\n            if (this.editMode) {\n                const cipher = await this.loadCipher();\n                this.cipher = await cipher.decrypt();\n\n                // Adjust Cipher Name if Cloning\n                if (this.cloneMode) {\n                    this.cipher.name += ' - ' + this.i18nService.t('clone');\n                    // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n                    if (this.cipher.organizationId == null && !this.allowPersonal) {\n                        this.cipher.organizationId = this.organizationId;\n                    }\n                }\n            } else {\n                this.cipher = new CipherView();\n                this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n                this.cipher.folderId = this.folderId;\n                this.cipher.type = this.type == null ? CipherType.Login : this.type;\n                this.cipher.login = new LoginView();\n                this.cipher.login.uris = [new LoginUriView()];\n                this.cipher.card = new CardView();\n                this.cipher.identity = new IdentityView();\n                this.cipher.secureNote = new SecureNoteView();\n                this.cipher.secureNote.type = SecureNoteType.Generic;\n                this.cipher.reprompt = CipherRepromptType.None;\n            }\n        }\n\n        if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n            await this.organizationChanged();\n            if (this.collectionIds != null && this.collectionIds.length > 0 && this.collections.length > 0) {\n                this.collections.forEach(c => {\n                    if (this.collectionIds.indexOf(c.id) > -1) {\n                        (c as any).checked = true;\n                    }\n                });\n            }\n        }\n\n        this.folders = await this.folderService.getAllDecrypted();\n\n        if (this.editMode && this.previousCipherId !== this.cipherId) {\n            this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n        }\n        this.previousCipherId = this.cipherId;\n        this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.cipher.isDeleted) {\n            return this.restore();\n        }\n\n        if (this.cipher.name == null || this.cipher.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        if ((!this.editMode || this.cloneMode) && !this.allowPersonal && this.cipher.organizationId == null) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('personalOwnershipSubmitError'));\n            return false;\n        }\n\n        if ((!this.editMode || this.cloneMode) && this.cipher.type === CipherType.Login &&\n            this.cipher.login.uris != null && this.cipher.login.uris.length === 1 &&\n            (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === '')) {\n            this.cipher.login.uris = null;\n        }\n\n        // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n        if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n            this.cipher.collectionIds = this.collections == null ? [] :\n                this.collections.filter(c => (c as any).checked).map(c => c.id);\n        }\n\n        // Clear current Cipher Id to trigger \"Add\" cipher flow\n        if (this.cloneMode) {\n            this.cipher.id = null;\n        }\n\n        const cipher = await this.encryptCipher();\n        try {\n            this.formPromise = this.saveCipher(cipher);\n            await this.formPromise;\n            this.cipher.id = cipher.id;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode && !this.cloneMode ? 'editedItem' : 'addedItem'));\n            this.onSavedCipher.emit(this.cipher);\n            this.messagingService.send(this.editMode && !this.cloneMode ? 'editedCipher' : 'addedCipher');\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    addUri() {\n        if (this.cipher.type !== CipherType.Login) {\n            return;\n        }\n\n        if (this.cipher.login.uris == null) {\n            this.cipher.login.uris = [];\n        }\n\n        this.cipher.login.uris.push(new LoginUriView());\n    }\n\n    removeUri(uri: LoginUriView) {\n        if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n            return;\n        }\n\n        const i = this.cipher.login.uris.indexOf(uri);\n        if (i > -1) {\n            this.cipher.login.uris.splice(i, 1);\n        }\n    }\n\n    addField() {\n        if (this.cipher.fields == null) {\n            this.cipher.fields = [];\n        }\n\n        const f = new FieldView();\n        f.type = this.addFieldType;\n        f.newField = true;\n        this.cipher.fields.push(f);\n    }\n\n    removeField(field: FieldView) {\n        const i = this.cipher.fields.indexOf(field);\n        if (i > -1) {\n            this.cipher.fields.splice(i, 1);\n        }\n    }\n\n    trackByFunction(index: number, item: any) {\n        return index;\n    }\n\n    cancel() {\n        this.onCancelled.emit(this.cipher);\n    }\n\n    attachments() {\n        this.onEditAttachments.emit(this.cipher);\n    }\n\n    share() {\n        this.onShareCipher.emit(this.cipher);\n    }\n\n    editCollections() {\n        this.onEditCollections.emit(this.cipher);\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\n            this.i18nService.t('deleteItem'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.deleteCipher();\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeletedItem' : 'deletedItem'));\n            this.onDeletedCipher.emit(this.cipher);\n            this.messagingService.send(this.cipher.isDeleted ? 'permanentlyDeletedCipher' : 'deletedCipher');\n        } catch { }\n\n        return true;\n    }\n\n    async restore(): Promise<boolean> {\n        if (!this.cipher.isDeleted) {\n            return false;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('restoreItemConfirmation'), this.i18nService.t('restoreItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.restorePromise = this.restoreCipher();\n            await this.restorePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('restoredItem'));\n            this.onRestoredCipher.emit(this.cipher);\n            this.messagingService.send('restoredCipher');\n        } catch { }\n\n        return true;\n    }\n\n    async generatePassword(): Promise<boolean> {\n        if (this.cipher.login != null && this.cipher.login.password != null && this.cipher.login.password.length) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('overwritePasswordConfirmation'), this.i18nService.t('overwritePassword'),\n                this.i18nService.t('yes'), this.i18nService.t('no'));\n            if (!confirmed) {\n                return false;\n            }\n        }\n\n        this.onGeneratePassword.emit();\n        return true;\n    }\n\n    togglePassword() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('loginPassword').focus();\n        if (this.editMode && this.showPassword) {\n            this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n        }\n    }\n\n    async toggleCardNumber() {\n        this.showCardNumber = !this.showCardNumber;\n        if (this.showCardNumber) {\n            this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n        }\n    }\n\n    toggleCardCode() {\n        this.showCardCode = !this.showCardCode;\n        document.getElementById('cardCode').focus();\n        if (this.editMode && this.showCardCode) {\n            this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n        }\n    }\n\n    toggleFieldValue(field: FieldView) {\n        const f = (field as any);\n        f.showValue = !f.showValue;\n        if (this.editMode && f.showValue) {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n        }\n    }\n\n    toggleUriOptions(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n    }\n\n    loginUriMatchChanged(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null ? true : u.showOptions;\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n    }\n\n    async organizationChanged() {\n        if (this.writeableCollections != null) {\n            this.writeableCollections.forEach(c => (c as any).checked = false);\n        }\n        if (this.cipher.organizationId != null) {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.cipher.organizationId);\n            const org = await this.userService.getOrganization(this.cipher.organizationId);\n            if (org != null) {\n                this.cipher.organizationUseTotp = org.useTotp;\n            }\n        } else {\n            this.collections = [];\n        }\n    }\n\n    async checkPassword() {\n        if (this.checkPasswordPromise != null) {\n            return;\n        }\n\n        if (this.cipher.login == null || this.cipher.login.password == null || this.cipher.login.password === '') {\n            return;\n        }\n\n        this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n        const matches = await this.checkPasswordPromise;\n        this.checkPasswordPromise = null;\n\n        if (matches > 0) {\n            this.platformUtilsService.showToast('warning', null,\n                this.i18nService.t('passwordExposed', matches.toString()));\n        } else {\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('passwordSafe'));\n        }\n    }\n\n    repromptChanged() {\n        this.reprompt = !this.reprompt;\n        if (this.reprompt) {\n            this.cipher.reprompt = CipherRepromptType.Password;\n        } else {\n            this.cipher.reprompt = CipherRepromptType.None;\n        }\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter(c => !c.readOnly);\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected encryptCipher() {\n        return this.cipherService.encrypt(this.cipher);\n    }\n\n    protected saveCipher(cipher: Cipher) {\n        return this.cipherService.saveWithServer(cipher);\n    }\n\n    protected deleteCipher() {\n        return this.cipher.isDeleted ? this.cipherService.deleteWithServer(this.cipher.id)\n            : this.cipherService.softDeleteWithServer(this.cipher.id);\n    }\n\n    protected restoreCipher() {\n        return this.cipherService.restoreWithServer(this.cipher.id);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { SearchService } from 'jslib-common/abstractions/search.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Directive()\nexport class CiphersComponent {\n    @Input() activeCipherId: string = null;\n    @Output() onCipherClicked = new EventEmitter<CipherView>();\n    @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n    @Output() onAddCipher = new EventEmitter();\n    @Output() onAddCipherOptions = new EventEmitter();\n\n    loaded: boolean = false;\n    ciphers: CipherView[] = [];\n    searchText: string;\n    searchPlaceholder: string = null;\n    filter: (cipher: CipherView) => boolean = null;\n    deleted: boolean = false;\n\n    protected searchPending = false;\n\n    private searchTimeout: any = null;\n\n    constructor(protected searchService: SearchService) { }\n\n    async load(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n        this.deleted = deleted || false;\n        await this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    async reload(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n        this.loaded = false;\n        this.ciphers = [];\n        await this.load(filter, deleted);\n    }\n\n    async refresh() {\n        await this.reload(this.filter, this.deleted);\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        this.filter = filter;\n        await this.search(null);\n    }\n\n    async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n        this.searchPending = false;\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout);\n        }\n        if (timeout == null) {\n            await this.doSearch(indexedCiphers);\n            return;\n        }\n        this.searchPending = true;\n        this.searchTimeout = setTimeout(async () => {\n            await this.doSearch(indexedCiphers);\n            this.searchPending = false;\n        }, timeout);\n    }\n\n    selectCipher(cipher: CipherView) {\n        this.onCipherClicked.emit(cipher);\n    }\n\n    rightClickCipher(cipher: CipherView) {\n        this.onCipherRightClicked.emit(cipher);\n    }\n\n    addCipher() {\n        this.onAddCipher.emit();\n    }\n\n    addCipherOptions() {\n        this.onAddCipherOptions.emit();\n    }\n\n    isSearching() {\n        return !this.searchPending && this.searchService.isSearchable(this.searchText);\n    }\n\n    protected deletedFilter: (cipher: CipherView) => boolean = c => c.isDeleted === this.deleted;\n\n    protected async doSearch(indexedCiphers?: CipherView[]) {\n        this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, this.deletedFilter], indexedCiphers);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Cipher } from 'jslib-common/models/domain/cipher';\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() allowSelectNone = false;\n    @Output() onSavedCollections = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collectionIds: string[];\n    collections: CollectionView[] = [];\n\n    protected cipherDomain: Cipher;\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected cipherService: CipherService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        this.cipherDomain = await this.loadCipher();\n        this.collectionIds = this.loadCipherCollections();\n        this.cipher = await this.cipherDomain.decrypt();\n        this.collections = await this.loadCollections();\n\n        this.collections.forEach(c => (c as any).checked = false);\n        if (this.collectionIds != null) {\n            this.collections.forEach(c => {\n                (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n            });\n        }\n    }\n\n    async submit() {\n        const selectedCollectionIds = this.collections\n            .filter(c => !!(c as any).checked)\n            .map(c => c.id);\n        if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n        this.cipherDomain.collectionIds = selectedCollectionIds;\n        try {\n            this.formPromise = this.saveCollections();\n            await this.formPromise;\n            this.onSavedCollections.emit();\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('editedItem'));\n        } catch { }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected loadCipherCollections() {\n        return this.cipherDomain.collectionIds;\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter(c => !c.readOnly && c.organizationId === this.cipher.organizationId);\n    }\n\n    protected saveCollections() {\n        return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { CipherType } from 'jslib-common/enums/cipherType';\n\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\nimport { TreeNode } from 'jslib-common/models/domain/treeNode';\n\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { ConstantsService } from 'jslib-common/services/constants.service';\n\n@Directive()\nexport class GroupingsComponent {\n    @Input() showFolders = true;\n    @Input() showCollections = true;\n    @Input() showFavorites = true;\n    @Input() showTrash = true;\n\n    @Output() onAllClicked = new EventEmitter();\n    @Output() onFavoritesClicked = new EventEmitter();\n    @Output() onTrashClicked = new EventEmitter();\n    @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n    @Output() onFolderClicked = new EventEmitter<FolderView>();\n    @Output() onAddFolder = new EventEmitter();\n    @Output() onEditFolder = new EventEmitter<FolderView>();\n    @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n    folders: FolderView[];\n    nestedFolders: TreeNode<FolderView>[];\n    collections: CollectionView[];\n    nestedCollections: TreeNode<CollectionView>[];\n    loaded: boolean = false;\n    cipherType = CipherType;\n    selectedAll: boolean = false;\n    selectedFavorites: boolean = false;\n    selectedTrash: boolean = false;\n    selectedType: CipherType = null;\n    selectedFolder: boolean = false;\n    selectedFolderId: string = null;\n    selectedCollectionId: string = null;\n\n    private collapsedGroupings: Set<string>;\n    private collapsedGroupingsKey: string;\n\n    constructor(protected collectionService: CollectionService, protected folderService: FolderService,\n        protected storageService: StorageService, protected userService: UserService) { }\n\n    async load(setLoaded = true) {\n        const userId = await this.userService.getUserId();\n        this.collapsedGroupingsKey = ConstantsService.collapsedGroupingsKey + '_' + userId;\n        const collapsedGroupings = await this.storageService.get<string[]>(this.collapsedGroupingsKey);\n        if (collapsedGroupings == null) {\n            this.collapsedGroupings = new Set<string>();\n        } else {\n            this.collapsedGroupings = new Set(collapsedGroupings);\n        }\n\n        await this.loadFolders();\n        await this.loadCollections();\n\n        if (setLoaded) {\n            this.loaded = true;\n        }\n    }\n\n    async loadCollections(organizationId?: string) {\n        if (!this.showCollections) {\n            return;\n        }\n        const collections = await this.collectionService.getAllDecrypted();\n        if (organizationId != null) {\n            this.collections = collections.filter(c => c.organizationId === organizationId);\n        } else {\n            this.collections = collections;\n        }\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    async loadFolders() {\n        if (!this.showFolders) {\n            return;\n        }\n        this.folders = await this.folderService.getAllDecrypted();\n        this.nestedFolders = await this.folderService.getAllNested();\n    }\n\n    selectAll() {\n        this.clearSelections();\n        this.selectedAll = true;\n        this.onAllClicked.emit();\n    }\n\n    selectFavorites() {\n        this.clearSelections();\n        this.selectedFavorites = true;\n        this.onFavoritesClicked.emit();\n    }\n\n    selectTrash() {\n        this.clearSelections();\n        this.selectedTrash = true;\n        this.onTrashClicked.emit();\n    }\n\n    selectType(type: CipherType) {\n        this.clearSelections();\n        this.selectedType = type;\n        this.onCipherTypeClicked.emit(type);\n    }\n\n    selectFolder(folder: FolderView) {\n        this.clearSelections();\n        this.selectedFolder = true;\n        this.selectedFolderId = folder.id;\n        this.onFolderClicked.emit(folder);\n    }\n\n    addFolder() {\n        this.onAddFolder.emit();\n    }\n\n    editFolder(folder: FolderView) {\n        this.onEditFolder.emit(folder);\n    }\n\n    selectCollection(collection: CollectionView) {\n        this.clearSelections();\n        this.selectedCollectionId = collection.id;\n        this.onCollectionClicked.emit(collection);\n    }\n\n    clearSelections() {\n        this.selectedAll = false;\n        this.selectedFavorites = false;\n        this.selectedTrash = false;\n        this.selectedType = null;\n        this.selectedFolder = false;\n        this.selectedFolderId = null;\n        this.selectedCollectionId = null;\n    }\n\n    collapse(grouping: FolderView | CollectionView, idPrefix = '') {\n        if (grouping.id == null) {\n            return;\n        }\n        const id = idPrefix + grouping.id;\n        if (this.isCollapsed(grouping, idPrefix)) {\n            this.collapsedGroupings.delete(id);\n        } else {\n            this.collapsedGroupings.add(id);\n        }\n        this.storageService.save(this.collapsedGroupingsKey, this.collapsedGroupings);\n    }\n\n    isCollapsed(grouping: FolderView | CollectionView, idPrefix = '') {\n        return this.collapsedGroupings.has(idPrefix + grouping.id);\n    }\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendAccessResponse } from '../response/sendAccessResponse';\n\nimport { SendAccessView } from '../view/sendAccessView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SendFile } from './sendFile';\nimport { SendText } from './sendText';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class SendAccess extends Domain {\n    id: string;\n    type: SendType;\n    name: EncString;\n    file: SendFile;\n    text: SendText;\n    expirationDate: Date;\n    creatorIdentifier: string;\n\n    constructor(obj?: SendAccessResponse, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            name: null,\n            expirationDate: null,\n            creatorIdentifier: null,\n        }, alreadyEncrypted, ['id', 'expirationDate', 'creatorIdentifier']);\n\n        this.type = obj.type;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendText(obj.text, alreadyEncrypted);\n                break;\n            case SendType.File:\n                this.file = new SendFile(obj.file, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n    }\n\n    async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n        const model = new SendAccessView(this);\n\n        await this.decryptObj(model, {\n            name: null,\n        }, null, key);\n\n        switch (this.type) {\n            case SendType.File:\n                model.file = await this.file.decrypt(key);\n                break;\n            case SendType.Text:\n                model.text = await this.text.decrypt(key);\n                break;\n            default:\n                break;\n        }\n\n        return model;\n    }\n}\n","import { SendType } from '../../enums/sendType';\n\nimport { SendAccess } from '../domain/sendAccess';\n\nimport { SendFileView } from './sendFileView';\nimport { SendTextView } from './sendTextView';\nimport { View } from './view';\n\nexport class SendAccessView implements View {\n    id: string = null;\n    name: string = null;\n    type: SendType = null;\n    text = new SendTextView();\n    file = new SendFileView();\n    expirationDate: Date = null;\n    creatorIdentifier: string = null;\n\n    constructor(s?: SendAccess) {\n        if (!s) {\n            return;\n        }\n\n        this.id = s.id;\n        this.type = s.type;\n        this.expirationDate = s.expirationDate;\n        this.creatorIdentifier = s.creatorIdentifier;\n    }\n}\n","export class SendAccessRequest {\n    password: string;\n}\n","import { DatePipe } from '@angular/common';\nimport {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SendType } from 'jslib-common/enums/sendType';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { SendFileView } from 'jslib-common/models/view/sendFileView';\nimport { SendTextView } from 'jslib-common/models/view/sendTextView';\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { EncArrayBuffer } from 'jslib-common/models/domain/encArrayBuffer';\nimport { Send } from 'jslib-common/models/domain/send';\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n    @Input() sendId: string;\n    @Input() type: SendType;\n\n    @Output() onSavedSend = new EventEmitter<SendView>();\n    @Output() onDeletedSend = new EventEmitter<SendView>();\n    @Output() onCancelled = new EventEmitter<SendView>();\n\n    copyLink = false;\n    disableSend = false;\n    disableHideEmail = false;\n    send: SendView;\n    deletionDate: string;\n    expirationDate: string;\n    hasPassword: boolean;\n    password: string;\n    showPassword = false;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    sendType = SendType;\n    typeOptions: any[];\n    canAccessPremium = true;\n    emailVerified = true;\n    alertShown = false;\n    showOptions = false;\n\n    private sendLinkBaseUrl: string;\n\n    constructor(protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected environmentService: EnvironmentService, protected datePipe: DatePipe,\n        protected sendService: SendService, protected userService: UserService,\n        protected messagingService: MessagingService, protected policyService: PolicyService) {\n        this.typeOptions = [\n            { name: i18nService.t('sendTypeFile'), value: SendType.File },\n            { name: i18nService.t('sendTypeText'), value: SendType.Text },\n        ];\n        this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n    }\n\n    get link(): string {\n        if (this.send.id != null && this.send.accessId != null) {\n            return this.sendLinkBaseUrl + this.send.accessId + '/' + this.send.urlB64Key;\n        }\n        return null;\n    }\n\n    get isSafari() {\n        return this.platformUtilsService.isSafari();\n    }\n\n    get isDateTimeLocalSupported(): boolean {\n        return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n    }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    get editMode(): boolean {\n        return this.sendId != null;\n    }\n\n    get title(): string {\n        return this.i18nService.t(\n            this.editMode ?\n                'editSend' :\n                'createSend'\n        );\n    }\n\n    setDates(event: {deletionDate: string, expirationDate: string}) {\n        this.deletionDate = event.deletionDate;\n        this.expirationDate = event.expirationDate;\n    }\n\n    async load() {\n        const disableSendPolicies = await this.policyService.getAll(PolicyType.DisableSend);\n        const organizations = await this.userService.getAllOrganizations();\n        this.disableSend = organizations.some(o => {\n            return o.enabled &&\n                o.status === OrganizationUserStatusType.Confirmed &&\n                o.usePolicies &&\n                !o.canManagePolicies &&\n                disableSendPolicies.some(p => p.organizationId === o.id && p.enabled);\n        });\n\n        const sendOptionsPolicies = await this.policyService.getAll(PolicyType.SendOptions);\n        this.disableHideEmail = await organizations.some(o => {\n            return o.enabled &&\n                o.status === OrganizationUserStatusType.Confirmed &&\n                o.usePolicies &&\n                !o.canManagePolicies &&\n                sendOptionsPolicies.some(p => p.organizationId === o.id && p.enabled && p.data.disableHideEmail);\n        });\n\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        this.emailVerified = await this.userService.getEmailVerified();\n        if (!this.canAccessPremium || !this.emailVerified) {\n            this.type = SendType.Text;\n        }\n\n        if (this.send == null) {\n            if (this.editMode) {\n                const send = await this.loadSend();\n                this.send = await send.decrypt();\n            } else {\n                this.send = new SendView();\n                this.send.type = this.type == null ? SendType.File : this.type;\n                this.send.file = new SendFileView();\n                this.send.text = new SendTextView();\n                this.send.deletionDate = new Date();\n                this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n            }\n        }\n\n        this.hasPassword = this.send.password != null && this.send.password.trim() !== '';\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.disableSend) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('sendDisabledWarning'));\n            return false;\n        }\n\n        if (this.send.name == null || this.send.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        let file: File = null;\n        if (this.send.type === SendType.File && !this.editMode) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            const files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n\n            file = files[0];\n            if (files[0].size > 524288000) { // 500 MB\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('maxFileSize'));\n                return;\n            }\n        }\n\n        if (this.password != null && this.password.trim() === '') {\n            this.password = null;\n        }\n\n        this.formPromise = this.encryptSend(file)\n            .then(async encSend => {\n                const uploadPromise = this.sendService.saveWithServer(encSend);\n                await uploadPromise;\n                if (this.send.id == null) {\n                    this.send.id = encSend[0].id;\n                }\n                if (this.send.accessId == null) {\n                    this.send.accessId = encSend[0].accessId;\n                }\n                this.onSavedSend.emit(this.send);\n                if (this.copyLink && this.link != null) {\n                    const copySuccess = await this.copyLinkToClipboard(this.link);\n                    if (copySuccess ?? true) {\n                        this.platformUtilsService.showToast('success', null,\n                            this.i18nService.t(this.editMode ? 'editedSend' : 'createdSend'));\n                    } else {\n                        await this.platformUtilsService.showDialog(\n                            this.i18nService.t(this.editMode ? 'editedSend' : 'createdSend'), null,\n                            this.i18nService.t('ok'), null, 'success', null);\n                        await this.copyLinkToClipboard(this.link);\n                    }\n                }\n            });\n        try {\n            await this.formPromise;\n            return true;\n        } catch { }\n        return false;\n    }\n\n    async copyLinkToClipboard(link: string): Promise<void | boolean> {\n        return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n    }\n\n    async delete(): Promise<boolean> {\n        if (this.deletePromise != null) {\n            return false;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteSendConfirmation'),\n            this.i18nService.t('deleteSend'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));\n            await this.load();\n            this.onDeletedSend.emit(this.send);\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    typeChanged() {\n        if (this.send.type === SendType.File && !this.alertShown) {\n            if (!this.canAccessPremium) {\n                this.alertShown = true;\n                this.messagingService.send('premiumRequired');\n            } else if (!this.emailVerified) {\n                this.alertShown = true;\n                this.messagingService.send('emailVerificationRequired');\n            }\n        }\n    }\n\n    toggleOptions() {\n        this.showOptions = !this.showOptions;\n    }\n\n    protected async loadSend(): Promise<Send> {\n        return this.sendService.get(this.sendId);\n    }\n\n    protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n        const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n        // Parse dates\n        try {\n            sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n        } catch {\n            sendData[0].deletionDate = null;\n        }\n        try {\n            sendData[0].expirationDate = this.expirationDate == null ? null : new Date(this.expirationDate);\n        } catch {\n            sendData[0].expirationDate = null;\n        }\n\n        return sendData;\n    }\n\n    protected togglePasswordVisible() {\n        this.showPassword = !this.showPassword;\n        document.getElementById('password').focus();\n    }\n}\n","import { DatePipe } from '@angular/common';\nimport {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n    // Native datetime-locale.\n    // We are happy.\n    Default = 'default',\n\n    // Native date and time inputs, but no datetime-locale.\n    // We use individual date and time inputs and create a datetime programatically on submit.\n    Firefox = 'firefox',\n\n    // No native date, time, or datetime-locale inputs.\n    // We use a polyfill for dates and a dropdown for times.\n    Safari = 'safari',\n}\n\nenum DateField {\n    DeletionDate = 'deletion',\n    ExpriationDate = 'expiration',\n}\n\n// Value = hours\nenum DatePreset {\n    OneHour = 1,\n    OneDay = 24,\n    TwoDays = 48,\n    ThreeDays = 72,\n    SevenDays = 168,\n    ThirtyDays = 720,\n    Custom = 0,\n    Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n    twelveHour: string;\n    twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n    @Input() readonly initialDeletionDate: Date;\n    @Input() readonly initialExpirationDate: Date;\n    @Input() readonly editMode: boolean;\n    @Input() readonly disabled: boolean;\n\n    @Output() datesChanged = new EventEmitter<{deletionDate: string, expirationDate: string}>();\n\n    get browserPath(): BrowserPath {\n        if (this.platformUtilsService.isFirefox()) {\n            return BrowserPath.Firefox;\n        } else if (this.platformUtilsService.isSafari()) {\n            return BrowserPath.Safari;\n        }\n        return BrowserPath.Default;\n    }\n\n    datesForm = new FormGroup({\n        selectedDeletionDatePreset: new FormControl(),\n        selectedExpirationDatePreset: new FormControl(),\n        defaultDeletionDateTime: new FormControl(),\n        defaultExpirationDateTime: new FormControl(),\n        fallbackDeletionDate: new FormControl(),\n        fallbackDeletionTime: new FormControl(),\n        fallbackExpirationDate: new FormControl(),\n        fallbackExpirationTime: new FormControl(),\n    });\n\n    deletionDatePresets: any[] = [\n            { name: this.i18nService.t('oneHour'), value: DatePreset.OneHour },\n            { name: this.i18nService.t('oneDay'), value: DatePreset.OneDay },\n            { name: this.i18nService.t('days', '2'), value: DatePreset.TwoDays },\n            { name: this.i18nService.t('days', '3'), value: DatePreset.ThreeDays },\n            { name: this.i18nService.t('days', '7'), value: DatePreset.SevenDays },\n            { name: this.i18nService.t('days', '30'), value: DatePreset.ThirtyDays },\n            { name: this.i18nService.t('custom'), value: DatePreset.Custom },\n    ];\n\n    expirationDatePresets: any[] = [\n            { name: this.i18nService.t('never'), value: DatePreset.Never },\n    ].concat([...this.deletionDatePresets]);\n\n    get selectedDeletionDatePreset(): FormControl {\n        return this.datesForm.get('selectedDeletionDatePreset') as FormControl;\n    }\n\n    get selectedExpirationDatePreset(): FormControl {\n        return this.datesForm.get('selectedExpirationDatePreset') as FormControl;\n    }\n\n    get defaultDeletionDateTime(): FormControl {\n        return this.datesForm.get('defaultDeletionDateTime') as FormControl;\n    }\n\n    get defaultExpirationDateTime(): FormControl {\n        return this.datesForm.get('defaultExpirationDateTime') as FormControl;\n    }\n\n    get fallbackDeletionDate(): FormControl {\n        return this.datesForm.get('fallbackDeletionDate') as FormControl;\n    }\n\n    get fallbackDeletionTime(): FormControl {\n        return this.datesForm.get('fallbackDeletionTime') as FormControl;\n    }\n\n    get fallbackExpirationDate(): FormControl {\n        return this.datesForm.get('fallbackExpirationDate') as FormControl;\n    }\n\n    get fallbackExpirationTime(): FormControl {\n        return this.datesForm.get('fallbackExpirationTime') as FormControl;\n    }\n\n    // Should be able to call these at any time and compute a submitable value\n    get formattedDeletionDate(): string {\n        switch (this.selectedDeletionDatePreset.value as DatePreset) {\n            case DatePreset.Never:\n                this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n                return this.formattedDeletionDate;\n            case DatePreset.Custom:\n                switch (this.browserPath) {\n                    case BrowserPath.Safari:\n                    case BrowserPath.Firefox:\n                        return this.fallbackDeletionDate.value + 'T' + this.fallbackDeletionTime.value;\n                    default:\n                        return this.defaultDeletionDateTime.value;\n                }\n            default:\n                const now = new Date();\n                const miliseconds = now.setTime(now.getTime() +\n                    (this.selectedDeletionDatePreset.value as number * 60 * 60 * 1000)) ;\n                return new Date(miliseconds).toString();\n        }\n    }\n\n    get formattedExpirationDate(): string {\n        switch (this.selectedExpirationDatePreset.value as DatePreset) {\n            case DatePreset.Never:\n                return null;\n            case DatePreset.Custom:\n                switch (this.browserPath) {\n                    case BrowserPath.Safari:\n                    case BrowserPath.Firefox:\n                        if (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) {\n                            return null;\n                        }\n                        return this.fallbackExpirationDate.value + 'T' + this.fallbackExpirationTime.value;\n                    default:\n                        if (!this.defaultExpirationDateTime.value) {\n                            return null;\n                        }\n                        return this.defaultExpirationDateTime.value;\n                }\n            default:\n                const now = new Date();\n                const miliseconds = now.setTime(now.getTime() +\n                    (this.selectedExpirationDatePreset.value as number * 60 * 60 * 1000));\n                return new Date(miliseconds).toString();\n        }\n    }\n    //\n\n    get safariDeletionTimePresetOptions() {\n        return this.safariTimePresetOptions(DateField.DeletionDate);\n    }\n\n    get safariExpirationTimePresetOptions() {\n        return this.safariTimePresetOptions(DateField.ExpriationDate);\n    }\n\n    constructor(protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected datePipe: DatePipe) {\n    }\n\n    ngOnInit(): void {\n        this.setInitialFormValues();\n        this.emitDates();\n        this.datesForm.valueChanges.subscribe(() => {\n            this.emitDates();\n        });\n    }\n\n    onDeletionDatePresetSelect(value: DatePreset) {\n        this.selectedDeletionDatePreset.setValue(value);\n    }\n\n    clearExpiration() {\n        switch (this.browserPath) {\n            case BrowserPath.Safari:\n            case BrowserPath.Firefox:\n                this.fallbackExpirationDate.setValue(null);\n                this.fallbackExpirationTime.setValue(null);\n                break;\n            case BrowserPath.Default:\n                this.defaultExpirationDateTime.setValue(null);\n                break;\n        }\n    }\n\n    protected emitDates() {\n        this.datesChanged.emit({\n            deletionDate: this.formattedDeletionDate,\n            expirationDate: this.formattedExpirationDate,\n        });\n    }\n\n    protected setInitialFormValues() {\n        if (this.editMode) {\n            this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n            this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n            switch (this.browserPath) {\n                case BrowserPath.Safari:\n                case BrowserPath.Firefox:\n                    this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n                    this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n                    if (this.initialExpirationDate != null) {\n                        this.fallbackExpirationDate.setValue(this.initialExpirationDate.toISOString().slice(0, 10));\n                        this.fallbackExpirationTime.setValue(this.initialExpirationDate.toTimeString().slice(0, 5));\n                    }\n                    break;\n                case BrowserPath.Default:\n                    if (this.initialExpirationDate) {\n                        this.defaultExpirationDateTime.setValue(\n                            this.datePipe.transform(new Date(this.initialExpirationDate), 'yyyy-MM-ddTHH:mm'));\n                    }\n                    this.defaultDeletionDateTime.setValue(this.datePipe.transform(new Date(this.initialDeletionDate), 'yyyy-MM-ddTHH:mm'));\n                    break;\n            }\n        } else {\n            this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n            this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n        }\n    }\n\n    protected safariTimePresetOptions(field: DateField): TimeOption[] {\n        // init individual arrays for major sort groups\n        const noon: TimeOption[] = [];\n        const midnight: TimeOption[] = [];\n        const ams: TimeOption[] = [];\n        const pms: TimeOption[] = [];\n\n        // determine minute skip (5 min, 10 min, 15 min, etc.)\n        const minuteIncrementer = 15;\n\n        // loop through each hour on a 12 hour system\n        for (let h = 1; h <= 12; h++) {\n            // loop through each minute in the hour using the skip to incriment\n            for (let m = 0; m < 60; m += minuteIncrementer) {\n                // init the final strings that will be added to the lists\n                let hour = h.toString();\n                let minutes = m.toString();\n\n                // add prepending 0s to single digit hours/minutes\n                if (h < 10) {\n                    hour = '0' + hour;\n                }\n                if (m < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                // build time strings and push to relevant sort groups\n                if (h === 12) {\n                    const midnightOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} AM`,\n                        twentyFourHour: `00:${minutes}`,\n                    };\n                    midnight.push(midnightOption);\n\n                    const noonOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} PM`,\n                        twentyFourHour: `${hour}:${minutes}`,\n                    };\n                    noon.push(noonOption);\n                } else {\n                    const amOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} AM`,\n                        twentyFourHour: `${hour}:${minutes}`,\n                    };\n                    ams.push(amOption);\n\n                    const pmOption: TimeOption = {\n                        twelveHour: `${hour}:${minutes} PM`,\n                        twentyFourHour: `${h + 12}:${minutes}`,\n                    };\n                    pms.push(pmOption);\n                }\n            }\n        }\n\n        // bring all the arrays together in the right order\n        const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n        // determine if an unsupported value already exists on the send & add that to the top of the option list\n        // example: if the Send was created with a different client\n        if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n            const previousValue: TimeOption = {\n                twelveHour: this.datePipe.transform(this.initialExpirationDate, 'hh:mm a'),\n                twentyFourHour: this.datePipe.transform(this.initialExpirationDate, 'HH:mm'),\n            };\n            return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n        } else if (field === DateField.DeletionDate && this.initialDeletionDate != null && this.editMode) {\n            const previousValue: TimeOption = {\n                twelveHour: this.datePipe.transform(this.initialDeletionDate, 'hh:mm a'),\n                twentyFourHour: this.datePipe.transform(this.initialDeletionDate, 'HH:mm'),\n            };\n            return [previousValue, ...validTimes];\n        } else {\n            return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n        }\n    }\n}\n","import {\n    Directive,\n    NgZone,\n    OnInit,\n} from '@angular/core';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\nimport { PolicyType } from 'jslib-common/enums/policyType';\nimport { SendType } from 'jslib-common/enums/sendType';\n\nimport { SendView } from 'jslib-common/models/view/sendView';\n\nimport { EnvironmentService } from 'jslib-common/abstractions/environment.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib-common/abstractions/policy.service';\nimport { SearchService } from 'jslib-common/abstractions/search.service';\nimport { SendService } from 'jslib-common/abstractions/send.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\n@Directive()\nexport class SendComponent implements OnInit {\n\n    disableSend = false;\n    sendType = SendType;\n    loaded = false;\n    loading = true;\n    refreshing = false;\n    expired: boolean = false;\n    type: SendType = null;\n    sends: SendView[] = [];\n    filteredSends: SendView[] = [];\n    searchText: string;\n    selectedType: SendType;\n    selectedAll: boolean;\n    searchPlaceholder: string;\n    filter: (cipher: SendView) => boolean;\n    searchPending = false;\n    hasSearched = false; // search() function called - returns true if text qualifies for search\n\n    actionPromise: any;\n    onSuccessfulRemovePassword: () => Promise<any>;\n    onSuccessfulDelete: () => Promise<any>;\n    onSuccessfulLoad: () => Promise<any>;\n\n    private searchTimeout: any;\n\n    constructor(protected sendService: SendService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected environmentService: EnvironmentService,\n        protected ngZone: NgZone, protected searchService: SearchService,\n        protected policyService: PolicyService, protected userService: UserService) { }\n\n    async ngOnInit() {\n        const policies = await this.policyService.getAll(PolicyType.DisableSend);\n        const organizations = await this.userService.getAllOrganizations();\n        this.disableSend = organizations.some(o => {\n            return o.enabled &&\n                o.status === OrganizationUserStatusType.Confirmed &&\n                o.usePolicies &&\n                !o.canManagePolicies &&\n                policies.some(p => p.organizationId === o.id && p.enabled);\n        });\n    }\n\n    async load(filter: (send: SendView) => boolean = null) {\n        this.loading = true;\n        const sends = await this.sendService.getAllDecrypted();\n        this.sends = sends;\n        if (this.onSuccessfulLoad != null) {\n            await this.onSuccessfulLoad();\n        } else {\n            // Default action\n            this.selectAll();\n        }\n        this.loading = false;\n        this.loaded = true;\n    }\n\n    async reload(filter: (send: SendView) => boolean = null) {\n        this.loaded = false;\n        this.sends = [];\n        await this.load(filter);\n    }\n\n    async refresh() {\n        try {\n            this.refreshing = true;\n            await this.reload(this.filter);\n        } finally {\n            this.refreshing = false;\n        }\n    }\n\n    async applyFilter(filter: (send: SendView) => boolean = null) {\n        this.filter = filter;\n        await this.search(null);\n    }\n\n    async search(timeout: number = null) {\n        this.searchPending = false;\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout);\n        }\n        if (timeout == null) {\n            this.hasSearched = this.searchService.isSearchable(this.searchText);\n            this.filteredSends = this.sends.filter(s => this.filter == null || this.filter(s));\n            this.applyTextSearch();\n            return;\n        }\n        this.searchPending = true;\n        this.searchTimeout = setTimeout(async () => {\n            this.hasSearched = this.searchService.isSearchable(this.searchText);\n            this.filteredSends = this.sends.filter(s => this.filter == null || this.filter(s));\n            this.applyTextSearch();\n            this.searchPending = false;\n        }, timeout);\n    }\n\n    async removePassword(s: SendView): Promise<boolean> {\n        if (this.actionPromise != null || s.password == null) {\n            return;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('removePasswordConfirmation'),\n            this.i18nService.t('removePassword'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n            await this.actionPromise;\n            if (this.onSuccessfulRemovePassword != null) {\n                this.onSuccessfulRemovePassword();\n            } else {\n                // Default actions\n                this.platformUtilsService.showToast('success', null, this.i18nService.t('removedPassword'));\n                await this.load();\n            }\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    async delete(s: SendView): Promise<boolean> {\n        if (this.actionPromise != null) {\n            return false;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteSendConfirmation'),\n            this.i18nService.t('deleteSend'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.sendService.deleteWithServer(s.id);\n            await this.actionPromise;\n\n            if (this.onSuccessfulDelete != null) {\n                this.onSuccessfulDelete();\n            } else {\n                // Default actions\n                this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));\n                await this.refresh();\n            }\n        } catch { }\n        this.actionPromise = null;\n        return true;\n    }\n\n    copy(s: SendView) {\n        const sendLinkBaseUrl = this.environmentService.getSendUrl();\n        const link = sendLinkBaseUrl + s.accessId + '/' + s.urlB64Key;\n        this.platformUtilsService.copyToClipboard(link);\n        this.platformUtilsService.showToast('success', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('sendLink')));\n    }\n\n    searchTextChanged() {\n        this.search(200);\n    }\n\n    selectAll() {\n        this.clearSelections();\n        this.selectedAll = true;\n        this.applyFilter(null);\n    }\n\n    selectType(type: SendType) {\n        this.clearSelections();\n        this.selectedType = type;\n        this.applyFilter(s => s.type === type);\n    }\n\n    clearSelections() {\n        this.selectedAll = false;\n        this.selectedType = null;\n    }\n\n    private applyTextSearch() {\n        if (this.searchText != null) {\n            this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n        }\n    }\n}\n","export class UpdateProfileRequest {\n    name: string;\n    masterPasswordHint: string;\n    culture = 'en-US'; // deprecated\n\n    constructor(name: string, masterPasswordHint: string) {\n        this.name = name;\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n    }\n}\n","import { EmailTokenRequest } from './emailTokenRequest';\n\nexport class EmailRequest extends EmailTokenRequest {\n    newMasterPasswordHash: string;\n    token: string;\n    key: string;\n}\n","import { SendRequest } from './sendRequest';\n\nimport { Send } from '../domain/send';\n\nexport class SendWithIdRequest extends SendRequest {\n    id: string;\n\n    constructor(send: Send) {\n        super(send);\n        this.id = send.id;\n    }\n}\n","import { PasswordRequest } from './passwordRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class KdfRequest extends PasswordRequest {\n    kdf: KdfType;\n    kdfIterations: number;\n}\n","export class UpdateDomainsRequest {\n    equivalentDomains: string[][];\n    excludedGlobalEquivalentDomains: number[];\n}\n","import { EmergencyAccessType } from '../../enums/emergencyAccessType';\n\nexport class EmergencyAccessInviteRequest {\n    email: string;\n    type: EmergencyAccessType;\n    waitTimeDays: number;\n}\n","export class EmergencyAccessPasswordRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","export { AttachmentData } from './attachmentData';\nexport { CardData } from './cardData';\nexport { CipherData } from './cipherData';\nexport { CollectionData } from './collectionData';\nexport { FieldData } from './fieldData';\nexport { FolderData } from './folderData';\nexport { IdentityData } from './identityData';\nexport { LoginData } from './loginData';\nexport { LoginUriData } from './loginUriData';\nexport { SecureNoteData } from './secureNoteData';\n","export { Attachment } from './attachment';\nexport { AuthResult } from './authResult';\nexport { Card } from './card';\nexport { Cipher } from './cipher';\nexport { EncString } from './encString';\nexport { Collection } from './collection';\nexport { EncryptedObject } from './encryptedObject';\nexport { EnvironmentUrls } from './environmentUrls';\nexport { Field } from './field';\nexport { Folder } from './folder';\nexport { Identity } from './identity';\nexport { Login } from './login';\nexport { LoginUri } from './loginUri';\nexport { GeneratedPasswordHistory } from './generatedPasswordHistory';\nexport { SecureNote } from './secureNote';\nexport { SymmetricCryptoKey } from './symmetricCryptoKey';\n","export class EmergencyAccessConfirmRequest {\n    key: string;\n}\n","import { Directive, OnInit } from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { GeneratedPasswordHistory } from 'jslib-common/models/domain/generatedPasswordHistory';\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n    history: GeneratedPasswordHistory[] = [];\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) { }\n\n    async ngOnInit() {\n        this.history = await this.passwordGenerationService.getHistory();\n    }\n\n    clear() {\n        this.history = [];\n        this.passwordGenerationService.clear();\n    }\n\n    copy(password: string) {\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { PasswordGeneratorPolicyOptions } from 'jslib-common/models/domain/passwordGeneratorPolicyOptions';\n\n@Directive()\nexport class PasswordGeneratorComponent implements OnInit {\n    @Input() showSelect: boolean = false;\n    @Output() onSelected = new EventEmitter<string>();\n\n    passTypeOptions: any[];\n    options: any = {};\n    password: string = '-';\n    showOptions = false;\n    avoidAmbiguous = false;\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions;\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) {\n            this.passTypeOptions = [\n                { name: i18nService.t('password'), value: 'password' },\n                { name: i18nService.t('passphrase'), value: 'passphrase' },\n            ];\n         }\n\n    async ngOnInit() {\n        const optionsResponse = await this.passwordGenerationService.getOptions();\n        this.options = optionsResponse[0];\n        this.enforcedPolicyOptions = optionsResponse[1];\n        this.avoidAmbiguous = !this.options.ambiguous;\n        this.options.type = this.options.type === 'passphrase' ? 'passphrase' : 'password';\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    async sliderChanged() {\n        this.saveOptions(false);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    async sliderInput() {\n        this.normalizeOptions();\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n    }\n\n    async saveOptions(regenerate: boolean = true) {\n        this.normalizeOptions();\n        await this.passwordGenerationService.saveOptions(this.options);\n\n        if (regenerate) {\n            await this.regenerate();\n        }\n    }\n\n    async regenerate() {\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    copy() {\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(this.password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n\n    select() {\n        this.onSelected.emit(this.password);\n    }\n\n    toggleOptions() {\n        this.showOptions = !this.showOptions;\n    }\n\n    private normalizeOptions() {\n        // Application level normalize options depedent on class variables\n        this.options.ambiguous = !this.avoidAmbiguous;\n\n        if (!this.options.uppercase && !this.options.lowercase && !this.options.number && !this.options.special) {\n            this.options.lowercase = true;\n            if (this.win != null) {\n                const lowercase = this.win.document.querySelector('#lowercase') as HTMLInputElement;\n                if (lowercase) {\n                    lowercase.checked = true;\n                }\n            }\n        }\n\n        this.passwordGenerationService.normalizeOptions(this.options, this.enforcedPolicyOptions);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { FolderService } from 'jslib-common/abstractions/folder.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nimport { FolderView } from 'jslib-common/models/view/folderView';\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n    @Input() folderId: string;\n    @Output() onSavedFolder = new EventEmitter<FolderView>();\n    @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n    editMode: boolean = false;\n    folder: FolderView = new FolderView();\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(protected folderService: FolderService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.folder.name == null || this.folder.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        try {\n            const folder = await this.folderService.encrypt(this.folder);\n            this.formPromise = this.folderService.saveWithServer(folder);\n            await this.formPromise;\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode ? 'editedFolder' : 'addedFolder'));\n            this.onSavedFolder.emit(this.folder);\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteFolderConfirmation'), this.i18nService.t('deleteFolder'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n            await this.deletePromise;\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedFolder'));\n            this.onDeletedFolder.emit(this.folder);\n        } catch { }\n\n        return true;\n    }\n\n    protected async init() {\n        this.editMode = this.folderId != null;\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editFolder');\n            const folder = await this.folderService.get(this.folderId);\n            this.folder = await folder.decrypt();\n        } else {\n            this.title = this.i18nService.t('addFolder');\n        }\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { OrganizationUserStatusType } from 'jslib-common/enums/organizationUserStatusType';\n\nimport { CipherService } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService } from 'jslib-common/abstractions/collection.service';\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { UserService } from 'jslib-common/abstractions/user.service';\n\nimport { Organization } from 'jslib-common/models/domain/organization';\nimport { CipherView } from 'jslib-common/models/view/cipherView';\nimport { CollectionView } from 'jslib-common/models/view/collectionView';\n\nimport { Utils } from 'jslib-common/misc/utils';\n\n@Directive()\nexport class ShareComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() organizationId: string;\n    @Output() onSharedCipher = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n\n    protected writeableCollections: CollectionView[] = [];\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected userService: UserService,\n        protected cipherService: CipherService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.map(c => c).filter(c => !c.readOnly);\n        const orgs = await this.userService.getAllOrganizations();\n        this.organizations = orgs.sort(Utils.getSortFunction(this.i18nService, 'name'))\n            .filter(o => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        this.cipher = await cipherDomain.decrypt();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    filterCollections() {\n        this.writeableCollections.forEach(c => (c as any).checked = false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter(c => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit(): Promise<boolean> {\n        const selectedCollectionIds = this.collections\n            .filter(c => !!(c as any).checked)\n            .map(c => c.id);\n        if (selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        const cipherView = await cipherDomain.decrypt();\n        const orgName = this.organizations.find(o => o.id === this.organizationId)?.name ?? this.i18nService.t('organization');\n\n        try {\n            this.formPromise = this.cipherService.shareWithServer(cipherView, this.organizationId,\n                selectedCollectionIds).then(async () => {\n                    this.onSharedCipher.emit();\n                    this.platformUtilsService.showToast('success', null,\n                        this.i18nService.t('movedItemToOrg', cipherView.name, orgName));\n                });\n            await this.formPromise;\n            return true;\n        } catch { }\n        return false;\n    }\n\n    get canSave() {\n        if (this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBlurClick]',\n})\nexport class BlurClickDirective {\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('click') onClick() {\n        this.el.nativeElement.blur();\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    OnInit,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBoxRow]',\n})\nexport class BoxRowDirective implements OnInit {\n    el: HTMLElement = null;\n    formEls: Element[];\n\n    constructor(private elRef: ElementRef) {\n        this.el = elRef.nativeElement;\n    }\n\n    ngOnInit(): void {\n        this.formEls = Array.from(this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea'));\n        this.formEls.forEach(formEl => {\n            formEl.addEventListener('focus', (event: Event) => {\n                this.el.classList.add('active');\n            }, false);\n\n            formEl.addEventListener('blur', (event: Event) => {\n                this.el.classList.remove('active');\n            }, false);\n        });\n    }\n\n    @HostListener('click', ['$event']) onClick(event: Event) {\n        const target = event.target as HTMLElement;\n        if (target !== this.el && !target.classList.contains('progress') &&\n            !target.classList.contains('progress-bar')) {\n            return;\n        }\n\n        if (this.formEls.length > 0) {\n            const formEl = (this.formEls[0] as HTMLElement);\n            if (formEl.tagName.toLowerCase() === 'input') {\n                const inputEl = (formEl as HTMLInputElement);\n                if (inputEl.type != null && inputEl.type.toLowerCase() === 'checkbox') {\n                    inputEl.click();\n                    return;\n                }\n            }\n            formEl.focus();\n        }\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { CipherView } from 'jslib-common/models/view/cipherView';\n\n@Pipe({\n    name: 'searchCiphers',\n})\nexport class SearchCiphersPipe implements PipeTransform {\n    transform(ciphers: CipherView[], searchText: string, deleted: boolean = false): CipherView[] {\n        if (ciphers == null || ciphers.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return ciphers.filter(c => {\n                return deleted !== c.isDeleted;\n            });\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return ciphers.filter(c => {\n            if (deleted !== c.isDeleted) {\n                return false;\n            }\n            if (c.name != null && c.name.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (searchText.length >= 8 && c.id.startsWith(searchText)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport {\n    RouterModule,\n    Routes,\n} from '@angular/router';\n\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptEmergencyComponent } from './accounts/accept-emergency.component';\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { SetPasswordComponent } from './accounts/set-password.component';\nimport { SsoComponent } from './accounts/sso.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { UpdateTempPasswordComponent } from './accounts/update-temp-password.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { SettingsComponent as OrgSettingsComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccessComponent } from './send/access.component';\nimport { SendComponent } from './send/send.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { VaultComponent } from './vault/vault.component';\n\nimport { OrganizationGuardService } from './services/organization-guard.service';\nimport { OrganizationTypeGuardService } from './services/organization-type-guard.service';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\nimport { LockGuardService } from 'jslib-angular/services/lock-guard.service';\nimport { UnauthGuardService } from 'jslib-angular/services/unauth-guard.service';\n\nimport { Permissions } from 'jslib-common/enums/permissions';\n\nimport { EmergencyAccessViewComponent } from './settings/emergency-access-view.component';\nimport { EmergencyAccessComponent } from './settings/emergency-access.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FrontendLayoutComponent,\n        children: [\n            { path: '', pathMatch: 'full', component: LoginComponent, canActivate: [UnauthGuardService] },\n            { path: '2fa', component: TwoFactorComponent, canActivate: [UnauthGuardService] },\n            {\n                path: 'register', component: RegisterComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'createAccount' },\n            },\n            {\n                path: 'sso', component: SsoComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'enterpriseSingleSignOn' },\n            },\n            {\n                path: 'set-password', component: SetPasswordComponent,\n                data: { titleId: 'setMasterPassword' },\n            },\n            {\n                path: 'hint', component: HintComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'passwordHint' },\n            },\n            {\n                path: 'lock',\n                component: LockComponent,\n                canActivate: [LockGuardService],\n            },\n            { path: 'verify-email', component: VerifyEmailTokenComponent },\n            {\n                path: 'accept-organization',\n                component: AcceptOrganizationComponent,\n                data: { titleId: 'joinOrganization' },\n            },\n            {\n                path: 'accept-emergency',\n                component: AcceptEmergencyComponent,\n                data: { titleId: 'acceptEmergency' },\n            },\n            { path: 'recover', pathMatch: 'full', redirectTo: 'recover-2fa' },\n            {\n                path: 'recover-2fa',\n                component: RecoverTwoFactorComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'recoverAccountTwoStep' },\n            },\n            {\n                path: 'recover-delete',\n                component: RecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n            {\n                path: 'verify-recover-delete',\n                component: VerifyRecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n            {\n                path: 'send/:sendId/:key',\n                component: AccessComponent,\n                data: { title: 'Bitwarden Send' },\n            },\n            {\n                path: 'update-temp-password',\n                component: UpdateTempPasswordComponent,\n                canActivate: [AuthGuardService],\n                data: { titleId: 'updateTempPassword' },\n            },\n        ],\n    },\n    {\n        path: '',\n        component: UserLayoutComponent,\n        canActivate: [AuthGuardService],\n        children: [\n            { path: 'vault', component: VaultComponent, data: { titleId: 'myVault' } },\n            { path: 'sends', component: SendComponent, data: { title: 'Send' } },\n            {\n                path: 'settings',\n                component: SettingsComponent,\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: AccountComponent, data: { titleId: 'myAccount' } },\n                    { path: 'options', component: OptionsComponent, data: { titleId: 'options' } },\n                    { path: 'domain-rules', component: DomainRulesComponent, data: { titleId: 'domainRules' } },\n                    { path: 'two-factor', component: TwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    { path: 'premium', component: PremiumComponent, data: { titleId: 'goPremium' } },\n                    { path: 'billing', component: UserBillingComponent, data: { titleId: 'billing' } },\n                    {\n                        path: 'subscription',\n                        component: UserSubscriptionComponent,\n                        data: { titleId: 'premiumMembership' },\n                    },\n                    { path: 'organizations', component: OrganizationsComponent, data: { titleId: 'organizations' } },\n                    {\n                        path: 'create-organization',\n                        component: CreateOrganizationComponent,\n                        data: { titleId: 'newOrganization' },\n                    },\n                    {\n                        path: 'emergency-access',\n                        children: [\n                            {\n                                path: '',\n                                component: EmergencyAccessComponent,\n                                data: { titleId: 'emergencyAccess' },\n                            },\n                            {\n                                path: ':id',\n                                component: EmergencyAccessViewComponent,\n                                data: { titleId: 'emergencyAccess' },\n                            },\n                        ],\n                    },\n                ],\n            },\n            {\n                path: 'tools',\n                component: ToolsComponent,\n                canActivate: [AuthGuardService],\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'generator' },\n                    { path: 'import', component: ImportComponent, data: { titleId: 'importData' } },\n                    { path: 'export', component: ExportComponent, data: { titleId: 'exportVault' } },\n                    {\n                        path: 'generator',\n                        component: PasswordGeneratorComponent,\n                        data: { titleId: 'passwordGenerator' },\n                    },\n                    { path: 'breach-report', component: BreachReportComponent, data: { titleId: 'dataBreachReport' } },\n                    {\n                        path: 'reused-passwords-report',\n                        component: ReusedPasswordsReportComponent,\n                        data: { titleId: 'reusedPasswordsReport' },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: UnsecuredWebsitesReportComponent,\n                        data: { titleId: 'unsecuredWebsitesReport' },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: WeakPasswordsReportComponent,\n                        data: { titleId: 'weakPasswordsReport' },\n                    },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: ExposedPasswordsReportComponent,\n                        data: { titleId: 'exposedPasswordsReport' },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: InactiveTwoFactorReportComponent,\n                        data: { titleId: 'inactive2faReport' },\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        path: 'organizations/:organizationId',\n        component: OrganizationLayoutComponent,\n        canActivate: [AuthGuardService, OrganizationGuardService],\n        children: [\n            { path: '', pathMatch: 'full', redirectTo: 'vault' },\n            { path: 'vault', component: OrgVaultComponent, data: { titleId: 'vault' } },\n            {\n                path: 'tools',\n                component: OrgToolsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { permissions: [Permissions.AccessImportExport, Permissions.AccessReports] },\n                children: [\n                    {\n                        path: '',\n                        pathMatch: 'full',\n                        redirectTo: 'import',\n                    },\n                    {\n                        path: 'import',\n                        component: OrgImportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'importData',\n                            permissions: [Permissions.AccessImportExport],\n                        },\n                    },\n                    {\n                        path: 'export',\n                        component: OrgExportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'exportVault',\n                            permissions: [Permissions.AccessImportExport],\n                        },\n                    },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: OrgExposedPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'exposedPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: OrgInactiveTwoFactorReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'inactive2faReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'reused-passwords-report',\n                        component: OrgReusedPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'reusedPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: OrgUnsecuredWebsitesReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'unsecuredWebsitesReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: OrgWeakPasswordsReportComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'weakPasswordsReport',\n                            permissions: [Permissions.AccessReports],\n                        },\n                    },\n                ],\n            },\n            {\n                path: 'manage',\n                component: OrgManageComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: {\n                    permissions: [\n                        Permissions.ManageAssignedCollections,\n                        Permissions.ManageAllCollections,\n                        Permissions.AccessEventLogs,\n                        Permissions.ManageGroups,\n                        Permissions.ManageUsers,\n                        Permissions.ManagePolicies,\n                    ],\n                },\n                children: [\n                    {\n                        path: '',\n                        pathMatch: 'full',\n                        redirectTo: 'people',\n                    },\n                    {\n                        path: 'collections',\n                        component: OrgManageCollectionsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'collections',\n                            permissions: [Permissions.ManageAssignedCollections, Permissions.ManageAllCollections],\n                        },\n                    },\n                    {\n                        path: 'events',\n                        component: OrgEventsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'eventLogs',\n                            permissions: [Permissions.AccessEventLogs],\n                        },\n                    },\n                    {\n                        path: 'groups',\n                        component: OrgGroupsComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'groups',\n                            permissions: [Permissions.ManageGroups],\n                        },\n                    },\n                    {\n                        path: 'people',\n                        component: OrgPeopleComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'people',\n                            permissions: [Permissions.ManageUsers, Permissions.ManageUsersPassword],\n                        },\n                    },\n                    {\n                        path: 'policies',\n                        component: OrgPoliciesComponent,\n                        canActivate: [OrganizationTypeGuardService],\n                        data: {\n                            titleId: 'policies',\n                            permissions: [Permissions.ManagePolicies],\n                        },\n                    },\n                ],\n            },\n            {\n                path: 'settings',\n                component: OrgSettingsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { permissions: [Permissions.ManageOrganization] },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: OrgAccountComponent, data: { titleId: 'myOrganization' } },\n                    { path: 'two-factor', component: OrgTwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    {\n                        path: 'billing',\n                        component: OrganizationBillingComponent,\n                        data: { titleId: 'billing' },\n                    },\n                    {\n                        path: 'subscription',\n                        component: OrganizationSubscriptionComponent,\n                        data: { titleId: 'subscription' },\n                    },\n                ],\n            },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {\n        useHash: true,\n        paramsInheritanceStrategy: 'always',\n        /*enableTracing: true,*/\n    })],\n    exports: [RouterModule],\n})\nexport class OssRoutingModule { }\n","import {\n    APP_INITIALIZER,\n    LOCALE_ID,\n    NgModule,\n} from '@angular/core';\n\nimport { ToasterModule } from 'angular2-toaster';\n\nimport { BroadcasterMessagingService } from '../../services/broadcasterMessaging.service';\nimport { HtmlStorageService } from '../../services/htmlStorage.service';\nimport { I18nService } from '../../services/i18n.service';\nimport { MemoryStorageService } from '../../services/memoryStorage.service';\nimport { WebPlatformUtilsService } from '../../services/webPlatformUtils.service';\n\nimport { EventService } from './event.service';\nimport { OrganizationGuardService } from './organization-guard.service';\nimport { OrganizationTypeGuardService } from './organization-type-guard.service';\nimport { RouterService } from './router.service';\n\nimport { AuthGuardService } from 'jslib-angular/services/auth-guard.service';\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\nimport { LockGuardService } from 'jslib-angular/services/lock-guard.service';\nimport { UnauthGuardService } from 'jslib-angular/services/unauth-guard.service';\nimport { ValidationService } from 'jslib-angular/services/validation.service';\n\nimport { ApiService } from 'jslib-common/services/api.service';\nimport { AppIdService } from 'jslib-common/services/appId.service';\nimport { AuditService } from 'jslib-common/services/audit.service';\nimport { AuthService } from 'jslib-common/services/auth.service';\nimport { CipherService } from 'jslib-common/services/cipher.service';\nimport { CollectionService } from 'jslib-common/services/collection.service';\nimport { ConsoleLogService } from 'jslib-common/services/consoleLog.service';\nimport { ConstantsService } from 'jslib-common/services/constants.service';\nimport { ContainerService } from 'jslib-common/services/container.service';\nimport { CryptoService } from 'jslib-common/services/crypto.service';\nimport { EnvironmentService } from 'jslib-common/services/environment.service';\nimport { EventService as EventLoggingService } from 'jslib-common/services/event.service';\nimport { ExportService } from 'jslib-common/services/export.service';\nimport { FileUploadService } from 'jslib-common/services/fileUpload.service';\nimport { FolderService } from 'jslib-common/services/folder.service';\nimport { ImportService } from 'jslib-common/services/import.service';\nimport { NotificationsService } from 'jslib-common/services/notifications.service';\nimport { PasswordGenerationService } from 'jslib-common/services/passwordGeneration.service';\nimport { PasswordRepromptService } from 'jslib-common/services/passwordReprompt.service';\nimport { PolicyService } from 'jslib-common/services/policy.service';\nimport { SearchService } from 'jslib-common/services/search.service';\nimport { SendService } from 'jslib-common/services/send.service';\nimport { SettingsService } from 'jslib-common/services/settings.service';\nimport { StateService } from 'jslib-common/services/state.service';\nimport { SyncService } from 'jslib-common/services/sync.service';\nimport { TokenService } from 'jslib-common/services/token.service';\nimport { TotpService } from 'jslib-common/services/totp.service';\nimport { UserService } from 'jslib-common/services/user.service';\nimport { VaultTimeoutService } from 'jslib-common/services/vaultTimeout.service';\nimport { WebCryptoFunctionService } from 'jslib-common/services/webCryptoFunction.service';\n\nimport { ApiService as ApiServiceAbstraction } from 'jslib-common/abstractions/api.service';\nimport { AuditService as AuditServiceAbstraction } from 'jslib-common/abstractions/audit.service';\nimport { AuthService as AuthServiceAbstraction } from 'jslib-common/abstractions/auth.service';\nimport { CipherService as CipherServiceAbstraction } from 'jslib-common/abstractions/cipher.service';\nimport { CollectionService as CollectionServiceAbstraction } from 'jslib-common/abstractions/collection.service';\nimport { CryptoService as CryptoServiceAbstraction } from 'jslib-common/abstractions/crypto.service';\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from 'jslib-common/abstractions/cryptoFunction.service';\nimport { EnvironmentService as EnvironmentServiceAbstraction } from 'jslib-common/abstractions/environment.service';\nimport { EventService as EventLoggingServiceAbstraction } from 'jslib-common/abstractions/event.service';\nimport { ExportService as ExportServiceAbstraction } from 'jslib-common/abstractions/export.service';\nimport { FileUploadService as FileUploadServiceAbstraction }  from 'jslib-common/abstractions/fileUpload.service';\nimport { FolderService as FolderServiceAbstraction } from 'jslib-common/abstractions/folder.service';\nimport { I18nService as I18nServiceAbstraction } from 'jslib-common/abstractions/i18n.service';\nimport { ImportService as ImportServiceAbstraction } from 'jslib-common/abstractions/import.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService as MessagingServiceAbstraction } from 'jslib-common/abstractions/messaging.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from 'jslib-common/abstractions/notifications.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from 'jslib-common/abstractions/passwordGeneration.service';\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from 'jslib-common/abstractions/passwordReprompt.service';\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from 'jslib-common/abstractions/platformUtils.service';\nimport { PolicyService as PolicyServiceAbstraction } from 'jslib-common/abstractions/policy.service';\nimport { SearchService as SearchServiceAbstraction } from 'jslib-common/abstractions/search.service';\nimport { SendService as SendServiceAbstraction } from 'jslib-common/abstractions/send.service';\nimport { SettingsService as SettingsServiceAbstraction } from 'jslib-common/abstractions/settings.service';\nimport { StateService as StateServiceAbstraction } from 'jslib-common/abstractions/state.service';\nimport { StorageService as StorageServiceAbstraction } from 'jslib-common/abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from 'jslib-common/abstractions/sync.service';\nimport { TokenService as TokenServiceAbstraction } from 'jslib-common/abstractions/token.service';\nimport { TotpService as TotpServiceAbstraction } from 'jslib-common/abstractions/totp.service';\nimport { UserService as UserServiceAbstraction } from 'jslib-common/abstractions/user.service';\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from 'jslib-common/abstractions/vaultTimeout.service';\n\nconst i18nService = new I18nService(window.navigator.language, 'locales');\nconst stateService = new StateService();\nconst broadcasterService = new BroadcasterService();\nconst messagingService = new BroadcasterMessagingService(broadcasterService);\nconst consoleLogService = new ConsoleLogService(false);\nconst platformUtilsService = new WebPlatformUtilsService(i18nService, messagingService, consoleLogService);\nconst storageService: StorageServiceAbstraction = new HtmlStorageService(platformUtilsService);\nconst secureStorageService: StorageServiceAbstraction = new MemoryStorageService();\nconst cryptoFunctionService: CryptoFunctionServiceAbstraction = new WebCryptoFunctionService(window,\n    platformUtilsService);\nconst cryptoService = new CryptoService(storageService,\n    platformUtilsService.isDev() ? storageService : secureStorageService, cryptoFunctionService, platformUtilsService,\n    consoleLogService);\nconst tokenService = new TokenService(storageService);\nconst appIdService = new AppIdService(storageService);\nconst environmentService = new EnvironmentService(storageService);\nconst apiService = new ApiService(tokenService, platformUtilsService, environmentService,\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst userService = new UserService(tokenService, storageService);\nconst settingsService = new SettingsService(userService, storageService);\nexport let searchService: SearchService = null;\nconst fileUploadService = new FileUploadService(consoleLogService, apiService);\nconst cipherService = new CipherService(cryptoService, userService, settingsService,\n    apiService, fileUploadService, storageService, i18nService, () => searchService);\nconst folderService = new FolderService(cryptoService, userService, apiService, storageService,\n    i18nService, cipherService);\nconst collectionService = new CollectionService(cryptoService, userService, storageService, i18nService);\nsearchService = new SearchService(cipherService, consoleLogService, i18nService);\nconst policyService = new PolicyService(userService, storageService);\nconst sendService = new SendService(cryptoService, userService, apiService, fileUploadService, storageService,\n    i18nService, cryptoFunctionService);\nconst vaultTimeoutService = new VaultTimeoutService(cipherService, folderService, collectionService,\n    cryptoService, platformUtilsService, storageService, messagingService, searchService, userService, tokenService,\n    null, async () => messagingService.send('logout', { expired: false }));\nconst syncService = new SyncService(userService, apiService, settingsService,\n    folderService, cipherService, cryptoService, collectionService, storageService, messagingService, policyService,\n    sendService, async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst passwordGenerationService = new PasswordGenerationService(cryptoService, storageService, policyService);\nconst totpService = new TotpService(storageService, cryptoFunctionService);\nconst containerService = new ContainerService(cryptoService);\nconst authService = new AuthService(cryptoService, apiService,\n    userService, tokenService, appIdService, i18nService, platformUtilsService, messagingService, vaultTimeoutService,\n    consoleLogService);\nconst exportService = new ExportService(folderService, cipherService, apiService, cryptoService);\nconst importService = new ImportService(cipherService, folderService, apiService, i18nService, collectionService,\n    platformUtilsService, cryptoService);\nconst notificationsService = new NotificationsService(userService, syncService, appIdService, apiService, vaultTimeoutService,\n    environmentService, async () => messagingService.send('logout', { expired: true }), consoleLogService);\nconst auditService = new AuditService(cryptoFunctionService, apiService);\nconst eventLoggingService = new EventLoggingService(storageService, apiService, userService, cipherService);\nconst passwordRepromptService = new PasswordRepromptService(i18nService, cryptoService, platformUtilsService);\n\ncontainerService.attachToWindow(window);\n\nexport function initFactory(): Function {\n    return async () => {\n        await (storageService as HtmlStorageService).init();\n\n        if (process.env.ENV !== 'production' || platformUtilsService.isSelfHost()) {\n            environmentService.setUrls({ base: window.location.origin }, false);\n        } else {\n            environmentService.setUrls({\n                base: window.location.origin,\n                icons: 'https://icons.bitwarden.net',\n                notifications: 'https://notifications.bitwarden.com',\n                enterprise: 'https://portal.bitwarden.com',\n            }, false);\n        }\n\n        setTimeout(() => notificationsService.init(), 3000);\n\n        vaultTimeoutService.init(true);\n        const locale = await storageService.get<string>(ConstantsService.localeKey);\n        await i18nService.init(locale);\n        eventLoggingService.init(true);\n        authService.init();\n        const htmlEl = window.document.documentElement;\n        htmlEl.classList.add('locale_' + i18nService.translationLocale);\n        let theme = await storageService.get<string>(ConstantsService.themeKey);\n        if (theme == null) {\n            theme = 'light';\n        }\n        htmlEl.classList.add('theme_' + theme);\n        stateService.save(ConstantsService.disableFaviconKey,\n            await storageService.get<boolean>(ConstantsService.disableFaviconKey));\n        stateService.save('enableGravatars', await storageService.get<boolean>('enableGravatars'));\n    };\n}\n\n@NgModule({\n    imports: [\n        ToasterModule,\n    ],\n    declarations: [],\n    providers: [\n        ValidationService,\n        AuthGuardService,\n        OrganizationGuardService,\n        OrganizationTypeGuardService,\n        UnauthGuardService,\n        RouterService,\n        EventService,\n        LockGuardService,\n        { provide: AuditServiceAbstraction, useValue: auditService },\n        { provide: AuthServiceAbstraction, useValue: authService },\n        { provide: CipherServiceAbstraction, useValue: cipherService },\n        { provide: FolderServiceAbstraction, useValue: folderService },\n        { provide: LogService, useValue: consoleLogService },\n        { provide: CollectionServiceAbstraction, useValue: collectionService },\n        { provide: EnvironmentServiceAbstraction, useValue: environmentService },\n        { provide: TotpServiceAbstraction, useValue: totpService },\n        { provide: TokenServiceAbstraction, useValue: tokenService },\n        { provide: I18nServiceAbstraction, useValue: i18nService },\n        { provide: CryptoServiceAbstraction, useValue: cryptoService },\n        { provide: PlatformUtilsServiceAbstraction, useValue: platformUtilsService },\n        { provide: PasswordGenerationServiceAbstraction, useValue: passwordGenerationService },\n        { provide: ApiServiceAbstraction, useValue: apiService },\n        { provide: FileUploadServiceAbstraction, useValue: fileUploadService },\n        { provide: SyncServiceAbstraction, useValue: syncService },\n        { provide: UserServiceAbstraction, useValue: userService },\n        { provide: MessagingServiceAbstraction, useValue: messagingService },\n        { provide: BroadcasterService, useValue: broadcasterService },\n        { provide: SettingsServiceAbstraction, useValue: settingsService },\n        { provide: VaultTimeoutServiceAbstraction, useValue: vaultTimeoutService },\n        { provide: StorageServiceAbstraction, useValue: storageService },\n        { provide: StateServiceAbstraction, useValue: stateService },\n        { provide: ExportServiceAbstraction, useValue: exportService },\n        { provide: SearchServiceAbstraction, useValue: searchService },\n        { provide: ImportServiceAbstraction, useValue: importService },\n        { provide: NotificationsServiceAbstraction, useValue: notificationsService },\n        { provide: CryptoFunctionServiceAbstraction, useValue: cryptoFunctionService },\n        { provide: EventLoggingServiceAbstraction, useValue: eventLoggingService },\n        { provide: PolicyServiceAbstraction, useValue: policyService },\n        { provide: SendServiceAbstraction, useValue: sendService },\n        { provide: PasswordRepromptServiceAbstraction, useValue: passwordRepromptService },\n        { provide: LogService, useValue: consoleLogService },\n        {\n            provide: APP_INITIALIZER,\n            useFactory: initFactory,\n            deps: [],\n            multi: true,\n        },\n        {\n            provide: LOCALE_ID,\n            useFactory: () => i18nService.translationLocale,\n            deps: [],\n        },\n    ],\n})\nexport class ServicesModule {\n}\n","import { MessagingService } from 'jslib-common/abstractions/messaging.service';\n\nimport { BroadcasterService } from 'jslib-angular/services/broadcaster.service';\n\nexport class BroadcasterMessagingService implements MessagingService {\n    constructor(private broadcasterService: BroadcasterService) { }\n\n    send(subscriber: string, arg: any = {}) {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        this.broadcasterService.send(message);\n    }\n}\n","import { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib-common/abstractions/storage.service';\nimport { ConstantsService } from 'jslib-common/services';\n\nexport class HtmlStorageService implements StorageService {\n    private localStorageKeys = new Set(['appId', 'anonymousAppId', 'rememberedEmail', 'passwordGenerationOptions',\n        ConstantsService.disableFaviconKey, 'rememberEmail', 'enableGravatars', 'enableFullWidth',\n        ConstantsService.localeKey, ConstantsService.autoConfirmFingerprints,\n        ConstantsService.vaultTimeoutKey, ConstantsService.vaultTimeoutActionKey, ConstantsService.ssoCodeVerifierKey,\n        ConstantsService.ssoStateKey, 'ssoOrgIdentifier']);\n    private localStorageStartsWithKeys = ['twoFactorToken_', ConstantsService.collapsedGroupingsKey + '_'];\n    private memoryStorageStartsWithKeys = ['ciphers_', 'folders_', 'collections_', 'settings_', 'lastSync_'];\n    private memoryStorage = new Map<string, string>();\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async init() {\n        // LockOption -> VaultTimeout (uses the same legacy string value for backwards compat)\n        const vaultTimeout = await this.get<number>(ConstantsService.vaultTimeoutKey);\n        if (vaultTimeout == null && !this.platformUtilsService.isDev()) {\n            await this.save(ConstantsService.vaultTimeoutKey, 15);\n        }\n\n        // Default Action to lock\n        const vaultTimeoutAction = await this.get<string>(ConstantsService.vaultTimeoutActionKey);\n        if (vaultTimeoutAction == null) {\n            await this.save(ConstantsService.vaultTimeoutActionKey, 'lock');\n        }\n    }\n\n    get<T>(key: string): Promise<T> {\n        let json: string = null;\n        if (this.isLocalStorage(key)) {\n            json = window.localStorage.getItem(key);\n        } else if (this.isMemoryStorage(key)) {\n            json = this.memoryStorage.get(key);\n        } else {\n            json = window.sessionStorage.getItem(key);\n        }\n        if (json != null) {\n            const obj = JSON.parse(json);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    async has(key: string): Promise<boolean> {\n        return await this.get(key) != null;\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n\n        if (obj instanceof Set) {\n            obj = Array.from(obj);\n        }\n\n        const json = JSON.stringify(obj);\n        if (this.isLocalStorage(key)) {\n            window.localStorage.setItem(key, json);\n        } else if (this.isMemoryStorage(key)) {\n            this.memoryStorage.set(key, json);\n        } else {\n            window.sessionStorage.setItem(key, json);\n        }\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        if (this.isLocalStorage(key)) {\n            window.localStorage.removeItem(key);\n        } else if (this.isMemoryStorage(key)) {\n            this.memoryStorage.delete(key);\n        } else {\n            window.sessionStorage.removeItem(key);\n        }\n        return Promise.resolve();\n    }\n\n    private isLocalStorage(key: string): boolean {\n        if (this.localStorageKeys.has(key)) {\n            return true;\n        }\n        for (const swKey of this.localStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private isMemoryStorage(key: string): boolean {\n        for (const swKey of this.memoryStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","export { ApiService } from './api.service';\nexport { AppIdService } from './appId.service';\nexport { AuditService } from './audit.service';\nexport { AuthService } from './auth.service';\nexport { CipherService } from './cipher.service';\nexport { CollectionService } from './collection.service';\nexport { ConstantsService } from './constants.service';\nexport { ContainerService } from './container.service';\nexport { CryptoService } from './crypto.service';\nexport { EnvironmentService } from './environment.service';\nexport { FolderService } from './folder.service';\nexport { I18nService } from './i18n.service';\nexport { PasswordGenerationService } from './passwordGeneration.service';\nexport { SettingsService } from './settings.service';\nexport { StateService } from './state.service';\nexport { SyncService } from './sync.service';\nexport { TokenService } from './token.service';\nexport { TotpService } from './totp.service';\nexport { UserService } from './user.service';\nexport { VaultTimeoutService } from './vaultTimeout.service';\n","import { BaseResponse } from './baseResponse';\n\nexport class ApiKeyResponse extends BaseResponse {\n    apiKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.apiKey = this.getResponseProperty('ApiKey');\n    }\n}\n","import { FileUploadType } from '../../enums/fileUploadType';\nimport { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n    attachmentId: string;\n    fileUploadType: FileUploadType;\n    cipherResponse: CipherResponse;\n    cipherMiniResponse: CipherResponse;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.attachmentId = this.getResponseProperty('AttachmentId');\n        this.fileUploadType = this.getResponseProperty('FileUploadType');\n        const cipherResponse = this.getResponseProperty('CipherResponse');\n        const cipherMiniResponse = this.getResponseProperty('CipherMiniResponse');\n        this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n        this.cipherMiniResponse = cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n        this.url = this.getResponseProperty('Url');\n    }\n\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { TransactionType } from '../../enums/transactionType';\n\nexport class BillingResponse extends BaseResponse {\n    balance: number;\n    paymentSource: BillingSourceResponse;\n    invoices: BillingInvoiceResponse[] = [];\n    transactions: BillingTransactionResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.balance = this.getResponseProperty('Balance');\n        const paymentSource = this.getResponseProperty('PaymentSource');\n        const transactions = this.getResponseProperty('Transactions');\n        const invoices = this.getResponseProperty('Invoices');\n        this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n        if (transactions != null) {\n            this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n        }\n        if (invoices != null) {\n            this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n        }\n    }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n    type: PaymentMethodType;\n    cardBrand: string;\n    description: string;\n    needsVerification: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.cardBrand = this.getResponseProperty('CardBrand');\n        this.description = this.getResponseProperty('Description');\n        this.needsVerification = this.getResponseProperty('NeedsVerification');\n    }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n    url: string;\n    pdfUrl: string;\n    number: string;\n    paid: boolean;\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.url = this.getResponseProperty('Url');\n        this.pdfUrl = this.getResponseProperty('PdfUrl');\n        this.number = this.getResponseProperty('Number');\n        this.paid = this.getResponseProperty('Paid');\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n    createdDate: string;\n    amount: number;\n    refunded: boolean;\n    partiallyRefunded: boolean;\n    refundedAmount: number;\n    type: TransactionType;\n    paymentMethodType: PaymentMethodType;\n    details: string;\n\n    constructor(response: any) {\n        super(response);\n        this.createdDate = this.getResponseProperty('CreatedDate');\n        this.amount = this.getResponseProperty('Amount');\n        this.refunded = this.getResponseProperty('Refunded');\n        this.partiallyRefunded = this.getResponseProperty('PartiallyRefunded');\n        this.refundedAmount = this.getResponseProperty('RefundedAmount');\n        this.type = this.getResponseProperty('Type');\n        this.paymentMethodType = this.getResponseProperty('PaymentMethodType');\n        this.details = this.getResponseProperty('Details');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class BreachAccountResponse extends BaseResponse {\n    addedDate: string;\n    breachDate: string;\n    dataClasses: string[];\n    description: string;\n    domain: string;\n    isActive: boolean;\n    isVerified: boolean;\n    logoPath: string;\n    modifiedDate: string;\n    name: string;\n    pwnCount: number;\n    title: string;\n\n    constructor(response: any) {\n        super(response);\n        this.addedDate = this.getResponseProperty('AddedDate');\n        this.breachDate = this.getResponseProperty('BreachDate');\n        this.dataClasses = this.getResponseProperty('DataClasses');\n        this.description = this.getResponseProperty('Description');\n        this.domain = this.getResponseProperty('Domain');\n        this.isActive = this.getResponseProperty('IsActive');\n        this.isVerified = this.getResponseProperty('IsVerified');\n        this.logoPath = this.getResponseProperty('LogoPath');\n        this.modifiedDate = this.getResponseProperty('ModifiedDate');\n        this.name = this.getResponseProperty('Name');\n        this.pwnCount = this.getResponseProperty('PwnCount');\n        this.title = this.getResponseProperty('Title');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { DeviceType } from '../../enums/deviceType';\nimport { EventType } from '../../enums/eventType';\n\nexport class EventResponse extends BaseResponse {\n    type: EventType;\n    userId: string;\n    organizationId: string;\n    providerId: string;\n    cipherId: string;\n    collectionId: string;\n    groupId: string;\n    policyId: string;\n    organizationUserId: string;\n    providerUserId: string;\n    providerOrganizationId: string;\n    actingUserId: string;\n    date: string;\n    deviceType: DeviceType;\n    ipAddress: string;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.providerId = this.getResponseProperty('ProviderId');\n        this.cipherId = this.getResponseProperty('CipherId');\n        this.collectionId = this.getResponseProperty('CollectionId');\n        this.groupId = this.getResponseProperty('GroupId');\n        this.policyId = this.getResponseProperty('PolicyId');\n        this.organizationUserId = this.getResponseProperty('OrganizationUserId');\n        this.providerUserId = this.getResponseProperty('ProviderUserId');\n        this.providerOrganizationId = this.getResponseProperty('ProviderOrganizationId');\n        this.actingUserId = this.getResponseProperty('ActingUserId');\n        this.date = this.getResponseProperty('Date');\n        this.deviceType = this.getResponseProperty('DeviceType');\n        this.ipAddress = this.getResponseProperty('IpAddress');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class GroupResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.accessAll = this.getResponseProperty('AccessAll');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n","import { KeysResponse } from './keysResponse';\n\nexport class OrganizationKeysResponse extends KeysResponse {\n    constructor(response: any) {\n        super(response);\n    }\n}\n","import { OrganizationResponse } from './organizationResponse';\nimport {\n    BillingSubscriptionResponse,\n    BillingSubscriptionUpcomingInvoiceResponse,\n} from './subscriptionResponse';\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n    storageName: string;\n    storageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    expiration: string;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        const subscription = this.getResponseProperty('Subscription');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n        this.expiration = this.getResponseProperty('Expiration');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n    id: string;\n    error: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.error = this.getResponseProperty('Error');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nimport { PermissionsApi } from '../api/permissionsApi';\n\nimport { KdfType } from '../../enums/kdfType';\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class OrganizationUserResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    type: OrganizationUserType;\n    status: OrganizationUserStatusType;\n    accessAll: boolean;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.permissions = new PermissionsApi(this.getResponseProperty('Permissions'));\n        this.accessAll = this.getResponseProperty('AccessAll');\n        this.resetPasswordEnrolled = this.getResponseProperty('ResetPasswordEnrolled');\n    }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n    name: string;\n    email: string;\n    twoFactorEnabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n    }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n    kdf: KdfType;\n    kdfIterations: number;\n    resetPasswordKey: string;\n    encryptedPrivateKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n        this.resetPasswordKey = this.getResponseProperty('ResetPasswordKey');\n        this.encryptedPrivateKey = this.getResponseProperty('EncryptedPrivateKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileResponse } from './profileResponse';\n\nexport class PaymentResponse extends BaseResponse {\n    userProfile: ProfileResponse;\n    paymentIntentClientSecret: string;\n    success: boolean;\n\n    constructor(response: any) {\n        super(response);\n        const userProfile = this.getResponseProperty('UserProfile');\n        if (userProfile != null) {\n            this.userProfile = new ProfileResponse(userProfile);\n        }\n        this.paymentIntentClientSecret = this.getResponseProperty('PaymentIntentClientSecret');\n        this.success = this.getResponseProperty('Success');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class PreloginResponse extends BaseResponse {\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n","import { BaseResponse } from '../baseResponse';\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n    id: string;\n    providerId: string;\n    organizationId: string;\n    key: string;\n    settings: string;\n    creationDate: string;\n    revisionDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.providerId = this.getResponseProperty('ProviderId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.key = this.getResponseProperty('Key');\n        this.settings = this.getResponseProperty('Settings');\n        this.creationDate = this.getResponseProperty('CreationDate');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n    }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n    organizationName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.organizationName = this.getResponseProperty('OrganizationName');\n    }\n}\n","import { BaseResponse } from '../baseResponse';\n\nexport class ProviderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    businessName: string;\n    billingEmail: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.businessName = this.getResponseProperty('BusinessName');\n        this.billingEmail = this.getResponseProperty('BillingEmail');\n    }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from '../organizationUserBulkPublicKeyResponse';\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {\n\n}\n","import { BaseResponse } from '../baseResponse';\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n    id: string;\n    error: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.error = this.getResponseProperty('Error');\n    }\n}\n","import { BaseResponse } from '../baseResponse';\n\nimport { PermissionsApi } from '../../api/permissionsApi';\n\nimport { ProviderUserStatusType } from '../../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../../enums/providerUserType';\n\nexport class ProviderUserResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    type: ProviderUserType;\n    status: ProviderUserStatusType;\n    permissions: PermissionsApi;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.permissions = new PermissionsApi(this.getResponseProperty('Permissions'));\n    }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n    name: string;\n    email: string;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { SendFileApi } from '../api/sendFileApi';\nimport { SendTextApi } from '../api/sendTextApi';\n\nexport class SendAccessResponse extends BaseResponse {\n    id: string;\n    type: SendType;\n    name: string;\n    file: SendFileApi;\n    text: SendTextApi;\n    expirationDate: Date;\n    creatorIdentifier: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n\n        const text = this.getResponseProperty('Text');\n        if (text != null) {\n            this.text = new SendTextApi(text);\n        }\n\n        const file = this.getResponseProperty('File');\n        if (file != null) {\n            this.file = new SendFileApi(file);\n        }\n\n        this.expirationDate = this.getResponseProperty('ExpirationDate');\n        this.creatorIdentifier = this.getResponseProperty('CreatorIdentifier');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n\n    id: string = null;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.url = this.getResponseProperty('Url');\n    }\n}\n","import { FileUploadType } from '../../enums/fileUploadType';\n\nimport { BaseResponse } from './baseResponse';\nimport { SendResponse } from './sendResponse';\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n\n    fileUploadType: FileUploadType;\n    sendResponse: SendResponse;\n    url: string = null;\n    constructor(response: any) {\n        super(response);\n        this.fileUploadType = this.getResponseProperty('FileUploadType');\n        const sendResponse = this.getResponseProperty('SendResponse');\n        this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n        this.url = this.getResponseProperty('Url');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TaxInfoResponse extends BaseResponse {\n    taxId: string;\n    taxIdType: string;\n    line1: string;\n    line2: string;\n    city: string;\n    state: string;\n    country: string;\n    postalCode: string;\n\n    constructor(response: any) {\n        super(response);\n        this.taxId = this.getResponseProperty('TaxIdNumber');\n        this.taxIdType = this.getResponseProperty('TaxIdType');\n        this.line1 = this.getResponseProperty('Line1');\n        this.line2 = this.getResponseProperty('Line2');\n        this.city = this.getResponseProperty('City');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.country = this.getResponseProperty('Country');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TaxRateResponse extends BaseResponse {\n    id: string;\n    country: string;\n    state: string;\n    postalCode: string;\n    rate: number;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.country = this.getResponseProperty('Country');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.rate = this.getResponseProperty('Rate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n    enabled: boolean;\n    key: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key = this.getResponseProperty('Key');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n    enabled: boolean;\n    host: string;\n    secretKey: string;\n    integrationKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.host = this.getResponseProperty('Host');\n        this.secretKey = this.getResponseProperty('SecretKey');\n        this.integrationKey = this.getResponseProperty('IntegrationKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n    enabled: boolean;\n    email: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.email = this.getResponseProperty('Email');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n    enabled: boolean;\n    type: TwoFactorProviderType;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n    code: string;\n\n    constructor(response: any) {\n        super(response);\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n    enabled: boolean;\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key1 = this.getResponseProperty('Key1');\n        this.key2 = this.getResponseProperty('Key2');\n        this.key3 = this.getResponseProperty('Key3');\n        this.key4 = this.getResponseProperty('Key4');\n        this.key5 = this.getResponseProperty('Key5');\n        this.nfc = this.getResponseProperty('Nfc');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class UserKeyResponse extends BaseResponse {\n    userId: string;\n    publicKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.publicKey = this.getResponseProperty('PublicKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n    siteKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.siteKey = this.getResponseProperty('HCaptcha_SiteKey');\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n    return <T>(target: any, propertyKey: string | symbol,\n        descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>) => {\n        const originalMethod: () => Promise<T> = descriptor.value;\n        const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n        const getThrottles = (obj: any) => {\n            let throttles = allThrottles.get(obj);\n            if (throttles != null) {\n                return throttles;\n            }\n            throttles = new Map<string, (() => void)[]>();\n            allThrottles.set(obj, throttles);\n            return throttles;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const throttles = getThrottles(this);\n                const argsThrottleKey = throttleKey(args);\n                let queue = throttles.get(argsThrottleKey);\n                if (queue == null) {\n                    queue = [];\n                    throttles.set(argsThrottleKey, queue);\n                }\n\n                return new Promise<T>((resolve, reject) => {\n                    const exec = () => {\n                        const onFinally = () => {\n                            queue.splice(queue.indexOf(exec), 1);\n                            if (queue.length >= limit) {\n                                queue[limit - 1]();\n                            } else if (queue.length === 0) {\n                                throttles.delete(argsThrottleKey);\n                                if (throttles.size === 0) {\n                                    allThrottles.delete(this);\n                                }\n                            }\n                        };\n                        originalMethod.apply(this, args).then((val: any) => {\n                            onFinally();\n                            return val;\n                        }).catch((err: any) => {\n                            onFinally();\n                            throw err;\n                        }).then(resolve, reject);\n                    };\n                    queue.push(exec);\n                    if (queue.length <= limit) {\n                        exec();\n                    }\n                });\n            },\n        };\n    };\n}\n","export class CipherBulkMoveRequest {\n    ids: string[];\n    folderId: string;\n\n    constructor(ids: string[], folderId: string) {\n        this.ids = ids == null ? [] : ids;\n        this.folderId = folderId;\n    }\n}\n","export class CipherBulkRestoreRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherBulkShareRequest {\n    ciphers: CipherWithIdRequest[];\n    collectionIds: string[];\n\n    constructor(ciphers: Cipher[], collectionIds: string[]) {\n        if (ciphers != null) {\n            this.ciphers = [];\n            ciphers.forEach(c => {\n                this.ciphers.push(new CipherWithIdRequest(c));\n            });\n        }\n        this.collectionIds = collectionIds;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherShareRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import { CipherView } from '../view';\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n    private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n    private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n    constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) { }\n\n    isCached(url: string) {\n        return this.sortedCiphersByUrl.has(url);\n    }\n\n    addCiphers(url: string, ciphers: CipherView[]) {\n        ciphers.sort(this.comparator);\n        this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n        this.resetTimer(url);\n    }\n\n    getLastUsed(url: string) {\n        this.resetTimer(url);\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n    }\n\n    getLastLaunched(url: string) {\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n    }\n\n    getNext(url: string) {\n        this.resetTimer(url);\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n    }\n\n    updateLastUsedIndex(url: string) {\n        if (this.isCached(url)) {\n            this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n        }\n    }\n\n    clear() {\n        this.sortedCiphersByUrl.clear();\n        this.timeouts.clear();\n    }\n\n    private resetTimer(url: string) {\n        clearTimeout(this.timeouts.get(url));\n        this.timeouts.set(url, setTimeout(() => {\n            this.sortedCiphersByUrl.delete(url);\n            this.timeouts.delete(url);\n        }, CacheTTL));\n    }\n}\n\nclass Ciphers {\n    lastUsedIndex = -1;\n\n    constructor(private readonly ciphers: CipherView[]) { }\n\n    getLastUsed() {\n        this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n        return this.ciphers[this.lastUsedIndex];\n    }\n\n    getLastLaunched() {\n        const usedCiphers = this.ciphers.filter(cipher => cipher.localData?.lastLaunched);\n        const sortedCiphers = usedCiphers.sort((x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf());\n        return sortedCiphers[0];\n    }\n\n    getNextIndex() {\n        return (this.lastUsedIndex + 1) % this.ciphers.length;\n    }\n\n    getNext() {\n        return this.ciphers[this.getNextIndex()];\n    }\n\n    updateLastUsedIndex() {\n        this.lastUsedIndex = this.getNextIndex();\n    }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n    parent: T;\n    node: T;\n    children: TreeNode<T>[] = [];\n\n    constructor(node: T, name: string, parent: T) {\n        this.parent = parent;\n        this.node = node;\n        this.node.name = name;\n    }\n}\n\nexport interface ITreeNodeObject {\n    id: string;\n    name: string;\n}\n","export class EncArrayBuffer {\n    constructor(public buffer: ArrayBuffer) { }\n}\n","import Domain from './domainBase';\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n    defaultType: string = '';\n    minLength: number = 0;\n    useUppercase: boolean = false;\n    useLowercase: boolean = false;\n    useNumbers: boolean = false;\n    numberCount: number = 0;\n    useSpecial: boolean = false;\n    specialCount: number = 0;\n    minNumberWords: number = 0;\n    capitalize: boolean = false;\n    includeNumber: boolean = false;\n\n    inEffect() {\n        return this.defaultType !== '' ||\n            this.minLength > 0 ||\n            this.numberCount > 0 ||\n            this.specialCount > 0 ||\n            this.useUppercase ||\n            this.useLowercase ||\n            this.useNumbers ||\n            this.useSpecial ||\n            this.minNumberWords > 0 ||\n            this.capitalize ||\n            this.includeNumber;\n    }\n}\n","import { ProfileOrganizationResponse } from '../response/profileOrganizationResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\nimport { PermissionsApi } from '../api/permissionsApi';\n\nexport class OrganizationData {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useBusinessPortal: boolean;\n    useSso: boolean;\n    useResetPassword: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    ssoBound: boolean;\n    identifier: string;\n    permissions: PermissionsApi;\n    resetPasswordEnrolled: boolean;\n    userId: string;\n    hasPublicAndPrivateKeys: boolean;\n    providerId: string;\n    providerName: string;\n    isProviderUser: boolean;\n\n    constructor(response: ProfileOrganizationResponse) {\n        this.id = response.id;\n        this.name = response.name;\n        this.status = response.status;\n        this.type = response.type;\n        this.enabled = response.enabled;\n        this.usePolicies = response.usePolicies;\n        this.useGroups = response.useGroups;\n        this.useDirectory = response.useDirectory;\n        this.useEvents = response.useEvents;\n        this.useTotp = response.useTotp;\n        this.use2fa = response.use2fa;\n        this.useApi = response.useApi;\n        this.useBusinessPortal = response.useBusinessPortal;\n        this.useSso = response.useSso;\n        this.useResetPassword = response.useResetPassword;\n        this.selfHost = response.selfHost;\n        this.usersGetPremium = response.usersGetPremium;\n        this.seats = response.seats;\n        this.maxCollections = response.maxCollections;\n        this.maxStorageGb = response.maxStorageGb;\n        this.ssoBound = response.ssoBound;\n        this.identifier = response.identifier;\n        this.permissions = response.permissions;\n        this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n        this.userId = response.userId;\n        this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n        this.providerId = response.providerId;\n        this.providerName = response.providerName;\n    }\n}\n","import { ProfileProviderResponse } from '../response/profileProviderResponse';\n\nimport { ProviderUserStatusType } from '../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../enums/providerUserType';\n\nexport class ProviderData {\n    id: string;\n    name: string;\n    status: ProviderUserStatusType;\n    type: ProviderUserType;\n    enabled: boolean;\n    userId: string;\n    useEvents: boolean;\n\n    constructor(response: ProfileProviderResponse) {\n        this.id = response.id;\n        this.name = response.name;\n        this.status = response.status;\n        this.type = response.type;\n        this.enabled = response.enabled;\n        this.userId = response.userId;\n        this.useEvents = response.useEvents;\n    }\n}\n","import { SendFileApi } from '../api/sendFileApi';\n\nexport class SendFileData {\n    id: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(data?: SendFileApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.id = data.id;\n        this.fileName = data.fileName;\n        this.key = data.key;\n        this.size = data.size;\n        this.sizeName = data.sizeName;\n    }\n}\n","import { SendTextApi } from '../api/sendTextApi';\n\nexport class SendTextData {\n    text: string;\n    hidden: boolean;\n\n    constructor(data?: SendTextApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.text = data.text;\n        this.hidden = data.hidden;\n    }\n}\n","import { ProviderUserStatusType } from '../../enums/providerUserStatusType';\nimport { ProviderUserType } from '../../enums/providerUserType';\nimport { ProviderData } from '../data/providerData';\n\nexport class Provider {\n    id: string;\n    name: string;\n    status: ProviderUserStatusType;\n    type: ProviderUserType;\n    enabled: boolean;\n    userId: string;\n    useEvents: boolean;\n\n    constructor(obj?: ProviderData) {\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.name = obj.name;\n        this.status = obj.status;\n        this.type = obj.type;\n        this.enabled = obj.enabled;\n        this.userId = obj.userId;\n        this.useEvents = obj.useEvents;\n    }\n\n    get canAccess() {\n        if (this.isProviderAdmin) {\n            return true;\n        }\n        return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n    }\n\n    get canCreateOrganizations() {\n        return this.enabled && this.isProviderAdmin;\n    }\n\n    get canManageUsers() {\n        return this.isProviderAdmin;\n    }\n\n    get canAccessEventLogs() {\n        return this.isProviderAdmin;\n    }\n\n    get isProviderAdmin() {\n        return this.type === ProviderUserType.ProviderAdmin;\n    }\n}\n","import { I18nService as BaseI18nService } from 'jslib-common/services/i18n.service';\n\nexport class I18nService extends BaseI18nService {\n    constructor(systemLanguage: string, localesDirectory: string) {\n        super(systemLanguage || 'en-US', localesDirectory, async (formattedLocale: string) => {\n            const filePath = this.localesDirectory + '/' + formattedLocale + '/messages.json?cache=' +\n                process.env.CACHE_TAG;\n            const localesResult = await fetch(filePath);\n            const locales = await localesResult.json();\n            return locales;\n        });\n\n        this.supportedTranslationLocales = [\n            'az', 'en', 'bg', 'ca', 'cs', 'da', 'de', 'el', 'eo', 'en-GB', 'en-IN', 'es', 'et', 'fi', 'fr', 'he', 'hr', 'hu', 'id', 'it', 'ja', 'kn', 'ko', 'lv', 'ml', 'nb',\n            'nl', 'pl', 'pt-PT', 'pt-BR', 'ro', 'ru', 'sk', 'sr', 'sv', 'tr', 'uk', 'zh-CN', 'zh-TW',\n        ];\n    }\n}\n","import { StorageService } from 'jslib-common/abstractions/storage.service';\n\nexport class MemoryStorageService implements StorageService {\n    private store = new Map<string, any>();\n\n    get<T>(key: string): Promise<T> {\n        if (this.store.has(key)) {\n            const obj = this.store.get(key);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    async has(key: string): Promise<boolean> {\n        return this.get(key) != null;\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n        this.store.set(key, obj);\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        this.store.delete(key);\n        return Promise.resolve();\n    }\n}\n","import Swal, { SweetAlertIcon } from 'sweetalert2';\n\nimport { DeviceType } from 'jslib-common/enums/deviceType';\n\nimport { I18nService } from 'jslib-common/abstractions/i18n.service';\nimport { LogService } from 'jslib-common/abstractions/log.service';\nimport { MessagingService } from 'jslib-common/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib-common/abstractions/platformUtils.service';\n\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n    identityClientId: string = 'web';\n\n    private browserCache: DeviceType = null;\n\n    constructor(private i18nService: I18nService, private messagingService: MessagingService,\n        private logService: LogService) { }\n\n    getDevice(): DeviceType {\n        if (this.browserCache != null) {\n            return this.browserCache;\n        }\n\n        if (navigator.userAgent.indexOf(' Firefox/') !== -1 || navigator.userAgent.indexOf(' Gecko/') !== -1) {\n            this.browserCache = DeviceType.FirefoxBrowser;\n        } else if (navigator.userAgent.indexOf(' OPR/') >= 0) {\n            this.browserCache = DeviceType.OperaBrowser;\n        } else if (navigator.userAgent.indexOf(' Edg/') !== -1) {\n            this.browserCache = DeviceType.EdgeBrowser;\n        } else if (navigator.userAgent.indexOf(' Vivaldi/') !== -1) {\n            this.browserCache = DeviceType.VivaldiBrowser;\n        } else if (navigator.userAgent.indexOf(' Safari/') !== -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n            this.browserCache = DeviceType.SafariBrowser;\n        } else if ((window as any).chrome && navigator.userAgent.indexOf(' Chrome/') !== -1) {\n            this.browserCache = DeviceType.ChromeBrowser;\n        } else if (navigator.userAgent.indexOf(' Trident/') !== -1) {\n            this.browserCache = DeviceType.IEBrowser;\n        } else {\n            this.browserCache = DeviceType.UnknownBrowser;\n        }\n\n        return this.browserCache;\n    }\n\n    getDeviceString(): string {\n        const device = DeviceType[this.getDevice()].toLowerCase();\n        return device.replace('browser', '');\n    }\n\n    isFirefox(): boolean {\n        return this.getDevice() === DeviceType.FirefoxBrowser;\n    }\n\n    isChrome(): boolean {\n        return this.getDevice() === DeviceType.ChromeBrowser;\n    }\n\n    isEdge(): boolean {\n        return this.getDevice() === DeviceType.EdgeBrowser;\n    }\n\n    isOpera(): boolean {\n        return this.getDevice() === DeviceType.OperaBrowser;\n    }\n\n    isVivaldi(): boolean {\n        return this.getDevice() === DeviceType.VivaldiBrowser;\n    }\n\n    isSafari(): boolean {\n        return this.getDevice() === DeviceType.SafariBrowser;\n    }\n\n    isIE(): boolean {\n        return this.getDevice() === DeviceType.IEBrowser;\n    }\n\n    isMacAppStore(): boolean {\n        return false;\n    }\n\n    isViewOpen(): Promise<boolean> {\n        return Promise.resolve(false);\n    }\n\n    lockTimeout(): number {\n        return null;\n    }\n\n    launchUri(uri: string, options?: any): void {\n        const a = document.createElement('a');\n        a.href = uri;\n        if (options == null || !options.sameWindow) {\n            a.target = '_blank';\n            a.rel = 'noreferrer noopener';\n        }\n        a.classList.add('d-none');\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n        let blob: Blob = null;\n        let type: string = null;\n        const fileNameLower = fileName.toLowerCase();\n        let doDownload = true;\n        if (fileNameLower.endsWith('.pdf')) {\n            type = 'application/pdf';\n            doDownload = false;\n        } else if (fileNameLower.endsWith('.xlsx')) {\n            type = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n        } else if (fileNameLower.endsWith('.docx')) {\n            type = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n        } else if (fileNameLower.endsWith('.pptx')) {\n            type = 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\n        } else if (fileNameLower.endsWith('.csv')) {\n            type = 'text/csv';\n        } else if (fileNameLower.endsWith('.png')) {\n            type = 'image/png';\n        } else if (fileNameLower.endsWith('.jpg') || fileNameLower.endsWith('.jpeg')) {\n            type = 'image/jpeg';\n        } else if (fileNameLower.endsWith('.gif')) {\n            type = 'image/gif';\n        }\n        if (type != null) {\n            blobOptions = blobOptions || {};\n            if (blobOptions.type == null) {\n                blobOptions.type = type;\n            }\n        }\n        if (blobOptions != null && !this.isIE()) {\n            blob = new Blob([blobData], blobOptions);\n        } else {\n            blob = new Blob([blobData]);\n        }\n        if (navigator.msSaveOrOpenBlob) {\n            navigator.msSaveBlob(blob, fileName);\n        } else {\n            const a = win.document.createElement('a');\n            if (doDownload) {\n                a.download = fileName;\n            } else if (!this.isSafari()) {\n                a.target = '_blank';\n            }\n            a.href = URL.createObjectURL(blob);\n            a.style.position = 'fixed';\n            win.document.body.appendChild(a);\n            a.click();\n            win.document.body.removeChild(a);\n        }\n    }\n\n    getApplicationVersion(): Promise<string> {\n        return Promise.resolve(process.env.APPLICATION_VERSION || '-');\n    }\n\n    supportsWebAuthn(win: Window): boolean {\n        return (typeof(PublicKeyCredential) !== 'undefined');\n    }\n\n    supportsDuo(): boolean {\n        return true;\n    }\n\n    showToast(type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any): void {\n        this.messagingService.send('showToast', {\n            text: text,\n            title: title,\n            type: type,\n            options: options,\n        });\n    }\n\n    async showDialog(body: string, title?: string, confirmText?: string, cancelText?: string, type?: string,\n        bodyIsHtml: boolean = false) {\n        let iconClasses: string = null;\n        if (type != null) {\n            // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n            switch (type) {\n                case 'success':\n                    iconClasses = 'fa-check text-success';\n                    break;\n                case 'warning':\n                    iconClasses = 'fa-warning text-warning';\n                    break;\n                case 'error':\n                    iconClasses = 'fa-bolt text-danger';\n                    break;\n                case 'info':\n                    iconClasses = 'fa-info-circle text-info';\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        const bootstrapModal = document.querySelector('div.modal');\n        if (bootstrapModal != null) {\n            bootstrapModal.removeAttribute('tabindex');\n        }\n\n        const iconHtmlStr = iconClasses != null ? `<i class=\"swal-custom-icon fa ${iconClasses}\"></i>` : undefined;\n        const confirmed = await Swal.fire({\n            heightAuto: false,\n            buttonsStyling: false,\n            icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n            iconHtml: iconHtmlStr,\n            text: bodyIsHtml ? null : body,\n            html: bodyIsHtml ? body : null,\n            titleText: title,\n            showCancelButton: (cancelText != null),\n            cancelButtonText: cancelText,\n            showConfirmButton: true,\n            confirmButtonText: confirmText == null ? this.i18nService.t('ok') : confirmText,\n        });\n\n        if (bootstrapModal != null) {\n            bootstrapModal.setAttribute('tabindex', '-1');\n        }\n\n        return confirmed.value;\n    }\n\n    async showPasswordDialog(title: string, body: string, passwordValidation: (value: string) => Promise<boolean>):\n        Promise<boolean> {\n        const result = await Swal.fire({\n            heightAuto: false,\n            titleText: title,\n            input: 'password',\n            text: body,\n            confirmButtonText: this.i18nService.t('ok'),\n            showCancelButton: true,\n            cancelButtonText: this.i18nService.t('cancel'),\n            inputAttributes: {\n                autocapitalize: 'off',\n                autocorrect: 'off',\n            },\n            inputValidator: async (value: string): Promise<any> => {\n                if (await passwordValidation(value)) {\n                    return false;\n                }\n\n                return this.i18nService.t('invalidMasterPassword');\n            },\n        });\n\n        return result.isConfirmed;\n    }\n\n    isDev(): boolean {\n        return process.env.NODE_ENV === 'development';\n    }\n\n    isSelfHost(): boolean {\n        return process.env.SELF_HOST.toString() === 'true';\n    }\n\n    copyToClipboard(text: string, options?: any): void | boolean {\n        let win = window;\n        let doc = window.document;\n        if (options && (options.window || options.win)) {\n            win = options.window || options.win;\n            doc = win.document;\n        } else if (options && options.doc) {\n            doc = options.doc;\n        }\n        if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n            // IE specific code path to prevent textarea being shown while dialog is visible.\n            (win as any).clipboardData.setData('Text', text);\n        } else if (doc.queryCommandSupported && doc.queryCommandSupported('copy')) {\n            const textarea = doc.createElement('textarea');\n            textarea.textContent = text;\n            // Prevent scrolling to bottom of page in MS Edge.\n            textarea.style.position = 'fixed';\n            let copyEl = doc.body;\n            // For some reason copy command won't work when modal is open if appending to body\n            if (doc.body.classList.contains('modal-open')) {\n                copyEl = doc.body.querySelector<HTMLElement>('.modal');\n            }\n            copyEl.appendChild(textarea);\n            textarea.select();\n            let success = false;\n            try {\n                // Security exception may be thrown by some browsers.\n                success = doc.execCommand('copy');\n                if (!success) {\n                    this.logService.debug('Copy command unsupported or disabled.');\n                }\n            } catch (e) {\n                // tslint:disable-next-line\n                console.warn('Copy to clipboard failed.', e);\n            } finally {\n                copyEl.removeChild(textarea);\n            }\n            return success;\n        }\n    }\n\n    readFromClipboard(options?: any): Promise<string> {\n        throw new Error('Cannot read from clipboard on web.');\n    }\n\n    supportsBiometric() {\n        return Promise.resolve(false);\n    }\n\n    authenticateBiometric() {\n        return Promise.resolve(false);\n    }\n\n    supportsSecureStorage() {\n        return false;\n    }\n\n    getDefaultSystemTheme() {\n        return Promise.resolve(null as 'light' | 'dark');\n    }\n\n    onDefaultSystemThemeChange() {\n        /* noop */\n    }\n}\n","import { EventType } from '../enums/eventType';\n\nimport { EventData } from '../models/data/eventData';\n\nimport { EventRequest } from '../models/request/eventRequest';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { EventService as EventServiceAbstraction } from '../abstractions/event.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ConstantsService } from './constants.service';\n\nexport class EventService implements EventServiceAbstraction {\n    private inited = false;\n\n    constructor(private storageService: StorageService, private apiService: ApiService,\n        private userService: UserService, private cipherService: CipherService) { }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.uploadEvents();\n            setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n        }\n    }\n\n    async collect(eventType: EventType, cipherId: string = null, uploadImmediately = false): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const organizations = await this.userService.getAllOrganizations();\n        if (organizations == null) {\n            return;\n        }\n        const orgIds = new Set<string>(organizations.filter(o => o.useEvents).map(o => o.id));\n        if (orgIds.size === 0) {\n            return;\n        }\n        if (cipherId != null) {\n            const cipher = await this.cipherService.get(cipherId);\n            if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n                return;\n            }\n        }\n        let eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null) {\n            eventCollection = [];\n        }\n        const event = new EventData();\n        event.type = eventType;\n        event.cipherId = cipherId;\n        event.date = new Date().toISOString();\n        eventCollection.push(event);\n        await this.storageService.save(ConstantsService.eventCollectionKey, eventCollection);\n        if (uploadImmediately) {\n            await this.uploadEvents();\n        }\n    }\n\n    async uploadEvents(): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null || eventCollection.length === 0) {\n            return;\n        }\n        const request = eventCollection.map(e => {\n            const req = new EventRequest();\n            req.type = e.type;\n            req.cipherId = e.cipherId;\n            req.date = e.date;\n            return req;\n        });\n        try {\n            await this.apiService.postEventsCollect(request);\n            this.clearEvents();\n        } catch { }\n    }\n\n    async clearEvents(): Promise<any> {\n        await this.storageService.remove(ConstantsService.eventCollectionKey);\n    }\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventData {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventRequest {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import * as papa from 'papaparse';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { ExportService as ExportServiceAbstraction } from '../abstractions/export.service';\nimport { FolderService } from '../abstractions/folder.service';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Collection } from '../models/domain/collection';\nimport { Folder } from '../models/domain/folder';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\n\nimport { CipherWithIds as CipherExport } from '../models/export/cipherWithIds';\nimport { CollectionWithId as CollectionExport } from '../models/export/collectionWithId';\nimport { Event } from '../models/export/event';\nimport { FolderWithId as FolderExport } from '../models/export/folderWithId';\nimport { EventView } from '../models/view/eventView';\n\nimport { Utils } from '../misc/utils';\n\nexport class ExportService implements ExportServiceAbstraction {\n    constructor(private folderService: FolderService, private cipherService: CipherService,\n        private apiService: ApiService, private cryptoService: CryptoService) { }\n\n    async getExport(format: 'csv' | 'json' | 'encrypted_json' = 'csv'): Promise<string> {\n        if (format === 'encrypted_json') {\n            return this.getEncryptedExport();\n        } else {\n            return this.getDecryptedExport(format);\n        }\n    }\n\n    async getOrganizationExport(organizationId: string,\n        format: 'csv' | 'json' | 'encrypted_json' = 'csv'): Promise<string> {\n        if (format === 'encrypted_json') {\n            return this.getOrganizationEncryptedExport(organizationId);\n        } else {\n            return this.getOrganizationDecryptedExport(organizationId, format);\n        }\n    }\n\n    async getEventExport(events: EventView[]): Promise<string> {\n        return papa.unparse(events.map(e => new Event(e)));\n    }\n\n    getFileName(prefix: string = null, extension: string = 'csv'): string {\n        const now = new Date();\n        const dateString =\n            now.getFullYear() + '' + this.padNumber(now.getMonth() + 1, 2) + '' + this.padNumber(now.getDate(), 2) +\n            this.padNumber(now.getHours(), 2) + '' + this.padNumber(now.getMinutes(), 2) +\n            this.padNumber(now.getSeconds(), 2);\n\n        return 'bitwarden' + (prefix ? ('_' + prefix) : '') + '_export_' + dateString + '.' + extension;\n    }\n\n    private async getDecryptedExport(format: 'json' | 'csv'): Promise<string> {\n        let decFolders: FolderView[] = [];\n        let decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.folderService.getAllDecrypted().then(folders => {\n            decFolders = folders;\n        }));\n\n        promises.push(this.cipherService.getAllDecrypted().then(ciphers => {\n            decCiphers = ciphers.filter(f => f.deletedDate == null);\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const foldersMap = new Map<string, FolderView>();\n            decFolders.forEach(f => {\n                if (f.id != null) {\n                    foldersMap.set(f.id, f);\n                }\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach(c => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n                if (c.organizationId != null) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.folder = c.folderId != null && foldersMap.has(c.folderId) ?\n                    foldersMap.get(c.folderId).name : null;\n                cipher.favorite = c.favorite ? 1 : null;\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                encrypted: false,\n                folders: [],\n                items: [],\n            };\n\n            decFolders.forEach(f => {\n                if (f.id == null) {\n                    return;\n                }\n                const folder = new FolderExport();\n                folder.build(f);\n                jsonDoc.folders.push(folder);\n            });\n\n            decCiphers.forEach(c => {\n                if (c.organizationId != null) {\n                    return;\n                }\n                const cipher = new CipherExport();\n                cipher.build(c);\n                cipher.collectionIds = null;\n                jsonDoc.items.push(cipher);\n            });\n\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    private async getEncryptedExport(): Promise<string> {\n        let folders: Folder[] = [];\n        let ciphers: Cipher[] = [];\n        const promises = [];\n\n        promises.push(this.folderService.getAll().then(f => {\n            folders = f;\n        }));\n\n        promises.push(this.cipherService.getAll().then(c => {\n            ciphers = c.filter(f => f.deletedDate == null);\n        }));\n\n        await Promise.all(promises);\n\n        const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n        const jsonDoc: any = {\n            encrypted: true,\n            encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n            folders: [],\n            items: [],\n        };\n\n        folders.forEach(f => {\n            if (f.id == null) {\n                return;\n            }\n            const folder = new FolderExport();\n            folder.build(f);\n            jsonDoc.folders.push(folder);\n        });\n\n        ciphers.forEach(c => {\n            if (c.organizationId != null) {\n                return;\n            }\n            const cipher = new CipherExport();\n            cipher.build(c);\n            cipher.collectionIds = null;\n            jsonDoc.items.push(cipher);\n        });\n\n        return JSON.stringify(jsonDoc, null, '  ');\n    }\n\n    private async getOrganizationDecryptedExport(organizationId: string, format: 'json' | 'csv'): Promise<string> {\n        const decCollections: CollectionView[] = [];\n        const decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.apiService.getCollections(organizationId).then(collections => {\n            const collectionPromises: any = [];\n            if (collections != null && collections.data != null && collections.data.length > 0) {\n                collections.data.forEach(c => {\n                    const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n                    collectionPromises.push(collection.decrypt().then(decCol => {\n                        decCollections.push(decCol);\n                    }));\n                });\n            }\n            return Promise.all(collectionPromises);\n        }));\n\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then(ciphers => {\n            const cipherPromises: any = [];\n            if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n                ciphers.data.filter(c => c.deletedDate === null).forEach(c => {\n                    const cipher = new Cipher(new CipherData(c));\n                    cipherPromises.push(cipher.decrypt().then(decCipher => {\n                        decCiphers.push(decCipher);\n                    }));\n                });\n            }\n            return Promise.all(cipherPromises);\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const collectionsMap = new Map<string, CollectionView>();\n            decCollections.forEach(c => {\n                collectionsMap.set(c.id, c);\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach(c => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.collections = [];\n                if (c.collectionIds != null) {\n                    cipher.collections = c.collectionIds.filter(id => collectionsMap.has(id))\n                        .map(id => collectionsMap.get(id).name);\n                }\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                encrypted: false,\n                collections: [],\n                items: [],\n            };\n\n            decCollections.forEach(c => {\n                const collection = new CollectionExport();\n                collection.build(c);\n                jsonDoc.collections.push(collection);\n            });\n\n            decCiphers.forEach(c => {\n                const cipher = new CipherExport();\n                cipher.build(c);\n                jsonDoc.items.push(cipher);\n            });\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n        const collections: Collection[] = [];\n        const ciphers: Cipher[] = [];\n        const promises = [];\n\n        promises.push(this.apiService.getCollections(organizationId).then(c => {\n            const collectionPromises: any = [];\n            if (c != null && c.data != null && c.data.length > 0) {\n                c.data.forEach(r => {\n                    const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n                    collections.push(collection);\n                });\n            }\n            return Promise.all(collectionPromises);\n        }));\n\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then(c => {\n            const cipherPromises: any = [];\n            if (c != null && c.data != null && c.data.length > 0) {\n                c.data.filter(item => item.deletedDate === null).forEach(item => {\n                    const cipher = new Cipher(new CipherData(item));\n                    ciphers.push(cipher);\n                });\n            }\n            return Promise.all(cipherPromises);\n        }));\n\n        await Promise.all(promises);\n\n        const orgKey = await this.cryptoService.getOrgKey(organizationId);\n        const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n        const jsonDoc: any = {\n            encrypted: true,\n            encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n            collections: [],\n            items: [],\n        };\n\n        collections.forEach(c => {\n            const collection = new CollectionExport();\n            collection.build(c);\n            jsonDoc.collections.push(collection);\n        });\n\n        ciphers.forEach(c => {\n            const cipher = new CipherExport();\n            cipher.build(c);\n            jsonDoc.items.push(cipher);\n        });\n        return JSON.stringify(jsonDoc, null, '  ');\n    }\n\n    private padNumber(num: number, width: number, padCharacter: string = '0'): string {\n        const numString = num.toString();\n        return numString.length >= width ? numString :\n            new Array(width - numString.length + 1).join(padCharacter) + numString;\n    }\n\n    private buildCommonCipher(cipher: any, c: CipherView) {\n        cipher.type = null;\n        cipher.name = c.name;\n        cipher.notes = c.notes;\n        cipher.fields = null;\n        cipher.reprompt = c.reprompt;\n        // Login props\n        cipher.login_uri = null;\n        cipher.login_username = null;\n        cipher.login_password = null;\n        cipher.login_totp = null;\n\n        if (c.fields) {\n            c.fields.forEach((f: any) => {\n                if (!cipher.fields) {\n                    cipher.fields = '';\n                } else {\n                    cipher.fields += '\\n';\n                }\n\n                cipher.fields += ((f.name || '') + ': ' + f.value);\n            });\n        }\n\n        switch (c.type) {\n            case CipherType.Login:\n                cipher.type = 'login';\n                cipher.login_username = c.login.username;\n                cipher.login_password = c.login.password;\n                cipher.login_totp = c.login.totp;\n\n                if (c.login.uris) {\n                    cipher.login_uri = [];\n                    c.login.uris.forEach(u => {\n                        cipher.login_uri.push(u.uri);\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                cipher.type = 'note';\n                break;\n            default:\n                return;\n        }\n\n        return cipher;\n    }\n}\n","import { CipherRepromptType } from '../../enums/cipherRepromptType';\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Cipher as CipherDomain } from '../domain/cipher';\nimport { EncString } from '../domain/encString';\n\nimport { Card } from './card';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { SecureNote } from './secureNote';\n\nexport class Cipher {\n    static template(): Cipher {\n        const req = new Cipher();\n        req.organizationId = null;\n        req.collectionIds = null;\n        req.folderId = null;\n        req.type = CipherType.Login;\n        req.name = 'Item name';\n        req.notes = 'Some notes about this item.';\n        req.favorite = false;\n        req.fields = [];\n        req.login = null;\n        req.secureNote = null;\n        req.card = null;\n        req.identity = null;\n        req.reprompt = CipherRepromptType.None;\n        return req;\n    }\n\n    static toView(req: Cipher, view = new CipherView()) {\n        view.type = req.type;\n        view.folderId = req.folderId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        if (view.collectionIds || req.collectionIds) {\n            const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n            view.collectionIds = Array.from(set.values());\n        }\n        view.name = req.name;\n        view.notes = req.notes;\n        view.favorite = req.favorite;\n        view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n        if (req.fields != null) {\n            view.fields = req.fields.map(f => Field.toView(f));\n        }\n\n        switch (req.type) {\n            case CipherType.Login:\n                view.login = Login.toView(req.login);\n                break;\n            case CipherType.SecureNote:\n                view.secureNote = SecureNote.toView(req.secureNote);\n                break;\n            case CipherType.Card:\n                view.card = Card.toView(req.card);\n                break;\n            case CipherType.Identity:\n                view.identity = Identity.toView(req.identity);\n                break;\n        }\n\n        return view;\n    }\n\n    static toDomain(req: Cipher, domain = new CipherDomain()) {\n        domain.type = req.type;\n        domain.folderId = req.folderId;\n        if (domain.organizationId == null) {\n            domain.organizationId = req.organizationId;\n        }\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        domain.notes = req.notes != null ? new EncString(req.notes) : null;\n        domain.favorite = req.favorite;\n        domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n        if (req.fields != null) {\n            domain.fields = req.fields.map(f => Field.toDomain(f));\n        }\n\n        switch (req.type) {\n            case CipherType.Login:\n                domain.login = Login.toDomain(req.login);\n                break;\n            case CipherType.SecureNote:\n                domain.secureNote = SecureNote.toDomain(req.secureNote);\n                break;\n            case CipherType.Card:\n                domain.card = Card.toDomain(req.card);\n                break;\n            case CipherType.Identity:\n                domain.identity = Identity.toDomain(req.identity);\n                break;\n        }\n\n        return domain;\n    }\n\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    collectionIds: string[];\n    name: string;\n    notes: string;\n    favorite: boolean;\n    fields: Field[];\n    login: Login;\n    secureNote: SecureNote;\n    card: Card;\n    identity: Identity;\n    reprompt: CipherRepromptType;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView | CipherDomain) {\n        this.organizationId = o.organizationId;\n        this.folderId = o.folderId;\n        this.type = o.type;\n        this.reprompt = o.reprompt;\n\n        if (o instanceof CipherView) {\n            this.name = o.name;\n            this.notes = o.notes;\n        } else {\n            this.name = o.name?.encryptedString;\n            this.notes = o.notes?.encryptedString;\n        }\n\n        this.favorite = o.favorite;\n\n        if (o.fields != null) {\n            if (o instanceof CipherView) {\n                this.fields = o.fields.map(f => new Field(f));\n            } else {\n                this.fields = o.fields.map(f => new Field(f));\n            }\n        }\n\n        switch (o.type) {\n            case CipherType.Login:\n                this.login = new Login(o.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(o.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new Card(o.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(o.identity);\n                break;\n        }\n    }\n}\n","import { CardView } from '../view/cardView';\n\nimport { Card as CardDomain } from '../domain/card';\nimport { EncString } from '../domain/encString';\n\nexport class Card {\n    static template(): Card {\n        const req = new Card();\n        req.cardholderName = 'John Doe';\n        req.brand = 'visa';\n        req.number = '4242424242424242';\n        req.expMonth = '04';\n        req.expYear = '2023';\n        req.code = '123';\n        return req;\n    }\n\n    static toView(req: Card, view = new CardView()) {\n        view.cardholderName = req.cardholderName;\n        view.brand = req.brand;\n        view.number = req.number;\n        view.expMonth = req.expMonth;\n        view.expYear = req.expYear;\n        view.code = req.code;\n        return view;\n    }\n\n    static toDomain(req: Card, domain = new CardDomain()) {\n        domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n        domain.brand = req.brand != null ? new EncString(req.brand) : null;\n        domain.number = req.number != null ? new EncString(req.number) : null;\n        domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n        domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n        domain.code = req.code != null ? new EncString(req.code) : null;\n        return domain;\n    }\n\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(o?: CardView | CardDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof CardView) {\n            this.cardholderName = o.cardholderName;\n            this.brand = o.brand;\n            this.number = o.number;\n            this.expMonth = o.expMonth;\n            this.expYear = o.expYear;\n            this.code = o.code;\n        } else {\n            this.cardholderName = o.cardholderName?.encryptedString;\n            this.brand = o.brand?.encryptedString;\n            this.number = o.number?.encryptedString;\n            this.expMonth = o.expMonth?.encryptedString;\n            this.expYear = o.expYear?.encryptedString;\n            this.code = o.code?.encryptedString;\n        }\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldView } from '../view/fieldView';\n\nimport { EncString } from '../domain/encString';\nimport { Field as FieldDomain } from '../domain/field';\n\nexport class Field {\n    static template(): Field {\n        const req = new Field();\n        req.name = 'Field name';\n        req.value = 'Some value';\n        req.type = FieldType.Text;\n        return req;\n    }\n\n    static toView(req: Field, view = new FieldView()) {\n        view.type = req.type;\n        view.value = req.value;\n        view.name = req.name;\n        return view;\n    }\n\n    static toDomain(req: Field, domain = new FieldDomain()) {\n        domain.type = req.type;\n        domain.value = req.value != null ? new EncString(req.value) : null;\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        return domain;\n    }\n\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(o?: FieldView | FieldDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof FieldView) {\n            this.name = o.name;\n            this.value = o.value;\n        } else {\n            this.name = o.name?.encryptedString;\n            this.value = o.value?.encryptedString;\n        }\n        this.type = o.type;\n    }\n}\n","import { IdentityView } from '../view/identityView';\n\nimport { EncString } from '../domain/encString';\nimport { Identity as IdentityDomain } from '../domain/identity';\n\nexport class Identity {\n    static template(): Identity {\n        const req = new Identity();\n        req.title = 'Mr';\n        req.firstName = 'John';\n        req.middleName = 'William';\n        req.lastName = 'Doe';\n        req.address1 = '123 Any St';\n        req.address2 = 'Apt #123';\n        req.address3 = null;\n        req.city = 'New York';\n        req.state = 'NY';\n        req.postalCode = '10001';\n        req.country = 'US';\n        req.company = 'Acme Inc.';\n        req.email = 'john@company.com';\n        req.phone = '5555551234';\n        req.ssn = '000-123-4567';\n        req.username = 'jdoe';\n        req.passportNumber = 'US-123456789';\n        req.licenseNumber = 'D123-12-123-12333';\n        return req;\n    }\n\n    static toView(req: Identity, view = new IdentityView()) {\n        view.title = req.title;\n        view.firstName = req.firstName;\n        view.middleName = req.middleName;\n        view.lastName = req.lastName;\n        view.address1 = req.address1;\n        view.address2 = req.address2;\n        view.address3 = req.address3;\n        view.city = req.city;\n        view.state = req.state;\n        view.postalCode = req.postalCode;\n        view.country = req.country;\n        view.company = req.company;\n        view.email = req.email;\n        view.phone = req.phone;\n        view.ssn = req.ssn;\n        view.username = req.username;\n        view.passportNumber = req.passportNumber;\n        view.licenseNumber = req.licenseNumber;\n        return view;\n    }\n\n    static toDomain(req: Identity, domain = new IdentityDomain()) {\n        domain.title = req.title != null ? new EncString(req.title) : null;\n        domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n        domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n        domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n        domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n        domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n        domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n        domain.city = req.city != null ? new EncString(req.city) : null;\n        domain.state = req.state != null ? new EncString(req.state) : null;\n        domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n        domain.country = req.country != null ? new EncString(req.country) : null;\n        domain.company = req.company != null ? new EncString(req.company) : null;\n        domain.email = req.email != null ? new EncString(req.email) : null;\n        domain.phone = req.phone != null ? new EncString(req.phone) : null;\n        domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n        domain.username = req.username != null ? new EncString(req.username) : null;\n        domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n        domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n        return domain;\n    }\n\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(o?: IdentityView | IdentityDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof IdentityView) {\n            this.title = o.title;\n            this.firstName = o.firstName;\n            this.middleName = o.middleName;\n            this.lastName = o.lastName;\n            this.address1 = o.address1;\n            this.address2 = o.address2;\n            this.address3 = o.address3;\n            this.city = o.city;\n            this.state = o.state;\n            this.postalCode = o.postalCode;\n            this.country = o.country;\n            this.company = o.company;\n            this.email = o.email;\n            this.phone = o.phone;\n            this.ssn = o.ssn;\n            this.username = o.username;\n            this.passportNumber = o.passportNumber;\n            this.licenseNumber = o.licenseNumber;\n        } else {\n            this.title = o.title?.encryptedString;\n            this.firstName = o.firstName?.encryptedString;\n            this.middleName = o.middleName?.encryptedString;\n            this.lastName = o.lastName?.encryptedString;\n            this.address1 = o.address1?.encryptedString;\n            this.address2 = o.address2?.encryptedString;\n            this.address3 = o.address3?.encryptedString;\n            this.city = o.city?.encryptedString;\n            this.state = o.state?.encryptedString;\n            this.postalCode = o.postalCode?.encryptedString;\n            this.country = o.country?.encryptedString;\n            this.company = o.company?.encryptedString;\n            this.email = o.email?.encryptedString;\n            this.phone = o.phone?.encryptedString;\n            this.ssn = o.ssn?.encryptedString;\n            this.username = o.username?.encryptedString;\n            this.passportNumber = o.passportNumber?.encryptedString;\n            this.licenseNumber = o.licenseNumber?.encryptedString;\n        }\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginView } from '../view/loginView';\n\nimport { EncString } from '../domain/encString';\nimport { Login as LoginDomain } from '../domain/login';\n\nexport class Login {\n    static template(): Login {\n        const req = new Login();\n        req.uris = [];\n        req.username = 'jdoe';\n        req.password = 'myp@ssword123';\n        req.totp = 'JBSWY3DPEHPK3PXP';\n        return req;\n    }\n\n    static toView(req: Login, view = new LoginView()) {\n        if (req.uris != null) {\n            view.uris = req.uris.map(u => LoginUri.toView(u));\n        }\n        view.username = req.username;\n        view.password = req.password;\n        view.totp = req.totp;\n        return view;\n    }\n\n    static toDomain(req: Login, domain = new LoginDomain()) {\n        if (req.uris != null) {\n            domain.uris = req.uris.map(u => LoginUri.toDomain(u));\n        }\n        domain.username = req.username != null ? new EncString(req.username) : null;\n        domain.password = req.password != null ? new EncString(req.password) : null;\n        domain.totp = req.totp != null ? new EncString(req.totp) : null;\n        return domain;\n    }\n\n    uris: LoginUri[];\n    username: string;\n    password: string;\n    totp: string;\n\n    constructor(o?: LoginView | LoginDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o.uris != null) {\n            if (o instanceof LoginView) {\n                this.uris = o.uris.map(u => new LoginUri(u));\n            } else {\n                this.uris = o.uris.map(u => new LoginUri(u));\n            }\n        }\n\n        if (o instanceof LoginView) {\n            this.username = o.username;\n            this.password = o.password;\n            this.totp = o.totp;\n        } else {\n            this.username = o.username?.encryptedString;\n            this.password = o.password?.encryptedString;\n            this.totp = o.totp?.encryptedString;\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nimport { EncString } from '../domain/encString';\nimport { LoginUri as LoginUriDomain } from '../domain/loginUri';\n\nexport class LoginUri {\n    static template(): LoginUri {\n        const req = new LoginUri();\n        req.uri = 'https://google.com';\n        req.match = null;\n        return req;\n    }\n\n    static toView(req: LoginUri, view = new LoginUriView()) {\n        view.uri = req.uri;\n        view.match = req.match;\n        return view;\n    }\n\n    static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n        domain.uri = req.uri != null ? new EncString(req.uri) : null;\n        domain.match = req.match;\n        return domain;\n    }\n\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(o?: LoginUriView | LoginUriDomain) {\n        if (o == null) {\n            return;\n        }\n\n        if (o instanceof LoginUriView) {\n            this.uri = o.uri;\n        } else {\n            this.uri = o.uri?.encryptedString;\n        }\n        this.match = o.match;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteView } from '../view/secureNoteView';\n\nimport { SecureNote as SecureNoteDomain } from '../domain/secureNote';\n\nexport class SecureNote {\n    static template(): SecureNote {\n        const req = new SecureNote();\n        req.type = SecureNoteType.Generic;\n        return req;\n    }\n\n    static toView(req: SecureNote, view = new SecureNoteView()) {\n        view.type = req.type;\n        return view;\n    }\n\n    static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n        view.type = req.type;\n        return view;\n    }\n\n    type: SecureNoteType;\n\n    constructor(o?: SecureNoteView | SecureNoteDomain) {\n        if (o == null) {\n            return;\n        }\n\n        this.type = o.type;\n    }\n}\n","import { CollectionView } from '../view/collectionView';\n\nimport { Collection as CollectionDomain } from '../domain/collection';\nimport { EncString } from '../domain/encString';\n\nexport class Collection {\n    static template(): Collection {\n        const req = new Collection();\n        req.organizationId = '00000000-0000-0000-0000-000000000000';\n        req.name = 'Collection name';\n        req.externalId = null;\n        return req;\n    }\n\n    static toView(req: Collection, view = new CollectionView()) {\n        view.name = req.name;\n        view.externalId = req.externalId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        return view;\n    }\n\n    static toDomain(req: Collection, domain = new CollectionDomain()) {\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        domain.externalId = req.externalId;\n        if (domain.organizationId == null) {\n            domain.organizationId = req.organizationId;\n        }\n        return domain;\n    }\n\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView | CollectionDomain) {\n        this.organizationId = o.organizationId;\n        if (o instanceof CollectionView) {\n            this.name = o.name;\n        } else {\n            this.name = o.name?.encryptedString;\n        }\n        this.externalId = o.externalId;\n    }\n}\n","import { EventType } from '../../enums/eventType';\nimport { EventView } from '../view/eventView';\n\nexport class Event {\n    message: string;\n    appIcon: string;\n    appName: string;\n    userId: string;\n    userName: string;\n    userEmail: string;\n    date: string;\n    ip: string;\n    type: string;\n\n    constructor(event: EventView) {\n        this.message = event.humanReadableMessage;\n        this.appIcon = event.appIcon;\n        this.appName = event.appName;\n        this.userId = event.userId;\n        this.userName = event.userName;\n        this.userEmail = event.userEmail;\n        this.date = event.date;\n        this.ip = event.ip;\n        this.type = EventType[event.type];\n    }\n}\n","import { FolderView } from '../view/folderView';\n\nimport { EncString } from '../domain/encString';\nimport { Folder as FolderDomain } from '../domain/folder';\n\nexport class Folder {\n    static template(): Folder {\n        const req = new Folder();\n        req.name = 'Folder name';\n        return req;\n    }\n\n    static toView(req: Folder, view = new FolderView()) {\n        view.name = req.name;\n        return view;\n    }\n\n    static toDomain(req: Folder, domain = new FolderDomain()) {\n        domain.name = req.name != null ? new EncString(req.name) : null;\n        return domain;\n    }\n\n    name: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView | FolderDomain) {\n        if (o instanceof FolderView) {\n            this.name = o.name;\n        } else {\n            this.name = o.name?.encryptedString;\n        }\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { FileUploadService as FileUploadServiceAbstraction } from '../abstractions/fileUpload.service';\nimport { LogService } from '../abstractions/log.service';\n\nimport { FileUploadType } from '../enums/fileUploadType';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\n\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\n\nimport { AzureFileUploadService } from './azureFileUpload.service';\nimport { BitwardenFileUploadService } from './bitwardenFileUpload.service';\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n    private azureFileUploadService: AzureFileUploadService;\n    private bitwardenFileUploadService: BitwardenFileUploadService;\n\n    constructor(private logService: LogService, private apiService: ApiService) {\n        this.azureFileUploadService = new AzureFileUploadService(logService);\n        this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n    }\n\n    async uploadSendFile(uploadData: SendFileUploadDataResponse, fileName: EncString, encryptedFileData: EncArrayBuffer) {\n        try {\n            switch (uploadData.fileUploadType) {\n                case FileUploadType.Direct:\n                    await this.bitwardenFileUploadService.upload(fileName.encryptedString, encryptedFileData,\n                        fd => this.apiService.postSendFile(uploadData.sendResponse.id, uploadData.sendResponse.file.id, fd));\n                    break;\n                case FileUploadType.Azure:\n                    const renewalCallback = async () => {\n                        const renewalResponse = await this.apiService.renewSendFileUploadUrl(uploadData.sendResponse.id,\n                            uploadData.sendResponse.file.id);\n                        return renewalResponse.url;\n                    };\n                    await this.azureFileUploadService.upload(uploadData.url, encryptedFileData,\n                        renewalCallback);\n                    break;\n                default:\n                    throw new Error('Unknown file upload type');\n            }\n        } catch (e) {\n            await this.apiService.deleteSend(uploadData.sendResponse.id);\n            throw e;\n        }\n    }\n\n    async uploadCipherAttachment(admin: boolean, uploadData: AttachmentUploadDataResponse, encryptedFileName: EncString,\n        encryptedFileData: EncArrayBuffer) {\n        const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n        try {\n            switch (uploadData.fileUploadType) {\n                case FileUploadType.Direct:\n                    await this.bitwardenFileUploadService.upload(encryptedFileName.encryptedString, encryptedFileData,\n                        fd => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd));\n                    break;\n                case FileUploadType.Azure:\n                    const renewalCallback = async () => {\n                        const renewalResponse = await this.apiService.renewAttachmentUploadUrl(response.id,\n                            uploadData.attachmentId);\n                        return renewalResponse.url;\n                    };\n                    await this.azureFileUploadService.upload(uploadData.url, encryptedFileData, renewalCallback);\n                    break;\n                default:\n                    throw new Error('Unknown file upload type.');\n            }\n        } catch (e) {\n            if (admin) {\n                await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n            } else {\n                await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n            }\n            throw e;\n        }\n    }\n}\n","export enum FileUploadType {\n    Direct = 0,\n    Azure = 1,\n}\n","import { LogService } from '../abstractions/log.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n    constructor(private logService: LogService) { }\n\n    async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n        if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n            return await this.azureUploadBlob(url, data);\n        } else {\n            return await this.azureUploadBlocks(url, data, renewalCallback);\n        }\n    }\n    private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n        const urlObject = Utils.getUrl(url);\n        const headers = new Headers({\n            'x-ms-date': new Date().toUTCString(),\n            'x-ms-version': urlObject.searchParams.get('sv'),\n            'Content-Length': data.buffer.byteLength.toString(),\n            'x-ms-blob-type': 'BlockBlob',\n        });\n\n        const request = new Request(url, {\n            body: data.buffer,\n            cache: 'no-store',\n            method: 'PUT',\n            headers: headers,\n        });\n\n        const blobResponse = await fetch(request);\n\n        if (blobResponse.status !== 201) {\n            throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n        }\n    }\n    private async azureUploadBlocks(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n        const baseUrl = Utils.getUrl(url);\n        const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get('sv'));\n        let blockIndex = 0;\n        const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n        const blocksStaged: string[] = [];\n\n        if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n            throw new Error(`Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`);\n        }\n\n        try {\n            while (blockIndex < numBlocks) {\n                url = await this.renewUrlIfNecessary(url, renewalCallback);\n                const blockUrl = Utils.getUrl(url);\n                const blockId = this.encodedBlockId(blockIndex);\n                blockUrl.searchParams.append('comp', 'block');\n                blockUrl.searchParams.append('blockid', blockId);\n                const start = blockIndex * blockSize;\n                const blockData = data.buffer.slice(start, start + blockSize);\n                const blockHeaders = new Headers({\n                    'x-ms-date': new Date().toUTCString(),\n                    'x-ms-version': blockUrl.searchParams.get('sv'),\n                    'Content-Length': blockData.byteLength.toString(),\n                });\n\n                const blockRequest = new Request(blockUrl.toString(), {\n                    body: blockData,\n                    cache: 'no-store',\n                    method: 'PUT',\n                    headers: blockHeaders,\n                });\n\n                const blockResponse = await fetch(blockRequest);\n\n                if (blockResponse.status !== 201) {\n                    const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n                    this.logService.error(message + '\\n' + await blockResponse.json());\n                    throw new Error(message);\n                }\n\n                blocksStaged.push(blockId);\n                blockIndex++;\n            }\n\n            url = await this.renewUrlIfNecessary(url, renewalCallback);\n            const blockListUrl = Utils.getUrl(url);\n            const blockListXml = this.blockListXml(blocksStaged);\n            blockListUrl.searchParams.append('comp', 'blocklist');\n            const headers = new Headers({\n                'x-ms-date': new Date().toUTCString(),\n                'x-ms-version': blockListUrl.searchParams.get('sv'),\n                'Content-Length': blockListXml.length.toString(),\n            });\n\n            const request = new Request(blockListUrl.toString(), {\n                body: blockListXml,\n                cache: 'no-store',\n                method: 'PUT',\n                headers: headers,\n            });\n\n            const response = await fetch(request);\n\n            if (response.status !== 201) {\n                const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n                this.logService.error(message + '\\n' + await response.json());\n                throw new Error(message);\n            }\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    private async renewUrlIfNecessary(url: string, renewalCallback: () => Promise<string>): Promise<string> {\n        const urlObject = Utils.getUrl(url);\n        const expiry = new Date(urlObject.searchParams.get('se') ?? '');\n\n        if (isNaN(expiry.getTime())) {\n            expiry.setTime(Date.now() + 3600000);\n        }\n\n        if (expiry.getTime() < Date.now() + 1000) {\n            return await renewalCallback();\n        }\n        return url;\n    }\n\n    private encodedBlockId(blockIndex: number) {\n        // Encoded blockId max size is 64, so pre-encoding max size is 48\n        const utfBlockId = ('000000000000000000000000000000000000000000000000' + blockIndex.toString()).slice(-48);\n        return Utils.fromUtf8ToB64(utfBlockId);\n    }\n\n    private blockListXml(blockIdList: string[]) {\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n        blockIdList.forEach(blockId => {\n            xml += `<Latest>${blockId}</Latest>`;\n        });\n        xml += '</BlockList>';\n        return xml;\n    }\n\n    private getMaxBlockSize(version: string) {\n        if (Version.compare(version, '2019-12-12') >= 0) {\n            return 4000 * 1024 * 1024; // 4000 MiB\n        } else if (Version.compare(version, '2016-05-31') >= 0) {\n            return 100 * 1024 * 1024; // 100 MiB\n        } else {\n            return 4 * 1024 * 1024; // 4 MiB\n        }\n    }\n}\n\nclass Version {\n    /**\n     * Compares two Azure Versions against each other\n     * @param a Version to compare\n     * @param b Version to compare\n     * @returns a number less than zero if b is newer than a, 0 if equal,\n     * and greater than zero if a is newer than b\n     */\n    static compare(a: Required<Version> | string, b: Required<Version> | string) {\n        if (typeof (a) === 'string') {\n            a = new Version(a);\n        }\n\n        if (typeof (b) === 'string') {\n            b = new Version(b);\n        }\n\n        return a.year !== b.year ? a.year - b.year :\n            a.month !== b.month ? a.month - b.month :\n                a.day !== b.day ? a.day - b.day :\n                    0;\n    }\n    year = 0;\n    month = 0;\n    day = 0;\n\n    constructor(version: string) {\n        try {\n            const parts = version.split('-').map(v => Number.parseInt(v, 10));\n            this.year = parts[0];\n            this.month = parts[1];\n            this.day = parts[2];\n        } catch { }\n    }\n    /**\n     * Compares two Azure Versions against each other\n     * @param compareTo Version to compare against\n     * @returns a number less than zero if compareTo is newer, 0 if equal,\n     * and greater than zero if this is greater than compareTo\n     */\n    compare(compareTo: Required<Version> | string) {\n        return Version.compare(this, compareTo);\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\n\nimport { Utils } from '../misc/utils';\n\nexport class BitwardenFileUploadService\n{\n    constructor(private apiService: ApiService) { }\n\n    async upload(encryptedFileName: string, encryptedFileData: EncArrayBuffer, apiCall: (fd: FormData) => Promise<any>) {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encryptedFileData.buffer], { type: 'application/octet-stream' });\n            fd.append('data', blob, encryptedFileName);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('data', Buffer.from(encryptedFileData.buffer) as any, {\n                    filepath: encryptedFileName,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        await apiCall(fd);\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport {\n    ImportOption,\n    ImportService as ImportServiceAbstraction,\n} from '../abstractions/import.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { Utils } from '../misc/utils';\n\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KvpRequest } from '../models/request/kvpRequest';\n\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { CipherView } from '../models/view/cipherView';\n\nimport { AscendoCsvImporter } from '../importers/ascendoCsvImporter';\nimport { AvastCsvImporter } from '../importers/avastCsvImporter';\nimport { AvastJsonImporter } from '../importers/avastJsonImporter';\nimport { AviraCsvImporter } from '../importers/aviraCsvImporter';\nimport { BitwardenCsvImporter } from '../importers/bitwardenCsvImporter';\nimport { BitwardenJsonImporter } from '../importers/bitwardenJsonImporter';\nimport { BlackBerryCsvImporter } from '../importers/blackBerryCsvImporter';\nimport { BlurCsvImporter } from '../importers/blurCsvImporter';\nimport { ButtercupCsvImporter } from '../importers/buttercupCsvImporter';\nimport { ChromeCsvImporter } from '../importers/chromeCsvImporter';\nimport { ClipperzHtmlImporter } from '../importers/clipperzHtmlImporter';\nimport { CodebookCsvImporter } from '../importers/codebookCsvImporter';\nimport { DashlaneJsonImporter } from '../importers/dashlaneJsonImporter';\nimport { EncryptrCsvImporter } from '../importers/encryptrCsvImporter';\nimport { EnpassCsvImporter } from '../importers/enpassCsvImporter';\nimport { EnpassJsonImporter } from '../importers/enpassJsonImporter';\nimport { FirefoxCsvImporter } from '../importers/firefoxCsvImporter';\nimport { FSecureFskImporter } from '../importers/fsecureFskImporter';\nimport { GnomeJsonImporter } from '../importers/gnomeJsonImporter';\nimport { Importer } from '../importers/importer';\nimport { KasperskyTxtImporter } from '../importers/kasperskyTxtImporter';\nimport { KeePass2XmlImporter } from '../importers/keepass2XmlImporter';\nimport { KeePassXCsvImporter } from '../importers/keepassxCsvImporter';\nimport { KeeperCsvImporter } from '../importers/keeperCsvImporter';\nimport { LastPassCsvImporter } from '../importers/lastpassCsvImporter';\nimport { LogMeOnceCsvImporter } from '../importers/logMeOnceCsvImporter';\nimport { MeldiumCsvImporter } from '../importers/meldiumCsvImporter';\nimport { MSecureCsvImporter } from '../importers/msecureCsvImporter';\nimport { MykiCsvImporter } from '../importers/mykiCsvImporter';\nimport { NordPassCsvImporter } from '../importers/nordpassCsvImporter';\nimport { OnePassword1PifImporter } from '../importers/onepasswordImporters/onepassword1PifImporter';\nimport { OnePasswordMacCsvImporter } from '../importers/onepasswordImporters/onepasswordMacCsvImporter';\nimport { OnePasswordWinCsvImporter } from '../importers/onepasswordImporters/onepasswordWinCsvImporter';\nimport { PadlockCsvImporter } from '../importers/padlockCsvImporter';\nimport { PassKeepCsvImporter } from '../importers/passkeepCsvImporter';\nimport { PassmanJsonImporter } from '../importers/passmanJsonImporter';\nimport { PasspackCsvImporter } from '../importers/passpackCsvImporter';\nimport { PasswordAgentCsvImporter } from '../importers/passwordAgentCsvImporter';\nimport { PasswordBossJsonImporter } from '../importers/passwordBossJsonImporter';\nimport { PasswordDragonXmlImporter } from '../importers/passwordDragonXmlImporter';\nimport { PasswordSafeXmlImporter } from '../importers/passwordSafeXmlImporter';\nimport { PasswordWalletTxtImporter } from '../importers/passwordWalletTxtImporter';\nimport { RememBearCsvImporter } from '../importers/rememBearCsvImporter';\nimport { RoboFormCsvImporter } from '../importers/roboformCsvImporter';\nimport { SafeInCloudXmlImporter } from '../importers/safeInCloudXmlImporter';\nimport { SaferPassCsvImporter } from '../importers/saferpassCsvImport';\nimport { SecureSafeCsvImporter } from '../importers/secureSafeCsvImporter';\nimport { SplashIdCsvImporter } from '../importers/splashIdCsvImporter';\nimport { StickyPasswordXmlImporter } from '../importers/stickyPasswordXmlImporter';\nimport { TrueKeyCsvImporter } from '../importers/truekeyCsvImporter';\nimport { UpmCsvImporter } from '../importers/upmCsvImporter';\nimport { YotiCsvImporter } from '../importers/yotiCsvImporter';\nimport { ZohoVaultCsvImporter } from '../importers/zohoVaultCsvImporter';\n\nexport class ImportService implements ImportServiceAbstraction {\n    featuredImportOptions = [\n        { id: 'bitwardenjson', name: 'Bitwarden (json)' },\n        { id: 'bitwardencsv', name: 'Bitwarden (csv)' },\n        { id: 'lastpasscsv', name: 'LastPass (csv)' },\n        { id: 'chromecsv', name: 'Chrome (csv)' },\n        { id: 'firefoxcsv', name: 'Firefox (csv)' },\n        { id: 'keepass2xml', name: 'KeePass 2 (xml)' },\n        { id: '1password1pif', name: '1Password (1pif)' },\n        { id: 'dashlanejson', name: 'Dashlane (json)' },\n    ];\n\n    regularImportOptions: ImportOption[] = [\n        { id: 'keepassxcsv', name: 'KeePassX (csv)' },\n        { id: '1passwordwincsv', name: '1Password 6 and 7 Windows (csv)' },\n        { id: '1passwordmaccsv', name: '1Password 6 and 7 Mac (csv)' },\n        { id: 'roboformcsv', name: 'RoboForm (csv)' },\n        { id: 'keepercsv', name: 'Keeper (csv)' },\n        { id: 'enpasscsv', name: 'Enpass (csv)' },\n        { id: 'enpassjson', name: 'Enpass (json)' },\n        { id: 'safeincloudxml', name: 'SafeInCloud (xml)' },\n        { id: 'pwsafexml', name: 'Password Safe (xml)' },\n        { id: 'stickypasswordxml', name: 'Sticky Password (xml)' },\n        { id: 'msecurecsv', name: 'mSecure (csv)' },\n        { id: 'truekeycsv', name: 'True Key (csv)' },\n        { id: 'passwordbossjson', name: 'Password Boss (json)' },\n        { id: 'zohovaultcsv', name: 'Zoho Vault (csv)' },\n        { id: 'splashidcsv', name: 'SplashID (csv)' },\n        { id: 'passworddragonxml', name: 'Password Dragon (xml)' },\n        { id: 'padlockcsv', name: 'Padlock (csv)' },\n        { id: 'passboltcsv', name: 'Passbolt (csv)' },\n        { id: 'clipperzhtml', name: 'Clipperz (html)' },\n        { id: 'aviracsv', name: 'Avira (csv)' },\n        { id: 'saferpasscsv', name: 'SaferPass (csv)' },\n        { id: 'upmcsv', name: 'Universal Password Manager (csv)' },\n        { id: 'ascendocsv', name: 'Ascendo DataVault (csv)' },\n        { id: 'meldiumcsv', name: 'Meldium (csv)' },\n        { id: 'passkeepcsv', name: 'PassKeep (csv)' },\n        { id: 'operacsv', name: 'Opera (csv)' },\n        { id: 'vivaldicsv', name: 'Vivaldi (csv)' },\n        { id: 'gnomejson', name: 'GNOME Passwords and Keys/Seahorse (json)' },\n        { id: 'blurcsv', name: 'Blur (csv)' },\n        { id: 'passwordagentcsv', name: 'Password Agent (csv)' },\n        { id: 'passpackcsv', name: 'Passpack (csv)' },\n        { id: 'passmanjson', name: 'Passman (json)' },\n        { id: 'avastcsv', name: 'Avast Passwords (csv)' },\n        { id: 'avastjson', name: 'Avast Passwords (json)' },\n        { id: 'fsecurefsk', name: 'F-Secure KEY (fsk)' },\n        { id: 'kasperskytxt', name: 'Kaspersky Password Manager (txt)' },\n        { id: 'remembearcsv', name: 'RememBear (csv)' },\n        { id: 'passwordwallettxt', name: 'PasswordWallet (txt)' },\n        { id: 'mykicsv', name: 'Myki (csv)' },\n        { id: 'securesafecsv', name: 'SecureSafe (csv)' },\n        { id: 'logmeoncecsv', name: 'LogMeOnce (csv)' },\n        { id: 'blackberrycsv', name: 'BlackBerry Password Keeper (csv)' },\n        { id: 'buttercupcsv', name: 'Buttercup (csv)' },\n        { id: 'codebookcsv', name: 'Codebook (csv)' },\n        { id: 'encryptrcsv', name: 'Encryptr (csv)' },\n        { id: 'yoticsv', name: 'Yoti (csv)' },\n        { id: 'nordpasscsv', name: 'Nordpass (csv)' },\n    ];\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private apiService: ApiService, private i18nService: I18nService,\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService,\n        private cryptoService: CryptoService) { }\n\n    getImportOptions(): ImportOption[] {\n        return this.featuredImportOptions.concat(this.regularImportOptions);\n    }\n\n    async import(importer: Importer, fileContents: string, organizationId: string = null): Promise<Error> {\n        const importResult = await importer.parse(fileContents);\n        if (importResult.success) {\n            if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\n                return new Error(this.i18nService.t('importNothingError'));\n            } else if (importResult.ciphers.length > 0) {\n                const halfway = Math.floor(importResult.ciphers.length / 2);\n                const last = importResult.ciphers.length - 1;\n\n                if (this.badData(importResult.ciphers[0]) &&\n                    this.badData(importResult.ciphers[halfway]) &&\n                    this.badData(importResult.ciphers[last])) {\n                    return new Error(this.i18nService.t('importFormatError'));\n                }\n            }\n            try {\n                await this.postImport(importResult, organizationId);\n            } catch (error) {\n                const errorResponse = new ErrorResponse(error, 400);\n                return this.handleServerError(errorResponse, importResult);\n            }\n            return null;\n        } else {\n            if (!Utils.isNullOrWhitespace(importResult.errorMessage)) {\n                return new Error(importResult.errorMessage);\n            } else {\n                return new Error(this.i18nService.t('importFormatError'));\n            }\n        }\n    }\n\n    getImporter(format: string, organizationId: string = null): Importer {\n        const importer = this.getImporterInstance(format);\n        if (importer == null) {\n            return null;\n        }\n        importer.organizationId = organizationId;\n        return importer;\n    }\n\n    private getImporterInstance(format: string) {\n        if (format == null || format === '') {\n            return null;\n        }\n\n        switch (format) {\n            case 'bitwardencsv':\n                return new BitwardenCsvImporter();\n            case 'bitwardenjson':\n                return new BitwardenJsonImporter(this.cryptoService, this.i18nService);\n            case 'lastpasscsv':\n            case 'passboltcsv':\n                return new LastPassCsvImporter();\n            case 'keepassxcsv':\n                return new KeePassXCsvImporter();\n            case 'aviracsv':\n                return new AviraCsvImporter();\n            case 'blurcsv':\n                return new BlurCsvImporter();\n            case 'safeincloudxml':\n                return new SafeInCloudXmlImporter();\n            case 'padlockcsv':\n                return new PadlockCsvImporter();\n            case 'keepass2xml':\n                return new KeePass2XmlImporter();\n            case 'chromecsv':\n            case 'operacsv':\n            case 'vivaldicsv':\n                return new ChromeCsvImporter();\n            case 'firefoxcsv':\n                return new FirefoxCsvImporter();\n            case 'upmcsv':\n                return new UpmCsvImporter();\n            case 'saferpasscsv':\n                return new SaferPassCsvImporter();\n            case 'meldiumcsv':\n                return new MeldiumCsvImporter();\n            case '1password1pif':\n                return new OnePassword1PifImporter();\n            case '1passwordwincsv':\n                return new OnePasswordWinCsvImporter();\n            case '1passwordmaccsv':\n                return new OnePasswordMacCsvImporter();\n            case 'keepercsv':\n                return new KeeperCsvImporter();\n            case 'passworddragonxml':\n                return new PasswordDragonXmlImporter();\n            case 'enpasscsv':\n                return new EnpassCsvImporter();\n            case 'enpassjson':\n                return new EnpassJsonImporter();\n            case 'pwsafexml':\n                return new PasswordSafeXmlImporter();\n            case 'dashlanejson':\n                return new DashlaneJsonImporter();\n            case 'msecurecsv':\n                return new MSecureCsvImporter();\n            case 'stickypasswordxml':\n                return new StickyPasswordXmlImporter();\n            case 'truekeycsv':\n                return new TrueKeyCsvImporter();\n            case 'clipperzhtml':\n                return new ClipperzHtmlImporter();\n            case 'roboformcsv':\n                return new RoboFormCsvImporter();\n            case 'ascendocsv':\n                return new AscendoCsvImporter();\n            case 'passwordbossjson':\n                return new PasswordBossJsonImporter();\n            case 'zohovaultcsv':\n                return new ZohoVaultCsvImporter();\n            case 'splashidcsv':\n                return new SplashIdCsvImporter();\n            case 'passkeepcsv':\n                return new PassKeepCsvImporter();\n            case 'gnomejson':\n                return new GnomeJsonImporter();\n            case 'passwordagentcsv':\n                return new PasswordAgentCsvImporter();\n            case 'passpackcsv':\n                return new PasspackCsvImporter();\n            case 'passmanjson':\n                return new PassmanJsonImporter();\n            case 'avastcsv':\n                return new AvastCsvImporter();\n            case 'avastjson':\n                return new AvastJsonImporter();\n            case 'fsecurefsk':\n                return new FSecureFskImporter();\n            case 'kasperskytxt':\n                return new KasperskyTxtImporter();\n            case 'remembearcsv':\n                return new RememBearCsvImporter();\n            case 'passwordwallettxt':\n                return new PasswordWalletTxtImporter();\n            case 'mykicsv':\n                return new MykiCsvImporter();\n            case 'securesafecsv':\n                return new SecureSafeCsvImporter();\n            case 'logmeoncecsv':\n                return new LogMeOnceCsvImporter();\n            case 'blackberrycsv':\n                return new BlackBerryCsvImporter();\n            case 'buttercupcsv':\n                return new ButtercupCsvImporter();\n            case 'codebookcsv':\n                return new CodebookCsvImporter();\n            case 'encryptrcsv':\n                return new EncryptrCsvImporter();\n            case 'yoticsv':\n                return new YotiCsvImporter();\n            case 'nordpasscsv':\n                return new NordPassCsvImporter();\n            default:\n                return null;\n        }\n    }\n\n    private async postImport(importResult: ImportResult, organizationId: string = null) {\n        if (organizationId == null) {\n            const request = new ImportCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.folders != null) {\n                for (let i = 0; i < importResult.folders.length; i++) {\n                    const f = await this.folderService.encrypt(importResult.folders[i]);\n                    request.folders.push(new FolderRequest(f));\n                }\n            }\n            if (importResult.folderRelationships != null) {\n                importResult.folderRelationships.forEach(r =>\n                    request.folderRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportCiphers(request);\n        } else {\n            const request = new ImportOrganizationCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                importResult.ciphers[i].organizationId = organizationId;\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.collections != null) {\n                for (let i = 0; i < importResult.collections.length; i++) {\n                    importResult.collections[i].organizationId = organizationId;\n                    const c = await this.collectionService.encrypt(importResult.collections[i]);\n                    request.collections.push(new CollectionRequest(c));\n                }\n            }\n            if (importResult.collectionRelationships != null) {\n                importResult.collectionRelationships.forEach(r =>\n                    request.collectionRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportOrganizationCiphers(organizationId, request);\n        }\n    }\n\n    private badData(c: CipherView) {\n        return (c.name == null || c.name === '--') &&\n            (c.type === CipherType.Login && c.login != null && Utils.isNullOrWhitespace(c.login.password));\n    }\n\n    private handleServerError(errorResponse: ErrorResponse, importResult: ImportResult): Error {\n        if (errorResponse.validationErrors == null) {\n            return new Error(errorResponse.message);\n        }\n\n        let errorMessage = '';\n\n        Object.entries(errorResponse.validationErrors).forEach(([key, value], index) => {\n            let item;\n            let itemType;\n            const i = Number(key.match(/[0-9]+/)[0]);\n\n            switch (key.match(/^\\w+/)[0]) {\n                case 'Ciphers':\n                    item = importResult.ciphers[i];\n                    itemType = CipherType[item.type];\n                    break;\n                case 'Folders':\n                    item = importResult.folders[i];\n                    itemType = 'Folder';\n                    break;\n                case 'Collections':\n                    item = importResult.collections[i];\n                    itemType = 'Collection';\n                    break;\n                default:\n                    return;\n            }\n\n            if (index > 0) {\n                errorMessage += '\\n\\n';\n            }\n\n            if (itemType !== 'Folder' && itemType !== 'Collection') {\n                errorMessage += '[' + (i + 1) + '] ';\n            }\n\n            errorMessage += '[' + itemType + '] \"' + item.name + '\": ' + value;\n        });\n\n        return new Error(errorMessage);\n    }\n}\n","import { CipherRequest } from './cipherRequest';\nimport { FolderRequest } from './folderRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    folders: FolderRequest[] = [];\n    folderRelationships: KvpRequest<number, number>[] = [];\n}\n","import { CipherRequest } from './cipherRequest';\nimport { CollectionRequest } from './collectionRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportOrganizationCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    collections: CollectionRequest[] = [];\n    collectionRelationships: KvpRequest<number, number>[] = [];\n}\n","export class KvpRequest<TK, TV> {\n    key: TK;\n    value: TV;\n\n    constructor(key: TK, value: TV) {\n        this.key = key;\n        this.value = value;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 2) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const val: string = value[i + 2];\n                    const field: string = value[i + 1];\n                    if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\n                        continue;\n                    }\n\n                    const fieldLower = field.toLowerCase();\n                    if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.password = this.getValueOrDefault(val);\n                    } else if (cipher.login.username == null &&\n                        this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.username = this.getValueOrDefault(val);\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                    } else {\n                        this.processKvp(cipher, field, val);\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AvastCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.login.uris = this.makeUriArray(value.web);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.username = this.getValueOrDefault(value.login);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class AvastJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        if (results.logins != null) {\n            results.logins.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.name = this.getValueOrDefault(value.custName);\n                cipher.notes = this.getValueOrDefault(value.note);\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.password = this.getValueOrDefault(value.pwd);\n                cipher.login.username = this.getValueOrDefault(value.loginName);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (results.notes != null) {\n            results.notes.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote.type = SecureNoteType.Generic;\n                cipher.name = this.getValueOrDefault(value.label);\n                cipher.notes = this.getValueOrDefault(value.text);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (results.cards != null) {\n            results.cards.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.type = CipherType.Card;\n                cipher.name = this.getValueOrDefault(value.custName);\n                cipher.notes = this.getValueOrDefault(value.note);\n                cipher.card.cardholderName = this.getValueOrDefault(value.holderName);\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\n                cipher.card.code = this.getValueOrDefault(value.cvv);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (value.expirationDate != null) {\n                    if (value.expirationDate.month != null) {\n                        cipher.card.expMonth = value.expirationDate.month + '';\n                    }\n                    if (value.expirationDate.year != null) {\n                        cipher.card.expYear = value.expirationDate.year + '';\n                    }\n                }\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AviraCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name,\n                this.getValueOrDefault(this.nameFromUrl(value.website), '--'));\n            cipher.login.uris = this.makeUriArray(value.website);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.username) && !this.isNullOrWhitespace(value.secondary_username)) {\n                cipher.login.username = value.secondary_username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.notes = this.getValueOrDefault(value.secondary_username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherRepromptType } from '../enums/cipherRepromptType';\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.organization && !this.isNullOrWhitespace(value.collections)) {\n                const collections = (value.collections as string).split(',');\n                collections.forEach(col => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === col) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = col;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization) {\n                this.processFolder(result, value.folder);\n            }\n\n            const cipher = new CipherView();\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.favorite, '0') !== '0' ? true : false;\n            cipher.type = CipherType.Login;\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            try {\n                cipher.reprompt = parseInt(this.getValueOrDefault(value.reprompt, CipherRepromptType.None.toString()), 10);\n            } catch (e) {\n                // tslint:disable-next-line\n                console.error('Unable to parse reprompt value', e);\n                cipher.reprompt = CipherRepromptType.None;\n            }\n\n            if (!this.isNullOrWhitespace(value.fields)) {\n                const fields = this.splitNewLine(value.fields);\n                for (let i = 0; i < fields.length; i++) {\n                    if (this.isNullOrWhitespace(fields[i])) {\n                        continue;\n                    }\n\n                    const delimPosition = fields[i].lastIndexOf(': ');\n                    if (delimPosition === -1) {\n                        continue;\n                    }\n\n                    if (cipher.fields == null) {\n                        cipher.fields = [];\n                    }\n\n                    const field = new FieldView();\n                    field.name = fields[i].substr(0, delimPosition);\n                    field.value = null;\n                    field.type = FieldType.Text;\n                    if (fields[i].length > (delimPosition + 2)) {\n                        field.value = fields[i].substr(delimPosition + 2);\n                    }\n                    cipher.fields.push(field);\n                }\n            }\n\n            const valueType = value.type != null ? value.type.toLowerCase() : null;\n            switch (valueType) {\n                case 'note':\n                    cipher.type = CipherType.SecureNote;\n                    cipher.secureNote = new SecureNoteView();\n                    cipher.secureNote.type = SecureNoteType.Generic;\n                    break;\n                default:\n                    cipher.type = CipherType.Login;\n                    cipher.login = new LoginView();\n                    cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\n                    cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\n                    cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\n                    const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\n                    cipher.login.uris = this.makeUriArray(uris);\n                    break;\n            }\n\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { EncString } from '../models/domain/encString';\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherWithIds } from '../models/export/cipherWithIds';\nimport { CollectionWithId } from '../models/export/collectionWithId';\nimport { FolderWithId } from '../models/export/folderWithId';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\n\nexport class BitwardenJsonImporter extends BaseImporter implements Importer {\n    private results: any;\n    private result: ImportResult;\n\n    constructor(private cryptoService: CryptoService, private i18nService: I18nService) {\n        super();\n    }\n\n    async parse(data: string): Promise<ImportResult> {\n        this.result = new ImportResult();\n        this.results = JSON.parse(data);\n        if (this.results == null || this.results.items == null || this.results.items.length === 0) {\n            this.result.success = false;\n            return this.result;\n        }\n\n        if (this.results.encrypted) {\n            await this.parseEncrypted();\n        } else {\n            this.parseDecrypted();\n        }\n\n        return this.result;\n    }\n\n    private async parseEncrypted() {\n        if (this.results.encKeyValidation_DO_NOT_EDIT != null) {\n            const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n            const encKeyValidation = new EncString(this.results.encKeyValidation_DO_NOT_EDIT);\n            const encKeyValidationDecrypt = await this.cryptoService.decryptToUtf8(encKeyValidation, orgKey);\n            if (encKeyValidationDecrypt === null) {\n                this.result.success = false;\n                this.result.errorMessage = this.i18nService.t('importEncKeyError');\n                return;\n            }\n        }\n\n        const groupingsMap = new Map<string, number>();\n\n        if (this.organization && this.results.collections != null) {\n            for (const c of this.results.collections as CollectionWithId[]) {\n                const collection = CollectionWithId.toDomain(c);\n                if (collection != null) {\n                    collection.id = null;\n                    collection.organizationId = this.organizationId;\n                    const view = await collection.decrypt();\n                    groupingsMap.set(c.id, this.result.collections.length);\n                    this.result.collections.push(view);\n                }\n            }\n        } else if (!this.organization && this.results.folders != null) {\n            for (const f of this.results.folders as FolderWithId[]) {\n                const folder = FolderWithId.toDomain(f);\n                if (folder != null) {\n                    folder.id = null;\n                    const view = await folder.decrypt();\n                    groupingsMap.set(f.id, this.result.folders.length);\n                    this.result.folders.push(view);\n                }\n            }\n        }\n\n        for (const c of this.results.items as CipherWithIds[]) {\n            const cipher = CipherWithIds.toDomain(c);\n            // reset ids incase they were set for some reason\n            cipher.id = null;\n            cipher.folderId = null;\n            cipher.organizationId = this.organizationId;\n            cipher.collectionIds = null;\n\n            // make sure password history is limited\n            if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n                cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n            }\n\n            if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n                this.result.folderRelationships.push([this.result.ciphers.length, groupingsMap.get(c.folderId)]);\n            } else if (this.organization && c.collectionIds != null) {\n                c.collectionIds.forEach(cId => {\n                    if (groupingsMap.has(cId)) {\n                        this.result.collectionRelationships.push([this.result.ciphers.length, groupingsMap.get(cId)]);\n                    }\n                });\n            }\n\n            const view = await cipher.decrypt();\n            this.cleanupCipher(view);\n            this.result.ciphers.push(view);\n        }\n\n        this.result.success = true;\n    }\n\n    private parseDecrypted() {\n        const groupingsMap = new Map<string, number>();\n        if (this.organization && this.results.collections != null) {\n            this.results.collections.forEach((c: CollectionWithId) => {\n                const collection = CollectionWithId.toView(c);\n                if (collection != null) {\n                    collection.id = null;\n                    collection.organizationId = null;\n                    groupingsMap.set(c.id, this.result.collections.length);\n                    this.result.collections.push(collection);\n                }\n            });\n        } else if (!this.organization && this.results.folders != null) {\n            this.results.folders.forEach((f: FolderWithId) => {\n                const folder = FolderWithId.toView(f);\n                if (folder != null) {\n                    folder.id = null;\n                    groupingsMap.set(f.id, this.result.folders.length);\n                    this.result.folders.push(folder);\n                }\n            });\n        }\n\n        this.results.items.forEach((c: CipherWithIds) => {\n            const cipher = CipherWithIds.toView(c);\n            // reset ids incase they were set for some reason\n            cipher.id = null;\n            cipher.folderId = null;\n            cipher.organizationId = null;\n            cipher.collectionIds = null;\n\n            // make sure password history is limited\n            if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n                cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n            }\n\n            if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n                this.result.folderRelationships.push([this.result.ciphers.length, groupingsMap.get(c.folderId)]);\n            } else if (this.organization && c.collectionIds != null) {\n                c.collectionIds.forEach(cId => {\n                    if (groupingsMap.has(cId)) {\n                        this.result.collectionRelationships.push([this.result.ciphers.length, groupingsMap.get(cId)]);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n\n        this.result.success = true;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlackBerryCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.grouping === 'list') {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.favorite = value.fav === '1';\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.notes = this.getValueOrDefault(value.extra);\n            if (value.grouping !== 'note') {\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.username = this.getValueOrDefault(value.username);\n            }\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlurCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.label === 'null') {\n                value.label = null;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.label,\n                this.getValueOrDefault(this.nameFromUrl(value.domain), '--'));\n            cipher.login.uris = this.makeUriArray(value.domain);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\n                cipher.login.username = value.username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.email);\n                cipher.notes = this.getValueOrDefault(value.username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nconst OfficialProps = [\n    '!group_id', '!group_name', 'title', 'username', 'password', 'URL', 'id',\n];\n\nexport class ButtercupCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValueOrDefault(value['!group_name']));\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.title, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n\n            let processingCustomFields = false;\n            for (const prop in value) {\n                if (value.hasOwnProperty(prop)) {\n                    if (!processingCustomFields && OfficialProps.indexOf(prop) === -1) {\n                        processingCustomFields = true;\n                    }\n                    if (processingCustomFields) {\n                        this.processKvp(cipher, prop, value[prop]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const textarea = doc.querySelector('textarea');\n        if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\n            result.errorMessage = 'Missing textarea.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const entries = JSON.parse(textarea.textContent);\n        entries.forEach((entry: any) => {\n            const cipher = this.initLoginCipher();\n            if (!this.isNullOrWhitespace(entry.label)) {\n                cipher.name = entry.label.split(' ')[0];\n            }\n            if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\n                cipher.notes = entry.data.notes.split('\\\\n').join('\\n');\n            }\n\n            if (entry.currentVersion != null && entry.currentVersion.fields != null) {\n                for (const property in entry.currentVersion.fields) {\n                    if (!entry.currentVersion.fields.hasOwnProperty(property)) {\n                        continue;\n                    }\n\n                    const field = entry.currentVersion.fields[property];\n                    const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\n                    switch (actionType) {\n                        case 'password':\n                            cipher.login.password = this.getValueOrDefault(field.value);\n                            break;\n                        case 'email':\n                        case 'username':\n                        case 'user':\n                        case 'name':\n                            cipher.login.username = this.getValueOrDefault(field.value);\n                            break;\n                        case 'url':\n                            cipher.login.uris = this.makeUriArray(field.value);\n                            break;\n                        default:\n                            const labelLower = field.label != null ? field.label.toLowerCase() : null;\n                            if (cipher.login.password == null && this.passwordFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.password = this.getValueOrDefault(field.value);\n                            } else if (cipher.login.username == null &&\n                                this.usernameFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.username = this.getValueOrDefault(field.value);\n                            } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                                this.uriFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.uris = this.makeUriArray(field.value);\n                            } else {\n                                this.processKvp(cipher, field.label, field.value);\n                            }\n                            break;\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class CodebookCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValueOrDefault(value.Category));\n\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite) === 'True';\n            cipher.name = this.getValueOrDefault(value.Entry, '--');\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.login.username = this.getValueOrDefault(value.Username, value.Email);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.totp = this.getValueOrDefault(value.TOTP);\n            cipher.login.uris = this.makeUriArray(value.Website);\n\n            if (!this.isNullOrWhitespace(value.Username)) {\n                this.processKvp(cipher, 'Email', value.Email);\n            }\n            this.processKvp(cipher, 'Phone', value.Phone);\n            this.processKvp(cipher, 'PIN', value.PIN);\n            this.processKvp(cipher, 'Account', value.Account);\n            this.processKvp(cipher, 'Date', value.Date);\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst HandledResults = new Set(['ADDRESS', 'AUTHENTIFIANT', 'BANKSTATEMENT', 'IDCARD', 'IDENTITY',\n    'PAYMENTMEANS_CREDITCARD', 'PAYMENTMEAN_PAYPAL', 'EMAIL']);\n\nexport class DashlaneJsonImporter extends BaseImporter implements Importer {\n    private result: ImportResult;\n\n    parse(data: string): Promise<ImportResult> {\n        this.result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        if (results.ADDRESS != null) {\n            this.processAddress(results.ADDRESS);\n        }\n        if (results.AUTHENTIFIANT != null) {\n            this.processAuth(results.AUTHENTIFIANT);\n        }\n        if (results.BANKSTATEMENT != null) {\n            this.processNote(results.BANKSTATEMENT, 'BankAccountName');\n        }\n        if (results.IDCARD != null) {\n            this.processNote(results.IDCARD, 'Fullname');\n        }\n        if (results.PAYMENTMEANS_CREDITCARD != null) {\n            this.processCard(results.PAYMENTMEANS_CREDITCARD);\n        }\n        if (results.IDENTITY != null) {\n            this.processIdentity(results.IDENTITY);\n        }\n\n        for (const key in results) {\n            if (results.hasOwnProperty(key) && !HandledResults.has(key)) {\n                this.processNote(results[key], null, 'Generic Note');\n            }\n        }\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    private processAuth(results: any[]) {\n        results.forEach((credential: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(credential.title);\n\n            cipher.login.username = this.getValueOrDefault(credential.login,\n                this.getValueOrDefault(credential.secondaryLogin));\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.domain);\n            cipher.notes += this.getValueOrDefault(credential.note, '');\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processIdentity(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.fullName, '');\n            const nameParts = cipher.name.split(' ');\n            if (nameParts.length > 0) {\n                cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n            }\n            if (nameParts.length === 2) {\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n            } else if (nameParts.length === 3) {\n                cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[2]);\n            }\n            cipher.identity.username = this.getValueOrDefault(obj.pseudo);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processAddress(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.addressName);\n            cipher.identity.address1 = this.getValueOrDefault(obj.addressFull);\n            cipher.identity.city = this.getValueOrDefault(obj.city);\n            cipher.identity.state = this.getValueOrDefault(obj.state);\n            cipher.identity.postalCode = this.getValueOrDefault(obj.zipcode);\n            cipher.identity.country = this.getValueOrDefault(obj.country);\n            if (cipher.identity.country != null) {\n                cipher.identity.country = cipher.identity.country.toUpperCase();\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processCard(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.card = new CardView();\n            cipher.type = CipherType.Card;\n            cipher.name = this.getValueOrDefault(obj.bank);\n            cipher.card.number = this.getValueOrDefault(obj.cardNumber);\n            cipher.card.brand = this.getCardBrand(cipher.card.number);\n            cipher.card.cardholderName = this.getValueOrDefault(obj.owner);\n            if (!this.isNullOrWhitespace(cipher.card.brand)) {\n                if (this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name = cipher.card.brand;\n                } else {\n                    cipher.name += (' - ' + cipher.card.brand);\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processNote(results: any[], nameProperty: string, name: string = null) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.secureNote = new SecureNoteView();\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote.type = SecureNoteType.Generic;\n            if (name != null) {\n                cipher.name = name;\n            } else {\n                cipher.name = this.getValueOrDefault(obj[nameProperty]);\n            }\n            for (const key in obj) {\n                if (obj.hasOwnProperty(key) && key !== nameProperty) {\n                    this.processKvp(cipher, key, obj[key].toString());\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class EncryptrCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Label, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            const text = this.getValueOrDefault(value.Text);\n            if (!this.isNullOrWhitespace(text)) {\n                if (this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = text;\n                } else {\n                    cipher.notes += ('\\n\\n' + text);\n                }\n            }\n\n            const type = value['Entry Type'];\n            if (type === 'Password') {\n                cipher.login.username = this.getValueOrDefault(value.Username);\n                cipher.login.password = this.getValueOrDefault(value.Password);\n                cipher.login.uris = this.makeUriArray(value['Site URL']);\n            } else if (type === 'Credit Card') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value['Name on card']);\n                cipher.card.number = this.getValueOrDefault(value['Card Number']);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.CVV);\n                const expiry = this.getValueOrDefault(value.Expiry);\n                if (!this.isNullOrWhitespace(expiry)) {\n                    const expParts = expiry.split('/');\n                    if (expParts.length > 1) {\n                        cipher.card.expMonth = parseInt(expParts[0], null).toString();\n                        cipher.card.expYear = (2000 + parseInt(expParts[1], null)).toString();\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let firstRow = true;\n        results.forEach(value => {\n            if (value.length < 2 || (firstRow && (value[0] === 'Title' || value[0] === 'title'))) {\n                firstRow = false;\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length === 2 || (!this.containsField(value, 'username') &&\n                !this.containsField(value, 'password') && !this.containsField(value, 'email') &&\n                !this.containsField(value, 'url'))) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            }\n\n            if (this.containsField(value, 'cardholder') && this.containsField(value, 'number') &&\n                this.containsField(value, 'expiry date')) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            }\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const fieldValue: string = value[i + 2];\n                    if (this.isNullOrWhitespace(fieldValue)) {\n                        continue;\n                    }\n\n                    const fieldName: string = value[i + 1];\n                    const fieldNameLower = fieldName.toLowerCase();\n\n                    if (cipher.type === CipherType.Login) {\n                        if (fieldNameLower === 'url' && (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n                            cipher.login.uris = this.makeUriArray(fieldValue);\n                            continue;\n                        } else if ((fieldNameLower === 'username' || fieldNameLower === 'email') &&\n                            this.isNullOrWhitespace(cipher.login.username)) {\n                            cipher.login.username = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                            cipher.login.password = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                            cipher.login.totp = fieldValue;\n                            continue;\n                        }\n                    } else if (cipher.type === CipherType.Card) {\n                        if (fieldNameLower === 'cardholder' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                            cipher.card.cardholderName = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'number' && this.isNullOrWhitespace(cipher.card.number)) {\n                            cipher.card.number = fieldValue;\n                            cipher.card.brand = this.getCardBrand(fieldValue);\n                            continue;\n                        } else if (fieldNameLower === 'cvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                            cipher.card.code = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'expiry date' && this.isNullOrWhitespace(cipher.card.expMonth) &&\n                            this.isNullOrWhitespace(cipher.card.expYear)) {\n                            if (this.setCardExpiration(cipher, fieldValue)) {\n                                continue;\n                            }\n                        } else if (fieldNameLower === 'type') {\n                            // Skip since brand was determined from number above\n                            continue;\n                        }\n                    }\n\n                    this.processKvp(cipher, fieldName, fieldValue);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private containsField(fields: any[], name: string) {\n        if (fields == null || name == null) {\n            return false;\n        }\n        return fields.filter(f => !this.isNullOrWhitespace(f) &&\n            f.toLowerCase() === name.toLowerCase()).length > 0;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\n\nexport class EnpassJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null || results.items.length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, string>();\n        const foldersIndexMap = new Map<string, number>();\n        const folderTree = this.buildFolderTree(results.folders);\n        this.flattenFolderTree(null, folderTree, foldersMap);\n        foldersMap.forEach((val, key) => {\n            foldersIndexMap.set(key, result.folders.length);\n            const f = new FolderView();\n            f.name = val;\n            result.folders.push(f);\n        });\n\n        results.items.forEach((item: any) => {\n            if (item.folders != null && item.folders.length > 0 && foldersIndexMap.has(item.folders[0])) {\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(item.folders[0])]);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(item.title);\n            cipher.favorite = item.favorite > 0;\n\n            if (item.template_type != null && item.fields != null && item.fields.length > 0) {\n                if (item.template_type.indexOf('login.') === 0 || item.template_type.indexOf('password.') === 0) {\n                    this.processLogin(cipher, item.fields);\n                } else if (item.template_type.indexOf('creditcard.') === 0) {\n                    this.processCard(cipher, item.fields);\n                } else if (item.template_type.indexOf('identity.') < 0 &&\n                    item.fields.some((f: any) => f.type === 'password' && !this.isNullOrWhitespace(f.value))) {\n                    this.processLogin(cipher, item.fields);\n                } else {\n                    this.processNote(cipher, item.fields);\n                }\n            }\n\n            cipher.notes += ('\\n' + this.getValueOrDefault(item.note, ''));\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private processLogin(cipher: CipherView, fields: any[]) {\n        const urls: string[] = [];\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n\n            if ((field.type === 'username' || field.type === 'email') &&\n                this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = field.value;\n            } else if (field.type === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                cipher.login.password = field.value;\n            } else if (field.type === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                cipher.login.totp = field.value;\n            } else if (field.type === 'url') {\n                urls.push(field.value);\n            } else {\n                this.processKvp(cipher, field.label, field.value,\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n            }\n        });\n        cipher.login.uris = this.makeUriArray(urls);\n    }\n\n    private processCard(cipher: CipherView, fields: any[]) {\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section' || field.type === 'ccType') {\n                return;\n            }\n\n            if (field.type === 'ccName' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                cipher.card.cardholderName = field.value;\n            } else if (field.type === 'ccNumber' && this.isNullOrWhitespace(cipher.card.number)) {\n                cipher.card.number = field.value;\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n            } else if (field.type === 'ccCvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                cipher.card.code = field.value;\n            } else if (field.type === 'ccExpiry' && this.isNullOrWhitespace(cipher.card.expYear)) {\n                if (!this.setCardExpiration(cipher, field.value)) {\n                    this.processKvp(cipher, field.label, field.value,\n                        field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n                }\n            } else {\n                this.processKvp(cipher, field.label, field.value,\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n            }\n        });\n    }\n\n    private processNote(cipher: CipherView, fields: any[]) {\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n            this.processKvp(cipher, field.label, field.value,\n                field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n        });\n    }\n\n    private buildFolderTree(folders: any[]): any[] {\n        if (folders == null) {\n            return [];\n        }\n        const folderTree: any[] = [];\n        const map = new Map<string, any>([]);\n        folders.forEach((obj: any) => {\n            map.set(obj.uuid, obj);\n            obj.children = [];\n        });\n        folders.forEach((obj: any) => {\n            if (obj.parent_uuid != null && obj.parent_uuid !== '' && map.has(obj.parent_uuid)) {\n                map.get(obj.parent_uuid).children.push(obj);\n            } else {\n                folderTree.push(obj);\n            }\n        });\n        return folderTree;\n    }\n\n    private flattenFolderTree(titlePrefix: string, tree: any[], map: Map<string, string>) {\n        if (tree == null) {\n            return;\n        }\n        tree.forEach((f: any) => {\n            if (f.title != null && f.title.trim() !== '') {\n                let title = f.title.trim();\n                if (titlePrefix != null && titlePrefix.trim() !== '') {\n                    title = titlePrefix + '/' + title;\n                }\n                map.set(f.uuid, title);\n                if (f.children != null && f.children.length !== 0) {\n                    this.flattenFolderTree(title, f.children, map);\n                }\n            }\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.filter(value => {\n            return value.url !== 'chrome://FirefoxAccounts';\n        }).forEach(value => {\n            const cipher = this.initLoginCipher();\n            const url = this.getValueOrDefault(value.url, this.getValueOrDefault(value.hostname));\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(url), '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class FSecureFskImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.data == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        for (const key in results.data) {\n            if (!results.data.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const value = results.data[key];\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.service);\n            cipher.notes = this.getValueOrDefault(value.notes);\n\n            if (value.style === 'website') {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.uris = this.makeUriArray(value.url);\n            } else if (value.style === 'creditcard') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.username);\n                cipher.card.number = this.getValueOrDefault(value.creditNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.creditCvv);\n                if (!this.isNullOrWhitespace(value.creditExpiry)) {\n                    if (!this.setCardExpiration(cipher, value.creditExpiry)) {\n                        this.processKvp(cipher, 'Expiration', value.creditExpiry);\n                    }\n                }\n                if (!this.isNullOrWhitespace(value.password)) {\n                    this.processKvp(cipher, 'PIN', value.password);\n                }\n            } else {\n                continue;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || Object.keys(results).length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        for (const keyRing in results) {\n            if (!results.hasOwnProperty(keyRing) || this.isNullOrWhitespace(keyRing) ||\n                results[keyRing].length === 0) {\n                continue;\n            }\n\n            results[keyRing].forEach((value: any) => {\n                if (this.isNullOrWhitespace(value.display_name) || value.display_name.indexOf('http') !== 0) {\n                    return;\n                }\n\n                this.processFolder(result, keyRing);\n                const cipher = this.initLoginCipher();\n                cipher.name = value.display_name.replace('http://', '').replace('https://', '');\n                if (cipher.name.length > 30) {\n                    cipher.name = cipher.name.substring(0, 30);\n                }\n                cipher.login.password = this.getValueOrDefault(value.secret);\n                cipher.login.uris = this.makeUriArray(value.display_name);\n\n                if (value.attributes != null) {\n                    cipher.login.username = value.attributes != null ?\n                        this.getValueOrDefault(value.attributes.username_value) : null;\n                    for (const attr in value.attributes) {\n                        if (!value.attributes.hasOwnProperty(attr) || attr === 'username_value' ||\n                            attr === 'xdg:schema') {\n                            continue;\n                        }\n                        this.processKvp(cipher, attr, value.attributes[attr]);\n                    }\n                }\n\n                this.convertToNoteIfNeeded(cipher);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nconst NotesHeader = 'Notes\\n\\n';\nconst ApplicationsHeader = 'Applications\\n\\n';\nconst WebsitesHeader = 'Websites\\n\\n';\nconst Delimiter = '\\n---\\n';\n\nexport class KasperskyTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n\n        let notesData: string;\n        let applicationsData: string;\n        let websitesData: string;\n        let workingData = this.splitNewLine(data).join('\\n');\n\n        if (workingData.indexOf(NotesHeader) !== -1) {\n            const parts = workingData.split(NotesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                notesData = parts[1];\n            }\n        }\n        if (workingData.indexOf(ApplicationsHeader) !== -1) {\n            const parts = workingData.split(ApplicationsHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                applicationsData = parts[1];\n            }\n        }\n        if (workingData.indexOf(WebsitesHeader) === 0) {\n            const parts = workingData.split(WebsitesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                websitesData = parts[1];\n            }\n        }\n\n        const notes = this.parseDataCategory(notesData);\n        const applications = this.parseDataCategory(applicationsData);\n        const websites = this.parseDataCategory(websitesData);\n\n        notes.forEach(n => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(n.get('Name'));\n            cipher.notes = this.getValueOrDefault(n.get('Text'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        websites.concat(applications).forEach(w => {\n            const cipher = this.initLoginCipher();\n            const nameKey = w.has('Website name') ? 'Website name' : 'Application';\n            cipher.name = this.getValueOrDefault(w.get(nameKey), '');\n            if (!this.isNullOrWhitespace(w.get('Login name'))) {\n                if (!this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name += ': ';\n                }\n                cipher.name += w.get('Login name');\n            }\n            cipher.notes = this.getValueOrDefault(w.get('Comment'));\n            if (w.has('Website URL')) {\n                cipher.login.uris = this.makeUriArray(w.get('Website URL'));\n            }\n            cipher.login.username = this.getValueOrDefault(w.get('Login'));\n            cipher.login.password = this.getValueOrDefault(w.get('Password'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseDataCategory(data: string): Map<string, string>[] {\n        if (this.isNullOrWhitespace(data) || data.indexOf(Delimiter) === -1) {\n            return [];\n        }\n        const items: Map<string, string>[] = [];\n        data.split(Delimiter).forEach(p => {\n            if (p.indexOf('\\n') === -1) {\n                return;\n            }\n            const item = new Map<string, string>();\n            let itemComment: string;\n            let itemCommentKey: string;\n            p.split('\\n').forEach(l => {\n                if (itemComment != null) {\n                    itemComment += ('\\n' + l);\n                    return;\n                }\n                const colonIndex = l.indexOf(':');\n                let key: string;\n                let val: string;\n                if (colonIndex === -1) {\n                    return;\n                } else {\n                    key = l.substring(0, colonIndex);\n                    if (l.length > colonIndex + 1) {\n                        val = l.substring(colonIndex + 2);\n                    }\n                }\n                if (key != null) {\n                    item.set(key, val);\n                }\n                if (key === 'Comment' || key === 'Text') {\n                    itemComment = val;\n                    itemCommentKey = key;\n                }\n            });\n            if (itemComment != null && itemCommentKey != null) {\n                item.set(itemCommentKey, itemComment);\n            }\n            if (item.size === 0) {\n                return;\n            }\n            items.push(item);\n        });\n        return items;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { FieldType } from '../enums/fieldType';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): Promise<ImportResult> {\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        const rootGroup = doc.querySelector('KeePassFile > Root > Group');\n        if (rootGroup == null) {\n            this.result.errorMessage = 'Missing `KeePassFile > Root > Group` node.';\n            this.result.success = false;\n            return Promise.resolve(this.result);\n        }\n\n        this.traverse(rootGroup, true, '');\n\n        if (this.organization) {\n            this.moveFoldersToCollections(this.result);\n        }\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\n        const folderIndex = this.result.folders.length;\n        let groupName = groupPrefixName;\n\n        if (!isRootNode) {\n            if (groupName !== '') {\n                groupName += '/';\n            }\n            const nameEl = this.querySelectorDirectChild(node, 'Name');\n            groupName += nameEl == null ? '-' : nameEl.textContent;\n            const folder = new FolderView();\n            folder.name = groupName;\n            this.result.folders.push(folder);\n        }\n\n        this.querySelectorAllDirectChild(node, 'Entry').forEach(entry => {\n            const cipherIndex = this.result.ciphers.length;\n\n            const cipher = this.initLoginCipher();\n            this.querySelectorAllDirectChild(entry, 'String').forEach(entryString => {\n                const valueEl = this.querySelectorDirectChild(entryString, 'Value');\n                const value = valueEl != null ? valueEl.textContent : null;\n                if (this.isNullOrWhitespace(value)) {\n                    return;\n                }\n                const keyEl = this.querySelectorDirectChild(entryString, 'Key');\n                const key = keyEl != null ? keyEl.textContent : null;\n\n                if (key === 'URL') {\n                    cipher.login.uris = this.makeUriArray(value);\n                } else if (key === 'UserName') {\n                    cipher.login.username = value;\n                } else if (key === 'Password') {\n                    cipher.login.password = value;\n                }  else if (key === 'otp') {\n                    cipher.login.totp = value.replace('key=', '');\n                } else if (key === 'Title') {\n                    cipher.name = value;\n                } else if (key === 'Notes') {\n                    cipher.notes += (value + '\\n');\n                } else {\n                    let type = FieldType.Text;\n                    const attrs = (valueEl.attributes as any);\n                    if (attrs.length > 0 && attrs.ProtectInMemory != null &&\n                        attrs.ProtectInMemory.value === 'True') {\n                        type = FieldType.Hidden;\n                    }\n                    this.processKvp(cipher, key, value, type);\n                }\n            });\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n\n            if (!isRootNode) {\n                this.result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        this.querySelectorAllDirectChild(node, 'Group').forEach(group => {\n            this.traverse(group, false, groupName);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(value.Title)) {\n                return;\n            }\n\n            value.Group = !this.isNullOrWhitespace(value.Group) && value.Group.startsWith('Root/') ?\n                value.Group.replace('Root/', '') : value.Group;\n            const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\n            this.processFolder(result, groupName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(value.Title, '--');\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 6) {\n                return;\n            }\n\n            this.processFolder(result, value[0]);\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[5]) + '\\n';\n            cipher.name = this.getValueOrDefault(value[1], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[4]);\n\n            if (value.length > 7) {\n                // we have some custom fields.\n                for (let i = 7; i < value.length; i = i + 2) {\n                    this.processKvp(cipher, value[i], value[i + 1]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\nimport { IdentityView } from '../models/view/identityView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach((value, index) => {\n            const cipherIndex = result.ciphers.length;\n            let folderIndex = result.folders.length;\n            let grouping = value.grouping;\n            if (grouping != null) {\n                grouping = grouping.replace(/\\\\/g, '/').replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, '');\n            }\n            const hasFolder = this.getValueOrDefault(grouping, '(none)') !== '(none)';\n            let addFolder = hasFolder;\n\n            if (hasFolder) {\n                for (let i = 0; i < result.folders.length; i++) {\n                    if (result.folders[i].name === grouping) {\n                        addFolder = false;\n                        folderIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            const cipher = this.buildBaseCipher(value);\n            if (cipher.type === CipherType.Login) {\n                cipher.notes = this.getValueOrDefault(value.extra);\n                cipher.login = new LoginView();\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.totp = this.getValueOrDefault(value.totp);\n            } else if (cipher.type === CipherType.SecureNote) {\n                this.parseSecureNote(value, cipher);\n            } else if (cipher.type === CipherType.Card) {\n                cipher.card = this.parseCard(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n            } else if (cipher.type === CipherType.Identity) {\n                cipher.identity = this.parseIdentity(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n                if (!this.isNullOrWhitespace(value.ccnum)) {\n                    // there is a card on this identity too\n                    const cardCipher = this.buildBaseCipher(value);\n                    cardCipher.identity = null;\n                    cardCipher.type = CipherType.Card;\n                    cardCipher.card = this.parseCard(value);\n                    result.ciphers.push(cardCipher);\n                }\n            }\n\n            result.ciphers.push(cipher);\n\n            if (addFolder) {\n                const f = new FolderView();\n                f.name = grouping;\n                result.folders.push(f);\n            }\n            if (hasFolder) {\n                result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private buildBaseCipher(value: any) {\n        const cipher = new CipherView();\n        if (value.hasOwnProperty('profilename') && value.hasOwnProperty('profilelanguage')) {\n            // form fill\n            cipher.favorite = false;\n            cipher.name = this.getValueOrDefault(value.profilename, '--');\n            cipher.type = CipherType.Card;\n\n            if (!this.isNullOrWhitespace(value.title) || !this.isNullOrWhitespace(value.firstname) ||\n                !this.isNullOrWhitespace(value.lastname) || !this.isNullOrWhitespace(value.address1) ||\n                !this.isNullOrWhitespace(value.phone) || !this.isNullOrWhitespace(value.username) ||\n                !this.isNullOrWhitespace(value.email)) {\n                cipher.type = CipherType.Identity;\n            }\n        } else {\n            // site or secure note\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, '0') === '1';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.type = value.url === 'http://sn' ? CipherType.SecureNote : CipherType.Login;\n        }\n        return cipher;\n    }\n\n    private parseCard(value: any): CardView {\n        const card = new CardView();\n        card.cardholderName = this.getValueOrDefault(value.ccname);\n        card.number = this.getValueOrDefault(value.ccnum);\n        card.code = this.getValueOrDefault(value.cccsc);\n        card.brand = this.getCardBrand(value.ccnum);\n\n        if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf('-') > -1) {\n            const ccexpParts = (value.ccexp as string).split('-');\n            if (ccexpParts.length > 1) {\n                card.expYear = ccexpParts[0];\n                card.expMonth = ccexpParts[1];\n                if (card.expMonth.length === 2 && card.expMonth[0] === '0') {\n                    card.expMonth = card.expMonth[1];\n                }\n            }\n        }\n\n        return card;\n    }\n\n    private parseIdentity(value: any): IdentityView {\n        const identity = new IdentityView();\n        identity.title = this.getValueOrDefault(value.title);\n        identity.firstName = this.getValueOrDefault(value.firstname);\n        identity.middleName = this.getValueOrDefault(value.middlename);\n        identity.lastName = this.getValueOrDefault(value.lastname);\n        identity.username = this.getValueOrDefault(value.username);\n        identity.company = this.getValueOrDefault(value.company);\n        identity.ssn = this.getValueOrDefault(value.ssn);\n        identity.address1 = this.getValueOrDefault(value.address1);\n        identity.address2 = this.getValueOrDefault(value.address2);\n        identity.address3 = this.getValueOrDefault(value.address3);\n        identity.city = this.getValueOrDefault(value.city);\n        identity.state = this.getValueOrDefault(value.state);\n        identity.postalCode = this.getValueOrDefault(value.zip);\n        identity.country = this.getValueOrDefault(value.country);\n        identity.email = this.getValueOrDefault(value.email);\n        identity.phone = this.getValueOrDefault(value.phone);\n\n        if (!this.isNullOrWhitespace(identity.title)) {\n            identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\n        }\n\n        return identity;\n    }\n\n    private parseSecureNote(value: any, cipher: CipherView) {\n        const extraParts = this.splitNewLine(value.extra);\n        let processedNote = false;\n\n        if (extraParts.length) {\n            const typeParts = extraParts[0].split(':');\n            if (typeParts.length > 1 && typeParts[0] === 'NoteType' &&\n                (typeParts[1] === 'Credit Card' || typeParts[1] === 'Address')) {\n                if (typeParts[1] === 'Credit Card') {\n                    const mappedData = this.parseSecureNoteMapping<CardView>(cipher, extraParts, {\n                        'Number': 'number',\n                        'Name on Card': 'cardholderName',\n                        'Security Code': 'code',\n                        // LP provides date in a format like 'June,2020'\n                        // Store in expMonth, then parse and modify\n                        'Expiration Date': 'expMonth',\n                    });\n\n                    if (this.isNullOrWhitespace(mappedData.expMonth) || mappedData.expMonth === ',') {\n                        // No expiration data\n                        mappedData.expMonth = undefined;\n                    } else {\n                        const [monthString, year] = mappedData.expMonth.split(',');\n                        // Parse month name into number\n                        if (!this.isNullOrWhitespace(monthString)) {\n                            const month = new Date(Date.parse(monthString.trim() + ' 1, 2012')).getMonth() + 1;\n                            if (isNaN(month)) {\n                                mappedData.expMonth = undefined;\n                            } else {\n                                mappedData.expMonth = month.toString();\n                            }\n                        } else {\n                            mappedData.expMonth = undefined;\n                        }\n                        if (!this.isNullOrWhitespace(year)) {\n                            mappedData.expYear = year;\n                        }\n                    }\n\n                    cipher.type = CipherType.Card;\n                    cipher.card = mappedData;\n                } else if (typeParts[1] === 'Address') {\n                    const mappedData = this.parseSecureNoteMapping<IdentityView>(cipher, extraParts, {\n                        'Title': 'title',\n                        'First Name': 'firstName',\n                        'Last Name': 'lastName',\n                        'Middle Name': 'middleName',\n                        'Company': 'company',\n                        'Address 1': 'address1',\n                        'Address 2': 'address2',\n                        'Address 3': 'address3',\n                        'City / Town': 'city',\n                        'State': 'state',\n                        'Zip / Postal Code': 'postalCode',\n                        'Country': 'country',\n                        'Email Address': 'email',\n                        'Username': 'username',\n                    });\n                    cipher.type = CipherType.Identity;\n                    cipher.identity = mappedData;\n                }\n                processedNote = true;\n            }\n        }\n\n        if (!processedNote) {\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n            cipher.notes = this.getValueOrDefault(value.extra);\n        }\n    }\n\n    private parseSecureNoteMapping<T>(cipher: CipherView, extraParts: string[], map: any): T {\n        const dataObj: any = {};\n\n        let processingNotes = false;\n        extraParts.forEach(extraPart => {\n            let key: string = null;\n            let val: string = null;\n            if (!processingNotes) {\n                if (this.isNullOrWhitespace(extraPart)) {\n                    return;\n                }\n                const colonIndex = extraPart.indexOf(':');\n                if (colonIndex === -1) {\n                    key = extraPart;\n                } else {\n                    key = extraPart.substring(0, colonIndex);\n                    if (extraPart.length > colonIndex) {\n                        val = extraPart.substring(colonIndex + 1);\n                    }\n                }\n                if (this.isNullOrWhitespace(key) || this.isNullOrWhitespace(val) || key === 'NoteType') {\n                    return;\n                }\n            }\n\n            if (processingNotes) {\n                cipher.notes += ('\\n' + extraPart);\n            } else if (key === 'Notes') {\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes += ('\\n' + val);\n                } else {\n                    cipher.notes = val;\n                }\n                processingNotes = true;\n            } else if (map.hasOwnProperty(key)) {\n                dataObj[map[key]] = val;\n            } else {\n                this.processKvp(cipher, key, val);\n            }\n        });\n\n        return dataObj;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class LogMeOnceCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 4) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[1]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.DisplayName, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.login.username = this.getValueOrDefault(value.UserName);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 3) {\n                return;\n            }\n\n            const folderName = this.getValueOrDefault(value[0], 'Unassigned') !== 'Unassigned' ? value[0] : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[2], '--');\n\n            if (value[1] === 'Web Logins' || value[1] === 'Login') {\n                cipher.login.uris = this.makeUriArray(value[4]);\n                cipher.login.username = this.getValueOrDefault(value[5]);\n                cipher.login.password = this.getValueOrDefault(value[6]);\n                cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split('\\\\n').join('\\n') : null;\n            } else if (value.length > 3) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                for (let i = 3; i < value.length; i++) {\n                    if (!this.isNullOrWhitespace(value[i])) {\n                        cipher.notes += (value[i] + '\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\n                cipher.name = value[1] + ': ' + cipher.name;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MykiCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.nickname, '--');\n            cipher.notes = this.getValueOrDefault(value.additionalInfo);\n\n            if (value.url !== undefined) {\n                // Accounts\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.totp = this.getValueOrDefault(value.twoFactAuthToken);\n            } else if (value.cardNumber !== undefined) {\n                // Cards\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardName);\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.expMonth = this.getValueOrDefault(value.exp_month);\n                cipher.card.expYear = this.getValueOrDefault(value.exp_year);\n                cipher.card.code = this.getValueOrDefault(value.cvv);\n            } else if (value.firstName !== undefined) {\n                // Identities\n                cipher.identity = new IdentityView();\n                cipher.type = CipherType.Identity;\n                cipher.identity.title = this.getValueOrDefault(value.title);\n                cipher.identity.firstName = this.getValueOrDefault(value.firstName);\n                cipher.identity.middleName = this.getValueOrDefault(value.middleName);\n                cipher.identity.lastName = this.getValueOrDefault(value.lastName);\n                cipher.identity.phone = this.getValueOrDefault(value.number);\n                cipher.identity.email = this.getValueOrDefault(value.email);\n                cipher.identity.address1 = this.getValueOrDefault(value.firstAddressLine);\n                cipher.identity.address2 = this.getValueOrDefault(value.secondAddressLine);\n                cipher.identity.city = this.getValueOrDefault(value.city);\n                cipher.identity.country = this.getValueOrDefault(value.country);\n                cipher.identity.postalCode = this.getValueOrDefault(value.zipCode);\n            } else if (value.content !== undefined) {\n                // Notes\n                cipher.secureNote = new SecureNoteView();\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote.type = SecureNoteType.Generic;\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.content);\n            } else {\n                return;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { LoginView } from '../models/view/loginView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\ntype nodePassCsvParsed = {\n    name: string;\n    url: string;\n    username: string;\n    password: string;\n    note: string;\n    cardholdername: string;\n    cardnumber: string;\n    cvc: string;\n    expirydate: string;\n    zipcode: string;\n    folder: string;\n    full_name: string;\n    phone_number: string;\n    email: string;\n    address1: string;\n    address2: string;\n    city: string;\n    country: string;\n    state: string;\n};\n\nexport class NordPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results: nodePassCsvParsed[] = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(record => {\n\n            const recordType = this.evaluateType(record);\n            if (recordType === undefined) {\n                return;\n            }\n\n            if (!this.organization) {\n                this.processFolder(result, record.folder);\n            }\n\n            const cipher = new CipherView();\n            cipher.name = this.getValueOrDefault(record.name, '--');\n            cipher.notes = this.getValueOrDefault(record.note);\n\n            switch (recordType) {\n                case CipherType.Login:\n                    cipher.type = CipherType.Login;\n                    cipher.login = new LoginView();\n                    cipher.login.username = this.getValueOrDefault(record.username);\n                    cipher.login.password = this.getValueOrDefault(record.password);\n                    cipher.login.uris = this.makeUriArray(record.url);\n                    break;\n                case CipherType.Card:\n                    cipher.type = CipherType.Card;\n                    cipher.card.cardholderName = this.getValueOrDefault(record.cardholdername);\n                    cipher.card.number = this.getValueOrDefault(record.cardnumber);\n                    cipher.card.code = this.getValueOrDefault(record.cvc);\n                    cipher.card.brand = this.getCardBrand(cipher.card.number);\n                    this.setCardExpiration(cipher, record.expirydate);\n                    break;\n\n                case CipherType.Identity:\n                    cipher.type = CipherType.Identity;\n\n                    this.processName(cipher, this.getValueOrDefault(record.full_name));\n                    cipher.identity.address1 = this.getValueOrDefault(record.address1);\n                    cipher.identity.address2 = this.getValueOrDefault(record.address2);\n                    cipher.identity.city = this.getValueOrDefault(record.city);\n                    cipher.identity.state = this.getValueOrDefault(record.state);\n                    cipher.identity.postalCode = this.getValueOrDefault(record.zipcode);\n                    cipher.identity.country = this.getValueOrDefault(record.country);\n                    if (cipher.identity.country != null) {\n                        cipher.identity.country = cipher.identity.country.toUpperCase();\n                    }\n                    cipher.identity.email = this.getValueOrDefault(record.email);\n                    cipher.identity.phone = this.getValueOrDefault(record.phone_number);\n                    break;\n                case CipherType.SecureNote:\n                    cipher.type = CipherType.SecureNote;\n                    cipher.secureNote.type = SecureNoteType.Generic;\n                    break;\n                default:\n                    break;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private evaluateType(record: nodePassCsvParsed): CipherType {\n\n        if (!this.isNullOrWhitespace(record.username)) {\n            return CipherType.Login;\n        }\n\n        if (!this.isNullOrWhitespace(record.cardnumber)) {\n            return CipherType.Card;\n        }\n\n        if (!this.isNullOrWhitespace(record.full_name)) {\n            return CipherType.Identity;\n        }\n\n        if (!this.isNullOrWhitespace(record.note)) {\n            return CipherType.SecureNote;\n        }\n\n        return undefined;\n    }\n\n    private processName(cipher: CipherView, fullName: string) {\n\n        if (this.isNullOrWhitespace(fullName)) {\n            return;\n        }\n\n        const nameParts = fullName.split(' ');\n        if (nameParts.length > 0) {\n            cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n        }\n        if (nameParts.length === 2) {\n            cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n        } else if (nameParts.length >= 3) {\n            cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n            cipher.identity.lastName = nameParts.slice(2, nameParts.length).join(' ');\n        }\n    }\n}\n","import { BaseImporter } from '../baseImporter';\nimport { Importer } from '../importer';\n\nimport { ImportResult } from '../../models/domain/importResult';\n\nimport { CardView } from '../../models/view/cardView';\nimport { CipherView } from '../../models/view/cipherView';\nimport { IdentityView } from '../../models/view/identityView';\nimport { PasswordHistoryView } from '../../models/view/passwordHistoryView';\nimport { SecureNoteView } from '../../models/view/secureNoteView';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { FieldType } from '../../enums/fieldType';\nimport { SecureNoteType } from '../../enums/secureNoteType';\n\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): Promise<ImportResult> {\n        data.split(this.newLineRegex).forEach(line => {\n            if (this.isNullOrWhitespace(line) || line[0] !== '{') {\n                return;\n            }\n            const item = JSON.parse(line);\n            if (item.trashed === true) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n\n            if (this.isNullOrWhitespace(item.hmac)) {\n                this.processStandardItem(item, cipher);\n            } else {\n                this.processWinOpVaultItem(item, cipher);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n\n        this.result.success = true;\n        return Promise.resolve(this.result);\n    }\n\n    private processWinOpVaultItem(item: any, cipher: CipherView) {\n        if (item.overview != null) {\n            cipher.name = this.getValueOrDefault(item.overview.title);\n            if (item.overview.URLs != null) {\n                const urls: string[] = [];\n                item.overview.URLs.forEach((url: any) => {\n                    if (!this.isNullOrWhitespace(url.u)) {\n                        urls.push(url.u);\n                    }\n                });\n                cipher.login.uris = this.makeUriArray(urls);\n            }\n        }\n\n        if (item.details != null) {\n            if (item.details.passwordHistory != null) {\n                this.parsePasswordHistory(item.details.passwordHistory, cipher);\n            }\n            if (!this.isNullOrWhitespace(item.details.ccnum) || !this.isNullOrWhitespace(item.details.cvv)) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            } else if (!this.isNullOrWhitespace(item.details.firstname) ||\n                !this.isNullOrWhitespace(item.details.address1)) {\n                cipher.type = CipherType.Identity;\n                cipher.identity = new IdentityView();\n            }\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(item.details.password)) {\n                cipher.login.password = item.details.password;\n            }\n            if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n                cipher.notes = item.details.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (item.details.fields != null) {\n                this.parseFields(item.details.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.details.sections != null) {\n                item.details.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n        }\n    }\n\n    private processStandardItem(item: any, cipher: CipherView) {\n        cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\n        cipher.name = this.getValueOrDefault(item.title);\n\n        if (item.typeName === 'securenotes.SecureNote') {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        } else if (item.typeName === 'wallet.financial.CreditCard') {\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n        } else if (item.typeName === 'identities.Identity') {\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n        } else {\n            cipher.login.uris = this.makeUriArray(item.location);\n        }\n\n        if (item.secureContents != null) {\n            if (item.secureContents.passwordHistory != null) {\n                this.parsePasswordHistory(item.secureContents.passwordHistory, cipher);\n            }\n            if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\n                cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (cipher.type === CipherType.Login) {\n                if (!this.isNullOrWhitespace(item.secureContents.password)) {\n                    cipher.login.password = item.secureContents.password;\n                }\n                if (item.secureContents.URLs != null) {\n                    const urls: string[] = [];\n                    item.secureContents.URLs.forEach((u: any) => {\n                        if (!this.isNullOrWhitespace(u.url)) {\n                            urls.push(u.url);\n                        }\n                    });\n                    if (urls.length > 0) {\n                        cipher.login.uris = this.makeUriArray(urls);\n                    }\n                }\n            }\n            if (item.secureContents.fields != null) {\n                this.parseFields(item.secureContents.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.secureContents.sections != null) {\n                item.secureContents.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n        }\n    }\n\n    private parsePasswordHistory(items: any[], cipher: CipherView) {\n        const maxSize = items.length > 5 ? 5 : items.length;\n        cipher.passwordHistory = items\n            .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n            .sort((a, b) => b.time - a.time)\n            .slice(0, maxSize)\n            .map((h: any) => {\n                const ph = new PasswordHistoryView();\n                ph.password = h.value;\n                ph.lastUsedDate = new Date(('' + h.time).length >= 13 ? h.time : h.time * 1000);\n                return ph;\n            });\n    }\n\n    private parseFields(fields: any[], cipher: CipherView, designationKey: string, valueKey: string, nameKey: string) {\n        fields.forEach((field: any) => {\n            if (field[valueKey] == null || field[valueKey].toString().trim() === '') {\n                return;\n            }\n\n            const fieldValue = field[valueKey].toString();\n            const fieldDesignation = field[designationKey] != null ? field[designationKey].toString() : null;\n\n            if (cipher.type === CipherType.Login) {\n                if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === 'username') {\n                    cipher.login.username = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.password) && fieldDesignation === 'password') {\n                    cipher.login.password = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.totp) && fieldDesignation != null &&\n                    fieldDesignation.startsWith('TOTP_')) {\n                    cipher.login.totp = fieldValue;\n                    return;\n                }\n            } else if (cipher.type === CipherType.Card) {\n                if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === 'ccnum') {\n                    cipher.card.number = fieldValue;\n                    cipher.card.brand = this.getCardBrand(fieldValue);\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === 'cvv') {\n                    cipher.card.code = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && fieldDesignation === 'cardholder') {\n                    cipher.card.cardholderName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.expiration) && fieldDesignation === 'expiry' &&\n                    fieldValue.length === 6) {\n                    cipher.card.expMonth = (fieldValue as string).substr(4, 2);\n                    if (cipher.card.expMonth[0] === '0') {\n                        cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n                    }\n                    cipher.card.expYear = (fieldValue as string).substr(0, 4);\n                    return;\n                } else if (fieldDesignation === 'type') {\n                    // Skip since brand was determined from number above\n                    return;\n                }\n            } else if (cipher.type === CipherType.Identity) {\n                const identity = cipher.identity;\n                if (this.isNullOrWhitespace(identity.firstName) && fieldDesignation === 'firstname') {\n                    identity.firstName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.lastName) && fieldDesignation === 'lastname') {\n                    identity.lastName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.middleName) && fieldDesignation === 'initial') {\n                    identity.middleName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.phone) && fieldDesignation === 'defphone') {\n                    identity.phone = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.company) && fieldDesignation === 'company') {\n                    identity.company = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.email) && fieldDesignation === 'email') {\n                    identity.email = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.username) && fieldDesignation === 'username') {\n                    identity.username = fieldValue;\n                    return;\n                } else if (fieldDesignation === 'address') {\n                    // fieldValue is an object casted into a string, so access the plain value instead\n                    const { street, city, country, zip } = field[valueKey];\n                    identity.address1 = this.getValueOrDefault(street);\n                    identity.city = this.getValueOrDefault(city);\n                    if (!this.isNullOrWhitespace(country)) {\n                        identity.country = country.toUpperCase();\n                    }\n                    identity.postalCode = this.getValueOrDefault(zip);\n                    return;\n                }\n            }\n\n            const fieldName = this.isNullOrWhitespace(field[nameKey]) ? 'no_name' : field[nameKey];\n            if (fieldName === 'password' && cipher.passwordHistory != null &&\n                cipher.passwordHistory.some(h => h.password === fieldValue)) {\n                return;\n            }\n\n            const fieldType = field.k === 'concealed' ? FieldType.Hidden : FieldType.Text;\n            this.processKvp(cipher, fieldName, fieldValue, fieldType);\n        });\n    }\n}\n","import { Importer } from '../importer';\nimport { IgnoredProperties, OnePasswordCsvImporter } from './onepasswordCsvImporter';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { CardView, CipherView, IdentityView } from '../../models/view';\n\nexport class OnePasswordMacCsvImporter extends OnePasswordCsvImporter implements Importer {\n    setCipherType(value: any, cipher: CipherView) {\n        const onePassType = this.getValueOrDefault(this.getProp(value, 'type'), 'Login');\n        switch (onePassType) {\n            case 'Credit Card':\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                IgnoredProperties.push('type');\n                break;\n            case 'Identity':\n                cipher.type = CipherType.Identity;\n                cipher.identity = new IdentityView();\n                IgnoredProperties.push('type');\n                break;\n            case 'Login':\n            case 'Secure Note':\n                IgnoredProperties.push('type');\n            default:\n                break;\n        }\n    }\n}\n","import { CipherView } from '../../models/view';\n\nexport class CipherImportContext {\n    lowerProperty: string;\n    constructor(public importRecord: any, public property: string, public cipher: CipherView) {\n        this.lowerProperty = property.toLowerCase();\n    }\n}\n","export class View {\n}\n","import { Importer } from '../importer';\nimport { CipherImportContext } from './cipherImportContext';\nimport { OnePasswordCsvImporter } from './onepasswordCsvImporter';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { CardView, CipherView, IdentityView, LoginView } from '../../models/view';\n\nexport class OnePasswordWinCsvImporter extends OnePasswordCsvImporter implements Importer {\n    constructor() {\n        super();\n        this.identityPropertyParsers.push(this.setIdentityAddress);\n    }\n\n    setCipherType(value: any, cipher: CipherView) {\n        cipher.type = CipherType.Login;\n        cipher.login = new LoginView();\n\n        if (!this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: number/i)) &&\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: expiry date/i))) {\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n        }\n\n        if (!this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: first name/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: initial/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: last name/i)) ||\n            !this.isNullOrWhitespace(this.getPropByRegexp(value, /internet \\d+: email/i))) {\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n        }\n    }\n\n    setIdentityAddress(context: CipherImportContext) {\n        if (context.lowerProperty.match(/address \\d+: address/i)) {\n            this.processKvp(context.cipher, 'address', context.importRecord[context.property]);\n            return true;\n        }\n        return false;\n    }\n\n    setCreditCardExpiry(context: CipherImportContext) {\n        if (this.isNullOrWhitespace(context.cipher.card.expiration) && context.lowerProperty.includes('expiry date')) {\n            const expSplit = (context.importRecord[context.property] as string).split('/');\n            context.cipher.card.expMonth = expSplit[0];\n            if (context.cipher.card.expMonth[0] === '0' && context.cipher.card.expMonth.length === 2) {\n                context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n            }\n            context.cipher.card.expYear = expSplit[2].length > 4 ? expSplit[2].substr(0, 4) : expSplit[2];\n            return true;\n        }\n        return false;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let headers: string[] = null;\n        results.forEach(value => {\n            if (headers == null) {\n                headers = value.map((v: string) => v);\n                return;\n            }\n\n            if (value.length < 2 || value.length !== headers.length) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value[1])) {\n                if (this.organization) {\n                    const tags = (value[1] as string).split(',');\n                    tags.forEach(tag => {\n                        tag = tag.trim();\n                        let addCollection = true;\n                        let collectionIndex = result.collections.length;\n\n                        for (let i = 0; i < result.collections.length; i++) {\n                            if (result.collections[i].name === tag) {\n                                addCollection = false;\n                                collectionIndex = i;\n                                break;\n                            }\n                        }\n\n                        if (addCollection) {\n                            const collection = new CollectionView();\n                            collection.name = tag;\n                            result.collections.push(collection);\n                        }\n\n                        result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                    });\n                } else {\n                    const tags = (value[1] as string).split(',');\n                    const tag = tags.length > 0 ? tags[0].trim() : null;\n                    this.processFolder(result, tag);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            for (let i = 2; i < value.length; i++) {\n                const header = headers[i].trim().toLowerCase();\n                if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\n                    continue;\n                }\n\n                if (this.usernameFieldNames.indexOf(header) > -1) {\n                    cipher.login.username = value[i];\n                } else if (this.passwordFieldNames.indexOf(header) > -1) {\n                    cipher.login.password = value[i];\n                } else if (this.uriFieldNames.indexOf(header) > -1) {\n                    cipher.login.uris = this.makeUriArray(value[i]);\n                } else {\n                    this.processKvp(cipher, headers[i], value[i]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            this.processFolder(result, this.getValue('category', value));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValue('description', value);\n            cipher.name = this.getValueOrDefault(this.getValue('title', value), '--');\n            cipher.login.username = this.getValue('username', value);\n            cipher.login.password = this.getValue('password', value);\n            cipher.login.uris = this.makeUriArray(this.getValue('site', value));\n            this.processKvp(cipher, 'Password 2', this.getValue('password2', value));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private getValue(key: string, value: any) {\n        return this.getValueOrDefault(value[key], this.getValueOrDefault(value[(' ' + key)]));\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassmanJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach((credential: any) => {\n            if (credential.tags != null && credential.tags.length > 0) {\n                const folderName = credential.tags[0].text;\n                this.processFolder(result, folderName);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = credential.label;\n\n            cipher.login.username = this.getValueOrDefault(credential.username);\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.url);\n            cipher.notes += this.getValueOrDefault(credential.description, '');\n            if (credential.otp != null) {\n                cipher.login.totp = this.getValueOrDefault(credential.otp.secret);\n            }\n\n            if (credential.custom_fields != null) {\n                credential.custom_fields.forEach((customField: any) => {\n                    switch (customField.field_type) {\n                        case 'text':\n                        case 'password':\n                            this.processKvp(cipher, customField.label, customField.value);\n                            break;\n                    }\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport class PasspackCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const tagsJson = !this.isNullOrWhitespace(value.Tags) ? JSON.parse(value.Tags) : null;\n            const tags: string[] = tagsJson != null && tagsJson.tags != null && tagsJson.tags.length > 0 ?\n                tagsJson.tags.map((tagJson: string) => {\n                    try {\n                        const t = JSON.parse(tagJson);\n                        return this.getValueOrDefault(t.tag);\n                    } catch { }\n                    return null;\n                }).filter((t: string) => !this.isNullOrWhitespace(t)) : null;\n\n            if (this.organization && tags != null && tags.length > 0) {\n                tags.forEach(tag => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === tag) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = tag;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization && tags != null && tags.length > 0) {\n                this.processFolder(result, tags[0]);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes, '');\n            cipher.notes += ('\\n\\n' + this.getValueOrDefault(value['Shared Notes'], '') + '\\n');\n            cipher.name = this.getValueOrDefault(value['Entry Name'], '--');\n            cipher.login.username = this.getValueOrDefault(value['User ID']);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n\n            if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                value.__parsed_extra.forEach((extra: string) => {\n                    if (!this.isNullOrWhitespace(extra)) {\n                        cipher.notes += ('\\n' + extra);\n                    }\n                });\n            }\n\n            const fieldsJson = !this.isNullOrWhitespace(value['Extra Fields']) ?\n                JSON.parse(value['Extra Fields']) : null;\n            const fields = fieldsJson != null && fieldsJson.extraFields != null &&\n                fieldsJson.extraFields.length > 0 ? fieldsJson.extraFields.map((fieldJson: string) => {\n                    try {\n                        return JSON.parse(fieldJson);\n                    } catch { }\n                    return null;\n                }) : null;\n            if (fields != null) {\n                fields.forEach((f: any) => {\n                    if (f != null) {\n                        this.processKvp(cipher, f.name, f.data);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let newVersion = true;\n        results.forEach(value => {\n            if (value.length !== 5 && value.length < 9) {\n                return;\n            }\n            const altFormat = value.length === 10 && value[0] === '0';\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[altFormat ? 1 : 0], '--');\n            cipher.login.username = this.getValueOrDefault(value[altFormat ? 2 : 1]);\n            cipher.login.password = this.getValueOrDefault(value[altFormat ? 3 : 2]);\n            if (value.length === 5) {\n                newVersion = false;\n                cipher.notes = this.getValueOrDefault(value[4]);\n                cipher.login.uris = this.makeUriArray(value[3]);\n            } else {\n                const folder = this.getValueOrDefault(value[altFormat ? 9 : 8], '(None)');\n                let folderName = folder !== '(None)' ? folder.split('\\\\').join('/') : null;\n                if (folderName != null) {\n                    folderName = folder.split(' > ').join('/');\n                    folderName = folder.split('>').join('/');\n                }\n                this.processFolder(result, folderName);\n                cipher.notes = this.getValueOrDefault(value[altFormat ? 5 : 3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n            }\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (newVersion && this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, string>();\n        results.folders.forEach((value: any) => {\n            foldersMap.set(value.id, value.name);\n        });\n        const foldersIndexMap = new Map<string, number>();\n        foldersMap.forEach((val, key) => {\n            foldersIndexMap.set(key, result.folders.length);\n            const f = new FolderView();\n            f.name = val;\n            result.folders.push(f);\n        });\n\n        results.items.forEach((value: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.uris = this.makeUriArray(value.login_url);\n\n            if (value.folder != null && foldersIndexMap.has(value.folder)) {\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(value.folder)]);\n            }\n\n            if (value.identifiers == null) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value.identifiers.notes)) {\n                cipher.notes = value.identifiers.notes.split('\\\\r\\\\n').join('\\n').split('\\\\n').join('\\n');\n            }\n\n            if (value.type === 'CreditCard') {\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n            }\n\n            for (const property in value.identifiers) {\n                if (!value.identifiers.hasOwnProperty(property)) {\n                    continue;\n                }\n                const valObj = value.identifiers[property];\n                const val = valObj != null ? valObj.toString() : null;\n                if (this.isNullOrWhitespace(val) || property === 'notes' || property === 'ignoreItemInSecurityScore') {\n                    continue;\n                }\n\n                if (property === 'custom_fields') {\n                    valObj.forEach((cf: any) => {\n                        this.processKvp(cipher, cf.name, cf.value);\n                    });\n                    continue;\n                }\n\n                if (cipher.type === CipherType.Card) {\n                    if (property === 'cardNumber') {\n                        cipher.card.number = val;\n                        cipher.card.brand = this.getCardBrand(val);\n                        continue;\n                    } else if (property === 'nameOnCard') {\n                        cipher.card.cardholderName = val;\n                        continue;\n                    } else if (property === 'security_code') {\n                        cipher.card.code = val;\n                        continue;\n                    } else if (property === 'expires') {\n                        try {\n                            const expDate = new Date(val);\n                            cipher.card.expYear = expDate.getFullYear().toString();\n                            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                        } catch { }\n                        continue;\n                    } else if (property === 'cardType') {\n                        continue;\n                    }\n                } else {\n                    if ((property === 'username' || property === 'email') &&\n                        this.isNullOrWhitespace(cipher.login.username)) {\n                        cipher.login.username = val;\n                        continue;\n                    } else if (property === 'password') {\n                        cipher.login.password = val;\n                        continue;\n                    } else if (property === 'totp') {\n                        cipher.login.totp = val;\n                        continue;\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(property) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                        continue;\n                    }\n                }\n\n                this.processKvp(cipher, property, val);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const records = doc.querySelectorAll('PasswordManager > record');\n        Array.from(records).forEach(record => {\n            const category = this.querySelectorDirectChild(record, 'Category');\n            const categoryText = category != null && !this.isNullOrWhitespace(category.textContent) &&\n                category.textContent !== 'Unfiled' ? category.textContent : null;\n            this.processFolder(result, categoryText);\n\n            const accountName = this.querySelectorDirectChild(record, 'Account-Name');\n            const userId = this.querySelectorDirectChild(record, 'User-Id');\n            const password = this.querySelectorDirectChild(record, 'Password');\n            const url = this.querySelectorDirectChild(record, 'URL');\n            const notes = this.querySelectorDirectChild(record, 'Notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = accountName != null ? this.getValueOrDefault(accountName.textContent, '--') : '--';\n            cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : '';\n            cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            const attributes: string[] = [];\n            for (let i = 1; i <= 10; i++) {\n                attributes.push('Attribute-' + i);\n            }\n\n            this.querySelectorAllDirectChild(record, attributes.join(',')).forEach(attr => {\n                if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === 'null') {\n                    return;\n                }\n                this.processKvp(cipher, attr.tagName, attr.textContent);\n            });\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const passwordSafe = doc.querySelector('passwordsafe');\n        if (passwordSafe == null) {\n            result.errorMessage = 'Missing `passwordsafe` node.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const notesDelimiter = passwordSafe.getAttribute('delimiter');\n        const entries = doc.querySelectorAll('passwordsafe > entry');\n        Array.from(entries).forEach(entry => {\n            const group = this.querySelectorDirectChild(entry, 'group');\n            const groupText = group != null && !this.isNullOrWhitespace(group.textContent) ?\n                group.textContent.split('.').join('/') : null;\n            this.processFolder(result, groupText);\n\n            const title = this.querySelectorDirectChild(entry, 'title');\n            const username = this.querySelectorDirectChild(entry, 'username');\n            const email = this.querySelectorDirectChild(entry, 'email');\n            const password = this.querySelectorDirectChild(entry, 'password');\n            const url = this.querySelectorDirectChild(entry, 'url');\n            const notes = this.querySelectorDirectChild(entry, 'notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = title != null ? this.getValueOrDefault(title.textContent, '--') : '--';\n            cipher.notes = notes != null ?\n                this.getValueOrDefault(notes.textContent, '').split(notesDelimiter).join('\\n') : null;\n            cipher.login.username = username != null ? this.getValueOrDefault(username.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\n                cipher.login.username = this.getValueOrDefault(email.textContent);\n            } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\n                cipher.notes = this.isNullOrWhitespace(cipher.notes) ? 'Email: ' + email.textContent\n                    : (cipher.notes + '\\n' + 'Email: ' + email.textContent);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordWalletTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 1) {\n                return;\n            }\n            if (value.length > 5) {\n                this.processFolder(result, value[5]);\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            if (value.length > 4) {\n                cipher.notes = this.getValueOrDefault(value[4], '').split('¬').join('\\n');\n            }\n            if (value.length > 2) {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n            }\n            if (value.length > 3) {\n                cipher.login.password = this.getValueOrDefault(value[3]);\n            }\n            if (value.length > 1) {\n                cipher.login.uris = this.makeUriArray(value[1]);\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nexport class RememBearCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.trash === 'true') {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.notes = this.getValueOrDefault(value.notes);\n            if (value.type === 'LoginItem') {\n                cipher.login.uris = this.makeUriArray(value.website);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.username = this.getValueOrDefault(value.username);\n            } else if (value.type === 'CreditCardItem') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.verification);\n\n                try {\n                    const expMonth = this.getValueOrDefault(value.expiryMonth);\n                    if (expMonth != null) {\n                        const expMonthNumber = parseInt(expMonth, null);\n                        if (expMonthNumber != null && expMonthNumber >= 1 && expMonthNumber <= 12) {\n                            cipher.card.expMonth = expMonthNumber.toString();\n                        }\n                    }\n                } catch { }\n                try {\n                    const expYear = this.getValueOrDefault(value.expiryYear);\n                    if (expYear != null) {\n                        const expYearNumber = parseInt(expYear, null);\n                        if (expYearNumber != null) {\n                            cipher.card.expYear = expYearNumber.toString();\n                        }\n                    }\n                } catch { }\n\n                const pin = this.getValueOrDefault(value.pin);\n                if (pin != null) {\n                    this.processKvp(cipher, 'PIN', pin);\n                }\n                const zip = this.getValueOrDefault(value.zipCode);\n                if (zip != null) {\n                    this.processKvp(cipher, 'Zip Code', zip);\n                }\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        let i = 1;\n        results.forEach(value => {\n            const folder = !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith('/') ?\n                value.Folder.replace('/', '') : value.Folder;\n            const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value.Login);\n            cipher.login.password = this.getValueOrDefault(value.Pwd);\n            cipher.login.uris = this.makeUriArray(value.Url);\n\n            if (!this.isNullOrWhitespace(value.Rf_fields)) {\n                let fields: string[] = [value.Rf_fields];\n                if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                    fields = fields.concat(value.__parsed_extra);\n                }\n                fields.forEach((field: string) => {\n                    const parts = field.split(':');\n                    if (parts.length < 3) {\n                        return;\n                    }\n                    const key = parts[0] === '-no-name-' ? null : parts[0];\n                    const val = parts.length === 4 && parts[2] === 'rck' ? parts[1] : parts[2];\n                    this.processKvp(cipher, key, val);\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n\n            if (i === results.length && cipher.name === '--' && this.isNullOrWhitespace(cipher.login.password)) {\n                return;\n            }\n\n            result.ciphers.push(cipher);\n            i++;\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { FieldType } from '../enums';\nimport { CipherView, FieldView } from '../models/view';\n\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const db = doc.querySelector('database');\n        if (db == null) {\n            result.errorMessage = 'Missing `database` node.';\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const foldersMap = new Map<string, number>();\n\n        Array.from(doc.querySelectorAll('database > label')).forEach(labelEl => {\n            const name = labelEl.getAttribute('name');\n            const id = labelEl.getAttribute('id');\n            if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\n                foldersMap.set(id, result.folders.length);\n                const folder = new FolderView();\n                folder.name = name;\n                result.folders.push(folder);\n            }\n        });\n\n        Array.from(doc.querySelectorAll('database > card')).forEach(cardEl => {\n            if (cardEl.getAttribute('template') === 'true' || cardEl.getAttribute('deleted') === 'true') {\n                return;\n            }\n\n            const labelIdEl = this.querySelectorDirectChild(cardEl, 'label_id');\n            if (labelIdEl != null) {\n                const labelId = labelIdEl.textContent;\n                if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\n                    result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(cardEl.getAttribute('title'), '--');\n\n            if (cardEl.getAttribute('star') === 'true') {\n                cipher.favorite = true;\n            }\n\n            const cardType = cardEl.getAttribute('type');\n            if (cardType === 'note') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            } else {\n                Array.from(this.querySelectorAllDirectChild(cardEl, 'field')).forEach(fieldEl => {\n                    const text = fieldEl.textContent;\n                    if (this.isNullOrWhitespace(text)) {\n                        return;\n                    }\n                    const name = fieldEl.getAttribute('name');\n                    const fieldType = this.getValueOrDefault(fieldEl.getAttribute('type'), '').toLowerCase();\n                    if (fieldType === 'login') {\n                        cipher.login.username = text;\n                    } else if (fieldType === 'password' || fieldType === 'secret') {\n                        // safeInCloud allows for more than one password. we just insert them here and find the one used as password later\n                        this.processKvp(cipher, name, text, FieldType.Hidden);\n                    } else if (fieldType === 'one_time_password') {\n                        cipher.login.totp = text;\n                    } else if (fieldType === 'notes') {\n                        cipher.notes += (text + '\\n');\n                    } else if (fieldType === 'weblogin' || fieldType === 'website') {\n                        cipher.login.uris = this.makeUriArray(text);\n                    }\n                    else {\n                        this.processKvp(cipher, name, text);\n                    }\n                });\n            }\n\n            Array.from(this.querySelectorAllDirectChild(cardEl, 'notes')).forEach(notesEl => {\n                cipher.notes += (notesEl.textContent + '\\n');\n            });\n\n            this.setPassword(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    // Choose a password from all passwords. Take one that has password in its name, or the first one if there is no such entry\n    // if its name is password, we can safely remove it form the fields. otherwise, it would maybe be best to keep it as a hidden field\n    setPassword(cipher: CipherView) {\n        const candidates = cipher.fields.filter(field => field.type === FieldType.Hidden);\n        if (!candidates.length) {\n            return;\n        }\n\n        let choice: FieldView;\n        for (const field of candidates) {\n            if (this.passwordFieldNames.includes(field.name.toLowerCase())) {\n                choice = field;\n                cipher.fields = cipher.fields.filter(f => f !== choice);\n                break;\n            }\n        }\n\n        if (!choice) {\n            choice = candidates[0];\n        }\n\n        cipher.login.password = choice.value;\n    }\n}\n","export { CipherType } from './cipherType';\nexport { DeviceType } from './deviceType';\nexport { EncryptionType } from './encryptionType';\nexport { FieldType } from './fieldType';\nexport { LogLevelType } from './logLevelType';\nexport { SecureNoteType } from './secureNoteType';\nexport { TwoFactorProviderType } from './twoFactorProviderType';\nexport { UriMatchType } from './uriMatchType';\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), '--');\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SecureSafeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Title);\n            cipher.notes = this.getValueOrDefault(value.Comment);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view/cipherView';\n\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length < 3) {\n                return;\n            }\n\n            this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 2], '');\n            cipher.name = this.getValueOrDefault(value[1], '--');\n\n            if (value[0] === 'Web Logins' || value[0] === 'Servers' || value[0] === 'Email Accounts') {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n                cipher.login.password = this.getValueOrDefault(value[3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n                this.parseFieldsToNotes(cipher, 5, value);\n            } else {\n                this.parseFieldsToNotes(cipher, 2, value);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\n        // last 3 rows do not get parsed\n        for (let i = startIndex; i < value.length - 3; i++) {\n            if (this.isNullOrWhitespace(value[i])) {\n                continue;\n            }\n            cipher.notes += (value[i] + '\\n');\n        }\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        const loginNodes = doc.querySelectorAll('root > Database > Logins > Login');\n        Array.from(loginNodes).forEach(loginNode => {\n            const accountId = loginNode.getAttribute('ID');\n            if (this.isNullOrWhitespace(accountId)) {\n                return;\n            }\n\n            const usernameText = loginNode.getAttribute('Name');\n            const passwordText = loginNode.getAttribute('Password');\n            let titleText: string = null;\n            let linkText: string = null;\n            let notesText: string = null;\n            let groupId: string = null;\n            let groupText: string = null;\n\n            const accountLogin = doc.querySelector('root > Database > Accounts > Account > ' +\n                'LoginLinks > Login[SourceLoginID=\"' + accountId + '\"]');\n            if (accountLogin != null) {\n                const account = accountLogin.parentElement.parentElement;\n                if (account != null) {\n                    titleText = account.getAttribute('Name');\n                    linkText = account.getAttribute('Link');\n                    groupId = account.getAttribute('ParentID');\n                    notesText = account.getAttribute('Comments');\n                    if (!this.isNullOrWhitespace(notesText)) {\n                        notesText = notesText.split('/n').join('\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(groupId)) {\n                groupText = this.buildGroupText(doc, groupId, '');\n                this.processFolder(result, groupText);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(titleText, '--');\n            cipher.notes = this.getValueOrDefault(notesText);\n            cipher.login.username = this.getValueOrDefault(usernameText);\n            cipher.login.password = this.getValueOrDefault(passwordText);\n            cipher.login.uris = this.makeUriArray(linkText);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    buildGroupText(doc: Document, groupId: string, groupText: string): string {\n        const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\n        if (group == null) {\n            return groupText;\n        }\n        if (!this.isNullOrWhitespace(groupText)) {\n            groupText = '/' + groupText;\n        }\n        groupText = group.getAttribute('Name') + groupText;\n        return this.buildGroupText(doc, group.getAttribute('ParentID'), groupText);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst PropertiesToIgnore = ['kind', 'autologin', 'favorite', 'hexcolor', 'protectedwithpassword', 'subdomainonly',\n    'type', 'tk_export_version', 'note', 'title', 'document_content',\n];\n\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.favorite, '').toLowerCase() === 'true';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.notes = this.getValueOrDefault(value.memo, '');\n            cipher.login.username = this.getValueOrDefault(value.login);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n\n            if (value.kind !== 'login') {\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.note, '');\n            }\n\n            if (value.kind === 'cc') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (!this.isNullOrWhitespace(value.expiryDate)) {\n                    try {\n                        const expDate = new Date(value.expiryDate);\n                        cipher.card.expYear = expDate.getFullYear().toString();\n                        cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                    } catch { }\n                }\n            } else if (value.kind !== 'login') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = this.getValueOrDefault(value.document_content, '');\n                }\n                for (const property in value) {\n                    if (value.hasOwnProperty(property) && PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\n                        !this.isNullOrWhitespace(value[property])) {\n                        this.processKvp(cipher, property, value[property]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class UpmCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (value.length !== 5) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.notes = this.getValueOrDefault(value[4]);\n            cipher.login.username = this.getValueOrDefault(value[1]);\n            cipher.login.password = this.getValueOrDefault(value[2]);\n            cipher.login.uris = this.makeUriArray(value[3]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class YotiCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value['User name']);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view';\n\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): Promise<ImportResult> {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return Promise.resolve(result);\n        }\n\n        results.forEach(value => {\n            if (this.isNullOrWhitespace(value['Password Name']) && this.isNullOrWhitespace(value['Secret Name'])) {\n                return;\n            }\n            this.processFolder(result, this.getValueOrDefault(value.ChamberName));\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite, '0') === '1';\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(\n                value['Password Name'], this.getValueOrDefault(value['Secret Name'], '--'));\n            cipher.login.uris = this.makeUriArray(\n                this.getValueOrDefault(value['Password URL'], this.getValueOrDefault(value['Secret URL'])));\n            this.parseData(cipher, value.SecretData);\n            this.parseData(cipher, value.CustomData);\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return Promise.resolve(result);\n    }\n\n    private parseData(cipher: CipherView, data: string) {\n        if (this.isNullOrWhitespace(data)) {\n            return;\n        }\n        const dataLines = this.splitNewLine(data);\n        dataLines.forEach(line => {\n            const delimPosition = line.indexOf(':');\n            if (delimPosition < 0) {\n                return;\n            }\n            const field = line.substring(0, delimPosition);\n            const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\n            if (this.isNullOrWhitespace(field) || this.isNullOrWhitespace(value) || field === 'SecretType') {\n                return;\n            }\n            const fieldLower = field.toLowerCase();\n            if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.username = value;\n            } else if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.password = value;\n            } else {\n                this.processKvp(cipher, field, value);\n            }\n        });\n    }\n}\n","import * as signalR from '@microsoft/signalr';\nimport * as signalRMsgPack from '@microsoft/signalr-protocol-msgpack';\n\nimport { NotificationType } from '../enums/notificationType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { EnvironmentService } from '../abstractions/environment.service';\nimport { LogService } from '../abstractions/log.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from '../abstractions/notifications.service';\nimport { SyncService } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\n\nimport {\n    NotificationResponse,\n    SyncCipherNotification,\n    SyncFolderNotification,\n    SyncSendNotification,\n} from '../models/response/notificationResponse';\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n    private signalrConnection: signalR.HubConnection;\n    private url: string;\n    private connected = false;\n    private inited = false;\n    private inactive = false;\n    private reconnectTimer: any = null;\n\n    constructor(private userService: UserService, private syncService: SyncService,\n        private appIdService: AppIdService, private apiService: ApiService,\n        private vaultTimeoutService: VaultTimeoutService, private environmentService: EnvironmentService,\n        private logoutCallback: () => Promise<void>, private logService: LogService) {\n        this.environmentService.urls.subscribe(() => {\n            if (!this.inited) {\n                return;\n            }\n\n            this.init();\n        });\n    }\n\n    async init(): Promise<void> {\n        this.inited = false;\n        this.url = this.environmentService.getNotificationsUrl();\n\n        // Set notifications server URL to `https://-` to effectively disable communication\n        // with the notifications server from the client app\n        if (this.url === 'https://-') {\n            return;\n        }\n\n        if (this.signalrConnection != null) {\n            this.signalrConnection.off('ReceiveMessage');\n            this.signalrConnection.off('Heartbeat');\n            await this.signalrConnection.stop();\n            this.connected = false;\n            this.signalrConnection = null;\n        }\n\n        this.signalrConnection = new signalR.HubConnectionBuilder()\n            .withUrl(this.url + '/hub', {\n                accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n                skipNegotiation: true,\n                transport: signalR.HttpTransportType.WebSockets,\n            })\n            .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n            // .configureLogging(signalR.LogLevel.Trace)\n            .build();\n\n        this.signalrConnection.on('ReceiveMessage',\n            (data: any) => this.processNotification(new NotificationResponse(data)));\n        this.signalrConnection.on('Heartbeat',\n            (data: any) => { /*console.log('Heartbeat!');*/ });\n        this.signalrConnection.onclose(() => {\n            this.connected = false;\n            this.reconnect(true);\n        });\n        this.inited = true;\n        if (await this.isAuthedAndUnlocked()) {\n            await this.reconnect(false);\n        }\n    }\n\n    async updateConnection(sync = false): Promise<void> {\n        if (!this.inited) {\n            return;\n        }\n        try {\n            if (await this.isAuthedAndUnlocked()) {\n                await this.reconnect(sync);\n            } else {\n                await this.signalrConnection.stop();\n            }\n        } catch (e) {\n            this.logService.error(e.toString());\n        }\n    }\n\n    async reconnectFromActivity(): Promise<void> {\n        this.inactive = false;\n        if (this.inited && !this.connected) {\n            await this.reconnect(true);\n        }\n    }\n\n    async disconnectFromInactivity(): Promise<void> {\n        this.inactive = true;\n        if (this.inited && this.connected) {\n            await this.signalrConnection.stop();\n        }\n    }\n\n    private async processNotification(notification: NotificationResponse) {\n        const appId = await this.appIdService.getAppId();\n        if (notification == null || notification.contextId === appId) {\n            return;\n        }\n\n        const isAuthenticated = await this.userService.isAuthenticated();\n        const payloadUserId = notification.payload.userId || notification.payload.UserId;\n        const myUserId = await this.userService.getUserId();\n        if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n            return;\n        }\n\n        switch (notification.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherUpdate:\n                await this.syncService.syncUpsertCipher(notification.payload as SyncCipherNotification,\n                    notification.type === NotificationType.SyncCipherUpdate);\n                break;\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncLoginDelete:\n                await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderUpdate:\n                await this.syncService.syncUpsertFolder(notification.payload as SyncFolderNotification,\n                    notification.type === NotificationType.SyncFolderUpdate);\n                break;\n            case NotificationType.SyncFolderDelete:\n                await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncSettings:\n                if (isAuthenticated) {\n                    await this.syncService.fullSync(false);\n                }\n                break;\n            case NotificationType.SyncOrgKeys:\n                if (isAuthenticated) {\n                    await this.syncService.fullSync(true);\n                    // Stop so a reconnect can be made\n                    await this.signalrConnection.stop();\n                }\n                break;\n            case NotificationType.LogOut:\n                if (isAuthenticated) {\n                    this.logoutCallback();\n                }\n                break;\n            case NotificationType.SyncSendCreate:\n            case NotificationType.SyncSendUpdate:\n                await this.syncService.syncUpsertSend(notification.payload as SyncSendNotification,\n                    notification.type === NotificationType.SyncSendUpdate);\n                break;\n            case NotificationType.SyncSendDelete:\n                await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n            default:\n                break;\n        }\n    }\n\n    private async reconnect(sync: boolean) {\n        if (this.reconnectTimer != null) {\n            clearTimeout(this.reconnectTimer);\n            this.reconnectTimer = null;\n        }\n        if (this.connected || !this.inited || this.inactive) {\n            return;\n        }\n        const authedAndUnlocked = await this.isAuthedAndUnlocked();\n        if (!authedAndUnlocked) {\n            return;\n        }\n\n        try {\n            await this.signalrConnection.start();\n            this.connected = true;\n            if (sync) {\n                await this.syncService.fullSync(false);\n            }\n        } catch { }\n\n        if (!this.connected) {\n            this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n        }\n    }\n\n    private async isAuthedAndUnlocked() {\n        if (await this.userService.isAuthenticated()) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            return !locked;\n        }\n        return false;\n    }\n\n    private random(min: number, max: number) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { NotificationType } from '../../enums/notificationType';\n\nexport class NotificationResponse extends BaseResponse {\n    contextId: string;\n    type: NotificationType;\n    payload: any;\n\n    constructor(response: any) {\n        super(response);\n        this.contextId = this.getResponseProperty('ContextId');\n        this.type = this.getResponseProperty('Type');\n\n        const payload = this.getResponseProperty('Payload');\n        switch (this.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncCipherUpdate:\n            case NotificationType.SyncLoginDelete:\n                this.payload = new SyncCipherNotification(payload);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderDelete:\n            case NotificationType.SyncFolderUpdate:\n                this.payload = new SyncFolderNotification(payload);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncOrgKeys:\n            case NotificationType.SyncSettings:\n            case NotificationType.LogOut:\n                this.payload = new UserNotification(payload);\n                break;\n            case NotificationType.SyncSendCreate:\n            case NotificationType.SyncSendUpdate:\n            case NotificationType.SyncSendDelete:\n                this.payload = new SyncSendNotification(payload);\n            default:\n                break;\n        }\n    }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    organizationId: string;\n    collectionIds: string[];\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class UserNotification extends BaseResponse {\n    userId: string;\n    date: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.date = new Date(this.getResponseProperty('Date'));\n    }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n","import { PlatformUtilsService } from '../abstractions';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from '../abstractions/passwordReprompt.service';\n\nimport { HashPurpose } from '../enums/hashPurpose';\n\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n    constructor(private i18nService: I18nService, private cryptoService: CryptoService,\n        private platformUtilService: PlatformUtilsService) { }\n\n    protectedFields() {\n        return ['TOTP', 'Password', 'H_Field', 'Card Number', 'Security Code'];\n    }\n\n    async showPasswordPrompt() {\n        const passwordValidator = (value: string) => {\n            return this.cryptoService.compareAndUpdateKeyHash(value, null);\n        };\n\n        return this.platformUtilService.showPasswordDialog(this.i18nService.t('passwordConfirmation'), this.i18nService.t('passwordConfirmationDesc'), passwordValidator);\n    }\n}\n","import { PolicyService as PolicyServiceAbstraction } from '../abstractions/policy.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { PolicyData } from '../models/data/policyData';\n\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\nimport { Policy } from '../models/domain/policy';\nimport { ResetPasswordPolicyOptions } from '../models/domain/resetPasswordPolicyOptions';\n\nimport { PolicyType } from '../enums/policyType';\n\nimport { ListResponse } from '../models/response/listResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\n\nconst Keys = {\n    policiesPrefix: 'policies_',\n};\n\nexport class PolicyService implements PolicyServiceAbstraction {\n    policyCache: Policy[];\n\n    constructor(private userService: UserService, private storageService: StorageService) {\n    }\n\n    clearCache(): void {\n        this.policyCache = null;\n    }\n\n    async getAll(type?: PolicyType): Promise<Policy[]> {\n        if (this.policyCache == null) {\n            const userId = await this.userService.getUserId();\n            const policies = await this.storageService.get<{ [id: string]: PolicyData; }>(\n                Keys.policiesPrefix + userId);\n            const response: Policy[] = [];\n            for (const id in policies) {\n                if (policies.hasOwnProperty(id)) {\n                    response.push(new Policy(policies[id]));\n                }\n            }\n            this.policyCache = response;\n        }\n        if (type != null) {\n            return this.policyCache.filter(p => p.type === type);\n        } else {\n            return this.policyCache;\n        }\n    }\n\n    async replace(policies: { [id: string]: PolicyData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.policiesPrefix + userId, policies);\n        this.policyCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.policiesPrefix + userId);\n        this.policyCache = null;\n    }\n\n    async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n        if (policies == null) {\n            policies = await this.getAll(PolicyType.MasterPassword);\n        } else {\n            policies = policies.filter(p => p.type === PolicyType.MasterPassword);\n        }\n\n        if (policies == null || policies.length === 0) {\n            return enforcedOptions;\n        }\n\n        policies.forEach(currentPolicy => {\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\n                return;\n            }\n\n            if (enforcedOptions == null) {\n                enforcedOptions = new MasterPasswordPolicyOptions();\n            }\n\n            if (currentPolicy.data.minComplexity != null\n                && currentPolicy.data.minComplexity > enforcedOptions.minComplexity) {\n                enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n            }\n\n            if (currentPolicy.data.minLength != null\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\n                enforcedOptions.minLength = currentPolicy.data.minLength;\n            }\n\n            if (currentPolicy.data.requireUpper) {\n                enforcedOptions.requireUpper = true;\n            }\n\n            if (currentPolicy.data.requireLower) {\n                enforcedOptions.requireLower = true;\n            }\n\n            if (currentPolicy.data.requireNumbers) {\n                enforcedOptions.requireNumbers = true;\n            }\n\n            if (currentPolicy.data.requireSpecial) {\n                enforcedOptions.requireSpecial = true;\n            }\n        });\n\n        return enforcedOptions;\n    }\n\n    evaluateMasterPassword(passwordStrength: number, newPassword: string,\n        enforcedPolicyOptions: MasterPasswordPolicyOptions): boolean {\n        if (enforcedPolicyOptions == null) {\n            return true;\n        }\n\n        if (enforcedPolicyOptions.minComplexity > 0 && enforcedPolicyOptions.minComplexity > passwordStrength) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.minLength > 0 && enforcedPolicyOptions.minLength > newPassword.length) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireNumbers && !(/[0-9]/.test(newPassword))) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireSpecial && !(/[!@#$%\\^&*]/g.test(newPassword))) {\n            return false;\n        }\n\n        return true;\n    }\n\n    getResetPasswordPolicyOptions(policies: Policy[], orgId: string): [ResetPasswordPolicyOptions, boolean] {\n        const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n        if (policies == null || orgId == null) {\n            return [resetPasswordPolicyOptions, false];\n        }\n\n        const policy = policies.find(p => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled);\n        resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n        return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n    }\n\n    mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n        if (policiesResponse == null || policiesResponse.data == null) {\n            return null;\n        }\n\n        const policiesData = policiesResponse.data.map(p => new PolicyData(p));\n        return policiesData.map(p => new Policy(p));\n    }\n}\n","import Domain from './domainBase';\n\nexport class MasterPasswordPolicyOptions extends Domain {\n    minComplexity: number = 0;\n    minLength: number = 0;\n    requireUpper: boolean = false;\n    requireLower: boolean = false;\n    requireNumbers: boolean = false;\n    requireSpecial: boolean = false;\n}\n","import Domain from './domainBase';\n\nexport class ResetPasswordPolicyOptions extends Domain {\n    autoEnrollEnabled: boolean = false;\n}\n","import * as lunr from 'lunr';\n\nimport { CipherView } from '../models/view/cipherView';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { LogService } from '../abstractions/log.service';\nimport { SearchService as SearchServiceAbstraction } from '../abstractions/search.service';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\nimport { SendView } from '../models/view/sendView';\n\nexport class SearchService implements SearchServiceAbstraction {\n    indexedEntityId?: string = null;\n    private indexing = false;\n    private index: lunr.Index = null;\n    private searchableMinLength = 2;\n\n    constructor(private cipherService: CipherService, private logService: LogService,\n        private i18nService: I18nService) {\n        if (['zh-CN', 'zh-TW'].indexOf(i18nService.locale) !== -1) {\n            this.searchableMinLength = 1;\n        }\n    }\n\n    clearIndex(): void {\n        this.indexedEntityId = null;\n        this.index = null;\n    }\n\n    isSearchable(query: string): boolean {\n        const notSearchable = query == null || (this.index == null && query.length < this.searchableMinLength) ||\n            (this.index != null && query.length < this.searchableMinLength && query.indexOf('>') !== 0);\n        return !notSearchable;\n    }\n\n    async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n        if (this.indexing) {\n            return;\n        }\n\n        this.logService.time('search indexing');\n        this.indexing = true;\n        this.indexedEntityId = indexedEntityId;\n        this.index = null;\n        const builder = new lunr.Builder();\n        builder.ref('id');\n        builder.field('shortid', { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n        builder.field('name', { boost: 10 });\n        builder.field('subtitle', {\n            boost: 5,\n            extractor: (c: CipherView) => {\n                if (c.subTitle != null && c.type === CipherType.Card) {\n                    return c.subTitle.replace(/\\*/g, '');\n                }\n                return c.subTitle;\n            },\n        });\n        builder.field('notes');\n        builder.field('login.username', {\n            extractor: (c: CipherView) => c.type === CipherType.Login && c.login != null ? c.login.username : null,\n        });\n        builder.field('login.uris', { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n        builder.field('fields', { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n        builder.field('fields_joined', { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n        builder.field('attachments', { extractor: (c: CipherView) => this.attachmentExtractor(c, false) });\n        builder.field('attachments_joined',\n            { extractor: (c: CipherView) => this.attachmentExtractor(c, true) });\n        builder.field('organizationid', { extractor: (c: CipherView) => c.organizationId });\n        ciphers = ciphers || await this.cipherService.getAllDecrypted();\n        ciphers.forEach(c => builder.add(c));\n        this.index = builder.build();\n\n        this.indexing = false;\n\n        this.logService.timeEnd('search indexing');\n    }\n\n    async searchCiphers(query: string,\n        filter: (((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[])) = null,\n        ciphers: CipherView[] = null):\n        Promise<CipherView[]> {\n        const results: CipherView[] = [];\n        if (query != null) {\n            query = query.trim().toLowerCase();\n        }\n        if (query === '') {\n            query = null;\n        }\n\n        if (ciphers == null) {\n            ciphers = await this.cipherService.getAllDecrypted();\n        }\n\n        if (filter != null && Array.isArray(filter) && filter.length > 0) {\n            ciphers = ciphers.filter(c => filter.every(f => f == null || f(c)));\n        } else if (filter != null) {\n            ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n        }\n\n        if (!this.isSearchable(query)) {\n            return ciphers;\n        }\n\n        if (this.indexing) {\n            await new Promise(r => setTimeout(r, 250));\n            if (this.indexing) {\n                await new Promise(r => setTimeout(r, 500));\n            }\n        }\n\n        const index = this.getIndexForSearch();\n        if (index == null) {\n            // Fall back to basic search if index is not available\n            return this.searchCiphersBasic(ciphers, query);\n        }\n\n        const ciphersMap = new Map<string, CipherView>();\n        ciphers.forEach(c => ciphersMap.set(c.id, c));\n\n        let searchResults: lunr.Index.Result[] = null;\n        const isQueryString = query != null && query.length > 1 && query.indexOf('>') === 0;\n        if (isQueryString) {\n            try {\n                searchResults = index.search(query.substr(1).trim());\n            } catch { }\n        } else {\n            // tslint:disable-next-line\n            const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n            searchResults = index.query(q => {\n                lunr.tokenizer(query).forEach(token => {\n                    const t = token.toString();\n                    q.term(t, { fields: ['name'], wildcard: soWild });\n                    q.term(t, { fields: ['subtitle'], wildcard: soWild });\n                    q.term(t, { fields: ['login.uris'], wildcard: soWild });\n                    q.term(t, {});\n                });\n            });\n        }\n\n        if (searchResults != null) {\n            searchResults.forEach(r => {\n                if (ciphersMap.has(r.ref)) {\n                    results.push(ciphersMap.get(r.ref));\n                }\n            });\n        }\n        return results;\n    }\n\n    searchCiphersBasic(ciphers: CipherView[], query: string, deleted: boolean = false) {\n        query = query.trim().toLowerCase();\n        return ciphers.filter(c => {\n            if (deleted !== c.isDeleted) {\n                return false;\n            }\n            if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (query.length >= 8 && c.id.startsWith(query)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n\n    searchSends(sends: SendView[], query: string) {\n        query = query.trim().toLocaleLowerCase();\n\n        return sends.filter(s => {\n            if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (query.length >= 8 && (s.id.startsWith(query) || s.accessId.toLocaleLowerCase().startsWith(query) || (s.file?.id != null && s.file.id.startsWith(query)))) {\n                return true;\n            }\n            if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n        });\n    }\n\n    getIndexForSearch(): lunr.Index {\n        return this.index;\n    }\n\n    private fieldExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasFields) {\n            return null;\n        }\n        let fields: string[] = [];\n        c.fields.forEach(f => {\n            if (f.name != null) {\n                fields.push(f.name);\n            }\n            if (f.type === FieldType.Text && f.value != null) {\n                fields.push(f.value);\n            }\n        });\n        fields = fields.filter(f => f.trim() !== '');\n        if (fields.length === 0) {\n            return null;\n        }\n        return joined ? fields.join(' ') : fields;\n    }\n\n    private attachmentExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasAttachments) {\n            return null;\n        }\n        let attachments: string[] = [];\n        c.attachments.forEach(a => {\n            if (a != null && a.fileName != null) {\n                if (joined && a.fileName.indexOf('.') > -1) {\n                    attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf('.')));\n                } else {\n                    attachments.push(a.fileName);\n                }\n            }\n        });\n        attachments = attachments.filter(f => f.trim() !== '');\n        if (attachments.length === 0) {\n            return null;\n        }\n        return joined ? attachments.join(' ') : attachments;\n    }\n\n    private uriExtractor(c: CipherView) {\n        if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n            return null;\n        }\n        const uris: string[] = [];\n        c.login.uris.forEach(u => {\n            if (u.uri == null || u.uri === '') {\n                return;\n            }\n            if (u.hostname != null) {\n                uris.push(u.hostname);\n                return;\n            }\n            let uri = u.uri;\n            if (u.match !== UriMatchType.RegularExpression) {\n                const protocolIndex = uri.indexOf('://');\n                if (protocolIndex > -1) {\n                    uri = uri.substr(protocolIndex + 3);\n                }\n                const queryIndex = uri.search(/\\?|&|#/);\n                if (queryIndex > -1) {\n                    uri = uri.substring(0, queryIndex);\n                }\n            }\n            uris.push(uri);\n        });\n        return uris.length > 0 ? uris : null;\n    }\n}\n","import { SendData } from '../models/data/sendData';\n\nimport { SendRequest } from '../models/request/sendRequest';\n\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { SendResponse } from '../models/response/sendResponse';\n\nimport { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { Send } from '../models/domain/send';\nimport { SendFile } from '../models/domain/sendFile';\nimport { SendText } from '../models/domain/sendText';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { FileUploadType } from '../enums/fileUploadType';\nimport { SendType } from '../enums/sendType';\n\nimport { SendView } from '../models/view/sendView';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { FileUploadService } from '../abstractions/fileUpload.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { SendService as SendServiceAbstraction } from '../abstractions/send.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    sendsPrefix: 'sends_',\n};\n\nexport class SendService implements SendServiceAbstraction {\n    decryptedSendCache: SendView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private apiService: ApiService, private fileUploadService: FileUploadService,\n        private storageService: StorageService, private i18nService: I18nService,\n        private cryptoFunctionService: CryptoFunctionService) { }\n\n    clearCache(): void {\n        this.decryptedSendCache = null;\n    }\n\n    async encrypt(model: SendView, file: File | ArrayBuffer, password: string,\n        key?: SymmetricCryptoKey): Promise<[Send, EncArrayBuffer]> {\n        let fileData: EncArrayBuffer = null;\n        const send = new Send();\n        send.id = model.id;\n        send.type = model.type;\n        send.disabled = model.disabled;\n        send.hideEmail = model.hideEmail;\n        send.maxAccessCount = model.maxAccessCount;\n        if (model.key == null) {\n            model.key = await this.cryptoFunctionService.randomBytes(16);\n            model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n        }\n        if (password != null) {\n            const passwordHash = await this.cryptoFunctionService.pbkdf2(password, model.key, 'sha256', 100000);\n            send.password = Utils.fromBufferToB64(passwordHash);\n        }\n        send.key = await this.cryptoService.encrypt(model.key, key);\n        send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n        send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n        if (send.type === SendType.Text) {\n            send.text = new SendText();\n            send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n            send.text.hidden = model.text.hidden;\n        } else if (send.type === SendType.File) {\n            send.file = new SendFile();\n            if (file != null) {\n                if (file instanceof ArrayBuffer) {\n                    const [name, data] = await this.encryptFileData(model.file.fileName, file, model.cryptoKey);\n                    send.file.fileName = name;\n                    fileData = data;\n                } else {\n                    fileData = await this.parseFile(send, file, model.cryptoKey);\n                }\n            }\n        }\n\n        return [send, fileData];\n    }\n\n    async get(id: string): Promise<Send> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null || !sends.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Send(sends[id]);\n    }\n\n    async getAll(): Promise<Send[]> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        const response: Send[] = [];\n        for (const id in sends) {\n            if (sends.hasOwnProperty(id)) {\n                response.push(new Send(sends[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<SendView[]> {\n        if (this.decryptedSendCache != null) {\n            return this.decryptedSendCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const decSends: SendView[] = [];\n        const promises: Promise<any>[] = [];\n        const sends = await this.getAll();\n        sends.forEach(send => {\n            promises.push(send.decrypt().then(f => decSends.push(f)));\n        });\n\n        await Promise.all(promises);\n        decSends.sort(Utils.getSortFunction(this.i18nService, 'name'));\n\n        this.decryptedSendCache = decSends;\n        return this.decryptedSendCache;\n    }\n\n    async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n        const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n        let response: SendResponse;\n        if (sendData[0].id == null) {\n            if (sendData[0].type === SendType.Text) {\n                response = await this.apiService.postSend(request);\n            } else {\n                try {\n                    const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n                    response = uploadDataResponse.sendResponse;\n\n                    await this.fileUploadService.uploadSendFile(uploadDataResponse, sendData[0].file.fileName, sendData[1]);\n                } catch (e) {\n                    if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n                        response = await this.legacyServerSendFileUpload(sendData, request);\n                    } else if (e instanceof ErrorResponse) {\n                        throw new Error((e as ErrorResponse).getSingleMessage());\n                    } else {\n                        throw e;\n                    }\n                }\n            }\n            sendData[0].id = response.id;\n            sendData[0].accessId = response.accessId;\n        } else {\n            response = await this.apiService.putSend(sendData[0].id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new SendData(response, userId);\n        await this.upsert(data);\n    }\n\n    /**\n     * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n     * This method still exists for backward compatibility with old server versions.\n     */\n    async legacyServerSendFileUpload(sendData: [Send, EncArrayBuffer], request: SendRequest): Promise<SendResponse>\n    {\n        const fd = new FormData();\n        try {\n            const blob = new Blob([sendData[1].buffer], { type: 'application/octet-stream' });\n            fd.append('model', JSON.stringify(request));\n            fd.append('data', blob, sendData[0].file.fileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('model', JSON.stringify(request));\n                fd.append('data', Buffer.from(sendData[1].buffer) as any, {\n                    filepath: sendData[0].file.fileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n        return await this.apiService.postSendFileLegacy(fd);\n    }\n\n    async upsert(send: SendData | SendData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null) {\n            sends = {};\n        }\n\n        if (send instanceof SendData) {\n            const s = send as SendData;\n            sends[s.id] = s;\n        } else {\n            (send as SendData[]).forEach(s => {\n                sends[s.id] = s;\n            });\n        }\n\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async replace(sends: { [id: string]: SendData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.sendsPrefix + userId);\n        this.decryptedSendCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\n            Keys.sendsPrefix + userId);\n        if (sends == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (sends[id] == null) {\n                return;\n            }\n            delete sends[id];\n        } else {\n            (id as string[]).forEach(i => {\n                delete sends[i];\n            });\n        }\n\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\n        this.decryptedSendCache = null;\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteSend(id);\n        await this.delete(id);\n    }\n\n    async removePasswordWithServer(id: string): Promise<any> {\n        const response = await this.apiService.putSendRemovePassword(id);\n        const userId = await this.userService.getUserId();\n        const data = new SendData(response, userId);\n        await this.upsert(data);\n    }\n\n    private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(file);\n            reader.onload = async evt => {\n                try {\n                    const [name, data] = await this.encryptFileData(file.name, evt.target.result as ArrayBuffer, key);\n                    send.file.fileName = name;\n                    resolve(data);\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            reader.onerror = evt => {\n                reject('Error reading file.');\n            };\n        });\n    }\n\n    private async encryptFileData(fileName: string, data: ArrayBuffer,\n        key: SymmetricCryptoKey): Promise<[EncString, EncArrayBuffer]> {\n        const encFileName = await this.cryptoService.encrypt(fileName, key);\n        const encFileData = await this.cryptoService.encryptToBytes(data, key);\n        return [encFileName, encFileData];\n    }\n}\n","import { CryptoService } from '../../abstractions/crypto.service';\n\nimport { SendType } from '../../enums/sendType';\n\nimport { Utils } from '../../misc/utils';\n\nimport { SendData } from '../data/sendData';\n\nimport { SendView } from '../view/sendView';\n\nimport Domain from './domainBase';\nimport { EncString } from './encString';\nimport { SendFile } from './sendFile';\nimport { SendText } from './sendText';\n\nexport class Send extends Domain {\n    id: string;\n    accessId: string;\n    userId: string;\n    type: SendType;\n    name: EncString;\n    notes: EncString;\n    file: SendFile;\n    text: SendText;\n    key: EncString;\n    maxAccessCount?: number;\n    accessCount: number;\n    revisionDate: Date;\n    expirationDate: Date;\n    deletionDate: Date;\n    password: string;\n    disabled: boolean;\n    hideEmail: boolean;\n\n    constructor(obj?: SendData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            accessId: null,\n            userId: null,\n            name: null,\n            notes: null,\n            key: null,\n        }, alreadyEncrypted, ['id', 'accessId', 'userId']);\n\n        this.type = obj.type;\n        this.maxAccessCount = obj.maxAccessCount;\n        this.accessCount = obj.accessCount;\n        this.password = obj.password;\n        this.disabled = obj.disabled;\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n        this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n        this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n        this.hideEmail = obj.hideEmail;\n\n        switch (this.type) {\n            case SendType.Text:\n                this.text = new SendText(obj.text, alreadyEncrypted);\n                break;\n            case SendType.File:\n                this.file = new SendFile(obj.file, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n    }\n\n    async decrypt(): Promise<SendView> {\n        const model = new SendView(this);\n\n        let cryptoService: CryptoService;\n        const containerService = (Utils.global as any).bitwardenContainerService;\n        if (containerService) {\n            cryptoService = containerService.getCryptoService();\n        } else {\n            throw new Error('global bitwardenContainerService not initialized.');\n        }\n\n        try {\n            model.key = await cryptoService.decryptToBytes(this.key, null);\n            model.cryptoKey = await cryptoService.makeSendKey(model.key);\n        } catch (e) {\n            // TODO: error?\n        }\n\n        await this.decryptObj(model, {\n            name: null,\n            notes: null,\n        }, null, model.cryptoKey);\n\n        switch (this.type) {\n            case SendType.File:\n                model.file = await this.file.decrypt(model.cryptoKey);\n                break;\n            case SendType.Text:\n                model.text = await this.text.decrypt(model.cryptoKey);\n                break;\n            default:\n                break;\n        }\n\n        return model;\n    }\n}\n","import * as forge from 'node-forge';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n    private crypto: Crypto;\n    private subtle: SubtleCrypto;\n    private isIE: boolean;\n    private isOldSafari: boolean;\n\n    constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n        this.crypto = typeof win.crypto !== 'undefined' ? win.crypto : null;\n        this.subtle = (!!this.crypto && typeof win.crypto.subtle !== 'undefined') ? win.crypto.subtle : null;\n        this.isIE = platformUtilsService.isIE();\n        const ua = win.navigator.userAgent;\n        this.isOldSafari = platformUtilsService.isSafari() &&\n            (ua.indexOf(' Version/10.') > -1 || ua.indexOf(' Version/9.') > -1);\n    }\n\n    async pbkdf2(password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number): Promise<ArrayBuffer> {\n        if (this.isIE || this.isOldSafari) {\n            const forgeLen = algorithm === 'sha256' ? 32 : 64;\n            const passwordBytes = this.toByteString(password);\n            const saltBytes = this.toByteString(salt);\n            const derivedKeyBytes = (forge as any).pbkdf2(passwordBytes, saltBytes, iterations, forgeLen, algorithm);\n            return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n        }\n\n        const wcLen = algorithm === 'sha256' ? 256 : 512;\n        const passwordBuf = this.toBuf(password);\n        const saltBuf = this.toBuf(salt);\n\n        const pbkdf2Params: Pbkdf2Params = {\n            name: 'PBKDF2',\n            salt: saltBuf,\n            iterations: iterations,\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', passwordBuf, { name: 'PBKDF2' } as any,\n            false, ['deriveBits']);\n        return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n    }\n\n    async hkdf(ikm: ArrayBuffer, salt: string | ArrayBuffer, info: string | ArrayBuffer,\n        outputByteSize: number, algorithm: 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        const saltBuf = this.toBuf(salt);\n        const infoBuf = this.toBuf(info);\n\n        const hkdfParams: HkdfParams = {\n            name: 'HKDF',\n            salt: saltBuf,\n            info: infoBuf,\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', ikm, { name: 'HKDF' } as any,\n            false, ['deriveBits']);\n        return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n    }\n\n    // ref: https://tools.ietf.org/html/rfc5869\n    async hkdfExpand(prk: ArrayBuffer, info: string | ArrayBuffer, outputByteSize: number,\n        algorithm: 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        const hashLen = algorithm === 'sha256' ? 32 : 64;\n        if (outputByteSize > 255 * hashLen) {\n            throw new Error('outputByteSize is too large.');\n        }\n        const prkArr = new Uint8Array(prk);\n        if (prkArr.length < hashLen) {\n            throw new Error('prk is too small.');\n        }\n        const infoBuf = this.toBuf(info);\n        const infoArr = new Uint8Array(infoBuf);\n        let runningOkmLength = 0;\n        let previousT = new Uint8Array(0);\n        const n = Math.ceil(outputByteSize / hashLen);\n        const okm = new Uint8Array(n * hashLen);\n        for (let i = 0; i < n; i++) {\n            const t = new Uint8Array(previousT.length + infoArr.length + 1);\n            t.set(previousT);\n            t.set(infoArr, previousT.length);\n            t.set([i + 1], t.length - 1);\n            previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n            okm.set(previousT, runningOkmLength);\n            runningOkmLength += previousT.length;\n            if (runningOkmLength >= outputByteSize) {\n                break;\n            }\n        }\n        return okm.slice(0, outputByteSize).buffer;\n    }\n\n    async hash(value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): Promise<ArrayBuffer> {\n        if ((this.isIE && algorithm === 'sha1') || algorithm === 'md5') {\n            const md = algorithm === 'md5' ? forge.md.md5.create() : forge.md.sha1.create();\n            const valueBytes = this.toByteString(value);\n            md.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(md.digest().data).buffer;\n        }\n\n        const valueBuf = this.toBuf(value);\n        return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n    }\n\n    async hmac(value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        if (this.isIE && algorithm === 'sha512') {\n            const hmac = (forge as any).hmac.create();\n            const keyBytes = this.toByteString(key);\n            const valueBytes = this.toByteString(value);\n            hmac.start(algorithm, keyBytes);\n            hmac.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(hmac.digest().data).buffer;\n        }\n\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', key, signingAlgorithm, false, ['sign']);\n        return await this.subtle.sign(signingAlgorithm, impKey, value);\n    }\n\n    // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n    // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n    // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n    async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n        const macKey = await this.randomBytes(32);\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        };\n        const impKey = await this.subtle.importKey('raw', macKey, signingAlgorithm, false, ['sign']);\n        const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n        const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n        if (mac1.byteLength !== mac2.byteLength) {\n            return false;\n        }\n\n        const arr1 = new Uint8Array(mac1);\n        const arr2 = new Uint8Array(mac2);\n        for (let i = 0; i < arr2.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hmacFast(value: string, key: string, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<string> {\n        const hmac = (forge as any).hmac.create();\n        hmac.start(algorithm, key);\n        hmac.update(value);\n        const bytes = hmac.digest().getBytes();\n        return Promise.resolve(bytes);\n    }\n\n    async compareFast(a: string, b: string): Promise<boolean> {\n        const rand = await this.randomBytes(32);\n        const bytes = new Uint32Array(rand);\n        const buffer = forge.util.createBuffer();\n        for (let i = 0; i < bytes.length; i++) {\n            buffer.putInt32(bytes[i]);\n        }\n        const macKey = buffer.getBytes();\n\n        const hmac = (forge as any).hmac.create();\n        hmac.start('sha256', macKey);\n        hmac.update(a);\n        const mac1 = hmac.digest().getBytes();\n\n        hmac.start(null, null);\n        hmac.update(b);\n        const mac2 = hmac.digest().getBytes();\n\n        const equals = mac1 === mac2;\n        return equals;\n    }\n\n    async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['encrypt']);\n        return await this.subtle.encrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    aesDecryptFastParameters(data: string, iv: string, mac: string, key: SymmetricCryptoKey):\n        DecryptParameters<string> {\n        const p = new DecryptParameters<string>();\n        if (key.meta != null) {\n            p.encKey = key.meta.encKeyByteString;\n            p.macKey = key.meta.macKeyByteString;\n        }\n\n        if (p.encKey == null) {\n            p.encKey = forge.util.decode64(key.encKeyB64);\n        }\n        p.data = forge.util.decode64(data);\n        p.iv = forge.util.decode64(iv);\n        p.macData = p.iv + p.data;\n        if (p.macKey == null && key.macKeyB64 != null) {\n            p.macKey = forge.util.decode64(key.macKeyB64);\n        }\n        if (mac != null) {\n            p.mac = forge.util.decode64(mac);\n        }\n\n        // cache byte string keys for later\n        if (key.meta == null) {\n            key.meta = {};\n        }\n        if (key.meta.encKeyByteString == null) {\n            key.meta.encKeyByteString = p.encKey;\n        }\n        if (p.macKey != null && key.meta.macKeyByteString == null) {\n            key.meta.macKeyByteString = p.macKey;\n        }\n\n        return p;\n    }\n\n    aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n        const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n        const decipher = (forge as any).cipher.createDecipher('AES-CBC', parameters.encKey);\n        decipher.start({ iv: parameters.iv });\n        decipher.update(dataBuffer);\n        decipher.finish();\n        const val = decipher.output.toString('utf8');\n        return Promise.resolve(val);\n    }\n\n    async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['decrypt']);\n        return await this.subtle.decrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('spki', publicKey, rsaParams, false, ['encrypt']);\n        return await this.subtle.encrypt(rsaParams, impKey, data);\n    }\n\n    async rsaDecrypt(data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, false, ['decrypt']);\n        return await this.subtle.decrypt(rsaParams, impKey, data);\n    }\n\n    async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const impPrivateKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, true, ['decrypt']);\n        const jwkPrivateKey = await this.subtle.exportKey('jwk', impPrivateKey);\n        const jwkPublicKeyParams = {\n            kty: 'RSA',\n            e: jwkPrivateKey.e,\n            n: jwkPrivateKey.n,\n            alg: 'RSA-OAEP',\n            ext: true,\n        };\n        const impPublicKey = await this.subtle.importKey('jwk', jwkPublicKeyParams, rsaParams, true, ['encrypt']);\n        return await this.subtle.exportKey('spki', impPublicKey);\n    }\n\n    async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            modulusLength: length,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const keyPair = (await this.subtle.generateKey(rsaParams, true, ['encrypt', 'decrypt'])) as CryptoKeyPair;\n        const publicKey = await this.subtle.exportKey('spki', keyPair.publicKey);\n        const privateKey = await this.subtle.exportKey('pkcs8', keyPair.privateKey);\n        return [publicKey, privateKey];\n    }\n\n    randomBytes(length: number): Promise<ArrayBuffer> {\n        const arr = new Uint8Array(length);\n        this.crypto.getRandomValues(arr);\n        return Promise.resolve(arr.buffer);\n    }\n\n    private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n        let buf: ArrayBuffer;\n        if (typeof (value) === 'string') {\n            buf = Utils.fromUtf8ToArray(value).buffer;\n        } else {\n            buf = value;\n        }\n        return buf;\n    }\n\n    private toByteString(value: string | ArrayBuffer): string {\n        let bytes: string;\n        if (typeof (value) === 'string') {\n            bytes = forge.util.encodeUtf8(value);\n        } else {\n            bytes = Utils.fromBufferToByteString(value);\n        }\n        return bytes;\n    }\n\n    private toWebCryptoAlgorithm(algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): string {\n        if (algorithm === 'md5') {\n            throw new Error('MD5 is not supported in WebCrypto.');\n        }\n        return algorithm === 'sha1' ? 'SHA-1' : algorithm === 'sha256' ? 'SHA-256' : 'SHA-512';\n    }\n}\n","export class DecryptParameters<T> {\n    encKey: T;\n    data: T;\n    iv: T;\n    macKey: T;\n    mac: T;\n    macData: T;\n}\n","import { EncArrayBuffer } from '../models/domain/encArrayBuffer';\nimport { EncString } from '../models/domain/encString';\nimport { AttachmentUploadDataResponse } from '../models/response/attachmentUploadDataResponse';\nimport { SendFileUploadDataResponse } from '../models/response/sendFileUploadDataResponse';\n\nexport abstract class FileUploadService {\n    uploadSendFile: (uploadData: SendFileUploadDataResponse, fileName: EncString,\n        encryptedFileData: EncArrayBuffer) => Promise<any>;\n    uploadCipherAttachment: (admin: boolean, uploadData: AttachmentUploadDataResponse, fileName: EncString,\n        encryptedFileData: EncArrayBuffer) => Promise<any>;\n}\n"],"sourceRoot":""}